{"hash":"ff34538204aaa529524759dfed2a34bf72c0c6f0","fesm2020":[{"exports":["CalendarA11y","CalendarAngularDateFormatter","CalendarCommonModule","CalendarComponent","CalendarDateFormatter","CalendarDayModule","CalendarDayViewComponent","CalendarEventTimesChangedEventType","CalendarEventTitleFormatter","CalendarModule","CalendarMomentDateFormatter","CalendarMonthModule","CalendarMonthViewComponent","CalendarNativeDateFormatter","CalendarUtils","CalendarView","CalendarWeekModule","CalendarWeekViewComponent","DAYS_OF_WEEK","DateAdapter","MOMENT","adapterFactory","collapseAnimation","getWeekViewPeriod","ɵCalendarA11yPipe","ɵCalendarDatePipe","ɵCalendarEventActionsComponent","ɵCalendarEventTitleComponent","ɵCalendarEventTitlePipe","ɵCalendarMonthCellComponent","ɵCalendarMonthViewHeaderComponent","ɵCalendarNextViewDirective","ɵCalendarOpenDayEventsComponent","ɵCalendarPreviousViewDirective","ɵCalendarTodayDirective","ɵCalendarTooltipDirective","ɵCalendarTooltipWindowComponent","ɵCalendarWeekViewCurrentTimeMarkerComponent","ɵCalendarWeekViewEventComponent","ɵCalendarWeekViewHeaderComponent","ɵCalendarWeekViewHourSegmentComponent","ɵClickDirective","ɵKeydownEnterDirective"],"facadeModuleId":"C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\ng-calendar-schedule.mjs","isDynamicEntry":false,"isEntry":true,"isImplicitEntry":false,"moduleIds":["C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\date-adapters\\date-adapter.mjs","C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\date-adapters\\date-fns\\index.mjs","C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\common\\click\\click.directive.mjs","C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\common\\keydown-enter\\keydown-enter.directive.mjs","C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\common\\calendar-a11y\\calendar-a11y.provider.mjs","C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\common\\calendar-a11y\\calendar-a11y.pipe.mjs","C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\common\\calendar-event-actions\\calendar-event-actions.component.mjs","C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\common\\calendar-event-title-formatter\\calendar-event-title-formatter.provider.mjs","C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\common\\calendar-event-title\\calendar-event-title.pipe.mjs","C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\common\\calendar-event-title\\calendar-event-title.component.mjs","C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\common\\calendar-tooltip\\calendar-tooltip.directive.mjs","C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\common\\calendar-view\\calendar-view.enum.mjs","C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\common\\util\\util.mjs","C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\common\\calendar-previous-view\\calendar-previous-view.directive.mjs","C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\common\\calendar-next-view\\calendar-next-view.directive.mjs","C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\common\\calendar-today\\calendar-today.directive.mjs","C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\common\\calendar-angular-date-formatter\\calendar-angular-date-formatter.provider.mjs","C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\common\\calendar-date-formatter\\calendar-date-formatter.provider.mjs","C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\common\\calendar-date\\calendar-date.pipe.mjs","C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\common\\calendar-utils\\calendar-utils.provider.mjs","C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\common\\calendar-moment-date-formatter\\calendar-moment-date-formatter.provider.mjs","C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\common\\calendar-native-date-formatter\\calendar-native-date-formatter.provider.mjs","C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\common\\calendar-a11y\\calendar-a11y.interface.mjs","C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\common\\calendar-date-formatter\\calendar-date-formatter.interface.mjs","C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\common\\calendar-event-times-changed-event\\calendar-event-times-changed-event.interface.mjs","C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\common\\calendar-common.module.mjs","C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\common\\calendar-drag-helper\\calendar-drag-helper.provider.mjs","C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\common\\calendar-resize-helper\\calendar-resize-helper.provider.mjs","C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\week\\calendar-week-view\\calendar-week-view-header\\calendar-week-view-header.component.mjs","C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\week\\calendar-week-view\\calendar-week-view-event\\calendar-week-view-event.component.mjs","C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\week\\calendar-week-view\\calendar-week-view-hour-segment\\calendar-week-view-hour-segment.component.mjs","C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\week\\calendar-week-view\\calendar-week-view-current-time-marker\\calendar-week-view-current-time-marker.component.mjs","C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\week\\calendar-week-view\\calendar-week-view.component.mjs","C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\day\\calendar-day-view\\calendar-day-view.component.mjs","C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\week\\calendar-week.module.mjs","C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\day\\calendar-day.module.mjs","C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\month\\calendar-month-view\\calendar-month-cell\\calendar-month-cell.component.mjs","C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\month\\calendar-month-view\\calendar-open-day-events\\calendar-open-day-events.component.mjs","C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\month\\calendar-month-view\\calendar-month-view-header\\calendar-month-view-header.component.mjs","C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\month\\calendar-month-view\\calendar-month-view.component.mjs","C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\month\\calendar-month.module.mjs","C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\calendar.component.mjs","C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\calendar.module.mjs","C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\public-api.mjs","C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\ng-calendar-schedule.mjs"],"name":"ng-calendar-schedule","type":"chunk","dynamicImports":[],"fileName":"ng-calendar-schedule.mjs","implicitlyLoadedBefore":[],"importedBindings":{"calendar-utils/date-adapters/date-fns":["adapterFactory"],"date-fns":["addWeeks","addMonths","subDays","subWeeks","subMonths","getISOWeek","setDate","setMonth","setYear","getDate","getYear"],"@angular/core":["EventEmitter","*","Directive","Inject","Input","Output","Injectable","LOCALE_ID","Pipe","Component","HostListener","InjectionToken","NgModule"],"@angular/common":["DOCUMENT","formatDate","*","CommonModule","I18nPluralPipe"],"rxjs":["Subject","Observable","of","timer","BehaviorSubject","interval"],"rxjs/operators":["takeUntil","switchMap","startWith","switchMapTo","map"],"positioning":["positionElements"],"calendar-utils":["validateEvents","getMonthView","getWeekViewHeader","getWeekView","DAYS_OF_WEEK"],"angular-resizable-element":["*","ResizableModule"],"angular-draggable-droppable":["*","DragAndDropModule"],"@angular/animations":["trigger","state","style","transition","animate"]},"imports":["calendar-utils/date-adapters/date-fns","date-fns","@angular/core","@angular/common","rxjs","rxjs/operators","positioning","calendar-utils","angular-resizable-element","angular-draggable-droppable","@angular/animations"],"modules":{"C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\date-adapters\\date-adapter.mjs":{"code":"class DateAdapter {\r\n}","originalLength":4237,"removedExports":[],"renderedExports":["DateAdapter"],"renderedLength":22},"C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\date-adapters\\date-fns\\index.mjs":{"code":"function adapterFactory() {\r\n    return {\r\n        ...adapterFactory$1(),\r\n        addWeeks,\r\n        addMonths,\r\n        subDays,\r\n        subWeeks,\r\n        subMonths,\r\n        getISOWeek,\r\n        setDate,\r\n        setMonth,\r\n        setYear,\r\n        getDate,\r\n        getYear,\r\n    };\r\n}","originalLength":2214,"removedExports":[],"renderedExports":["adapterFactory"],"renderedLength":292},"C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\common\\click\\click.directive.mjs":{"code":"class ClickDirective {\r\n    constructor(renderer, elm, document) {\r\n        this.renderer = renderer;\r\n        this.elm = elm;\r\n        this.document = document;\r\n        this.clickListenerDisabled = false;\r\n        this.click = new EventEmitter(); // eslint-disable-line\r\n        this.destroy$ = new Subject();\r\n    }\r\n    ngOnInit() {\r\n        if (!this.clickListenerDisabled) {\r\n            this.listen()\r\n                .pipe(takeUntil(this.destroy$))\r\n                .subscribe((event) => {\r\n                event.stopPropagation();\r\n                this.click.emit(event);\r\n            });\r\n        }\r\n    }\r\n    ngOnDestroy() {\r\n        this.destroy$.next();\r\n    }\r\n    listen() {\r\n        return new Observable((observer) => {\r\n            return this.renderer.listen(this.elm.nativeElement, 'click', (event) => {\r\n                observer.next(event);\r\n            });\r\n        });\r\n    }\r\n}\r\nClickDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: ClickDirective, deps: [{ token: i0.Renderer2 }, { token: i0.ElementRef }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Directive });\r\nClickDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.0.4\", type: ClickDirective, selector: \"[mwlClick]\", inputs: { clickListenerDisabled: \"clickListenerDisabled\" }, outputs: { click: \"mwlClick\" }, ngImport: i0 });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: ClickDirective, decorators: [{\r\n            type: Directive,\r\n            args: [{\r\n                    selector: '[mwlClick]',\r\n                }]\r\n        }], ctorParameters: function () { return [{ type: i0.Renderer2 }, { type: i0.ElementRef }, { type: undefined, decorators: [{\r\n                    type: Inject,\r\n                    args: [DOCUMENT]\r\n                }] }]; }, propDecorators: { clickListenerDisabled: [{\r\n                type: Input\r\n            }], click: [{\r\n                type: Output,\r\n                args: ['mwlClick']\r\n            }] } });","originalLength":6126,"removedExports":[],"renderedExports":["ClickDirective"],"renderedLength":2056},"C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\common\\keydown-enter\\keydown-enter.directive.mjs":{"code":"class KeydownEnterDirective {\r\n    constructor(host, ngZone, renderer) {\r\n        this.host = host;\r\n        this.ngZone = ngZone;\r\n        this.renderer = renderer;\r\n        this.keydown = new EventEmitter(); // eslint-disable-line\r\n        this.keydownListener = null;\r\n    }\r\n    ngOnInit() {\r\n        this.ngZone.runOutsideAngular(() => {\r\n            this.keydownListener = this.renderer.listen(this.host.nativeElement, 'keydown', (event) => {\r\n                if (event.keyCode === 13 ||\r\n                    event.which === 13 ||\r\n                    event.key === 'Enter') {\r\n                    event.preventDefault();\r\n                    event.stopPropagation();\r\n                    this.ngZone.run(() => {\r\n                        this.keydown.emit(event);\r\n                    });\r\n                }\r\n            });\r\n        });\r\n    }\r\n    ngOnDestroy() {\r\n        if (this.keydownListener !== null) {\r\n            this.keydownListener();\r\n            this.keydownListener = null;\r\n        }\r\n    }\r\n}\r\nKeydownEnterDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: KeydownEnterDirective, deps: [{ token: i0.ElementRef }, { token: i0.NgZone }, { token: i0.Renderer2 }], target: i0.ɵɵFactoryTarget.Directive });\r\nKeydownEnterDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.0.4\", type: KeydownEnterDirective, selector: \"[mwlKeydownEnter]\", outputs: { keydown: \"mwlKeydownEnter\" }, ngImport: i0 });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: KeydownEnterDirective, decorators: [{\r\n            type: Directive,\r\n            args: [{\r\n                    selector: '[mwlKeydownEnter]',\r\n                }]\r\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.NgZone }, { type: i0.Renderer2 }]; }, propDecorators: { keydown: [{\r\n                type: Output,\r\n                args: ['mwlKeydownEnter']\r\n            }] } });","originalLength":5737,"removedExports":[],"renderedExports":["KeydownEnterDirective"],"renderedLength":1997},"C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\common\\calendar-a11y\\calendar-a11y.provider.mjs":{"code":"/**\r\n * This class is responsible for adding accessibility to the calendar.\r\n * You may override any of its methods via angulars DI to suit your requirements.\r\n * For example:\r\n *\r\n * ```typescript\r\n * import { A11yParams, CalendarA11y } from 'angular-calendar';\r\n * import { formatDate, I18nPluralPipe } from '@angular/common';\r\n * import { Injectable } from '@angular/core';\r\n *\r\n * // adding your own a11y params\r\n * export interface CustomA11yParams extends A11yParams {\r\n *   isDrSuess?: boolean;\r\n * }\r\n *\r\n * @Injectable()\r\n * export class CustomCalendarA11y extends CalendarA11y {\r\n *   constructor(protected i18nPlural: I18nPluralPipe) {\r\n *     super(i18nPlural);\r\n *   }\r\n *\r\n *   // overriding a function\r\n *   public openDayEventsLandmark({ date, locale, isDrSuess }: CustomA11yParams): string {\r\n *     if (isDrSuess) {\r\n *       return `\r\n *         ${formatDate(date, 'EEEE MMMM d', locale)}\r\n *          Today you are you! That is truer than true! There is no one alive\r\n *          who is you-er than you!\r\n *       `;\r\n *     }\r\n *   }\r\n * }\r\n *\r\n * // in your component that uses the calendar\r\n * providers: [{\r\n *  provide: CalendarA11y,\r\n *  useClass: CustomCalendarA11y\r\n * }]\r\n * ```\r\n */\r\nclass CalendarA11y {\r\n    constructor(i18nPlural) {\r\n        this.i18nPlural = i18nPlural;\r\n    }\r\n    /**\r\n     * Aria label for the badges/date of a cell\r\n     * @example: `Saturday October 19 1 event click to expand`\r\n     */\r\n    monthCell({ day, locale }) {\r\n        if (day.badgeTotal > 0) {\r\n            return `\r\n        ${formatDate(day.date, 'EEEE MMMM d', locale)},\r\n        ${this.i18nPlural.transform(day.badgeTotal, {\r\n                '=0': 'No events',\r\n                '=1': 'One event',\r\n                other: '# events',\r\n            })},\r\n         click to expand\r\n      `;\r\n        }\r\n        else {\r\n            return `${formatDate(day.date, 'EEEE MMMM d', locale)}`;\r\n        }\r\n    }\r\n    /**\r\n     * Aria label for the open day events start landmark\r\n     * @example: `Saturday October 19 expanded view`\r\n     */\r\n    openDayEventsLandmark({ date, locale }) {\r\n        return `\r\n      Beginning of expanded view for ${formatDate(date, 'EEEE MMMM dd', locale)}\r\n    `;\r\n    }\r\n    /**\r\n     * Aria label for alert that a day in the month view was expanded\r\n     * @example: `Saturday October 19 expanded`\r\n     */\r\n    openDayEventsAlert({ date, locale }) {\r\n        return `${formatDate(date, 'EEEE MMMM dd', locale)} expanded`;\r\n    }\r\n    /**\r\n     * Descriptive aria label for an event\r\n     * @example: `Saturday October 19th, Scott's Pizza Party, from 11:00am to 5:00pm`\r\n     */\r\n    eventDescription({ event, locale }) {\r\n        if (event.allDay === true) {\r\n            return this.allDayEventDescription({ event, locale });\r\n        }\r\n        const aria = `\r\n      ${formatDate(event.start, 'EEEE MMMM dd', locale)},\r\n      ${event.title}, from ${formatDate(event.start, 'hh:mm a', locale)}\r\n    `;\r\n        if (event.end) {\r\n            return aria + ` to ${formatDate(event.end, 'hh:mm a', locale)}`;\r\n        }\r\n        return aria;\r\n    }\r\n    /**\r\n     * Descriptive aria label for an all day event\r\n     * @example:\r\n     * `Scott's Party, event spans multiple days: start time October 19 5:00pm, no stop time`\r\n     */\r\n    allDayEventDescription({ event, locale }) {\r\n        const aria = `\r\n      ${event.title}, event spans multiple days:\r\n      start time ${formatDate(event.start, 'MMMM dd hh:mm a', locale)}\r\n    `;\r\n        if (event.end) {\r\n            return (aria + `, stop time ${formatDate(event.end, 'MMMM d hh:mm a', locale)}`);\r\n        }\r\n        return aria + `, no stop time`;\r\n    }\r\n    /**\r\n     * Aria label for the calendar event actions icons\r\n     * @returns 'Edit' for fa-pencil icons, and 'Delete' for fa-times icons\r\n     */\r\n    actionButtonLabel({ action }) {\r\n        return action.a11yLabel;\r\n    }\r\n    /**\r\n     * @returns {number} Tab index to be given to month cells\r\n     */\r\n    monthCellTabIndex() {\r\n        return 0;\r\n    }\r\n    /**\r\n     * @returns true if the events inside the month cell should be aria-hidden\r\n     */\r\n    hideMonthCellEvents() {\r\n        return true;\r\n    }\r\n    /**\r\n     * @returns true if event titles should be aria-hidden (global)\r\n     */\r\n    hideEventTitle() {\r\n        return true;\r\n    }\r\n    /**\r\n     * @returns true if hour segments in the week view should be aria-hidden\r\n     */\r\n    hideWeekHourSegment() {\r\n        return true;\r\n    }\r\n    /**\r\n     * @returns true if hour segments in the day view should be aria-hidden\r\n     */\r\n    hideDayHourSegment() {\r\n        return true;\r\n    }\r\n}\r\nCalendarA11y.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarA11y, deps: [{ token: i1.I18nPluralPipe }], target: i0.ɵɵFactoryTarget.Injectable });\r\nCalendarA11y.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarA11y });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarA11y, decorators: [{\r\n            type: Injectable\r\n        }], ctorParameters: function () { return [{ type: i1.I18nPluralPipe }]; } });","originalLength":15389,"removedExports":[],"renderedExports":["CalendarA11y"],"renderedLength":5192},"C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\common\\calendar-a11y\\calendar-a11y.pipe.mjs":{"code":"/**\r\n * This pipe is primarily for rendering aria labels. Example usage:\r\n * ```typescript\r\n * // where `myEvent` is a `CalendarEvent` and myLocale is a locale identifier\r\n * {{ { event: myEvent, locale: myLocale } | calendarA11y: 'eventDescription' }}\r\n * ```\r\n */\r\nclass CalendarA11yPipe {\r\n    constructor(calendarA11y, locale) {\r\n        this.calendarA11y = calendarA11y;\r\n        this.locale = locale;\r\n    }\r\n    transform(a11yParams, method) {\r\n        a11yParams.locale = a11yParams.locale || this.locale;\r\n        if (typeof this.calendarA11y[method] === 'undefined') {\r\n            const allowedMethods = Object.getOwnPropertyNames(Object.getPrototypeOf(CalendarA11y.prototype)).filter((iMethod) => iMethod !== 'constructor');\r\n            throw new Error(`${method} is not a valid a11y method. Can only be one of ${allowedMethods.join(', ')}`);\r\n        }\r\n        return this.calendarA11y[method](a11yParams);\r\n    }\r\n}\r\nCalendarA11yPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarA11yPipe, deps: [{ token: CalendarA11y }, { token: LOCALE_ID }], target: i0.ɵɵFactoryTarget.Pipe });\r\nCalendarA11yPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"14.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarA11yPipe, name: \"calendarA11y\" });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarA11yPipe, decorators: [{\r\n            type: Pipe,\r\n            args: [{\r\n                    name: 'calendarA11y',\r\n                }]\r\n        }], ctorParameters: function () { return [{ type: CalendarA11y }, { type: undefined, decorators: [{\r\n                    type: Inject,\r\n                    args: [LOCALE_ID]\r\n                }] }]; } });","originalLength":5169,"removedExports":[],"renderedExports":["CalendarA11yPipe"],"renderedLength":1749},"C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\common\\calendar-event-actions\\calendar-event-actions.component.mjs":{"code":"class CalendarEventActionsComponent {\r\n    constructor() {\r\n        this.trackByActionId = (index, action) => action.id ? action.id : action;\r\n    }\r\n}\r\nCalendarEventActionsComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarEventActionsComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\r\nCalendarEventActionsComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.0.4\", type: CalendarEventActionsComponent, selector: \"mwl-calendar-event-actions\", inputs: { event: \"event\", customTemplate: \"customTemplate\" }, ngImport: i0, template: `\r\n    <ng-template\r\n      #defaultTemplate\r\n      let-event=\"event\"\r\n      let-trackByActionId=\"trackByActionId\"\r\n    >\r\n      <span *ngIf=\"event.actions\" class=\"cal-event-actions\">\r\n        <a\r\n          class=\"cal-event-action\"\r\n          href=\"javascript:;\"\r\n          *ngFor=\"let action of event.actions; trackBy: trackByActionId\"\r\n          (mwlClick)=\"action.onClick({ event: event, sourceEvent: $event })\"\r\n          (mwlKeydownEnter)=\"\r\n            action.onClick({ event: event, sourceEvent: $event })\r\n          \"\r\n          [ngClass]=\"action.cssClass\"\r\n          [innerHtml]=\"action.label\"\r\n          tabindex=\"0\"\r\n          role=\"button\"\r\n          [attr.aria-label]=\"\r\n            { action: action } | calendarA11y : 'actionButtonLabel'\r\n          \"\r\n        >\r\n        </a>\r\n      </span>\r\n    </ng-template>\r\n    <ng-template\r\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\r\n      [ngTemplateOutletContext]=\"{\r\n        event: event,\r\n        trackByActionId: trackByActionId\r\n      }\"\r\n    >\r\n    </ng-template>\r\n  `, isInline: true, dependencies: [{ kind: \"directive\", type: i1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i1.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"directive\", type: ClickDirective, selector: \"[mwlClick]\", inputs: [\"clickListenerDisabled\"], outputs: [\"mwlClick\"] }, { kind: \"directive\", type: KeydownEnterDirective, selector: \"[mwlKeydownEnter]\", outputs: [\"mwlKeydownEnter\"] }, { kind: \"pipe\", type: CalendarA11yPipe, name: \"calendarA11y\" }] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarEventActionsComponent, decorators: [{\r\n            type: Component,\r\n            args: [{\r\n                    selector: 'mwl-calendar-event-actions',\r\n                    template: `\r\n    <ng-template\r\n      #defaultTemplate\r\n      let-event=\"event\"\r\n      let-trackByActionId=\"trackByActionId\"\r\n    >\r\n      <span *ngIf=\"event.actions\" class=\"cal-event-actions\">\r\n        <a\r\n          class=\"cal-event-action\"\r\n          href=\"javascript:;\"\r\n          *ngFor=\"let action of event.actions; trackBy: trackByActionId\"\r\n          (mwlClick)=\"action.onClick({ event: event, sourceEvent: $event })\"\r\n          (mwlKeydownEnter)=\"\r\n            action.onClick({ event: event, sourceEvent: $event })\r\n          \"\r\n          [ngClass]=\"action.cssClass\"\r\n          [innerHtml]=\"action.label\"\r\n          tabindex=\"0\"\r\n          role=\"button\"\r\n          [attr.aria-label]=\"\r\n            { action: action } | calendarA11y : 'actionButtonLabel'\r\n          \"\r\n        >\r\n        </a>\r\n      </span>\r\n    </ng-template>\r\n    <ng-template\r\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\r\n      [ngTemplateOutletContext]=\"{\r\n        event: event,\r\n        trackByActionId: trackByActionId\r\n      }\"\r\n    >\r\n    </ng-template>\r\n  `,\r\n                }]\r\n        }], propDecorators: { event: [{\r\n                type: Input\r\n            }], customTemplate: [{\r\n                type: Input\r\n            }] } });","originalLength":7471,"removedExports":[],"renderedExports":["CalendarEventActionsComponent"],"renderedLength":4004},"C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\common\\calendar-event-title-formatter\\calendar-event-title-formatter.provider.mjs":{"code":"/**\r\n * This class is responsible for displaying all event titles within the calendar. You may override any of its methods via angulars DI to suit your requirements. For example:\r\n *\r\n * ```typescript\r\n * import { Injectable } from '@angular/core';\r\n * import { CalendarEventTitleFormatter, CalendarEvent } from 'angular-calendar';\r\n *\r\n * @Injectable()\r\n * class CustomEventTitleFormatter extends CalendarEventTitleFormatter {\r\n *\r\n *   month(event: CalendarEvent): string {\r\n *     return `Custom prefix: ${event.title}`;\r\n *   }\r\n *\r\n * }\r\n *\r\n * // in your component\r\n * providers: [{\r\n *  provide: CalendarEventTitleFormatter,\r\n *  useClass: CustomEventTitleFormatter\r\n * }]\r\n * ```\r\n */\r\nclass CalendarEventTitleFormatter {\r\n    /**\r\n     * The month view event title.\r\n     */\r\n    month(event, title) {\r\n        return event.title;\r\n    }\r\n    /**\r\n     * The month view event tooltip. Return a falsey value from this to disable the tooltip.\r\n     */\r\n    monthTooltip(event, title) {\r\n        return event.title;\r\n    }\r\n    /**\r\n     * The week view event title.\r\n     */\r\n    week(event, title) {\r\n        return event.title;\r\n    }\r\n    /**\r\n     * The week view event tooltip. Return a falsey value from this to disable the tooltip.\r\n     */\r\n    weekTooltip(event, title) {\r\n        return event.title;\r\n    }\r\n    /**\r\n     * The day view event title.\r\n     */\r\n    day(event, title) {\r\n        return event.title;\r\n    }\r\n    /**\r\n     * The day view event tooltip. Return a falsey value from this to disable the tooltip.\r\n     */\r\n    dayTooltip(event, title) {\r\n        return event.title;\r\n    }\r\n}","originalLength":5368,"removedExports":[],"renderedExports":["CalendarEventTitleFormatter"],"renderedLength":1617},"C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\common\\calendar-event-title\\calendar-event-title.pipe.mjs":{"code":"class CalendarEventTitlePipe {\r\n    constructor(calendarEventTitle) {\r\n        this.calendarEventTitle = calendarEventTitle;\r\n    }\r\n    transform(title, titleType, event) {\r\n        return this.calendarEventTitle[titleType](event, title);\r\n    }\r\n}\r\nCalendarEventTitlePipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarEventTitlePipe, deps: [{ token: CalendarEventTitleFormatter }], target: i0.ɵɵFactoryTarget.Pipe });\r\nCalendarEventTitlePipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"14.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarEventTitlePipe, name: \"calendarEventTitle\" });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarEventTitlePipe, decorators: [{\r\n            type: Pipe,\r\n            args: [{\r\n                    name: 'calendarEventTitle',\r\n                }]\r\n        }], ctorParameters: function () { return [{ type: CalendarEventTitleFormatter }]; } });","originalLength":2790,"removedExports":[],"renderedExports":["CalendarEventTitlePipe"],"renderedLength":986},"C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\common\\calendar-event-title\\calendar-event-title.component.mjs":{"code":"class CalendarEventTitleComponent {\r\n}\r\nCalendarEventTitleComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarEventTitleComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\r\nCalendarEventTitleComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.0.4\", type: CalendarEventTitleComponent, selector: \"mwl-calendar-event-title\", inputs: { event: \"event\", customTemplate: \"customTemplate\", view: \"view\" }, ngImport: i0, template: `\r\n    <ng-template #defaultTemplate let-event=\"event\" let-view=\"view\">\r\n      <span\r\n        class=\"cal-event-title\"\r\n        [innerHTML]=\"event.title | calendarEventTitle : view : event\"\r\n        [attr.aria-hidden]=\"{} | calendarA11y : 'hideEventTitle'\"\r\n      >\r\n      </span>\r\n    </ng-template>\r\n    <ng-template\r\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\r\n      [ngTemplateOutletContext]=\"{\r\n        event: event,\r\n        view: view\r\n      }\"\r\n    >\r\n    </ng-template>\r\n  `, isInline: true, dependencies: [{ kind: \"directive\", type: i1.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"pipe\", type: CalendarEventTitlePipe, name: \"calendarEventTitle\" }, { kind: \"pipe\", type: CalendarA11yPipe, name: \"calendarA11y\" }] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarEventTitleComponent, decorators: [{\r\n            type: Component,\r\n            args: [{\r\n                    selector: 'mwl-calendar-event-title',\r\n                    template: `\r\n    <ng-template #defaultTemplate let-event=\"event\" let-view=\"view\">\r\n      <span\r\n        class=\"cal-event-title\"\r\n        [innerHTML]=\"event.title | calendarEventTitle : view : event\"\r\n        [attr.aria-hidden]=\"{} | calendarA11y : 'hideEventTitle'\"\r\n      >\r\n      </span>\r\n    </ng-template>\r\n    <ng-template\r\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\r\n      [ngTemplateOutletContext]=\"{\r\n        event: event,\r\n        view: view\r\n      }\"\r\n    >\r\n    </ng-template>\r\n  `,\r\n                }]\r\n        }], propDecorators: { event: [{\r\n                type: Input\r\n            }], customTemplate: [{\r\n                type: Input\r\n            }], view: [{\r\n                type: Input\r\n            }] } });","originalLength":4645,"removedExports":[],"renderedExports":["CalendarEventTitleComponent"],"renderedLength":2371},"C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\common\\calendar-tooltip\\calendar-tooltip.directive.mjs":{"code":"class CalendarTooltipWindowComponent {\r\n}\r\nCalendarTooltipWindowComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarTooltipWindowComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\r\nCalendarTooltipWindowComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.0.4\", type: CalendarTooltipWindowComponent, selector: \"mwl-calendar-tooltip-window\", inputs: { contents: \"contents\", placement: \"placement\", event: \"event\", customTemplate: \"customTemplate\" }, ngImport: i0, template: `\r\n    <ng-template\r\n      #defaultTemplate\r\n      let-contents=\"contents\"\r\n      let-placement=\"placement\"\r\n      let-event=\"event\"\r\n    >\r\n      <div class=\"cal-tooltip\" [ngClass]=\"'cal-tooltip-' + placement\">\r\n        <div class=\"cal-tooltip-arrow\"></div>\r\n        <div class=\"cal-tooltip-inner\" [innerHtml]=\"contents\"></div>\r\n      </div>\r\n    </ng-template>\r\n    <ng-template\r\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\r\n      [ngTemplateOutletContext]=\"{\r\n        contents: contents,\r\n        placement: placement,\r\n        event: event\r\n      }\"\r\n    >\r\n    </ng-template>\r\n  `, isInline: true, dependencies: [{ kind: \"directive\", type: i1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i1.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarTooltipWindowComponent, decorators: [{\r\n            type: Component,\r\n            args: [{\r\n                    selector: 'mwl-calendar-tooltip-window',\r\n                    template: `\r\n    <ng-template\r\n      #defaultTemplate\r\n      let-contents=\"contents\"\r\n      let-placement=\"placement\"\r\n      let-event=\"event\"\r\n    >\r\n      <div class=\"cal-tooltip\" [ngClass]=\"'cal-tooltip-' + placement\">\r\n        <div class=\"cal-tooltip-arrow\"></div>\r\n        <div class=\"cal-tooltip-inner\" [innerHtml]=\"contents\"></div>\r\n      </div>\r\n    </ng-template>\r\n    <ng-template\r\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\r\n      [ngTemplateOutletContext]=\"{\r\n        contents: contents,\r\n        placement: placement,\r\n        event: event\r\n      }\"\r\n    >\r\n    </ng-template>\r\n  `,\r\n                }]\r\n        }], propDecorators: { contents: [{\r\n                type: Input\r\n            }], placement: [{\r\n                type: Input\r\n            }], event: [{\r\n                type: Input\r\n            }], customTemplate: [{\r\n                type: Input\r\n            }] } });\r\nclass CalendarTooltipDirective {\r\n    constructor(elementRef, injector, renderer, componentFactoryResolver, viewContainerRef, document // eslint-disable-line\r\n    ) {\r\n        this.elementRef = elementRef;\r\n        this.injector = injector;\r\n        this.renderer = renderer;\r\n        this.viewContainerRef = viewContainerRef;\r\n        this.document = document;\r\n        this.placement = 'auto'; // eslint-disable-line  @angular-eslint/no-input-rename\r\n        this.delay = null; // eslint-disable-line  @angular-eslint/no-input-rename\r\n        this.cancelTooltipDelay$ = new Subject();\r\n        this.tooltipFactory = componentFactoryResolver.resolveComponentFactory(CalendarTooltipWindowComponent);\r\n    }\r\n    ngOnChanges(changes) {\r\n        if (this.tooltipRef &&\r\n            (changes.contents || changes.customTemplate || changes.event)) {\r\n            this.tooltipRef.instance.contents = this.contents;\r\n            this.tooltipRef.instance.customTemplate = this.customTemplate;\r\n            this.tooltipRef.instance.event = this.event;\r\n            this.tooltipRef.changeDetectorRef.markForCheck();\r\n            if (!this.contents) {\r\n                this.hide();\r\n            }\r\n        }\r\n    }\r\n    ngOnDestroy() {\r\n        this.hide();\r\n    }\r\n    onMouseOver() {\r\n        const delay$ = this.delay === null ? of('now') : timer(this.delay);\r\n        delay$.pipe(takeUntil(this.cancelTooltipDelay$)).subscribe(() => {\r\n            this.show();\r\n        });\r\n    }\r\n    onMouseOut() {\r\n        this.hide();\r\n    }\r\n    show() {\r\n        if (!this.tooltipRef && this.contents) {\r\n            this.tooltipRef = this.viewContainerRef.createComponent(this.tooltipFactory, 0, this.injector, []);\r\n            this.tooltipRef.instance.contents = this.contents;\r\n            this.tooltipRef.instance.customTemplate = this.customTemplate;\r\n            this.tooltipRef.instance.event = this.event;\r\n            if (this.appendToBody) {\r\n                this.document.body.appendChild(this.tooltipRef.location.nativeElement);\r\n            }\r\n            requestAnimationFrame(() => {\r\n                this.positionTooltip();\r\n            });\r\n        }\r\n    }\r\n    hide() {\r\n        if (this.tooltipRef) {\r\n            this.viewContainerRef.remove(this.viewContainerRef.indexOf(this.tooltipRef.hostView));\r\n            this.tooltipRef = null;\r\n        }\r\n        this.cancelTooltipDelay$.next();\r\n    }\r\n    positionTooltip(previousPositions = []) {\r\n        if (this.tooltipRef) {\r\n            this.tooltipRef.changeDetectorRef.detectChanges();\r\n            this.tooltipRef.instance.placement = positionElements(this.elementRef.nativeElement, this.tooltipRef.location.nativeElement.children[0], this.placement, this.appendToBody);\r\n            // keep re-positioning the tooltip until the arrow position doesn't make a difference\r\n            if (previousPositions.indexOf(this.tooltipRef.instance.placement) === -1) {\r\n                this.positionTooltip([\r\n                    ...previousPositions,\r\n                    this.tooltipRef.instance.placement,\r\n                ]);\r\n            }\r\n        }\r\n    }\r\n}\r\nCalendarTooltipDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarTooltipDirective, deps: [{ token: i0.ElementRef }, { token: i0.Injector }, { token: i0.Renderer2 }, { token: i0.ComponentFactoryResolver }, { token: i0.ViewContainerRef }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Directive });\r\nCalendarTooltipDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.0.4\", type: CalendarTooltipDirective, selector: \"[mwlCalendarTooltip]\", inputs: { contents: [\"mwlCalendarTooltip\", \"contents\"], placement: [\"tooltipPlacement\", \"placement\"], customTemplate: [\"tooltipTemplate\", \"customTemplate\"], event: [\"tooltipEvent\", \"event\"], appendToBody: [\"tooltipAppendToBody\", \"appendToBody\"], delay: [\"tooltipDelay\", \"delay\"] }, host: { listeners: { \"mouseenter\": \"onMouseOver()\", \"mouseleave\": \"onMouseOut()\" } }, usesOnChanges: true, ngImport: i0 });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarTooltipDirective, decorators: [{\r\n            type: Directive,\r\n            args: [{\r\n                    selector: '[mwlCalendarTooltip]',\r\n                }]\r\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.Injector }, { type: i0.Renderer2 }, { type: i0.ComponentFactoryResolver }, { type: i0.ViewContainerRef }, { type: undefined, decorators: [{\r\n                    type: Inject,\r\n                    args: [DOCUMENT]\r\n                }] }]; }, propDecorators: { contents: [{\r\n                type: Input,\r\n                args: ['mwlCalendarTooltip']\r\n            }], placement: [{\r\n                type: Input,\r\n                args: ['tooltipPlacement']\r\n            }], customTemplate: [{\r\n                type: Input,\r\n                args: ['tooltipTemplate']\r\n            }], event: [{\r\n                type: Input,\r\n                args: ['tooltipEvent']\r\n            }], appendToBody: [{\r\n                type: Input,\r\n                args: ['tooltipAppendToBody']\r\n            }], delay: [{\r\n                type: Input,\r\n                args: ['tooltipDelay']\r\n            }], onMouseOver: [{\r\n                type: HostListener,\r\n                args: ['mouseenter']\r\n            }], onMouseOut: [{\r\n                type: HostListener,\r\n                args: ['mouseleave']\r\n            }] } });","originalLength":21369,"removedExports":[],"renderedExports":["CalendarTooltipWindowComponent","CalendarTooltipDirective"],"renderedLength":8149},"C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\common\\calendar-view\\calendar-view.enum.mjs":{"code":"var CalendarView;\r\n(function (CalendarView) {\r\n    CalendarView[\"Month\"] = \"month\";\r\n    CalendarView[\"Week\"] = \"week\";\r\n    CalendarView[\"Day\"] = \"day\";\r\n})(CalendarView || (CalendarView = {}));","originalLength":842,"removedExports":[],"renderedExports":["CalendarView"],"renderedLength":195},"C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\common\\util\\util.mjs":{"code":"const validateEvents = (events) => {\r\n    const warn = (...args) => console.warn('angular-calendar', ...args);\r\n    return validateEvents$1(events, warn);\r\n};\r\nfunction isInsideLeftAndRight(outer, inner) {\r\n    return (Math.floor(outer.left) <= Math.ceil(inner.left) &&\r\n        Math.floor(inner.left) <= Math.ceil(outer.right) &&\r\n        Math.floor(outer.left) <= Math.ceil(inner.right) &&\r\n        Math.floor(inner.right) <= Math.ceil(outer.right));\r\n}\r\nfunction isInsideTopAndBottom(outer, inner) {\r\n    return (Math.floor(outer.top) <= Math.ceil(inner.top) &&\r\n        Math.floor(inner.top) <= Math.ceil(outer.bottom) &&\r\n        Math.floor(outer.top) <= Math.ceil(inner.bottom) &&\r\n        Math.floor(inner.bottom) <= Math.ceil(outer.bottom));\r\n}\r\nfunction isInside(outer, inner) {\r\n    return (isInsideLeftAndRight(outer, inner) && isInsideTopAndBottom(outer, inner));\r\n}\r\nfunction roundToNearest(amount, precision) {\r\n    return Math.round(amount / precision) * precision;\r\n}\r\nconst trackByEventId = (index, event) => event.id ? event.id : event;\r\nconst trackByWeekDayHeaderDate = (index, day) => day.date.toISOString();\r\nconst trackByHourSegment = (index, segment) => segment.date.toISOString();\r\nconst trackByHour = (index, hour) => hour.segments[0].date.toISOString();\r\nconst trackByWeekAllDayEvent = (index, weekEvent) => (weekEvent.event.id ? weekEvent.event.id : weekEvent.event);\r\nconst trackByWeekTimeEvent = (index, weekEvent) => (weekEvent.event.id ? weekEvent.event.id : weekEvent.event);\r\nconst MINUTES_IN_HOUR = 60;\r\nfunction getPixelAmountInMinutes(hourSegments, hourSegmentHeight, hourDuration) {\r\n    return (hourDuration || MINUTES_IN_HOUR) / (hourSegments * hourSegmentHeight);\r\n}\r\nfunction getMinutesMoved(movedY, hourSegments, hourSegmentHeight, eventSnapSize, hourDuration) {\r\n    const draggedInPixelsSnapSize = roundToNearest(movedY, eventSnapSize || hourSegmentHeight);\r\n    const pixelAmountInMinutes = getPixelAmountInMinutes(hourSegments, hourSegmentHeight, hourDuration);\r\n    return draggedInPixelsSnapSize * pixelAmountInMinutes;\r\n}\r\nfunction getDefaultEventEnd(dateAdapter, event, minimumMinutes) {\r\n    if (event.end) {\r\n        return event.end;\r\n    }\r\n    else {\r\n        return dateAdapter.addMinutes(event.start, minimumMinutes);\r\n    }\r\n}\r\nfunction addDaysWithExclusions(dateAdapter, date, days, excluded) {\r\n    let daysCounter = 0;\r\n    let daysToAdd = 0;\r\n    const changeDays = days < 0 ? dateAdapter.subDays : dateAdapter.addDays;\r\n    let result = date;\r\n    while (daysToAdd <= Math.abs(days)) {\r\n        result = changeDays(date, daysCounter);\r\n        const day = dateAdapter.getDay(result);\r\n        if (excluded.indexOf(day) === -1) {\r\n            daysToAdd++;\r\n        }\r\n        daysCounter++;\r\n    }\r\n    return result;\r\n}\r\nfunction isDraggedWithinPeriod(newStart, newEnd, period) {\r\n    const end = newEnd || newStart;\r\n    return ((period.start <= newStart && newStart <= period.end) ||\r\n        (period.start <= end && end <= period.end));\r\n}\r\nfunction shouldFireDroppedEvent(dropEvent, date, allDay, calendarId) {\r\n    return (dropEvent.dropData &&\r\n        dropEvent.dropData.event &&\r\n        (dropEvent.dropData.calendarId !== calendarId ||\r\n            (dropEvent.dropData.event.allDay && !allDay) ||\r\n            (!dropEvent.dropData.event.allDay && allDay)));\r\n}\r\nfunction getWeekViewPeriod(dateAdapter, viewDate, weekStartsOn, excluded = [], daysInWeek) {\r\n    let viewStart = daysInWeek\r\n        ? dateAdapter.startOfDay(viewDate)\r\n        : dateAdapter.startOfWeek(viewDate, { weekStartsOn });\r\n    const endOfWeek = dateAdapter.endOfWeek(viewDate, { weekStartsOn });\r\n    while (excluded.indexOf(dateAdapter.getDay(viewStart)) > -1 &&\r\n        viewStart < endOfWeek) {\r\n        viewStart = dateAdapter.addDays(viewStart, 1);\r\n    }\r\n    if (daysInWeek) {\r\n        const viewEnd = dateAdapter.endOfDay(addDaysWithExclusions(dateAdapter, viewStart, daysInWeek - 1, excluded));\r\n        return { viewStart, viewEnd };\r\n    }\r\n    else {\r\n        let viewEnd = endOfWeek;\r\n        while (excluded.indexOf(dateAdapter.getDay(viewEnd)) > -1 &&\r\n            viewEnd > viewStart) {\r\n            viewEnd = dateAdapter.subDays(viewEnd, 1);\r\n        }\r\n        return { viewStart, viewEnd };\r\n    }\r\n}\r\nfunction isWithinThreshold({ x, y }) {\r\n    const DRAG_THRESHOLD = 1;\r\n    return Math.abs(x) > DRAG_THRESHOLD || Math.abs(y) > DRAG_THRESHOLD;\r\n}","originalLength":19810,"removedExports":[],"renderedExports":["validateEvents","isInsideLeftAndRight","isInside","roundToNearest","trackByEventId","trackByWeekDayHeaderDate","trackByHourSegment","trackByHour","trackByWeekAllDayEvent","trackByWeekTimeEvent","getMinutesMoved","getDefaultEventEnd","addDaysWithExclusions","isDraggedWithinPeriod","shouldFireDroppedEvent","getWeekViewPeriod","isWithinThreshold"],"renderedLength":4412},"C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\common\\calendar-previous-view\\calendar-previous-view.directive.mjs":{"code":"/**\r\n * Change the view date to the previous view. For example:\r\n *\r\n * ```typescript\r\n * <button\r\n *  mwlCalendarPreviousView\r\n *  [(viewDate)]=\"viewDate\"\r\n *  [view]=\"view\">\r\n *  Previous\r\n * </button>\r\n * ```\r\n */\r\nclass CalendarPreviousViewDirective {\r\n    constructor(dateAdapter) {\r\n        this.dateAdapter = dateAdapter;\r\n        /**\r\n         * Days to skip when going back by 1 day\r\n         */\r\n        this.excludeDays = [];\r\n        /**\r\n         * Called when the view date is changed\r\n         */\r\n        this.viewDateChange = new EventEmitter();\r\n    }\r\n    /**\r\n     * @hidden\r\n     */\r\n    onClick() {\r\n        const subFn = {\r\n            day: this.dateAdapter.subDays,\r\n            week: this.dateAdapter.subWeeks,\r\n            month: this.dateAdapter.subMonths,\r\n        }[this.view];\r\n        if (this.view === CalendarView.Day) {\r\n            this.viewDateChange.emit(addDaysWithExclusions(this.dateAdapter, this.viewDate, -1, this.excludeDays));\r\n        }\r\n        else if (this.view === CalendarView.Week && this.daysInWeek) {\r\n            this.viewDateChange.emit(addDaysWithExclusions(this.dateAdapter, this.viewDate, -this.daysInWeek, this.excludeDays));\r\n        }\r\n        else {\r\n            this.viewDateChange.emit(subFn(this.viewDate, 1));\r\n        }\r\n    }\r\n}\r\nCalendarPreviousViewDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarPreviousViewDirective, deps: [{ token: DateAdapter }], target: i0.ɵɵFactoryTarget.Directive });\r\nCalendarPreviousViewDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.0.4\", type: CalendarPreviousViewDirective, selector: \"[mwlCalendarPreviousView]\", inputs: { view: \"view\", viewDate: \"viewDate\", excludeDays: \"excludeDays\", daysInWeek: \"daysInWeek\" }, outputs: { viewDateChange: \"viewDateChange\" }, host: { listeners: { \"click\": \"onClick()\" } }, ngImport: i0 });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarPreviousViewDirective, decorators: [{\r\n            type: Directive,\r\n            args: [{\r\n                    selector: '[mwlCalendarPreviousView]',\r\n                }]\r\n        }], ctorParameters: function () { return [{ type: DateAdapter }]; }, propDecorators: { view: [{\r\n                type: Input\r\n            }], viewDate: [{\r\n                type: Input\r\n            }], excludeDays: [{\r\n                type: Input\r\n            }], daysInWeek: [{\r\n                type: Input\r\n            }], viewDateChange: [{\r\n                type: Output\r\n            }], onClick: [{\r\n                type: HostListener,\r\n                args: ['click']\r\n            }] } });","originalLength":8118,"removedExports":[],"renderedExports":["CalendarPreviousViewDirective"],"renderedLength":2690},"C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\common\\calendar-next-view\\calendar-next-view.directive.mjs":{"code":"/**\r\n * Change the view date to the next view. For example:\r\n *\r\n * ```typescript\r\n * <button\r\n *  mwlCalendarNextView\r\n *  [(viewDate)]=\"viewDate\"\r\n *  [view]=\"view\">\r\n *  Next\r\n * </button>\r\n * ```\r\n */\r\nclass CalendarNextViewDirective {\r\n    constructor(dateAdapter) {\r\n        this.dateAdapter = dateAdapter;\r\n        /**\r\n         * Days to skip when going forward by 1 day\r\n         */\r\n        this.excludeDays = [];\r\n        /**\r\n         * Called when the view date is changed\r\n         */\r\n        this.viewDateChange = new EventEmitter();\r\n    }\r\n    /**\r\n     * @hidden\r\n     */\r\n    onClick() {\r\n        const addFn = {\r\n            day: this.dateAdapter.addDays,\r\n            week: this.dateAdapter.addWeeks,\r\n            month: this.dateAdapter.addMonths,\r\n        }[this.view];\r\n        if (this.view === CalendarView.Day) {\r\n            this.viewDateChange.emit(addDaysWithExclusions(this.dateAdapter, this.viewDate, 1, this.excludeDays));\r\n        }\r\n        else if (this.view === CalendarView.Week && this.daysInWeek) {\r\n            this.viewDateChange.emit(addDaysWithExclusions(this.dateAdapter, this.viewDate, this.daysInWeek, this.excludeDays));\r\n        }\r\n        else {\r\n            this.viewDateChange.emit(addFn(this.viewDate, 1));\r\n        }\r\n    }\r\n}\r\nCalendarNextViewDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarNextViewDirective, deps: [{ token: DateAdapter }], target: i0.ɵɵFactoryTarget.Directive });\r\nCalendarNextViewDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.0.4\", type: CalendarNextViewDirective, selector: \"[mwlCalendarNextView]\", inputs: { view: \"view\", viewDate: \"viewDate\", excludeDays: \"excludeDays\", daysInWeek: \"daysInWeek\" }, outputs: { viewDateChange: \"viewDateChange\" }, host: { listeners: { \"click\": \"onClick()\" } }, ngImport: i0 });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarNextViewDirective, decorators: [{\r\n            type: Directive,\r\n            args: [{\r\n                    selector: '[mwlCalendarNextView]',\r\n                }]\r\n        }], ctorParameters: function () { return [{ type: DateAdapter }]; }, propDecorators: { view: [{\r\n                type: Input\r\n            }], viewDate: [{\r\n                type: Input\r\n            }], excludeDays: [{\r\n                type: Input\r\n            }], daysInWeek: [{\r\n                type: Input\r\n            }], viewDateChange: [{\r\n                type: Output\r\n            }], onClick: [{\r\n                type: HostListener,\r\n                args: ['click']\r\n            }] } });","originalLength":8011,"removedExports":[],"renderedExports":["CalendarNextViewDirective"],"renderedLength":2647},"C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\common\\calendar-today\\calendar-today.directive.mjs":{"code":"/**\r\n * Change the view date to the current day. For example:\r\n *\r\n * ```typescript\r\n * <button\r\n *  mwlCalendarToday\r\n *  [(viewDate)]=\"viewDate\">\r\n *  Today\r\n * </button>\r\n * ```\r\n */\r\nclass CalendarTodayDirective {\r\n    constructor(dateAdapter) {\r\n        this.dateAdapter = dateAdapter;\r\n        /**\r\n         * Called when the view date is changed\r\n         */\r\n        this.viewDateChange = new EventEmitter();\r\n    }\r\n    /**\r\n     * @hidden\r\n     */\r\n    onClick() {\r\n        this.viewDateChange.emit(this.dateAdapter.startOfDay(new Date()));\r\n    }\r\n}\r\nCalendarTodayDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarTodayDirective, deps: [{ token: DateAdapter }], target: i0.ɵɵFactoryTarget.Directive });\r\nCalendarTodayDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.0.4\", type: CalendarTodayDirective, selector: \"[mwlCalendarToday]\", inputs: { viewDate: \"viewDate\" }, outputs: { viewDateChange: \"viewDateChange\" }, host: { listeners: { \"click\": \"onClick()\" } }, ngImport: i0 });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarTodayDirective, decorators: [{\r\n            type: Directive,\r\n            args: [{\r\n                    selector: '[mwlCalendarToday]',\r\n                }]\r\n        }], ctorParameters: function () { return [{ type: DateAdapter }]; }, propDecorators: { viewDate: [{\r\n                type: Input\r\n            }], viewDateChange: [{\r\n                type: Output\r\n            }], onClick: [{\r\n                type: HostListener,\r\n                args: ['click']\r\n            }] } });","originalLength":4187,"removedExports":[],"renderedExports":["CalendarTodayDirective"],"renderedLength":1659},"C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\common\\calendar-angular-date-formatter\\calendar-angular-date-formatter.provider.mjs":{"code":"/**\r\n * This will use the angular date pipe to do all date formatting. It is the default date formatter used by the calendar.\r\n */\r\nclass CalendarAngularDateFormatter {\r\n    constructor(dateAdapter) {\r\n        this.dateAdapter = dateAdapter;\r\n    }\r\n    /**\r\n     * The month view header week day labels\r\n     */\r\n    monthViewColumnHeader({ date, locale }) {\r\n        return formatDate(date, 'EEEE', locale);\r\n    }\r\n    /**\r\n     * The month view cell day number\r\n     */\r\n    monthViewDayNumber({ date, locale }) {\r\n        return formatDate(date, 'd', locale);\r\n    }\r\n    /**\r\n     * The month view title\r\n     */\r\n    monthViewTitle({ date, locale }) {\r\n        return formatDate(date, 'LLLL y', locale);\r\n    }\r\n    /**\r\n     * The week view header week day labels\r\n     */\r\n    weekViewColumnHeader({ date, locale }) {\r\n        return formatDate(date, 'EEEE', locale);\r\n    }\r\n    /**\r\n     * The week view sub header day and month labels\r\n     */\r\n    weekViewColumnSubHeader({ date, locale, }) {\r\n        return formatDate(date, 'MMM d', locale);\r\n    }\r\n    /**\r\n     * The week view title\r\n     */\r\n    weekViewTitle({ date, locale, weekStartsOn, excludeDays, daysInWeek, }) {\r\n        const { viewStart, viewEnd } = getWeekViewPeriod(this.dateAdapter, date, weekStartsOn, excludeDays, daysInWeek);\r\n        const format = (dateToFormat, showYear) => formatDate(dateToFormat, 'MMM d' + (showYear ? ', yyyy' : ''), locale);\r\n        return `${format(viewStart, viewStart.getUTCFullYear() !== viewEnd.getUTCFullYear())} - ${format(viewEnd, true)}`;\r\n    }\r\n    /**\r\n     * The time formatting down the left hand side of the week view\r\n     */\r\n    weekViewHour({ date, locale }) {\r\n        return formatDate(date, 'h a', locale);\r\n    }\r\n    /**\r\n     * The time formatting down the left hand side of the day view\r\n     */\r\n    dayViewHour({ date, locale }) {\r\n        return formatDate(date, 'h a', locale);\r\n    }\r\n    /**\r\n     * The day view title\r\n     */\r\n    dayViewTitle({ date, locale }) {\r\n        return formatDate(date, 'EEEE, MMMM d, y', locale);\r\n    }\r\n}\r\nCalendarAngularDateFormatter.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarAngularDateFormatter, deps: [{ token: DateAdapter }], target: i0.ɵɵFactoryTarget.Injectable });\r\nCalendarAngularDateFormatter.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarAngularDateFormatter });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarAngularDateFormatter, decorators: [{\r\n            type: Injectable\r\n        }], ctorParameters: function () { return [{ type: DateAdapter }]; } });","originalLength":9731,"removedExports":[],"renderedExports":["CalendarAngularDateFormatter"],"renderedLength":2712},"C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\common\\calendar-date-formatter\\calendar-date-formatter.provider.mjs":{"code":"/**\r\n * This class is responsible for all formatting of dates. There are 3 implementations available, the `CalendarAngularDateFormatter` (default) which uses the angular date pipe to format dates, the `CalendarNativeDateFormatter` which will use the <a href=\"https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Intl\" target=\"_blank\">Intl</a> API to format dates, or there is the `CalendarMomentDateFormatter` which uses <a href=\"http://momentjs.com/\" target=\"_blank\">moment</a>.\r\n *\r\n * If you wish, you may override any of the defaults via angulars DI. For example:\r\n *\r\n * ```typescript\r\n * import { CalendarDateFormatter, DateFormatterParams } from 'angular-calendar';\r\n * import { formatDate } from '@angular/common';\r\n * import { Injectable } from '@angular/core';\r\n *\r\n * @Injectable()\r\n * class CustomDateFormatter extends CalendarDateFormatter {\r\n *\r\n *   public monthViewColumnHeader({date, locale}: DateFormatterParams): string {\r\n *     return formatDate(date, 'EEE', locale); // use short week days\r\n *   }\r\n *\r\n * }\r\n *\r\n * // in your component that uses the calendar\r\n * providers: [{\r\n *   provide: CalendarDateFormatter,\r\n *   useClass: CustomDateFormatter\r\n * }]\r\n * ```\r\n */\r\nclass CalendarDateFormatter extends CalendarAngularDateFormatter {\r\n}\r\nCalendarDateFormatter.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarDateFormatter, deps: null, target: i0.ɵɵFactoryTarget.Injectable });\r\nCalendarDateFormatter.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarDateFormatter });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarDateFormatter, decorators: [{\r\n            type: Injectable\r\n        }] });","originalLength":4765,"removedExports":[],"renderedExports":["CalendarDateFormatter"],"renderedLength":1802},"C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\common\\calendar-date\\calendar-date.pipe.mjs":{"code":"/**\r\n * This pipe is primarily for rendering the current view title. Example usage:\r\n * ```typescript\r\n * // where `viewDate` is a `Date` and view is `'month' | 'week' | 'day'`\r\n * {{ viewDate | calendarDate:(view + 'ViewTitle'):'en' }}\r\n * ```\r\n */\r\nclass CalendarDatePipe {\r\n    constructor(dateFormatter, locale) {\r\n        this.dateFormatter = dateFormatter;\r\n        this.locale = locale;\r\n    }\r\n    transform(date, method, locale = this.locale, weekStartsOn = 0, excludeDays = [], daysInWeek) {\r\n        if (typeof this.dateFormatter[method] === 'undefined') {\r\n            const allowedMethods = Object.getOwnPropertyNames(Object.getPrototypeOf(CalendarDateFormatter.prototype)).filter((iMethod) => iMethod !== 'constructor');\r\n            throw new Error(`${method} is not a valid date formatter. Can only be one of ${allowedMethods.join(', ')}`);\r\n        }\r\n        return this.dateFormatter[method]({\r\n            date,\r\n            locale,\r\n            weekStartsOn,\r\n            excludeDays,\r\n            daysInWeek,\r\n        });\r\n    }\r\n}\r\nCalendarDatePipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarDatePipe, deps: [{ token: CalendarDateFormatter }, { token: LOCALE_ID }], target: i0.ɵɵFactoryTarget.Pipe });\r\nCalendarDatePipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"14.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarDatePipe, name: \"calendarDate\" });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarDatePipe, decorators: [{\r\n            type: Pipe,\r\n            args: [{\r\n                    name: 'calendarDate',\r\n                }]\r\n        }], ctorParameters: function () { return [{ type: CalendarDateFormatter }, { type: undefined, decorators: [{\r\n                    type: Inject,\r\n                    args: [LOCALE_ID]\r\n                }] }]; } });","originalLength":5700,"removedExports":[],"renderedExports":["CalendarDatePipe"],"renderedLength":1889},"C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\common\\calendar-utils\\calendar-utils.provider.mjs":{"code":"class CalendarUtils {\r\n    constructor(dateAdapter) {\r\n        this.dateAdapter = dateAdapter;\r\n    }\r\n    getMonthView(args) {\r\n        return getMonthView(this.dateAdapter, args);\r\n    }\r\n    getWeekViewHeader(args) {\r\n        return getWeekViewHeader(this.dateAdapter, args);\r\n    }\r\n    getWeekView(args) {\r\n        return getWeekView(this.dateAdapter, args);\r\n    }\r\n}\r\nCalendarUtils.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarUtils, deps: [{ token: DateAdapter }], target: i0.ɵɵFactoryTarget.Injectable });\r\nCalendarUtils.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarUtils });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarUtils, decorators: [{\r\n            type: Injectable\r\n        }], ctorParameters: function () { return [{ type: DateAdapter }]; } });","originalLength":3273,"removedExports":[],"renderedExports":["CalendarUtils"],"renderedLength":931},"C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\common\\calendar-moment-date-formatter\\calendar-moment-date-formatter.provider.mjs":{"code":"const MOMENT = new InjectionToken('Moment');\r\n/**\r\n * This will use <a href=\"http://momentjs.com/\" target=\"_blank\">moment</a> to do all date formatting. To use this class:\r\n *\r\n * ```typescript\r\n * import { CalendarDateFormatter, CalendarMomentDateFormatter, MOMENT } from 'angular-calendar';\r\n * import moment from 'moment';\r\n *\r\n * // in your component\r\n * provide: [{\r\n *   provide: MOMENT, useValue: moment\r\n * }, {\r\n *   provide: CalendarDateFormatter, useClass: CalendarMomentDateFormatter\r\n * }]\r\n *\r\n * ```\r\n */\r\nclass CalendarMomentDateFormatter {\r\n    /**\r\n     * @hidden\r\n     */\r\n    constructor(moment, dateAdapter) {\r\n        this.moment = moment;\r\n        this.dateAdapter = dateAdapter;\r\n    }\r\n    /**\r\n     * The month view header week day labels\r\n     */\r\n    monthViewColumnHeader({ date, locale }) {\r\n        return this.moment(date).locale(locale).format('dddd');\r\n    }\r\n    /**\r\n     * The month view cell day number\r\n     */\r\n    monthViewDayNumber({ date, locale }) {\r\n        return this.moment(date).locale(locale).format('D');\r\n    }\r\n    /**\r\n     * The month view title\r\n     */\r\n    monthViewTitle({ date, locale }) {\r\n        return this.moment(date).locale(locale).format('MMMM YYYY');\r\n    }\r\n    /**\r\n     * The week view header week day labels\r\n     */\r\n    weekViewColumnHeader({ date, locale }) {\r\n        return this.moment(date).locale(locale).format('dddd');\r\n    }\r\n    /**\r\n     * The week view sub header day and month labels\r\n     */\r\n    weekViewColumnSubHeader({ date, locale, }) {\r\n        return this.moment(date).locale(locale).format('MMM D');\r\n    }\r\n    /**\r\n     * The week view title\r\n     */\r\n    weekViewTitle({ date, locale, weekStartsOn, excludeDays, daysInWeek, }) {\r\n        const { viewStart, viewEnd } = getWeekViewPeriod(this.dateAdapter, date, weekStartsOn, excludeDays, daysInWeek);\r\n        const format = (dateToFormat, showYear) => this.moment(dateToFormat)\r\n            .locale(locale)\r\n            .format('MMM D' + (showYear ? ', YYYY' : ''));\r\n        return `${format(viewStart, viewStart.getUTCFullYear() !== viewEnd.getUTCFullYear())} - ${format(viewEnd, true)}`;\r\n    }\r\n    /**\r\n     * The time formatting down the left hand side of the week view\r\n     */\r\n    weekViewHour({ date, locale }) {\r\n        return this.moment(date).locale(locale).format('ha');\r\n    }\r\n    /**\r\n     * The time formatting down the left hand side of the day view\r\n     */\r\n    dayViewHour({ date, locale }) {\r\n        return this.moment(date).locale(locale).format('ha');\r\n    }\r\n    /**\r\n     * The day view title\r\n     */\r\n    dayViewTitle({ date, locale }) {\r\n        return this.moment(date).locale(locale).format('dddd, LL'); // dddd = Thursday\r\n    } // LL = locale-dependent Month Day, Year\r\n}\r\nCalendarMomentDateFormatter.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarMomentDateFormatter, deps: [{ token: MOMENT }, { token: DateAdapter }], target: i0.ɵɵFactoryTarget.Injectable });\r\nCalendarMomentDateFormatter.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarMomentDateFormatter });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarMomentDateFormatter, decorators: [{\r\n            type: Injectable\r\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\r\n                    type: Inject,\r\n                    args: [MOMENT]\r\n                }] }, { type: DateAdapter }]; } });","originalLength":12203,"removedExports":[],"renderedExports":["MOMENT","CalendarMomentDateFormatter"],"renderedLength":3532},"C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\common\\calendar-native-date-formatter\\calendar-native-date-formatter.provider.mjs":{"code":"/**\r\n * This will use <a href=\"https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Intl\" target=\"_blank\">Intl</a> API to do all date formatting.\r\n *\r\n * You will need to include a <a href=\"https://github.com/andyearnshaw/Intl.js/\">polyfill</a> for older browsers.\r\n */\r\nclass CalendarNativeDateFormatter {\r\n    constructor(dateAdapter) {\r\n        this.dateAdapter = dateAdapter;\r\n    }\r\n    /**\r\n     * The month view header week day labels\r\n     */\r\n    monthViewColumnHeader({ date, locale }) {\r\n        return new Intl.DateTimeFormat(locale, { weekday: 'long' }).format(date);\r\n    }\r\n    /**\r\n     * The month view cell day number\r\n     */\r\n    monthViewDayNumber({ date, locale }) {\r\n        return new Intl.DateTimeFormat(locale, { day: 'numeric' }).format(date);\r\n    }\r\n    /**\r\n     * The month view title\r\n     */\r\n    monthViewTitle({ date, locale }) {\r\n        return new Intl.DateTimeFormat(locale, {\r\n            year: 'numeric',\r\n            month: 'long',\r\n        }).format(date);\r\n    }\r\n    /**\r\n     * The week view header week day labels\r\n     */\r\n    weekViewColumnHeader({ date, locale }) {\r\n        return new Intl.DateTimeFormat(locale, { weekday: 'long' }).format(date);\r\n    }\r\n    /**\r\n     * The week view sub header day and month labels\r\n     */\r\n    weekViewColumnSubHeader({ date, locale, }) {\r\n        return new Intl.DateTimeFormat(locale, {\r\n            day: 'numeric',\r\n            month: 'short',\r\n        }).format(date);\r\n    }\r\n    /**\r\n     * The week view title\r\n     */\r\n    weekViewTitle({ date, locale, weekStartsOn, excludeDays, daysInWeek, }) {\r\n        const { viewStart, viewEnd } = getWeekViewPeriod(this.dateAdapter, date, weekStartsOn, excludeDays, daysInWeek);\r\n        const format = (dateToFormat, showYear) => new Intl.DateTimeFormat(locale, {\r\n            day: 'numeric',\r\n            month: 'short',\r\n            year: showYear ? 'numeric' : undefined,\r\n        }).format(dateToFormat);\r\n        return `${format(viewStart, viewStart.getUTCFullYear() !== viewEnd.getUTCFullYear())} - ${format(viewEnd, true)}`;\r\n    }\r\n    /**\r\n     * The time formatting down the left hand side of the week view\r\n     */\r\n    weekViewHour({ date, locale }) {\r\n        return new Intl.DateTimeFormat(locale, { hour: 'numeric' }).format(date);\r\n    }\r\n    /**\r\n     * The time formatting down the left hand side of the day view\r\n     */\r\n    dayViewHour({ date, locale }) {\r\n        return new Intl.DateTimeFormat(locale, { hour: 'numeric' }).format(date);\r\n    }\r\n    /**\r\n     * The day view title\r\n     */\r\n    dayViewTitle({ date, locale }) {\r\n        return new Intl.DateTimeFormat(locale, {\r\n            day: 'numeric',\r\n            month: 'long',\r\n            year: 'numeric',\r\n            weekday: 'long',\r\n        }).format(date);\r\n    }\r\n}\r\nCalendarNativeDateFormatter.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarNativeDateFormatter, deps: [{ token: DateAdapter }], target: i0.ɵɵFactoryTarget.Injectable });\r\nCalendarNativeDateFormatter.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarNativeDateFormatter });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarNativeDateFormatter, decorators: [{\r\n            type: Injectable\r\n        }], ctorParameters: function () { return [{ type: DateAdapter }]; } });","originalLength":12003,"removedExports":[],"renderedExports":["CalendarNativeDateFormatter"],"renderedLength":3443},"C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\common\\calendar-a11y\\calendar-a11y.interface.mjs":{"code":"","originalLength":1106,"removedExports":[],"renderedExports":[],"renderedLength":0},"C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\common\\calendar-date-formatter\\calendar-date-formatter.interface.mjs":{"code":"","originalLength":3090,"removedExports":[],"renderedExports":[],"renderedLength":0},"C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\common\\calendar-event-times-changed-event\\calendar-event-times-changed-event.interface.mjs":{"code":"var CalendarEventTimesChangedEventType;\r\n(function (CalendarEventTimesChangedEventType) {\r\n    CalendarEventTimesChangedEventType[\"Drag\"] = \"drag\";\r\n    CalendarEventTimesChangedEventType[\"Drop\"] = \"drop\";\r\n    CalendarEventTimesChangedEventType[\"Resize\"] = \"resize\";\r\n})(CalendarEventTimesChangedEventType || (CalendarEventTimesChangedEventType = {}));","originalLength":1644,"removedExports":[],"renderedExports":["CalendarEventTimesChangedEventType"],"renderedLength":353},"C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\common\\calendar-common.module.mjs":{"code":"/**\r\n * Import this module to if you're just using a singular view and want to save on bundle size. Example usage:\r\n *\r\n * ```typescript\r\n * import { CalendarCommonModule, CalendarMonthModule } from 'angular-calendar';\r\n *\r\n * @NgModule({\r\n *   imports: [\r\n *     CalendarCommonModule.forRoot(),\r\n *     CalendarMonthModule\r\n *   ]\r\n * })\r\n * class MyModule {}\r\n * ```\r\n *\r\n */\r\nclass CalendarCommonModule {\r\n    static forRoot(dateAdapter, config = {}) {\r\n        return {\r\n            ngModule: CalendarCommonModule,\r\n            providers: [\r\n                dateAdapter,\r\n                config.eventTitleFormatter || CalendarEventTitleFormatter,\r\n                config.dateFormatter || CalendarDateFormatter,\r\n                config.utils || CalendarUtils,\r\n                config.a11y || CalendarA11y,\r\n            ],\r\n        };\r\n    }\r\n}\r\nCalendarCommonModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarCommonModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\r\nCalendarCommonModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarCommonModule, declarations: [CalendarEventActionsComponent,\r\n        CalendarEventTitleComponent,\r\n        CalendarTooltipWindowComponent,\r\n        CalendarTooltipDirective,\r\n        CalendarPreviousViewDirective,\r\n        CalendarNextViewDirective,\r\n        CalendarTodayDirective,\r\n        CalendarDatePipe,\r\n        CalendarEventTitlePipe,\r\n        CalendarA11yPipe,\r\n        ClickDirective,\r\n        KeydownEnterDirective], imports: [CommonModule], exports: [CalendarEventActionsComponent,\r\n        CalendarEventTitleComponent,\r\n        CalendarTooltipWindowComponent,\r\n        CalendarTooltipDirective,\r\n        CalendarPreviousViewDirective,\r\n        CalendarNextViewDirective,\r\n        CalendarTodayDirective,\r\n        CalendarDatePipe,\r\n        CalendarEventTitlePipe,\r\n        CalendarA11yPipe,\r\n        ClickDirective,\r\n        KeydownEnterDirective] });\r\nCalendarCommonModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarCommonModule, providers: [I18nPluralPipe], imports: [CommonModule] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarCommonModule, decorators: [{\r\n            type: NgModule,\r\n            args: [{\r\n                    declarations: [\r\n                        CalendarEventActionsComponent,\r\n                        CalendarEventTitleComponent,\r\n                        CalendarTooltipWindowComponent,\r\n                        CalendarTooltipDirective,\r\n                        CalendarPreviousViewDirective,\r\n                        CalendarNextViewDirective,\r\n                        CalendarTodayDirective,\r\n                        CalendarDatePipe,\r\n                        CalendarEventTitlePipe,\r\n                        CalendarA11yPipe,\r\n                        ClickDirective,\r\n                        KeydownEnterDirective,\r\n                    ],\r\n                    imports: [CommonModule],\r\n                    exports: [\r\n                        CalendarEventActionsComponent,\r\n                        CalendarEventTitleComponent,\r\n                        CalendarTooltipWindowComponent,\r\n                        CalendarTooltipDirective,\r\n                        CalendarPreviousViewDirective,\r\n                        CalendarNextViewDirective,\r\n                        CalendarTodayDirective,\r\n                        CalendarDatePipe,\r\n                        CalendarEventTitlePipe,\r\n                        CalendarA11yPipe,\r\n                        ClickDirective,\r\n                        KeydownEnterDirective,\r\n                    ],\r\n                    providers: [I18nPluralPipe],\r\n                }]\r\n        }] });","originalLength":20070,"removedExports":[],"renderedExports":["CalendarCommonModule"],"renderedLength":3841},"C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\common\\calendar-drag-helper\\calendar-drag-helper.provider.mjs":{"code":"class CalendarDragHelper {\r\n    constructor(dragContainerElement, draggableElement) {\r\n        this.dragContainerElement = dragContainerElement;\r\n        this.startPosition = draggableElement.getBoundingClientRect();\r\n    }\r\n    validateDrag({ x, y, snapDraggedEvents, dragAlreadyMoved, transform, }) {\r\n        const isDraggedWithinThreshold = isWithinThreshold({ x, y }) || dragAlreadyMoved;\r\n        if (snapDraggedEvents) {\r\n            const inner = Object.assign({}, this.startPosition, {\r\n                left: this.startPosition.left + transform.x,\r\n                right: this.startPosition.right + transform.x,\r\n                top: this.startPosition.top + transform.y,\r\n                bottom: this.startPosition.bottom + transform.y,\r\n            });\r\n            if (isDraggedWithinThreshold) {\r\n                const outer = this.dragContainerElement.getBoundingClientRect();\r\n                const isTopInside = outer.top < inner.top && inner.top < outer.bottom;\r\n                const isBottomInside = outer.top < inner.bottom && inner.bottom < outer.bottom;\r\n                return (isInsideLeftAndRight(outer, inner) && (isTopInside || isBottomInside));\r\n            }\r\n            /* istanbul ignore next */\r\n            return false;\r\n        }\r\n        else {\r\n            return isDraggedWithinThreshold;\r\n        }\r\n    }\r\n}","originalLength":5752,"removedExports":[],"renderedExports":["CalendarDragHelper"],"renderedLength":1348},"C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\common\\calendar-resize-helper\\calendar-resize-helper.provider.mjs":{"code":"class CalendarResizeHelper {\r\n    constructor(resizeContainerElement, minWidth, rtl) {\r\n        this.resizeContainerElement = resizeContainerElement;\r\n        this.minWidth = minWidth;\r\n        this.rtl = rtl;\r\n    }\r\n    validateResize({ rectangle, edges }) {\r\n        if (this.rtl) {\r\n            // TODO - find a way of testing this, for some reason the tests always fail but it does actually work\r\n            /* istanbul ignore next */\r\n            if (typeof edges.left !== 'undefined') {\r\n                rectangle.left -= edges.left;\r\n                rectangle.right += edges.left;\r\n            }\r\n            else if (typeof edges.right !== 'undefined') {\r\n                rectangle.left += edges.right;\r\n                rectangle.right -= edges.right;\r\n            }\r\n            rectangle.width = rectangle.right - rectangle.left;\r\n        }\r\n        if (this.minWidth &&\r\n            Math.ceil(rectangle.width) < Math.ceil(this.minWidth)) {\r\n            return false;\r\n        }\r\n        return isInside(this.resizeContainerElement.getBoundingClientRect(), rectangle);\r\n    }\r\n}","originalLength":4175,"removedExports":[],"renderedExports":["CalendarResizeHelper"],"renderedLength":1090},"C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\week\\calendar-week-view\\calendar-week-view-header\\calendar-week-view-header.component.mjs":{"code":"class CalendarWeekViewHeaderComponent {\r\n    constructor() {\r\n        this.dayHeaderClicked = new EventEmitter();\r\n        this.eventDropped = new EventEmitter();\r\n        this.dragEnter = new EventEmitter();\r\n        this.trackByWeekDayHeaderDate = trackByWeekDayHeaderDate;\r\n    }\r\n}\r\nCalendarWeekViewHeaderComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarWeekViewHeaderComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\r\nCalendarWeekViewHeaderComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.0.4\", type: CalendarWeekViewHeaderComponent, selector: \"mwl-calendar-week-view-header\", inputs: { days: \"days\", locale: \"locale\", customTemplate: \"customTemplate\" }, outputs: { dayHeaderClicked: \"dayHeaderClicked\", eventDropped: \"eventDropped\", dragEnter: \"dragEnter\" }, ngImport: i0, template: `\r\n    <ng-template\r\n      #defaultTemplate\r\n      let-days=\"days\"\r\n      let-locale=\"locale\"\r\n      let-dayHeaderClicked=\"dayHeaderClicked\"\r\n      let-eventDropped=\"eventDropped\"\r\n      let-trackByWeekDayHeaderDate=\"trackByWeekDayHeaderDate\"\r\n      let-dragEnter=\"dragEnter\"\r\n    >\r\n      <div class=\"cal-day-headers\" role=\"row\">\r\n        <div\r\n          class=\"cal-header\"\r\n          *ngFor=\"let day of days; trackBy: trackByWeekDayHeaderDate\"\r\n          [class.cal-past]=\"day.isPast\"\r\n          [class.cal-today]=\"day.isToday\"\r\n          [class.cal-future]=\"day.isFuture\"\r\n          [class.cal-weekend]=\"day.isWeekend\"\r\n          [ngClass]=\"day.cssClass\"\r\n          (mwlClick)=\"dayHeaderClicked.emit({ day: day, sourceEvent: $event })\"\r\n          mwlDroppable\r\n          dragOverClass=\"cal-drag-over\"\r\n          (drop)=\"\r\n            eventDropped.emit({\r\n              event: $event.dropData.event,\r\n              newStart: day.date\r\n            })\r\n          \"\r\n          (dragEnter)=\"dragEnter.emit({ date: day.date })\"\r\n          tabindex=\"0\"\r\n          role=\"columnheader\"\r\n        >\r\n          <b>{{ day.date | calendarDate : 'weekViewColumnHeader' : locale }}</b\r\n          ><br />\r\n          <span>{{\r\n            day.date | calendarDate : 'weekViewColumnSubHeader' : locale\r\n          }}</span>\r\n        </div>\r\n      </div>\r\n    </ng-template>\r\n    <ng-template\r\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\r\n      [ngTemplateOutletContext]=\"{\r\n        days: days,\r\n        locale: locale,\r\n        dayHeaderClicked: dayHeaderClicked,\r\n        eventDropped: eventDropped,\r\n        dragEnter: dragEnter,\r\n        trackByWeekDayHeaderDate: trackByWeekDayHeaderDate\r\n      }\"\r\n    >\r\n    </ng-template>\r\n  `, isInline: true, dependencies: [{ kind: \"directive\", type: i1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i1.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"directive\", type: i2.DroppableDirective, selector: \"[mwlDroppable]\", inputs: [\"dragOverClass\", \"dragActiveClass\", \"validateDrop\"], outputs: [\"dragEnter\", \"dragLeave\", \"dragOver\", \"drop\"] }, { kind: \"directive\", type: ClickDirective, selector: \"[mwlClick]\", inputs: [\"clickListenerDisabled\"], outputs: [\"mwlClick\"] }, { kind: \"pipe\", type: CalendarDatePipe, name: \"calendarDate\" }] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarWeekViewHeaderComponent, decorators: [{\r\n            type: Component,\r\n            args: [{\r\n                    selector: 'mwl-calendar-week-view-header',\r\n                    template: `\r\n    <ng-template\r\n      #defaultTemplate\r\n      let-days=\"days\"\r\n      let-locale=\"locale\"\r\n      let-dayHeaderClicked=\"dayHeaderClicked\"\r\n      let-eventDropped=\"eventDropped\"\r\n      let-trackByWeekDayHeaderDate=\"trackByWeekDayHeaderDate\"\r\n      let-dragEnter=\"dragEnter\"\r\n    >\r\n      <div class=\"cal-day-headers\" role=\"row\">\r\n        <div\r\n          class=\"cal-header\"\r\n          *ngFor=\"let day of days; trackBy: trackByWeekDayHeaderDate\"\r\n          [class.cal-past]=\"day.isPast\"\r\n          [class.cal-today]=\"day.isToday\"\r\n          [class.cal-future]=\"day.isFuture\"\r\n          [class.cal-weekend]=\"day.isWeekend\"\r\n          [ngClass]=\"day.cssClass\"\r\n          (mwlClick)=\"dayHeaderClicked.emit({ day: day, sourceEvent: $event })\"\r\n          mwlDroppable\r\n          dragOverClass=\"cal-drag-over\"\r\n          (drop)=\"\r\n            eventDropped.emit({\r\n              event: $event.dropData.event,\r\n              newStart: day.date\r\n            })\r\n          \"\r\n          (dragEnter)=\"dragEnter.emit({ date: day.date })\"\r\n          tabindex=\"0\"\r\n          role=\"columnheader\"\r\n        >\r\n          <b>{{ day.date | calendarDate : 'weekViewColumnHeader' : locale }}</b\r\n          ><br />\r\n          <span>{{\r\n            day.date | calendarDate : 'weekViewColumnSubHeader' : locale\r\n          }}</span>\r\n        </div>\r\n      </div>\r\n    </ng-template>\r\n    <ng-template\r\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\r\n      [ngTemplateOutletContext]=\"{\r\n        days: days,\r\n        locale: locale,\r\n        dayHeaderClicked: dayHeaderClicked,\r\n        eventDropped: eventDropped,\r\n        dragEnter: dragEnter,\r\n        trackByWeekDayHeaderDate: trackByWeekDayHeaderDate\r\n      }\"\r\n    >\r\n    </ng-template>\r\n  `,\r\n                }]\r\n        }], propDecorators: { days: [{\r\n                type: Input\r\n            }], locale: [{\r\n                type: Input\r\n            }], customTemplate: [{\r\n                type: Input\r\n            }], dayHeaderClicked: [{\r\n                type: Output\r\n            }], eventDropped: [{\r\n                type: Output\r\n            }], dragEnter: [{\r\n                type: Output\r\n            }] } });","originalLength":11309,"removedExports":[],"renderedExports":["CalendarWeekViewHeaderComponent"],"renderedLength":5882},"C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\week\\calendar-week-view\\calendar-week-view-event\\calendar-week-view-event.component.mjs":{"code":"class CalendarWeekViewEventComponent {\r\n    constructor() {\r\n        this.eventClicked = new EventEmitter();\r\n    }\r\n}\r\nCalendarWeekViewEventComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarWeekViewEventComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\r\nCalendarWeekViewEventComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.0.4\", type: CalendarWeekViewEventComponent, selector: \"mwl-calendar-week-view-event\", inputs: { locale: \"locale\", weekEvent: \"weekEvent\", tooltipPlacement: \"tooltipPlacement\", tooltipAppendToBody: \"tooltipAppendToBody\", tooltipDisabled: \"tooltipDisabled\", tooltipDelay: \"tooltipDelay\", customTemplate: \"customTemplate\", eventTitleTemplate: \"eventTitleTemplate\", eventActionsTemplate: \"eventActionsTemplate\", tooltipTemplate: \"tooltipTemplate\", column: \"column\", daysInWeek: \"daysInWeek\" }, outputs: { eventClicked: \"eventClicked\" }, ngImport: i0, template: `\r\n    <ng-template\r\n      #defaultTemplate\r\n      let-weekEvent=\"weekEvent\"\r\n      let-tooltipPlacement=\"tooltipPlacement\"\r\n      let-eventClicked=\"eventClicked\"\r\n      let-tooltipTemplate=\"tooltipTemplate\"\r\n      let-tooltipAppendToBody=\"tooltipAppendToBody\"\r\n      let-tooltipDisabled=\"tooltipDisabled\"\r\n      let-tooltipDelay=\"tooltipDelay\"\r\n      let-column=\"column\"\r\n      let-daysInWeek=\"daysInWeek\"\r\n    >\r\n      <div\r\n        class=\"cal-event\"\r\n        [ngStyle]=\"{\r\n          color: weekEvent.event.color?.secondaryText,\r\n          backgroundColor: weekEvent.event.color?.secondary,\r\n          borderColor: weekEvent.event.color?.primary\r\n        }\"\r\n        [mwlCalendarTooltip]=\"\r\n          !tooltipDisabled\r\n            ? (weekEvent.event.title\r\n              | calendarEventTitle\r\n                : (daysInWeek === 1 ? 'dayTooltip' : 'weekTooltip')\r\n                : weekEvent.tempEvent || weekEvent.event)\r\n            : ''\r\n        \"\r\n        [tooltipPlacement]=\"tooltipPlacement\"\r\n        [tooltipEvent]=\"weekEvent.tempEvent || weekEvent.event\"\r\n        [tooltipTemplate]=\"tooltipTemplate\"\r\n        [tooltipAppendToBody]=\"tooltipAppendToBody\"\r\n        [tooltipDelay]=\"tooltipDelay\"\r\n        (mwlClick)=\"eventClicked.emit({ sourceEvent: $event })\"\r\n        (mwlKeydownEnter)=\"eventClicked.emit({ sourceEvent: $event })\"\r\n        tabindex=\"0\"\r\n        role=\"application\"\r\n        [attr.aria-label]=\"\r\n          { event: weekEvent.tempEvent || weekEvent.event, locale: locale }\r\n            | calendarA11y : 'eventDescription'\r\n        \"\r\n      >\r\n        <mwl-calendar-event-actions\r\n          [event]=\"weekEvent.tempEvent || weekEvent.event\"\r\n          [customTemplate]=\"eventActionsTemplate\"\r\n        >\r\n        </mwl-calendar-event-actions>\r\n        &ngsp;\r\n        <mwl-calendar-event-title\r\n          [event]=\"weekEvent.tempEvent || weekEvent.event\"\r\n          [customTemplate]=\"eventTitleTemplate\"\r\n          [view]=\"daysInWeek === 1 ? 'day' : 'week'\"\r\n        >\r\n        </mwl-calendar-event-title>\r\n      </div>\r\n    </ng-template>\r\n    <ng-template\r\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\r\n      [ngTemplateOutletContext]=\"{\r\n        weekEvent: weekEvent,\r\n        tooltipPlacement: tooltipPlacement,\r\n        eventClicked: eventClicked,\r\n        tooltipTemplate: tooltipTemplate,\r\n        tooltipAppendToBody: tooltipAppendToBody,\r\n        tooltipDisabled: tooltipDisabled,\r\n        tooltipDelay: tooltipDelay,\r\n        column: column,\r\n        daysInWeek: daysInWeek\r\n      }\"\r\n    >\r\n    </ng-template>\r\n  `, isInline: true, dependencies: [{ kind: \"directive\", type: i1.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"directive\", type: i1.NgStyle, selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }, { kind: \"component\", type: CalendarEventActionsComponent, selector: \"mwl-calendar-event-actions\", inputs: [\"event\", \"customTemplate\"] }, { kind: \"component\", type: CalendarEventTitleComponent, selector: \"mwl-calendar-event-title\", inputs: [\"event\", \"customTemplate\", \"view\"] }, { kind: \"directive\", type: CalendarTooltipDirective, selector: \"[mwlCalendarTooltip]\", inputs: [\"mwlCalendarTooltip\", \"tooltipPlacement\", \"tooltipTemplate\", \"tooltipEvent\", \"tooltipAppendToBody\", \"tooltipDelay\"] }, { kind: \"directive\", type: ClickDirective, selector: \"[mwlClick]\", inputs: [\"clickListenerDisabled\"], outputs: [\"mwlClick\"] }, { kind: \"directive\", type: KeydownEnterDirective, selector: \"[mwlKeydownEnter]\", outputs: [\"mwlKeydownEnter\"] }, { kind: \"pipe\", type: CalendarEventTitlePipe, name: \"calendarEventTitle\" }, { kind: \"pipe\", type: CalendarA11yPipe, name: \"calendarA11y\" }] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarWeekViewEventComponent, decorators: [{\r\n            type: Component,\r\n            args: [{\r\n                    selector: 'mwl-calendar-week-view-event',\r\n                    template: `\r\n    <ng-template\r\n      #defaultTemplate\r\n      let-weekEvent=\"weekEvent\"\r\n      let-tooltipPlacement=\"tooltipPlacement\"\r\n      let-eventClicked=\"eventClicked\"\r\n      let-tooltipTemplate=\"tooltipTemplate\"\r\n      let-tooltipAppendToBody=\"tooltipAppendToBody\"\r\n      let-tooltipDisabled=\"tooltipDisabled\"\r\n      let-tooltipDelay=\"tooltipDelay\"\r\n      let-column=\"column\"\r\n      let-daysInWeek=\"daysInWeek\"\r\n    >\r\n      <div\r\n        class=\"cal-event\"\r\n        [ngStyle]=\"{\r\n          color: weekEvent.event.color?.secondaryText,\r\n          backgroundColor: weekEvent.event.color?.secondary,\r\n          borderColor: weekEvent.event.color?.primary\r\n        }\"\r\n        [mwlCalendarTooltip]=\"\r\n          !tooltipDisabled\r\n            ? (weekEvent.event.title\r\n              | calendarEventTitle\r\n                : (daysInWeek === 1 ? 'dayTooltip' : 'weekTooltip')\r\n                : weekEvent.tempEvent || weekEvent.event)\r\n            : ''\r\n        \"\r\n        [tooltipPlacement]=\"tooltipPlacement\"\r\n        [tooltipEvent]=\"weekEvent.tempEvent || weekEvent.event\"\r\n        [tooltipTemplate]=\"tooltipTemplate\"\r\n        [tooltipAppendToBody]=\"tooltipAppendToBody\"\r\n        [tooltipDelay]=\"tooltipDelay\"\r\n        (mwlClick)=\"eventClicked.emit({ sourceEvent: $event })\"\r\n        (mwlKeydownEnter)=\"eventClicked.emit({ sourceEvent: $event })\"\r\n        tabindex=\"0\"\r\n        role=\"application\"\r\n        [attr.aria-label]=\"\r\n          { event: weekEvent.tempEvent || weekEvent.event, locale: locale }\r\n            | calendarA11y : 'eventDescription'\r\n        \"\r\n      >\r\n        <mwl-calendar-event-actions\r\n          [event]=\"weekEvent.tempEvent || weekEvent.event\"\r\n          [customTemplate]=\"eventActionsTemplate\"\r\n        >\r\n        </mwl-calendar-event-actions>\r\n        &ngsp;\r\n        <mwl-calendar-event-title\r\n          [event]=\"weekEvent.tempEvent || weekEvent.event\"\r\n          [customTemplate]=\"eventTitleTemplate\"\r\n          [view]=\"daysInWeek === 1 ? 'day' : 'week'\"\r\n        >\r\n        </mwl-calendar-event-title>\r\n      </div>\r\n    </ng-template>\r\n    <ng-template\r\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\r\n      [ngTemplateOutletContext]=\"{\r\n        weekEvent: weekEvent,\r\n        tooltipPlacement: tooltipPlacement,\r\n        eventClicked: eventClicked,\r\n        tooltipTemplate: tooltipTemplate,\r\n        tooltipAppendToBody: tooltipAppendToBody,\r\n        tooltipDisabled: tooltipDisabled,\r\n        tooltipDelay: tooltipDelay,\r\n        column: column,\r\n        daysInWeek: daysInWeek\r\n      }\"\r\n    >\r\n    </ng-template>\r\n  `,\r\n                }]\r\n        }], propDecorators: { locale: [{\r\n                type: Input\r\n            }], weekEvent: [{\r\n                type: Input\r\n            }], tooltipPlacement: [{\r\n                type: Input\r\n            }], tooltipAppendToBody: [{\r\n                type: Input\r\n            }], tooltipDisabled: [{\r\n                type: Input\r\n            }], tooltipDelay: [{\r\n                type: Input\r\n            }], customTemplate: [{\r\n                type: Input\r\n            }], eventTitleTemplate: [{\r\n                type: Input\r\n            }], eventActionsTemplate: [{\r\n                type: Input\r\n            }], tooltipTemplate: [{\r\n                type: Input\r\n            }], column: [{\r\n                type: Input\r\n            }], daysInWeek: [{\r\n                type: Input\r\n            }], eventClicked: [{\r\n                type: Output\r\n            }] } });","originalLength":15769,"removedExports":[],"renderedExports":["CalendarWeekViewEventComponent"],"renderedLength":8437},"C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\week\\calendar-week-view\\calendar-week-view-hour-segment\\calendar-week-view-hour-segment.component.mjs":{"code":"class CalendarWeekViewHourSegmentComponent {\r\n}\r\nCalendarWeekViewHourSegmentComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarWeekViewHourSegmentComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\r\nCalendarWeekViewHourSegmentComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.0.4\", type: CalendarWeekViewHourSegmentComponent, selector: \"mwl-calendar-week-view-hour-segment\", inputs: { segment: \"segment\", segmentHeight: \"segmentHeight\", locale: \"locale\", isTimeLabel: \"isTimeLabel\", daysInWeek: \"daysInWeek\", customTemplate: \"customTemplate\" }, ngImport: i0, template: `\r\n    <ng-template\r\n      #defaultTemplate\r\n      let-segment=\"segment\"\r\n      let-locale=\"locale\"\r\n      let-segmentHeight=\"segmentHeight\"\r\n      let-isTimeLabel=\"isTimeLabel\"\r\n      let-daysInWeek=\"daysInWeek\"\r\n    >\r\n      <div\r\n        [attr.aria-hidden]=\"\r\n          {}\r\n            | calendarA11y\r\n              : (daysInWeek === 1\r\n                  ? 'hideDayHourSegment'\r\n                  : 'hideWeekHourSegment')\r\n        \"\r\n        class=\"cal-hour-segment\"\r\n        [style.height.px]=\"segmentHeight\"\r\n        [class.cal-hour-start]=\"segment.isStart\"\r\n        [class.cal-after-hour-start]=\"!segment.isStart\"\r\n        [ngClass]=\"segment.cssClass\"\r\n      >\r\n        <div class=\"cal-time\" *ngIf=\"isTimeLabel\">\r\n          {{\r\n            segment.displayDate\r\n              | calendarDate\r\n                : (daysInWeek === 1 ? 'dayViewHour' : 'weekViewHour')\r\n                : locale\r\n          }}\r\n        </div>\r\n      </div>\r\n    </ng-template>\r\n    <ng-template\r\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\r\n      [ngTemplateOutletContext]=\"{\r\n        segment: segment,\r\n        locale: locale,\r\n        segmentHeight: segmentHeight,\r\n        isTimeLabel: isTimeLabel,\r\n        daysInWeek: daysInWeek\r\n      }\"\r\n    >\r\n    </ng-template>\r\n  `, isInline: true, dependencies: [{ kind: \"directive\", type: i1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i1.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"pipe\", type: CalendarDatePipe, name: \"calendarDate\" }, { kind: \"pipe\", type: CalendarA11yPipe, name: \"calendarA11y\" }] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarWeekViewHourSegmentComponent, decorators: [{\r\n            type: Component,\r\n            args: [{\r\n                    selector: 'mwl-calendar-week-view-hour-segment',\r\n                    template: `\r\n    <ng-template\r\n      #defaultTemplate\r\n      let-segment=\"segment\"\r\n      let-locale=\"locale\"\r\n      let-segmentHeight=\"segmentHeight\"\r\n      let-isTimeLabel=\"isTimeLabel\"\r\n      let-daysInWeek=\"daysInWeek\"\r\n    >\r\n      <div\r\n        [attr.aria-hidden]=\"\r\n          {}\r\n            | calendarA11y\r\n              : (daysInWeek === 1\r\n                  ? 'hideDayHourSegment'\r\n                  : 'hideWeekHourSegment')\r\n        \"\r\n        class=\"cal-hour-segment\"\r\n        [style.height.px]=\"segmentHeight\"\r\n        [class.cal-hour-start]=\"segment.isStart\"\r\n        [class.cal-after-hour-start]=\"!segment.isStart\"\r\n        [ngClass]=\"segment.cssClass\"\r\n      >\r\n        <div class=\"cal-time\" *ngIf=\"isTimeLabel\">\r\n          {{\r\n            segment.displayDate\r\n              | calendarDate\r\n                : (daysInWeek === 1 ? 'dayViewHour' : 'weekViewHour')\r\n                : locale\r\n          }}\r\n        </div>\r\n      </div>\r\n    </ng-template>\r\n    <ng-template\r\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\r\n      [ngTemplateOutletContext]=\"{\r\n        segment: segment,\r\n        locale: locale,\r\n        segmentHeight: segmentHeight,\r\n        isTimeLabel: isTimeLabel,\r\n        daysInWeek: daysInWeek\r\n      }\"\r\n    >\r\n    </ng-template>\r\n  `,\r\n                }]\r\n        }], propDecorators: { segment: [{\r\n                type: Input\r\n            }], segmentHeight: [{\r\n                type: Input\r\n            }], locale: [{\r\n                type: Input\r\n            }], isTimeLabel: [{\r\n                type: Input\r\n            }], daysInWeek: [{\r\n                type: Input\r\n            }], customTemplate: [{\r\n                type: Input\r\n            }] } });","originalLength":8330,"removedExports":[],"renderedExports":["CalendarWeekViewHourSegmentComponent"],"renderedLength":4458},"C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\week\\calendar-week-view\\calendar-week-view-current-time-marker\\calendar-week-view-current-time-marker.component.mjs":{"code":"class CalendarWeekViewCurrentTimeMarkerComponent {\r\n    constructor(dateAdapter, zone) {\r\n        this.dateAdapter = dateAdapter;\r\n        this.zone = zone;\r\n        this.columnDate$ = new BehaviorSubject(undefined);\r\n        this.marker$ = this.zone.onStable.pipe(switchMap(() => interval(60 * 1000)), startWith(0), switchMapTo(this.columnDate$), map((columnDate) => {\r\n            const startOfDay = this.dateAdapter.setMinutes(this.dateAdapter.setHours(columnDate, this.dayStartHour), this.dayStartMinute);\r\n            const endOfDay = this.dateAdapter.setMinutes(this.dateAdapter.setHours(columnDate, this.dayEndHour), this.dayEndMinute);\r\n            const hourHeightModifier = (this.hourSegments * this.hourSegmentHeight) /\r\n                (this.hourDuration || 60);\r\n            const now = new Date();\r\n            return {\r\n                isVisible: this.dateAdapter.isSameDay(columnDate, now) &&\r\n                    now >= startOfDay &&\r\n                    now <= endOfDay,\r\n                top: this.dateAdapter.differenceInMinutes(now, startOfDay) *\r\n                    hourHeightModifier,\r\n            };\r\n        }));\r\n    }\r\n    ngOnChanges(changes) {\r\n        if (changes.columnDate) {\r\n            this.columnDate$.next(changes.columnDate.currentValue);\r\n        }\r\n    }\r\n}\r\nCalendarWeekViewCurrentTimeMarkerComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarWeekViewCurrentTimeMarkerComponent, deps: [{ token: DateAdapter }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\r\nCalendarWeekViewCurrentTimeMarkerComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.0.4\", type: CalendarWeekViewCurrentTimeMarkerComponent, selector: \"mwl-calendar-week-view-current-time-marker\", inputs: { columnDate: \"columnDate\", dayStartHour: \"dayStartHour\", dayStartMinute: \"dayStartMinute\", dayEndHour: \"dayEndHour\", dayEndMinute: \"dayEndMinute\", hourSegments: \"hourSegments\", hourDuration: \"hourDuration\", hourSegmentHeight: \"hourSegmentHeight\", customTemplate: \"customTemplate\" }, usesOnChanges: true, ngImport: i0, template: `\r\n    <ng-template\r\n      #defaultTemplate\r\n      let-columnDate=\"columnDate\"\r\n      let-dayStartHour=\"dayStartHour\"\r\n      let-dayStartMinute=\"dayStartMinute\"\r\n      let-dayEndHour=\"dayEndHour\"\r\n      let-dayEndMinute=\"dayEndMinute\"\r\n      let-isVisible=\"isVisible\"\r\n      let-topPx=\"topPx\"\r\n    >\r\n      <div\r\n        class=\"cal-current-time-marker\"\r\n        *ngIf=\"isVisible\"\r\n        [style.top.px]=\"topPx\"\r\n      ></div>\r\n    </ng-template>\r\n    <ng-template\r\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\r\n      [ngTemplateOutletContext]=\"{\r\n        columnDate: columnDate,\r\n        dayStartHour: dayStartHour,\r\n        dayStartMinute: dayStartMinute,\r\n        dayEndHour: dayEndHour,\r\n        dayEndMinute: dayEndMinute,\r\n        isVisible: (marker$ | async)?.isVisible,\r\n        topPx: (marker$ | async)?.top\r\n      }\"\r\n    >\r\n    </ng-template>\r\n  `, isInline: true, dependencies: [{ kind: \"directive\", type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i1.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"pipe\", type: i1.AsyncPipe, name: \"async\" }] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarWeekViewCurrentTimeMarkerComponent, decorators: [{\r\n            type: Component,\r\n            args: [{\r\n                    selector: 'mwl-calendar-week-view-current-time-marker',\r\n                    template: `\r\n    <ng-template\r\n      #defaultTemplate\r\n      let-columnDate=\"columnDate\"\r\n      let-dayStartHour=\"dayStartHour\"\r\n      let-dayStartMinute=\"dayStartMinute\"\r\n      let-dayEndHour=\"dayEndHour\"\r\n      let-dayEndMinute=\"dayEndMinute\"\r\n      let-isVisible=\"isVisible\"\r\n      let-topPx=\"topPx\"\r\n    >\r\n      <div\r\n        class=\"cal-current-time-marker\"\r\n        *ngIf=\"isVisible\"\r\n        [style.top.px]=\"topPx\"\r\n      ></div>\r\n    </ng-template>\r\n    <ng-template\r\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\r\n      [ngTemplateOutletContext]=\"{\r\n        columnDate: columnDate,\r\n        dayStartHour: dayStartHour,\r\n        dayStartMinute: dayStartMinute,\r\n        dayEndHour: dayEndHour,\r\n        dayEndMinute: dayEndMinute,\r\n        isVisible: (marker$ | async)?.isVisible,\r\n        topPx: (marker$ | async)?.top\r\n      }\"\r\n    >\r\n    </ng-template>\r\n  `,\r\n                }]\r\n        }], ctorParameters: function () { return [{ type: DateAdapter }, { type: i0.NgZone }]; }, propDecorators: { columnDate: [{\r\n                type: Input\r\n            }], dayStartHour: [{\r\n                type: Input\r\n            }], dayStartMinute: [{\r\n                type: Input\r\n            }], dayEndHour: [{\r\n                type: Input\r\n            }], dayEndMinute: [{\r\n                type: Input\r\n            }], hourSegments: [{\r\n                type: Input\r\n            }], hourDuration: [{\r\n                type: Input\r\n            }], hourSegmentHeight: [{\r\n                type: Input\r\n            }], customTemplate: [{\r\n                type: Input\r\n            }] } });","originalLength":12737,"removedExports":[],"renderedExports":["CalendarWeekViewCurrentTimeMarkerComponent"],"renderedLength":5265},"C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\week\\calendar-week-view\\calendar-week-view.component.mjs":{"code":"/**\r\n * Shows all events on a given week. Example usage:\r\n *\r\n * ```typescript\r\n * <mwl-calendar-week-view\r\n *  [viewDate]=\"viewDate\"\r\n *  [events]=\"events\">\r\n * </mwl-calendar-week-view>\r\n * ```\r\n */\r\nclass CalendarWeekViewComponent {\r\n    /**\r\n     * @hidden\r\n     */\r\n    constructor(cdr, utils, locale, dateAdapter, element) {\r\n        this.cdr = cdr;\r\n        this.utils = utils;\r\n        this.dateAdapter = dateAdapter;\r\n        this.element = element;\r\n        /**\r\n         * An array of events to display on view\r\n         * The schema is available here: https://github.com/mattlewis92/calendar-utils/blob/c51689985f59a271940e30bc4e2c4e1fee3fcb5c/src/calendarUtils.ts#L49-L63\r\n         */\r\n        this.events = [];\r\n        /**\r\n         * An array of day indexes (0 = sunday, 1 = monday etc) that will be hidden on the view\r\n         */\r\n        this.excludeDays = [];\r\n        /**\r\n         * The placement of the event tooltip\r\n         */\r\n        this.tooltipPlacement = 'auto';\r\n        /**\r\n         * Whether to append tooltips to the body or next to the trigger element\r\n         */\r\n        this.tooltipAppendToBody = true;\r\n        /**\r\n         * The delay in milliseconds before the tooltip should be displayed. If not provided the tooltip\r\n         * will be displayed immediately.\r\n         */\r\n        this.tooltipDelay = null;\r\n        /**\r\n         * The precision to display events.\r\n         * `days` will round event start and end dates to the nearest day and `minutes` will not do this rounding\r\n         */\r\n        this.precision = 'days';\r\n        /**\r\n         * Whether to snap events to a grid when dragging\r\n         */\r\n        this.snapDraggedEvents = true;\r\n        /**\r\n         * The number of segments in an hour. Must divide equally into 60.\r\n         */\r\n        this.hourSegments = 2;\r\n        /**\r\n         * The height in pixels of each hour segment\r\n         */\r\n        this.hourSegmentHeight = 30;\r\n        /**\r\n         * The minimum height in pixels of each event\r\n         */\r\n        this.minimumEventHeight = 30;\r\n        /**\r\n         * The day start hours in 24 hour time. Must be 0-23\r\n         */\r\n        this.dayStartHour = 0;\r\n        /**\r\n         * The day start minutes. Must be 0-59\r\n         */\r\n        this.dayStartMinute = 0;\r\n        /**\r\n         * The day end hours in 24 hour time. Must be 0-23\r\n         */\r\n        this.dayEndHour = 23;\r\n        /**\r\n         * The day end minutes. Must be 0-59\r\n         */\r\n        this.dayEndMinute = 59;\r\n        /**\r\n         * Called when a header week day is clicked. Adding a `cssClass` property on `$event.day` will add that class to the header element\r\n         */\r\n        this.dayHeaderClicked = new EventEmitter();\r\n        /**\r\n         * Called when an event title is clicked\r\n         */\r\n        this.eventClicked = new EventEmitter();\r\n        /**\r\n         * Called when an event is resized or dragged and dropped\r\n         */\r\n        this.eventTimesChanged = new EventEmitter();\r\n        /**\r\n         * An output that will be called before the view is rendered for the current week.\r\n         * If you add the `cssClass` property to a day in the header it will add that class to the cell element in the template\r\n         */\r\n        this.beforeViewRender = new EventEmitter();\r\n        /**\r\n         * Called when an hour segment is clicked\r\n         */\r\n        this.hourSegmentClicked = new EventEmitter();\r\n        /**\r\n         * @hidden\r\n         */\r\n        this.allDayEventResizes = new Map();\r\n        /**\r\n         * @hidden\r\n         */\r\n        this.timeEventResizes = new Map();\r\n        /**\r\n         * @hidden\r\n         */\r\n        this.eventDragEnterByType = {\r\n            allDay: 0,\r\n            time: 0,\r\n        };\r\n        /**\r\n         * @hidden\r\n         */\r\n        this.dragActive = false;\r\n        /**\r\n         * @hidden\r\n         */\r\n        this.dragAlreadyMoved = false;\r\n        /**\r\n         * @hidden\r\n         */\r\n        this.calendarId = Symbol('angular calendar week view id');\r\n        /**\r\n         * @hidden\r\n         */\r\n        this.rtl = false;\r\n        /**\r\n         * @hidden\r\n         */\r\n        this.trackByWeekDayHeaderDate = trackByWeekDayHeaderDate;\r\n        /**\r\n         * @hidden\r\n         */\r\n        this.trackByHourSegment = trackByHourSegment;\r\n        /**\r\n         * @hidden\r\n         */\r\n        this.trackByHour = trackByHour;\r\n        /**\r\n         * @hidden\r\n         */\r\n        this.trackByWeekAllDayEvent = trackByWeekAllDayEvent;\r\n        /**\r\n         * @hidden\r\n         */\r\n        this.trackByWeekTimeEvent = trackByWeekTimeEvent;\r\n        /**\r\n         * @hidden\r\n         */\r\n        this.trackByHourColumn = (index, column) => column.hours[0] ? column.hours[0].segments[0].date.toISOString() : column;\r\n        /**\r\n         * @hidden\r\n         */\r\n        this.trackById = (index, row) => row.id;\r\n        this.locale = locale;\r\n    }\r\n    /**\r\n     * @hidden\r\n     */\r\n    ngOnInit() {\r\n        if (this.refresh) {\r\n            this.refreshSubscription = this.refresh.subscribe(() => {\r\n                this.refreshAll();\r\n                this.cdr.markForCheck();\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * @hidden\r\n     */\r\n    ngOnChanges(changes) {\r\n        const refreshHeader = changes.viewDate ||\r\n            changes.excludeDays ||\r\n            changes.weekendDays ||\r\n            changes.daysInWeek ||\r\n            changes.weekStartsOn;\r\n        const refreshBody = changes.viewDate ||\r\n            changes.dayStartHour ||\r\n            changes.dayStartMinute ||\r\n            changes.dayEndHour ||\r\n            changes.dayEndMinute ||\r\n            changes.hourSegments ||\r\n            changes.hourDuration ||\r\n            changes.weekStartsOn ||\r\n            changes.weekendDays ||\r\n            changes.excludeDays ||\r\n            changes.hourSegmentHeight ||\r\n            changes.events ||\r\n            changes.daysInWeek ||\r\n            changes.minimumEventHeight;\r\n        if (refreshHeader) {\r\n            this.refreshHeader();\r\n        }\r\n        if (changes.events) {\r\n            validateEvents(this.events);\r\n        }\r\n        if (refreshBody) {\r\n            this.refreshBody();\r\n        }\r\n        if (refreshHeader || refreshBody) {\r\n            this.emitBeforeViewRender();\r\n        }\r\n    }\r\n    /**\r\n     * @hidden\r\n     */\r\n    ngOnDestroy() {\r\n        if (this.refreshSubscription) {\r\n            this.refreshSubscription.unsubscribe();\r\n        }\r\n    }\r\n    /**\r\n     * @hidden\r\n     */\r\n    ngAfterViewInit() {\r\n        this.rtl =\r\n            typeof window !== 'undefined' &&\r\n                getComputedStyle(this.element.nativeElement).direction === 'rtl';\r\n        this.cdr.detectChanges();\r\n    }\r\n    /**\r\n     * @hidden\r\n     */\r\n    timeEventResizeStarted(eventsContainer, timeEvent, resizeEvent) {\r\n        this.timeEventResizes.set(timeEvent.event, resizeEvent);\r\n        this.resizeStarted(eventsContainer, timeEvent);\r\n    }\r\n    /**\r\n     * @hidden\r\n     */\r\n    timeEventResizing(timeEvent, resizeEvent) {\r\n        this.timeEventResizes.set(timeEvent.event, resizeEvent);\r\n        const adjustedEvents = new Map();\r\n        const tempEvents = [...this.events];\r\n        this.timeEventResizes.forEach((lastResizeEvent, event) => {\r\n            const newEventDates = this.getTimeEventResizedDates(event, lastResizeEvent);\r\n            const adjustedEvent = { ...event, ...newEventDates };\r\n            adjustedEvents.set(adjustedEvent, event);\r\n            const eventIndex = tempEvents.indexOf(event);\r\n            tempEvents[eventIndex] = adjustedEvent;\r\n        });\r\n        this.restoreOriginalEvents(tempEvents, adjustedEvents, true);\r\n    }\r\n    /**\r\n     * @hidden\r\n     */\r\n    timeEventResizeEnded(timeEvent) {\r\n        this.view = this.getWeekView(this.events);\r\n        const lastResizeEvent = this.timeEventResizes.get(timeEvent.event);\r\n        if (lastResizeEvent) {\r\n            this.timeEventResizes.delete(timeEvent.event);\r\n            const newEventDates = this.getTimeEventResizedDates(timeEvent.event, lastResizeEvent);\r\n            this.eventTimesChanged.emit({\r\n                newStart: newEventDates.start,\r\n                newEnd: newEventDates.end,\r\n                event: timeEvent.event,\r\n                type: CalendarEventTimesChangedEventType.Resize,\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * @hidden\r\n     */\r\n    allDayEventResizeStarted(allDayEventsContainer, allDayEvent, resizeEvent) {\r\n        this.allDayEventResizes.set(allDayEvent, {\r\n            originalOffset: allDayEvent.offset,\r\n            originalSpan: allDayEvent.span,\r\n            edge: typeof resizeEvent.edges.left !== 'undefined' ? 'left' : 'right',\r\n        });\r\n        this.resizeStarted(allDayEventsContainer, allDayEvent, this.getDayColumnWidth(allDayEventsContainer));\r\n    }\r\n    /**\r\n     * @hidden\r\n     */\r\n    allDayEventResizing(allDayEvent, resizeEvent, dayWidth) {\r\n        const currentResize = this.allDayEventResizes.get(allDayEvent);\r\n        const modifier = this.rtl ? -1 : 1;\r\n        if (typeof resizeEvent.edges.left !== 'undefined') {\r\n            const diff = Math.round(+resizeEvent.edges.left / dayWidth) * modifier;\r\n            allDayEvent.offset = currentResize.originalOffset + diff;\r\n            allDayEvent.span = currentResize.originalSpan - diff;\r\n        }\r\n        else if (typeof resizeEvent.edges.right !== 'undefined') {\r\n            const diff = Math.round(+resizeEvent.edges.right / dayWidth) * modifier;\r\n            allDayEvent.span = currentResize.originalSpan + diff;\r\n        }\r\n    }\r\n    /**\r\n     * @hidden\r\n     */\r\n    allDayEventResizeEnded(allDayEvent) {\r\n        const currentResize = this.allDayEventResizes.get(allDayEvent);\r\n        if (currentResize) {\r\n            const allDayEventResizingBeforeStart = currentResize.edge === 'left';\r\n            let daysDiff;\r\n            if (allDayEventResizingBeforeStart) {\r\n                daysDiff = allDayEvent.offset - currentResize.originalOffset;\r\n            }\r\n            else {\r\n                daysDiff = allDayEvent.span - currentResize.originalSpan;\r\n            }\r\n            allDayEvent.offset = currentResize.originalOffset;\r\n            allDayEvent.span = currentResize.originalSpan;\r\n            const newDates = this.getAllDayEventResizedDates(allDayEvent.event, daysDiff, allDayEventResizingBeforeStart);\r\n            this.eventTimesChanged.emit({\r\n                newStart: newDates.start,\r\n                newEnd: newDates.end,\r\n                event: allDayEvent.event,\r\n                type: CalendarEventTimesChangedEventType.Resize,\r\n            });\r\n            this.allDayEventResizes.delete(allDayEvent);\r\n        }\r\n    }\r\n    /**\r\n     * @hidden\r\n     */\r\n    getDayColumnWidth(eventRowContainer) {\r\n        return Math.floor(eventRowContainer.offsetWidth / this.days.length);\r\n    }\r\n    /**\r\n     * @hidden\r\n     */\r\n    dateDragEnter(date) {\r\n        this.lastDragEnterDate = date;\r\n    }\r\n    /**\r\n     * @hidden\r\n     */\r\n    eventDropped(dropEvent, date, allDay) {\r\n        if (shouldFireDroppedEvent(dropEvent, date, allDay, this.calendarId) &&\r\n            this.lastDragEnterDate.getTime() === date.getTime() &&\r\n            (!this.snapDraggedEvents ||\r\n                dropEvent.dropData.event !== this.lastDraggedEvent)) {\r\n            this.eventTimesChanged.emit({\r\n                type: CalendarEventTimesChangedEventType.Drop,\r\n                event: dropEvent.dropData.event,\r\n                newStart: date,\r\n                allDay,\r\n            });\r\n        }\r\n        this.lastDraggedEvent = null;\r\n    }\r\n    /**\r\n     * @hidden\r\n     */\r\n    dragEnter(type) {\r\n        this.eventDragEnterByType[type]++;\r\n    }\r\n    /**\r\n     * @hidden\r\n     */\r\n    dragLeave(type) {\r\n        this.eventDragEnterByType[type]--;\r\n    }\r\n    /**\r\n     * @hidden\r\n     */\r\n    dragStarted(eventsContainerElement, eventElement, event, useY) {\r\n        this.dayColumnWidth = this.getDayColumnWidth(eventsContainerElement);\r\n        const dragHelper = new CalendarDragHelper(eventsContainerElement, eventElement);\r\n        this.validateDrag = ({ x, y, transform }) => {\r\n            const isAllowed = this.allDayEventResizes.size === 0 &&\r\n                this.timeEventResizes.size === 0 &&\r\n                dragHelper.validateDrag({\r\n                    x,\r\n                    y,\r\n                    snapDraggedEvents: this.snapDraggedEvents,\r\n                    dragAlreadyMoved: this.dragAlreadyMoved,\r\n                    transform,\r\n                });\r\n            if (isAllowed && this.validateEventTimesChanged) {\r\n                const newEventTimes = this.getDragMovedEventTimes(event, { x, y }, this.dayColumnWidth, useY);\r\n                return this.validateEventTimesChanged({\r\n                    type: CalendarEventTimesChangedEventType.Drag,\r\n                    event: event.event,\r\n                    newStart: newEventTimes.start,\r\n                    newEnd: newEventTimes.end,\r\n                });\r\n            }\r\n            return isAllowed;\r\n        };\r\n        this.dragActive = true;\r\n        this.dragAlreadyMoved = false;\r\n        this.lastDraggedEvent = null;\r\n        this.eventDragEnterByType = {\r\n            allDay: 0,\r\n            time: 0,\r\n        };\r\n        if (!this.snapDraggedEvents && useY) {\r\n            this.view.hourColumns.forEach((column) => {\r\n                const linkedEvent = column.events.find((columnEvent) => columnEvent.event === event.event && columnEvent !== event);\r\n                // hide any linked events while dragging\r\n                if (linkedEvent) {\r\n                    linkedEvent.width = 0;\r\n                    linkedEvent.height = 0;\r\n                }\r\n            });\r\n        }\r\n        this.cdr.markForCheck();\r\n    }\r\n    /**\r\n     * @hidden\r\n     */\r\n    dragMove(dayEvent, dragEvent) {\r\n        const newEventTimes = this.getDragMovedEventTimes(dayEvent, dragEvent, this.dayColumnWidth, true);\r\n        const originalEvent = dayEvent.event;\r\n        const adjustedEvent = { ...originalEvent, ...newEventTimes };\r\n        const tempEvents = this.events.map((event) => {\r\n            if (event === originalEvent) {\r\n                return adjustedEvent;\r\n            }\r\n            return event;\r\n        });\r\n        this.restoreOriginalEvents(tempEvents, new Map([[adjustedEvent, originalEvent]]), this.snapDraggedEvents);\r\n        this.dragAlreadyMoved = true;\r\n    }\r\n    /**\r\n     * @hidden\r\n     */\r\n    allDayEventDragMove() {\r\n        this.dragAlreadyMoved = true;\r\n    }\r\n    /**\r\n     * @hidden\r\n     */\r\n    dragEnded(weekEvent, dragEndEvent, dayWidth, useY = false) {\r\n        this.view = this.getWeekView(this.events);\r\n        this.dragActive = false;\r\n        this.validateDrag = null;\r\n        const { start, end } = this.getDragMovedEventTimes(weekEvent, dragEndEvent, dayWidth, useY);\r\n        if ((this.snapDraggedEvents ||\r\n            this.eventDragEnterByType[useY ? 'time' : 'allDay'] > 0) &&\r\n            isDraggedWithinPeriod(start, end, this.view.period)) {\r\n            this.lastDraggedEvent = weekEvent.event;\r\n            this.eventTimesChanged.emit({\r\n                newStart: start,\r\n                newEnd: end,\r\n                event: weekEvent.event,\r\n                type: CalendarEventTimesChangedEventType.Drag,\r\n                allDay: !useY,\r\n            });\r\n        }\r\n    }\r\n    refreshHeader() {\r\n        this.days = this.utils.getWeekViewHeader({\r\n            viewDate: this.viewDate,\r\n            weekStartsOn: this.weekStartsOn,\r\n            excluded: this.excludeDays,\r\n            weekendDays: this.weekendDays,\r\n            ...getWeekViewPeriod(this.dateAdapter, this.viewDate, this.weekStartsOn, this.excludeDays, this.daysInWeek),\r\n        });\r\n    }\r\n    refreshBody() {\r\n        this.view = this.getWeekView(this.events);\r\n    }\r\n    refreshAll() {\r\n        this.refreshHeader();\r\n        this.refreshBody();\r\n        this.emitBeforeViewRender();\r\n    }\r\n    emitBeforeViewRender() {\r\n        if (this.days && this.view) {\r\n            this.beforeViewRender.emit({\r\n                header: this.days,\r\n                ...this.view,\r\n            });\r\n        }\r\n    }\r\n    getWeekView(events) {\r\n        return this.utils.getWeekView({\r\n            events,\r\n            viewDate: this.viewDate,\r\n            weekStartsOn: this.weekStartsOn,\r\n            excluded: this.excludeDays,\r\n            precision: this.precision,\r\n            absolutePositionedEvents: true,\r\n            hourSegments: this.hourSegments,\r\n            hourDuration: this.hourDuration,\r\n            dayStart: {\r\n                hour: this.dayStartHour,\r\n                minute: this.dayStartMinute,\r\n            },\r\n            dayEnd: {\r\n                hour: this.dayEndHour,\r\n                minute: this.dayEndMinute,\r\n            },\r\n            segmentHeight: this.hourSegmentHeight,\r\n            weekendDays: this.weekendDays,\r\n            minimumEventHeight: this.minimumEventHeight,\r\n            ...getWeekViewPeriod(this.dateAdapter, this.viewDate, this.weekStartsOn, this.excludeDays, this.daysInWeek),\r\n        });\r\n    }\r\n    getDragMovedEventTimes(weekEvent, dragEndEvent, dayWidth, useY) {\r\n        const daysDragged = (roundToNearest(dragEndEvent.x, dayWidth) / dayWidth) *\r\n            (this.rtl ? -1 : 1);\r\n        const minutesMoved = useY\r\n            ? getMinutesMoved(dragEndEvent.y, this.hourSegments, this.hourSegmentHeight, this.eventSnapSize, this.hourDuration)\r\n            : 0;\r\n        const start = this.dateAdapter.addMinutes(addDaysWithExclusions(this.dateAdapter, weekEvent.event.start, daysDragged, this.excludeDays), minutesMoved);\r\n        let end;\r\n        if (weekEvent.event.end) {\r\n            end = this.dateAdapter.addMinutes(addDaysWithExclusions(this.dateAdapter, weekEvent.event.end, daysDragged, this.excludeDays), minutesMoved);\r\n        }\r\n        return { start, end };\r\n    }\r\n    restoreOriginalEvents(tempEvents, adjustedEvents, snapDraggedEvents = true) {\r\n        const previousView = this.view;\r\n        if (snapDraggedEvents) {\r\n            this.view = this.getWeekView(tempEvents);\r\n        }\r\n        const adjustedEventsArray = tempEvents.filter((event) => adjustedEvents.has(event));\r\n        this.view.hourColumns.forEach((column, columnIndex) => {\r\n            previousView.hourColumns[columnIndex].hours.forEach((hour, hourIndex) => {\r\n                hour.segments.forEach((segment, segmentIndex) => {\r\n                    column.hours[hourIndex].segments[segmentIndex].cssClass =\r\n                        segment.cssClass;\r\n                });\r\n            });\r\n            adjustedEventsArray.forEach((adjustedEvent) => {\r\n                const originalEvent = adjustedEvents.get(adjustedEvent);\r\n                const existingColumnEvent = column.events.find((columnEvent) => columnEvent.event ===\r\n                    (snapDraggedEvents ? adjustedEvent : originalEvent));\r\n                if (existingColumnEvent) {\r\n                    // restore the original event so trackBy kicks in and the dom isn't changed\r\n                    existingColumnEvent.event = originalEvent;\r\n                    existingColumnEvent['tempEvent'] = adjustedEvent;\r\n                    if (!snapDraggedEvents) {\r\n                        existingColumnEvent.height = 0;\r\n                        existingColumnEvent.width = 0;\r\n                    }\r\n                }\r\n                else {\r\n                    // add a dummy event to the drop so if the event was removed from the original column the drag doesn't end early\r\n                    const event = {\r\n                        event: originalEvent,\r\n                        left: 0,\r\n                        top: 0,\r\n                        height: 0,\r\n                        width: 0,\r\n                        startsBeforeDay: false,\r\n                        endsAfterDay: false,\r\n                        tempEvent: adjustedEvent,\r\n                    };\r\n                    column.events.push(event);\r\n                }\r\n            });\r\n        });\r\n        adjustedEvents.clear();\r\n    }\r\n    getTimeEventResizedDates(calendarEvent, resizeEvent) {\r\n        const newEventDates = {\r\n            start: calendarEvent.start,\r\n            end: getDefaultEventEnd(this.dateAdapter, calendarEvent, this.minimumEventHeight),\r\n        };\r\n        const { end, ...eventWithoutEnd } = calendarEvent;\r\n        const smallestResizes = {\r\n            start: this.dateAdapter.addMinutes(newEventDates.end, this.minimumEventHeight * -1),\r\n            end: getDefaultEventEnd(this.dateAdapter, eventWithoutEnd, this.minimumEventHeight),\r\n        };\r\n        const modifier = this.rtl ? -1 : 1;\r\n        if (typeof resizeEvent.edges.left !== 'undefined') {\r\n            const daysDiff = Math.round(+resizeEvent.edges.left / this.dayColumnWidth) * modifier;\r\n            const newStart = addDaysWithExclusions(this.dateAdapter, newEventDates.start, daysDiff, this.excludeDays);\r\n            if (newStart < smallestResizes.start) {\r\n                newEventDates.start = newStart;\r\n            }\r\n            else {\r\n                newEventDates.start = smallestResizes.start;\r\n            }\r\n        }\r\n        else if (typeof resizeEvent.edges.right !== 'undefined') {\r\n            const daysDiff = Math.round(+resizeEvent.edges.right / this.dayColumnWidth) * modifier;\r\n            const newEnd = addDaysWithExclusions(this.dateAdapter, newEventDates.end, daysDiff, this.excludeDays);\r\n            if (newEnd > smallestResizes.end) {\r\n                newEventDates.end = newEnd;\r\n            }\r\n            else {\r\n                newEventDates.end = smallestResizes.end;\r\n            }\r\n        }\r\n        if (typeof resizeEvent.edges.top !== 'undefined') {\r\n            const minutesMoved = getMinutesMoved(resizeEvent.edges.top, this.hourSegments, this.hourSegmentHeight, this.eventSnapSize, this.hourDuration);\r\n            const newStart = this.dateAdapter.addMinutes(newEventDates.start, minutesMoved);\r\n            if (newStart < smallestResizes.start) {\r\n                newEventDates.start = newStart;\r\n            }\r\n            else {\r\n                newEventDates.start = smallestResizes.start;\r\n            }\r\n        }\r\n        else if (typeof resizeEvent.edges.bottom !== 'undefined') {\r\n            const minutesMoved = getMinutesMoved(resizeEvent.edges.bottom, this.hourSegments, this.hourSegmentHeight, this.eventSnapSize, this.hourDuration);\r\n            const newEnd = this.dateAdapter.addMinutes(newEventDates.end, minutesMoved);\r\n            if (newEnd > smallestResizes.end) {\r\n                newEventDates.end = newEnd;\r\n            }\r\n            else {\r\n                newEventDates.end = smallestResizes.end;\r\n            }\r\n        }\r\n        return newEventDates;\r\n    }\r\n    resizeStarted(eventsContainer, event, dayWidth) {\r\n        this.dayColumnWidth = this.getDayColumnWidth(eventsContainer);\r\n        const resizeHelper = new CalendarResizeHelper(eventsContainer, dayWidth, this.rtl);\r\n        this.validateResize = ({ rectangle, edges }) => {\r\n            const isWithinBoundary = resizeHelper.validateResize({\r\n                rectangle: { ...rectangle },\r\n                edges,\r\n            });\r\n            if (isWithinBoundary && this.validateEventTimesChanged) {\r\n                let newEventDates;\r\n                if (!dayWidth) {\r\n                    newEventDates = this.getTimeEventResizedDates(event.event, {\r\n                        rectangle,\r\n                        edges,\r\n                    });\r\n                }\r\n                else {\r\n                    const modifier = this.rtl ? -1 : 1;\r\n                    if (typeof edges.left !== 'undefined') {\r\n                        const diff = Math.round(+edges.left / dayWidth) * modifier;\r\n                        newEventDates = this.getAllDayEventResizedDates(event.event, diff, !this.rtl);\r\n                    }\r\n                    else {\r\n                        const diff = Math.round(+edges.right / dayWidth) * modifier;\r\n                        newEventDates = this.getAllDayEventResizedDates(event.event, diff, this.rtl);\r\n                    }\r\n                }\r\n                return this.validateEventTimesChanged({\r\n                    type: CalendarEventTimesChangedEventType.Resize,\r\n                    event: event.event,\r\n                    newStart: newEventDates.start,\r\n                    newEnd: newEventDates.end,\r\n                });\r\n            }\r\n            return isWithinBoundary;\r\n        };\r\n        this.cdr.markForCheck();\r\n    }\r\n    /**\r\n     * @hidden\r\n     */\r\n    getAllDayEventResizedDates(event, daysDiff, beforeStart) {\r\n        let start = event.start;\r\n        let end = event.end || event.start;\r\n        if (beforeStart) {\r\n            start = addDaysWithExclusions(this.dateAdapter, start, daysDiff, this.excludeDays);\r\n        }\r\n        else {\r\n            end = addDaysWithExclusions(this.dateAdapter, end, daysDiff, this.excludeDays);\r\n        }\r\n        return { start, end };\r\n    }\r\n}\r\nCalendarWeekViewComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarWeekViewComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: CalendarUtils }, { token: LOCALE_ID }, { token: DateAdapter }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });\r\nCalendarWeekViewComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.0.4\", type: CalendarWeekViewComponent, selector: \"mwl-calendar-week-view\", inputs: { viewDate: \"viewDate\", events: \"events\", excludeDays: \"excludeDays\", refresh: \"refresh\", locale: \"locale\", tooltipPlacement: \"tooltipPlacement\", tooltipTemplate: \"tooltipTemplate\", tooltipAppendToBody: \"tooltipAppendToBody\", tooltipDelay: \"tooltipDelay\", weekStartsOn: \"weekStartsOn\", headerTemplate: \"headerTemplate\", eventTemplate: \"eventTemplate\", eventTitleTemplate: \"eventTitleTemplate\", eventActionsTemplate: \"eventActionsTemplate\", precision: \"precision\", weekendDays: \"weekendDays\", snapDraggedEvents: \"snapDraggedEvents\", hourSegments: \"hourSegments\", hourDuration: \"hourDuration\", hourSegmentHeight: \"hourSegmentHeight\", minimumEventHeight: \"minimumEventHeight\", dayStartHour: \"dayStartHour\", dayStartMinute: \"dayStartMinute\", dayEndHour: \"dayEndHour\", dayEndMinute: \"dayEndMinute\", hourSegmentTemplate: \"hourSegmentTemplate\", eventSnapSize: \"eventSnapSize\", allDayEventsLabelTemplate: \"allDayEventsLabelTemplate\", daysInWeek: \"daysInWeek\", currentTimeMarkerTemplate: \"currentTimeMarkerTemplate\", validateEventTimesChanged: \"validateEventTimesChanged\", resizeCursors: \"resizeCursors\" }, outputs: { dayHeaderClicked: \"dayHeaderClicked\", eventClicked: \"eventClicked\", eventTimesChanged: \"eventTimesChanged\", beforeViewRender: \"beforeViewRender\", hourSegmentClicked: \"hourSegmentClicked\" }, usesOnChanges: true, ngImport: i0, template: `\r\n    <div class=\"cal-week-view\" role=\"grid\">\r\n      <mwl-calendar-week-view-header\r\n        [days]=\"days\"\r\n        [locale]=\"locale\"\r\n        [customTemplate]=\"headerTemplate\"\r\n        (dayHeaderClicked)=\"dayHeaderClicked.emit($event)\"\r\n        (eventDropped)=\"\r\n          eventDropped({ dropData: $event }, $event.newStart, true)\r\n        \"\r\n        (dragEnter)=\"dateDragEnter($event.date)\"\r\n      >\r\n      </mwl-calendar-week-view-header>\r\n      <div\r\n        class=\"cal-all-day-events\"\r\n        #allDayEventsContainer\r\n        *ngIf=\"view.allDayEventRows.length > 0\"\r\n        mwlDroppable\r\n        (dragEnter)=\"dragEnter('allDay')\"\r\n        (dragLeave)=\"dragLeave('allDay')\"\r\n      >\r\n        <div class=\"cal-day-columns\">\r\n          <div\r\n            class=\"cal-time-label-column\"\r\n            [ngTemplateOutlet]=\"allDayEventsLabelTemplate\"\r\n          ></div>\r\n          <div\r\n            class=\"cal-day-column\"\r\n            *ngFor=\"let day of days; trackBy: trackByWeekDayHeaderDate\"\r\n            mwlDroppable\r\n            dragOverClass=\"cal-drag-over\"\r\n            (drop)=\"eventDropped($event, day.date, true)\"\r\n            (dragEnter)=\"dateDragEnter(day.date)\"\r\n          ></div>\r\n        </div>\r\n        <div\r\n          *ngFor=\"let eventRow of view.allDayEventRows; trackBy: trackById\"\r\n          #eventRowContainer\r\n          class=\"cal-events-row\"\r\n        >\r\n          <div\r\n            *ngFor=\"\r\n              let allDayEvent of eventRow.row;\r\n              trackBy: trackByWeekAllDayEvent\r\n            \"\r\n            #event\r\n            class=\"cal-event-container\"\r\n            [class.cal-draggable]=\"\r\n              allDayEvent.event.draggable && allDayEventResizes.size === 0\r\n            \"\r\n            [class.cal-starts-within-week]=\"!allDayEvent.startsBeforeWeek\"\r\n            [class.cal-ends-within-week]=\"!allDayEvent.endsAfterWeek\"\r\n            [ngClass]=\"allDayEvent.event?.cssClass\"\r\n            [style.width.%]=\"(100 / days.length) * allDayEvent.span\"\r\n            [style.marginLeft.%]=\"\r\n              rtl ? null : (100 / days.length) * allDayEvent.offset\r\n            \"\r\n            [style.marginRight.%]=\"\r\n              rtl ? (100 / days.length) * allDayEvent.offset : null\r\n            \"\r\n            mwlResizable\r\n            [resizeCursors]=\"resizeCursors\"\r\n            [resizeSnapGrid]=\"{ left: dayColumnWidth, right: dayColumnWidth }\"\r\n            [validateResize]=\"validateResize\"\r\n            (resizeStart)=\"\r\n              allDayEventResizeStarted(eventRowContainer, allDayEvent, $event)\r\n            \"\r\n            (resizing)=\"\r\n              allDayEventResizing(allDayEvent, $event, dayColumnWidth)\r\n            \"\r\n            (resizeEnd)=\"allDayEventResizeEnded(allDayEvent)\"\r\n            mwlDraggable\r\n            dragActiveClass=\"cal-drag-active\"\r\n            [dropData]=\"{ event: allDayEvent.event, calendarId: calendarId }\"\r\n            [dragAxis]=\"{\r\n              x: allDayEvent.event.draggable && allDayEventResizes.size === 0,\r\n              y:\r\n                !snapDraggedEvents &&\r\n                allDayEvent.event.draggable &&\r\n                allDayEventResizes.size === 0\r\n            }\"\r\n            [dragSnapGrid]=\"snapDraggedEvents ? { x: dayColumnWidth } : {}\"\r\n            [validateDrag]=\"validateDrag\"\r\n            [touchStartLongPress]=\"{ delay: 300, delta: 30 }\"\r\n            (dragStart)=\"\r\n              dragStarted(eventRowContainer, event, allDayEvent, false)\r\n            \"\r\n            (dragging)=\"allDayEventDragMove()\"\r\n            (dragEnd)=\"dragEnded(allDayEvent, $event, dayColumnWidth)\"\r\n          >\r\n            <div\r\n              class=\"cal-resize-handle cal-resize-handle-before-start\"\r\n              *ngIf=\"\r\n                allDayEvent.event?.resizable?.beforeStart &&\r\n                !allDayEvent.startsBeforeWeek\r\n              \"\r\n              mwlResizeHandle\r\n              [resizeEdges]=\"{ left: true }\"\r\n            ></div>\r\n            <mwl-calendar-week-view-event\r\n              [locale]=\"locale\"\r\n              [weekEvent]=\"allDayEvent\"\r\n              [tooltipPlacement]=\"tooltipPlacement\"\r\n              [tooltipTemplate]=\"tooltipTemplate\"\r\n              [tooltipAppendToBody]=\"tooltipAppendToBody\"\r\n              [tooltipDelay]=\"tooltipDelay\"\r\n              [customTemplate]=\"eventTemplate\"\r\n              [eventTitleTemplate]=\"eventTitleTemplate\"\r\n              [eventActionsTemplate]=\"eventActionsTemplate\"\r\n              [daysInWeek]=\"daysInWeek\"\r\n              (eventClicked)=\"\r\n                eventClicked.emit({\r\n                  event: allDayEvent.event,\r\n                  sourceEvent: $event.sourceEvent\r\n                })\r\n              \"\r\n            >\r\n            </mwl-calendar-week-view-event>\r\n            <div\r\n              class=\"cal-resize-handle cal-resize-handle-after-end\"\r\n              *ngIf=\"\r\n                allDayEvent.event?.resizable?.afterEnd &&\r\n                !allDayEvent.endsAfterWeek\r\n              \"\r\n              mwlResizeHandle\r\n              [resizeEdges]=\"{ right: true }\"\r\n            ></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div\r\n        class=\"cal-time-events\"\r\n        mwlDroppable\r\n        (dragEnter)=\"dragEnter('time')\"\r\n        (dragLeave)=\"dragLeave('time')\"\r\n      >\r\n        <div\r\n          class=\"cal-time-label-column\"\r\n          *ngIf=\"view.hourColumns.length > 0 && daysInWeek !== 1\"\r\n        >\r\n          <div\r\n            *ngFor=\"\r\n              let hour of view.hourColumns[0].hours;\r\n              trackBy: trackByHour;\r\n              let odd = odd\r\n            \"\r\n            class=\"cal-hour\"\r\n            [class.cal-hour-odd]=\"odd\"\r\n          >\r\n            <mwl-calendar-week-view-hour-segment\r\n              *ngFor=\"let segment of hour.segments; trackBy: trackByHourSegment\"\r\n              [style.height.px]=\"hourSegmentHeight\"\r\n              [segment]=\"segment\"\r\n              [segmentHeight]=\"hourSegmentHeight\"\r\n              [locale]=\"locale\"\r\n              [customTemplate]=\"hourSegmentTemplate\"\r\n              [isTimeLabel]=\"true\"\r\n              [daysInWeek]=\"daysInWeek\"\r\n            >\r\n            </mwl-calendar-week-view-hour-segment>\r\n          </div>\r\n        </div>\r\n        <div\r\n          class=\"cal-day-columns\"\r\n          [class.cal-resize-active]=\"timeEventResizes.size > 0\"\r\n          #dayColumns\r\n        >\r\n          <div\r\n            class=\"cal-day-column\"\r\n            *ngFor=\"let column of view.hourColumns; trackBy: trackByHourColumn\"\r\n          >\r\n            <mwl-calendar-week-view-current-time-marker\r\n              [columnDate]=\"column.date\"\r\n              [dayStartHour]=\"dayStartHour\"\r\n              [dayStartMinute]=\"dayStartMinute\"\r\n              [dayEndHour]=\"dayEndHour\"\r\n              [dayEndMinute]=\"dayEndMinute\"\r\n              [hourSegments]=\"hourSegments\"\r\n              [hourDuration]=\"hourDuration\"\r\n              [hourSegmentHeight]=\"hourSegmentHeight\"\r\n              [customTemplate]=\"currentTimeMarkerTemplate\"\r\n            ></mwl-calendar-week-view-current-time-marker>\r\n            <div class=\"cal-events-container\">\r\n              <div\r\n                *ngFor=\"\r\n                  let timeEvent of column.events;\r\n                  trackBy: trackByWeekTimeEvent\r\n                \"\r\n                #event\r\n                class=\"cal-event-container\"\r\n                [class.cal-draggable]=\"\r\n                  timeEvent.event.draggable && timeEventResizes.size === 0\r\n                \"\r\n                [class.cal-starts-within-day]=\"!timeEvent.startsBeforeDay\"\r\n                [class.cal-ends-within-day]=\"!timeEvent.endsAfterDay\"\r\n                [ngClass]=\"timeEvent.event.cssClass\"\r\n                [hidden]=\"timeEvent.height === 0 && timeEvent.width === 0\"\r\n                [style.top.px]=\"timeEvent.top\"\r\n                [style.height.px]=\"timeEvent.height\"\r\n                [style.left.%]=\"timeEvent.left\"\r\n                [style.width.%]=\"timeEvent.width\"\r\n                mwlResizable\r\n                [resizeCursors]=\"resizeCursors\"\r\n                [resizeSnapGrid]=\"{\r\n                  left: dayColumnWidth,\r\n                  right: dayColumnWidth,\r\n                  top: eventSnapSize || hourSegmentHeight,\r\n                  bottom: eventSnapSize || hourSegmentHeight\r\n                }\"\r\n                [validateResize]=\"validateResize\"\r\n                [allowNegativeResizes]=\"true\"\r\n                (resizeStart)=\"\r\n                  timeEventResizeStarted(dayColumns, timeEvent, $event)\r\n                \"\r\n                (resizing)=\"timeEventResizing(timeEvent, $event)\"\r\n                (resizeEnd)=\"timeEventResizeEnded(timeEvent)\"\r\n                mwlDraggable\r\n                dragActiveClass=\"cal-drag-active\"\r\n                [dropData]=\"{ event: timeEvent.event, calendarId: calendarId }\"\r\n                [dragAxis]=\"{\r\n                  x: timeEvent.event.draggable && timeEventResizes.size === 0,\r\n                  y: timeEvent.event.draggable && timeEventResizes.size === 0\r\n                }\"\r\n                [dragSnapGrid]=\"\r\n                  snapDraggedEvents\r\n                    ? {\r\n                        x: dayColumnWidth,\r\n                        y: eventSnapSize || hourSegmentHeight\r\n                      }\r\n                    : {}\r\n                \"\r\n                [touchStartLongPress]=\"{ delay: 300, delta: 30 }\"\r\n                [ghostDragEnabled]=\"!snapDraggedEvents\"\r\n                [ghostElementTemplate]=\"weekEventTemplate\"\r\n                [validateDrag]=\"validateDrag\"\r\n                (dragStart)=\"dragStarted(dayColumns, event, timeEvent, true)\"\r\n                (dragging)=\"dragMove(timeEvent, $event)\"\r\n                (dragEnd)=\"dragEnded(timeEvent, $event, dayColumnWidth, true)\"\r\n              >\r\n                <div\r\n                  class=\"cal-resize-handle cal-resize-handle-before-start\"\r\n                  *ngIf=\"\r\n                    timeEvent.event?.resizable?.beforeStart &&\r\n                    !timeEvent.startsBeforeDay\r\n                  \"\r\n                  mwlResizeHandle\r\n                  [resizeEdges]=\"{\r\n                    left: true,\r\n                    top: true\r\n                  }\"\r\n                ></div>\r\n                <ng-template\r\n                  [ngTemplateOutlet]=\"weekEventTemplate\"\r\n                ></ng-template>\r\n                <ng-template #weekEventTemplate>\r\n                  <mwl-calendar-week-view-event\r\n                    [locale]=\"locale\"\r\n                    [weekEvent]=\"timeEvent\"\r\n                    [tooltipPlacement]=\"tooltipPlacement\"\r\n                    [tooltipTemplate]=\"tooltipTemplate\"\r\n                    [tooltipAppendToBody]=\"tooltipAppendToBody\"\r\n                    [tooltipDisabled]=\"dragActive || timeEventResizes.size > 0\"\r\n                    [tooltipDelay]=\"tooltipDelay\"\r\n                    [customTemplate]=\"eventTemplate\"\r\n                    [eventTitleTemplate]=\"eventTitleTemplate\"\r\n                    [eventActionsTemplate]=\"eventActionsTemplate\"\r\n                    [column]=\"column\"\r\n                    [daysInWeek]=\"daysInWeek\"\r\n                    (eventClicked)=\"\r\n                      eventClicked.emit({\r\n                        event: timeEvent.event,\r\n                        sourceEvent: $event.sourceEvent\r\n                      })\r\n                    \"\r\n                  >\r\n                  </mwl-calendar-week-view-event>\r\n                </ng-template>\r\n                <div\r\n                  class=\"cal-resize-handle cal-resize-handle-after-end\"\r\n                  *ngIf=\"\r\n                    timeEvent.event?.resizable?.afterEnd &&\r\n                    !timeEvent.endsAfterDay\r\n                  \"\r\n                  mwlResizeHandle\r\n                  [resizeEdges]=\"{\r\n                    right: true,\r\n                    bottom: true\r\n                  }\"\r\n                ></div>\r\n              </div>\r\n            </div>\r\n\r\n            <div\r\n              *ngFor=\"\r\n                let hour of column.hours;\r\n                trackBy: trackByHour;\r\n                let odd = odd\r\n              \"\r\n              class=\"cal-hour\"\r\n              [class.cal-hour-odd]=\"odd\"\r\n            >\r\n              <mwl-calendar-week-view-hour-segment\r\n                *ngFor=\"\r\n                  let segment of hour.segments;\r\n                  trackBy: trackByHourSegment\r\n                \"\r\n                [style.height.px]=\"hourSegmentHeight\"\r\n                [segment]=\"segment\"\r\n                [segmentHeight]=\"hourSegmentHeight\"\r\n                [locale]=\"locale\"\r\n                [customTemplate]=\"hourSegmentTemplate\"\r\n                [daysInWeek]=\"daysInWeek\"\r\n                (mwlClick)=\"\r\n                  hourSegmentClicked.emit({\r\n                    date: segment.date,\r\n                    sourceEvent: $event\r\n                  })\r\n                \"\r\n                [clickListenerDisabled]=\"\r\n                  hourSegmentClicked.observers.length === 0\r\n                \"\r\n                mwlDroppable\r\n                [dragOverClass]=\"\r\n                  !dragActive || !snapDraggedEvents ? 'cal-drag-over' : null\r\n                \"\r\n                dragActiveClass=\"cal-drag-active\"\r\n                (drop)=\"eventDropped($event, segment.date, false)\"\r\n                (dragEnter)=\"dateDragEnter(segment.date)\"\r\n                [isTimeLabel]=\"daysInWeek === 1\"\r\n              >\r\n              </mwl-calendar-week-view-hour-segment>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  `, isInline: true, dependencies: [{ kind: \"directive\", type: i1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i1.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"directive\", type: i4.ResizableDirective, selector: \"[mwlResizable]\", inputs: [\"validateResize\", \"enableGhostResize\", \"resizeSnapGrid\", \"resizeCursors\", \"ghostElementPositioning\", \"allowNegativeResizes\", \"mouseMoveThrottleMS\"], outputs: [\"resizeStart\", \"resizing\", \"resizeEnd\"], exportAs: [\"mwlResizable\"] }, { kind: \"directive\", type: i4.ResizeHandleDirective, selector: \"[mwlResizeHandle]\", inputs: [\"resizeEdges\", \"resizableContainer\"] }, { kind: \"directive\", type: i2.DraggableDirective, selector: \"[mwlDraggable]\", inputs: [\"dropData\", \"dragAxis\", \"dragSnapGrid\", \"ghostDragEnabled\", \"showOriginalElementWhileDragging\", \"validateDrag\", \"dragCursor\", \"dragActiveClass\", \"ghostElementAppendTo\", \"ghostElementTemplate\", \"touchStartLongPress\", \"autoScroll\"], outputs: [\"dragPointerDown\", \"dragStart\", \"ghostElementCreated\", \"dragging\", \"dragEnd\"] }, { kind: \"directive\", type: i2.DroppableDirective, selector: \"[mwlDroppable]\", inputs: [\"dragOverClass\", \"dragActiveClass\", \"validateDrop\"], outputs: [\"dragEnter\", \"dragLeave\", \"dragOver\", \"drop\"] }, { kind: \"directive\", type: ClickDirective, selector: \"[mwlClick]\", inputs: [\"clickListenerDisabled\"], outputs: [\"mwlClick\"] }, { kind: \"component\", type: CalendarWeekViewHeaderComponent, selector: \"mwl-calendar-week-view-header\", inputs: [\"days\", \"locale\", \"customTemplate\"], outputs: [\"dayHeaderClicked\", \"eventDropped\", \"dragEnter\"] }, { kind: \"component\", type: CalendarWeekViewEventComponent, selector: \"mwl-calendar-week-view-event\", inputs: [\"locale\", \"weekEvent\", \"tooltipPlacement\", \"tooltipAppendToBody\", \"tooltipDisabled\", \"tooltipDelay\", \"customTemplate\", \"eventTitleTemplate\", \"eventActionsTemplate\", \"tooltipTemplate\", \"column\", \"daysInWeek\"], outputs: [\"eventClicked\"] }, { kind: \"component\", type: CalendarWeekViewHourSegmentComponent, selector: \"mwl-calendar-week-view-hour-segment\", inputs: [\"segment\", \"segmentHeight\", \"locale\", \"isTimeLabel\", \"daysInWeek\", \"customTemplate\"] }, { kind: \"component\", type: CalendarWeekViewCurrentTimeMarkerComponent, selector: \"mwl-calendar-week-view-current-time-marker\", inputs: [\"columnDate\", \"dayStartHour\", \"dayStartMinute\", \"dayEndHour\", \"dayEndMinute\", \"hourSegments\", \"hourDuration\", \"hourSegmentHeight\", \"customTemplate\"] }] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarWeekViewComponent, decorators: [{\r\n            type: Component,\r\n            args: [{\r\n                    selector: 'mwl-calendar-week-view',\r\n                    template: `\r\n    <div class=\"cal-week-view\" role=\"grid\">\r\n      <mwl-calendar-week-view-header\r\n        [days]=\"days\"\r\n        [locale]=\"locale\"\r\n        [customTemplate]=\"headerTemplate\"\r\n        (dayHeaderClicked)=\"dayHeaderClicked.emit($event)\"\r\n        (eventDropped)=\"\r\n          eventDropped({ dropData: $event }, $event.newStart, true)\r\n        \"\r\n        (dragEnter)=\"dateDragEnter($event.date)\"\r\n      >\r\n      </mwl-calendar-week-view-header>\r\n      <div\r\n        class=\"cal-all-day-events\"\r\n        #allDayEventsContainer\r\n        *ngIf=\"view.allDayEventRows.length > 0\"\r\n        mwlDroppable\r\n        (dragEnter)=\"dragEnter('allDay')\"\r\n        (dragLeave)=\"dragLeave('allDay')\"\r\n      >\r\n        <div class=\"cal-day-columns\">\r\n          <div\r\n            class=\"cal-time-label-column\"\r\n            [ngTemplateOutlet]=\"allDayEventsLabelTemplate\"\r\n          ></div>\r\n          <div\r\n            class=\"cal-day-column\"\r\n            *ngFor=\"let day of days; trackBy: trackByWeekDayHeaderDate\"\r\n            mwlDroppable\r\n            dragOverClass=\"cal-drag-over\"\r\n            (drop)=\"eventDropped($event, day.date, true)\"\r\n            (dragEnter)=\"dateDragEnter(day.date)\"\r\n          ></div>\r\n        </div>\r\n        <div\r\n          *ngFor=\"let eventRow of view.allDayEventRows; trackBy: trackById\"\r\n          #eventRowContainer\r\n          class=\"cal-events-row\"\r\n        >\r\n          <div\r\n            *ngFor=\"\r\n              let allDayEvent of eventRow.row;\r\n              trackBy: trackByWeekAllDayEvent\r\n            \"\r\n            #event\r\n            class=\"cal-event-container\"\r\n            [class.cal-draggable]=\"\r\n              allDayEvent.event.draggable && allDayEventResizes.size === 0\r\n            \"\r\n            [class.cal-starts-within-week]=\"!allDayEvent.startsBeforeWeek\"\r\n            [class.cal-ends-within-week]=\"!allDayEvent.endsAfterWeek\"\r\n            [ngClass]=\"allDayEvent.event?.cssClass\"\r\n            [style.width.%]=\"(100 / days.length) * allDayEvent.span\"\r\n            [style.marginLeft.%]=\"\r\n              rtl ? null : (100 / days.length) * allDayEvent.offset\r\n            \"\r\n            [style.marginRight.%]=\"\r\n              rtl ? (100 / days.length) * allDayEvent.offset : null\r\n            \"\r\n            mwlResizable\r\n            [resizeCursors]=\"resizeCursors\"\r\n            [resizeSnapGrid]=\"{ left: dayColumnWidth, right: dayColumnWidth }\"\r\n            [validateResize]=\"validateResize\"\r\n            (resizeStart)=\"\r\n              allDayEventResizeStarted(eventRowContainer, allDayEvent, $event)\r\n            \"\r\n            (resizing)=\"\r\n              allDayEventResizing(allDayEvent, $event, dayColumnWidth)\r\n            \"\r\n            (resizeEnd)=\"allDayEventResizeEnded(allDayEvent)\"\r\n            mwlDraggable\r\n            dragActiveClass=\"cal-drag-active\"\r\n            [dropData]=\"{ event: allDayEvent.event, calendarId: calendarId }\"\r\n            [dragAxis]=\"{\r\n              x: allDayEvent.event.draggable && allDayEventResizes.size === 0,\r\n              y:\r\n                !snapDraggedEvents &&\r\n                allDayEvent.event.draggable &&\r\n                allDayEventResizes.size === 0\r\n            }\"\r\n            [dragSnapGrid]=\"snapDraggedEvents ? { x: dayColumnWidth } : {}\"\r\n            [validateDrag]=\"validateDrag\"\r\n            [touchStartLongPress]=\"{ delay: 300, delta: 30 }\"\r\n            (dragStart)=\"\r\n              dragStarted(eventRowContainer, event, allDayEvent, false)\r\n            \"\r\n            (dragging)=\"allDayEventDragMove()\"\r\n            (dragEnd)=\"dragEnded(allDayEvent, $event, dayColumnWidth)\"\r\n          >\r\n            <div\r\n              class=\"cal-resize-handle cal-resize-handle-before-start\"\r\n              *ngIf=\"\r\n                allDayEvent.event?.resizable?.beforeStart &&\r\n                !allDayEvent.startsBeforeWeek\r\n              \"\r\n              mwlResizeHandle\r\n              [resizeEdges]=\"{ left: true }\"\r\n            ></div>\r\n            <mwl-calendar-week-view-event\r\n              [locale]=\"locale\"\r\n              [weekEvent]=\"allDayEvent\"\r\n              [tooltipPlacement]=\"tooltipPlacement\"\r\n              [tooltipTemplate]=\"tooltipTemplate\"\r\n              [tooltipAppendToBody]=\"tooltipAppendToBody\"\r\n              [tooltipDelay]=\"tooltipDelay\"\r\n              [customTemplate]=\"eventTemplate\"\r\n              [eventTitleTemplate]=\"eventTitleTemplate\"\r\n              [eventActionsTemplate]=\"eventActionsTemplate\"\r\n              [daysInWeek]=\"daysInWeek\"\r\n              (eventClicked)=\"\r\n                eventClicked.emit({\r\n                  event: allDayEvent.event,\r\n                  sourceEvent: $event.sourceEvent\r\n                })\r\n              \"\r\n            >\r\n            </mwl-calendar-week-view-event>\r\n            <div\r\n              class=\"cal-resize-handle cal-resize-handle-after-end\"\r\n              *ngIf=\"\r\n                allDayEvent.event?.resizable?.afterEnd &&\r\n                !allDayEvent.endsAfterWeek\r\n              \"\r\n              mwlResizeHandle\r\n              [resizeEdges]=\"{ right: true }\"\r\n            ></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div\r\n        class=\"cal-time-events\"\r\n        mwlDroppable\r\n        (dragEnter)=\"dragEnter('time')\"\r\n        (dragLeave)=\"dragLeave('time')\"\r\n      >\r\n        <div\r\n          class=\"cal-time-label-column\"\r\n          *ngIf=\"view.hourColumns.length > 0 && daysInWeek !== 1\"\r\n        >\r\n          <div\r\n            *ngFor=\"\r\n              let hour of view.hourColumns[0].hours;\r\n              trackBy: trackByHour;\r\n              let odd = odd\r\n            \"\r\n            class=\"cal-hour\"\r\n            [class.cal-hour-odd]=\"odd\"\r\n          >\r\n            <mwl-calendar-week-view-hour-segment\r\n              *ngFor=\"let segment of hour.segments; trackBy: trackByHourSegment\"\r\n              [style.height.px]=\"hourSegmentHeight\"\r\n              [segment]=\"segment\"\r\n              [segmentHeight]=\"hourSegmentHeight\"\r\n              [locale]=\"locale\"\r\n              [customTemplate]=\"hourSegmentTemplate\"\r\n              [isTimeLabel]=\"true\"\r\n              [daysInWeek]=\"daysInWeek\"\r\n            >\r\n            </mwl-calendar-week-view-hour-segment>\r\n          </div>\r\n        </div>\r\n        <div\r\n          class=\"cal-day-columns\"\r\n          [class.cal-resize-active]=\"timeEventResizes.size > 0\"\r\n          #dayColumns\r\n        >\r\n          <div\r\n            class=\"cal-day-column\"\r\n            *ngFor=\"let column of view.hourColumns; trackBy: trackByHourColumn\"\r\n          >\r\n            <mwl-calendar-week-view-current-time-marker\r\n              [columnDate]=\"column.date\"\r\n              [dayStartHour]=\"dayStartHour\"\r\n              [dayStartMinute]=\"dayStartMinute\"\r\n              [dayEndHour]=\"dayEndHour\"\r\n              [dayEndMinute]=\"dayEndMinute\"\r\n              [hourSegments]=\"hourSegments\"\r\n              [hourDuration]=\"hourDuration\"\r\n              [hourSegmentHeight]=\"hourSegmentHeight\"\r\n              [customTemplate]=\"currentTimeMarkerTemplate\"\r\n            ></mwl-calendar-week-view-current-time-marker>\r\n            <div class=\"cal-events-container\">\r\n              <div\r\n                *ngFor=\"\r\n                  let timeEvent of column.events;\r\n                  trackBy: trackByWeekTimeEvent\r\n                \"\r\n                #event\r\n                class=\"cal-event-container\"\r\n                [class.cal-draggable]=\"\r\n                  timeEvent.event.draggable && timeEventResizes.size === 0\r\n                \"\r\n                [class.cal-starts-within-day]=\"!timeEvent.startsBeforeDay\"\r\n                [class.cal-ends-within-day]=\"!timeEvent.endsAfterDay\"\r\n                [ngClass]=\"timeEvent.event.cssClass\"\r\n                [hidden]=\"timeEvent.height === 0 && timeEvent.width === 0\"\r\n                [style.top.px]=\"timeEvent.top\"\r\n                [style.height.px]=\"timeEvent.height\"\r\n                [style.left.%]=\"timeEvent.left\"\r\n                [style.width.%]=\"timeEvent.width\"\r\n                mwlResizable\r\n                [resizeCursors]=\"resizeCursors\"\r\n                [resizeSnapGrid]=\"{\r\n                  left: dayColumnWidth,\r\n                  right: dayColumnWidth,\r\n                  top: eventSnapSize || hourSegmentHeight,\r\n                  bottom: eventSnapSize || hourSegmentHeight\r\n                }\"\r\n                [validateResize]=\"validateResize\"\r\n                [allowNegativeResizes]=\"true\"\r\n                (resizeStart)=\"\r\n                  timeEventResizeStarted(dayColumns, timeEvent, $event)\r\n                \"\r\n                (resizing)=\"timeEventResizing(timeEvent, $event)\"\r\n                (resizeEnd)=\"timeEventResizeEnded(timeEvent)\"\r\n                mwlDraggable\r\n                dragActiveClass=\"cal-drag-active\"\r\n                [dropData]=\"{ event: timeEvent.event, calendarId: calendarId }\"\r\n                [dragAxis]=\"{\r\n                  x: timeEvent.event.draggable && timeEventResizes.size === 0,\r\n                  y: timeEvent.event.draggable && timeEventResizes.size === 0\r\n                }\"\r\n                [dragSnapGrid]=\"\r\n                  snapDraggedEvents\r\n                    ? {\r\n                        x: dayColumnWidth,\r\n                        y: eventSnapSize || hourSegmentHeight\r\n                      }\r\n                    : {}\r\n                \"\r\n                [touchStartLongPress]=\"{ delay: 300, delta: 30 }\"\r\n                [ghostDragEnabled]=\"!snapDraggedEvents\"\r\n                [ghostElementTemplate]=\"weekEventTemplate\"\r\n                [validateDrag]=\"validateDrag\"\r\n                (dragStart)=\"dragStarted(dayColumns, event, timeEvent, true)\"\r\n                (dragging)=\"dragMove(timeEvent, $event)\"\r\n                (dragEnd)=\"dragEnded(timeEvent, $event, dayColumnWidth, true)\"\r\n              >\r\n                <div\r\n                  class=\"cal-resize-handle cal-resize-handle-before-start\"\r\n                  *ngIf=\"\r\n                    timeEvent.event?.resizable?.beforeStart &&\r\n                    !timeEvent.startsBeforeDay\r\n                  \"\r\n                  mwlResizeHandle\r\n                  [resizeEdges]=\"{\r\n                    left: true,\r\n                    top: true\r\n                  }\"\r\n                ></div>\r\n                <ng-template\r\n                  [ngTemplateOutlet]=\"weekEventTemplate\"\r\n                ></ng-template>\r\n                <ng-template #weekEventTemplate>\r\n                  <mwl-calendar-week-view-event\r\n                    [locale]=\"locale\"\r\n                    [weekEvent]=\"timeEvent\"\r\n                    [tooltipPlacement]=\"tooltipPlacement\"\r\n                    [tooltipTemplate]=\"tooltipTemplate\"\r\n                    [tooltipAppendToBody]=\"tooltipAppendToBody\"\r\n                    [tooltipDisabled]=\"dragActive || timeEventResizes.size > 0\"\r\n                    [tooltipDelay]=\"tooltipDelay\"\r\n                    [customTemplate]=\"eventTemplate\"\r\n                    [eventTitleTemplate]=\"eventTitleTemplate\"\r\n                    [eventActionsTemplate]=\"eventActionsTemplate\"\r\n                    [column]=\"column\"\r\n                    [daysInWeek]=\"daysInWeek\"\r\n                    (eventClicked)=\"\r\n                      eventClicked.emit({\r\n                        event: timeEvent.event,\r\n                        sourceEvent: $event.sourceEvent\r\n                      })\r\n                    \"\r\n                  >\r\n                  </mwl-calendar-week-view-event>\r\n                </ng-template>\r\n                <div\r\n                  class=\"cal-resize-handle cal-resize-handle-after-end\"\r\n                  *ngIf=\"\r\n                    timeEvent.event?.resizable?.afterEnd &&\r\n                    !timeEvent.endsAfterDay\r\n                  \"\r\n                  mwlResizeHandle\r\n                  [resizeEdges]=\"{\r\n                    right: true,\r\n                    bottom: true\r\n                  }\"\r\n                ></div>\r\n              </div>\r\n            </div>\r\n\r\n            <div\r\n              *ngFor=\"\r\n                let hour of column.hours;\r\n                trackBy: trackByHour;\r\n                let odd = odd\r\n              \"\r\n              class=\"cal-hour\"\r\n              [class.cal-hour-odd]=\"odd\"\r\n            >\r\n              <mwl-calendar-week-view-hour-segment\r\n                *ngFor=\"\r\n                  let segment of hour.segments;\r\n                  trackBy: trackByHourSegment\r\n                \"\r\n                [style.height.px]=\"hourSegmentHeight\"\r\n                [segment]=\"segment\"\r\n                [segmentHeight]=\"hourSegmentHeight\"\r\n                [locale]=\"locale\"\r\n                [customTemplate]=\"hourSegmentTemplate\"\r\n                [daysInWeek]=\"daysInWeek\"\r\n                (mwlClick)=\"\r\n                  hourSegmentClicked.emit({\r\n                    date: segment.date,\r\n                    sourceEvent: $event\r\n                  })\r\n                \"\r\n                [clickListenerDisabled]=\"\r\n                  hourSegmentClicked.observers.length === 0\r\n                \"\r\n                mwlDroppable\r\n                [dragOverClass]=\"\r\n                  !dragActive || !snapDraggedEvents ? 'cal-drag-over' : null\r\n                \"\r\n                dragActiveClass=\"cal-drag-active\"\r\n                (drop)=\"eventDropped($event, segment.date, false)\"\r\n                (dragEnter)=\"dateDragEnter(segment.date)\"\r\n                [isTimeLabel]=\"daysInWeek === 1\"\r\n              >\r\n              </mwl-calendar-week-view-hour-segment>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  `,\r\n                }]\r\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: CalendarUtils }, { type: undefined, decorators: [{\r\n                    type: Inject,\r\n                    args: [LOCALE_ID]\r\n                }] }, { type: DateAdapter }, { type: i0.ElementRef }]; }, propDecorators: { viewDate: [{\r\n                type: Input\r\n            }], events: [{\r\n                type: Input\r\n            }], excludeDays: [{\r\n                type: Input\r\n            }], refresh: [{\r\n                type: Input\r\n            }], locale: [{\r\n                type: Input\r\n            }], tooltipPlacement: [{\r\n                type: Input\r\n            }], tooltipTemplate: [{\r\n                type: Input\r\n            }], tooltipAppendToBody: [{\r\n                type: Input\r\n            }], tooltipDelay: [{\r\n                type: Input\r\n            }], weekStartsOn: [{\r\n                type: Input\r\n            }], headerTemplate: [{\r\n                type: Input\r\n            }], eventTemplate: [{\r\n                type: Input\r\n            }], eventTitleTemplate: [{\r\n                type: Input\r\n            }], eventActionsTemplate: [{\r\n                type: Input\r\n            }], precision: [{\r\n                type: Input\r\n            }], weekendDays: [{\r\n                type: Input\r\n            }], snapDraggedEvents: [{\r\n                type: Input\r\n            }], hourSegments: [{\r\n                type: Input\r\n            }], hourDuration: [{\r\n                type: Input\r\n            }], hourSegmentHeight: [{\r\n                type: Input\r\n            }], minimumEventHeight: [{\r\n                type: Input\r\n            }], dayStartHour: [{\r\n                type: Input\r\n            }], dayStartMinute: [{\r\n                type: Input\r\n            }], dayEndHour: [{\r\n                type: Input\r\n            }], dayEndMinute: [{\r\n                type: Input\r\n            }], hourSegmentTemplate: [{\r\n                type: Input\r\n            }], eventSnapSize: [{\r\n                type: Input\r\n            }], allDayEventsLabelTemplate: [{\r\n                type: Input\r\n            }], daysInWeek: [{\r\n                type: Input\r\n            }], currentTimeMarkerTemplate: [{\r\n                type: Input\r\n            }], validateEventTimesChanged: [{\r\n                type: Input\r\n            }], resizeCursors: [{\r\n                type: Input\r\n            }], dayHeaderClicked: [{\r\n                type: Output\r\n            }], eventClicked: [{\r\n                type: Output\r\n            }], eventTimesChanged: [{\r\n                type: Output\r\n            }], beforeViewRender: [{\r\n                type: Output\r\n            }], hourSegmentClicked: [{\r\n                type: Output\r\n            }] } });","originalLength":152051,"removedExports":[],"renderedExports":["CalendarWeekViewComponent"],"renderedLength":59615},"C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\day\\calendar-day-view\\calendar-day-view.component.mjs":{"code":"/**\r\n * Shows all events on a given day. Example usage:\r\n *\r\n * ```typescript\r\n * <mwl-calendar-day-view\r\n *  [viewDate]=\"viewDate\"\r\n *  [events]=\"events\">\r\n * </mwl-calendar-day-view>\r\n * ```\r\n */\r\nclass CalendarDayViewComponent {\r\n    constructor() {\r\n        /**\r\n         * An array of events to display on view\r\n         * The schema is available here: https://github.com/mattlewis92/calendar-utils/blob/c51689985f59a271940e30bc4e2c4e1fee3fcb5c/src/calendarUtils.ts#L49-L63\r\n         */\r\n        this.events = [];\r\n        /**\r\n         * The number of segments in an hour. Must divide equally into 60.\r\n         */\r\n        this.hourSegments = 2;\r\n        /**\r\n         * The height in pixels of each hour segment\r\n         */\r\n        this.hourSegmentHeight = 30;\r\n        /**\r\n         * The minimum height in pixels of each event\r\n         */\r\n        this.minimumEventHeight = 30;\r\n        /**\r\n         * The day start hours in 24 hour time. Must be 0-23\r\n         */\r\n        this.dayStartHour = 0;\r\n        /**\r\n         * The day start minutes. Must be 0-59\r\n         */\r\n        this.dayStartMinute = 0;\r\n        /**\r\n         * The day end hours in 24 hour time. Must be 0-23\r\n         */\r\n        this.dayEndHour = 23;\r\n        /**\r\n         * The day end minutes. Must be 0-59\r\n         */\r\n        this.dayEndMinute = 59;\r\n        /**\r\n         * The placement of the event tooltip\r\n         */\r\n        this.tooltipPlacement = 'auto';\r\n        /**\r\n         * Whether to append tooltips to the body or next to the trigger element\r\n         */\r\n        this.tooltipAppendToBody = true;\r\n        /**\r\n         * The delay in milliseconds before the tooltip should be displayed. If not provided the tooltip\r\n         * will be displayed immediately.\r\n         */\r\n        this.tooltipDelay = null;\r\n        /**\r\n         * Whether to snap events to a grid when dragging\r\n         */\r\n        this.snapDraggedEvents = true;\r\n        /**\r\n         * Called when an event title is clicked\r\n         */\r\n        this.eventClicked = new EventEmitter();\r\n        /**\r\n         * Called when an hour segment is clicked\r\n         */\r\n        this.hourSegmentClicked = new EventEmitter();\r\n        /**\r\n         * Called when an event is resized or dragged and dropped\r\n         */\r\n        this.eventTimesChanged = new EventEmitter();\r\n        /**\r\n         * An output that will be called before the view is rendered for the current day.\r\n         * If you add the `cssClass` property to an hour grid segment it will add that class to the hour segment in the template\r\n         */\r\n        this.beforeViewRender = new EventEmitter();\r\n    }\r\n}\r\nCalendarDayViewComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarDayViewComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\r\nCalendarDayViewComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.0.4\", type: CalendarDayViewComponent, selector: \"mwl-calendar-day-view\", inputs: { viewDate: \"viewDate\", events: \"events\", hourSegments: \"hourSegments\", hourSegmentHeight: \"hourSegmentHeight\", hourDuration: \"hourDuration\", minimumEventHeight: \"minimumEventHeight\", dayStartHour: \"dayStartHour\", dayStartMinute: \"dayStartMinute\", dayEndHour: \"dayEndHour\", dayEndMinute: \"dayEndMinute\", refresh: \"refresh\", locale: \"locale\", eventSnapSize: \"eventSnapSize\", tooltipPlacement: \"tooltipPlacement\", tooltipTemplate: \"tooltipTemplate\", tooltipAppendToBody: \"tooltipAppendToBody\", tooltipDelay: \"tooltipDelay\", hourSegmentTemplate: \"hourSegmentTemplate\", eventTemplate: \"eventTemplate\", eventTitleTemplate: \"eventTitleTemplate\", eventActionsTemplate: \"eventActionsTemplate\", snapDraggedEvents: \"snapDraggedEvents\", allDayEventsLabelTemplate: \"allDayEventsLabelTemplate\", currentTimeMarkerTemplate: \"currentTimeMarkerTemplate\", validateEventTimesChanged: \"validateEventTimesChanged\", resizeCursors: \"resizeCursors\" }, outputs: { eventClicked: \"eventClicked\", hourSegmentClicked: \"hourSegmentClicked\", eventTimesChanged: \"eventTimesChanged\", beforeViewRender: \"beforeViewRender\" }, ngImport: i0, template: `\r\n    <mwl-calendar-week-view\r\n      class=\"cal-day-view\"\r\n      [daysInWeek]=\"1\"\r\n      [viewDate]=\"viewDate\"\r\n      [events]=\"events\"\r\n      [hourSegments]=\"hourSegments\"\r\n      [hourDuration]=\"hourDuration\"\r\n      [hourSegmentHeight]=\"hourSegmentHeight\"\r\n      [minimumEventHeight]=\"minimumEventHeight\"\r\n      [dayStartHour]=\"dayStartHour\"\r\n      [dayStartMinute]=\"dayStartMinute\"\r\n      [dayEndHour]=\"dayEndHour\"\r\n      [dayEndMinute]=\"dayEndMinute\"\r\n      [refresh]=\"refresh\"\r\n      [locale]=\"locale\"\r\n      [eventSnapSize]=\"eventSnapSize\"\r\n      [tooltipPlacement]=\"tooltipPlacement\"\r\n      [tooltipTemplate]=\"tooltipTemplate\"\r\n      [tooltipAppendToBody]=\"tooltipAppendToBody\"\r\n      [tooltipDelay]=\"tooltipDelay\"\r\n      [resizeCursors]=\"resizeCursors\"\r\n      [hourSegmentTemplate]=\"hourSegmentTemplate\"\r\n      [eventTemplate]=\"eventTemplate\"\r\n      [eventTitleTemplate]=\"eventTitleTemplate\"\r\n      [eventActionsTemplate]=\"eventActionsTemplate\"\r\n      [snapDraggedEvents]=\"snapDraggedEvents\"\r\n      [allDayEventsLabelTemplate]=\"allDayEventsLabelTemplate\"\r\n      [currentTimeMarkerTemplate]=\"currentTimeMarkerTemplate\"\r\n      [validateEventTimesChanged]=\"validateEventTimesChanged\"\r\n      (eventClicked)=\"eventClicked.emit($event)\"\r\n      (hourSegmentClicked)=\"hourSegmentClicked.emit($event)\"\r\n      (eventTimesChanged)=\"eventTimesChanged.emit($event)\"\r\n      (beforeViewRender)=\"beforeViewRender.emit($event)\"\r\n    ></mwl-calendar-week-view>\r\n  `, isInline: true, dependencies: [{ kind: \"component\", type: CalendarWeekViewComponent, selector: \"mwl-calendar-week-view\", inputs: [\"viewDate\", \"events\", \"excludeDays\", \"refresh\", \"locale\", \"tooltipPlacement\", \"tooltipTemplate\", \"tooltipAppendToBody\", \"tooltipDelay\", \"weekStartsOn\", \"headerTemplate\", \"eventTemplate\", \"eventTitleTemplate\", \"eventActionsTemplate\", \"precision\", \"weekendDays\", \"snapDraggedEvents\", \"hourSegments\", \"hourDuration\", \"hourSegmentHeight\", \"minimumEventHeight\", \"dayStartHour\", \"dayStartMinute\", \"dayEndHour\", \"dayEndMinute\", \"hourSegmentTemplate\", \"eventSnapSize\", \"allDayEventsLabelTemplate\", \"daysInWeek\", \"currentTimeMarkerTemplate\", \"validateEventTimesChanged\", \"resizeCursors\"], outputs: [\"dayHeaderClicked\", \"eventClicked\", \"eventTimesChanged\", \"beforeViewRender\", \"hourSegmentClicked\"] }] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarDayViewComponent, decorators: [{\r\n            type: Component,\r\n            args: [{\r\n                    selector: 'mwl-calendar-day-view',\r\n                    template: `\r\n    <mwl-calendar-week-view\r\n      class=\"cal-day-view\"\r\n      [daysInWeek]=\"1\"\r\n      [viewDate]=\"viewDate\"\r\n      [events]=\"events\"\r\n      [hourSegments]=\"hourSegments\"\r\n      [hourDuration]=\"hourDuration\"\r\n      [hourSegmentHeight]=\"hourSegmentHeight\"\r\n      [minimumEventHeight]=\"minimumEventHeight\"\r\n      [dayStartHour]=\"dayStartHour\"\r\n      [dayStartMinute]=\"dayStartMinute\"\r\n      [dayEndHour]=\"dayEndHour\"\r\n      [dayEndMinute]=\"dayEndMinute\"\r\n      [refresh]=\"refresh\"\r\n      [locale]=\"locale\"\r\n      [eventSnapSize]=\"eventSnapSize\"\r\n      [tooltipPlacement]=\"tooltipPlacement\"\r\n      [tooltipTemplate]=\"tooltipTemplate\"\r\n      [tooltipAppendToBody]=\"tooltipAppendToBody\"\r\n      [tooltipDelay]=\"tooltipDelay\"\r\n      [resizeCursors]=\"resizeCursors\"\r\n      [hourSegmentTemplate]=\"hourSegmentTemplate\"\r\n      [eventTemplate]=\"eventTemplate\"\r\n      [eventTitleTemplate]=\"eventTitleTemplate\"\r\n      [eventActionsTemplate]=\"eventActionsTemplate\"\r\n      [snapDraggedEvents]=\"snapDraggedEvents\"\r\n      [allDayEventsLabelTemplate]=\"allDayEventsLabelTemplate\"\r\n      [currentTimeMarkerTemplate]=\"currentTimeMarkerTemplate\"\r\n      [validateEventTimesChanged]=\"validateEventTimesChanged\"\r\n      (eventClicked)=\"eventClicked.emit($event)\"\r\n      (hourSegmentClicked)=\"hourSegmentClicked.emit($event)\"\r\n      (eventTimesChanged)=\"eventTimesChanged.emit($event)\"\r\n      (beforeViewRender)=\"beforeViewRender.emit($event)\"\r\n    ></mwl-calendar-week-view>\r\n  `,\r\n                }]\r\n        }], propDecorators: { viewDate: [{\r\n                type: Input\r\n            }], events: [{\r\n                type: Input\r\n            }], hourSegments: [{\r\n                type: Input\r\n            }], hourSegmentHeight: [{\r\n                type: Input\r\n            }], hourDuration: [{\r\n                type: Input\r\n            }], minimumEventHeight: [{\r\n                type: Input\r\n            }], dayStartHour: [{\r\n                type: Input\r\n            }], dayStartMinute: [{\r\n                type: Input\r\n            }], dayEndHour: [{\r\n                type: Input\r\n            }], dayEndMinute: [{\r\n                type: Input\r\n            }], refresh: [{\r\n                type: Input\r\n            }], locale: [{\r\n                type: Input\r\n            }], eventSnapSize: [{\r\n                type: Input\r\n            }], tooltipPlacement: [{\r\n                type: Input\r\n            }], tooltipTemplate: [{\r\n                type: Input\r\n            }], tooltipAppendToBody: [{\r\n                type: Input\r\n            }], tooltipDelay: [{\r\n                type: Input\r\n            }], hourSegmentTemplate: [{\r\n                type: Input\r\n            }], eventTemplate: [{\r\n                type: Input\r\n            }], eventTitleTemplate: [{\r\n                type: Input\r\n            }], eventActionsTemplate: [{\r\n                type: Input\r\n            }], snapDraggedEvents: [{\r\n                type: Input\r\n            }], allDayEventsLabelTemplate: [{\r\n                type: Input\r\n            }], currentTimeMarkerTemplate: [{\r\n                type: Input\r\n            }], validateEventTimesChanged: [{\r\n                type: Input\r\n            }], resizeCursors: [{\r\n                type: Input\r\n            }], eventClicked: [{\r\n                type: Output\r\n            }], hourSegmentClicked: [{\r\n                type: Output\r\n            }], eventTimesChanged: [{\r\n                type: Output\r\n            }], beforeViewRender: [{\r\n                type: Output\r\n            }] } });","originalLength":22572,"removedExports":[],"renderedExports":["CalendarDayViewComponent"],"renderedLength":10187},"C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\week\\calendar-week.module.mjs":{"code":"class CalendarWeekModule {\r\n}\r\nCalendarWeekModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarWeekModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\r\nCalendarWeekModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarWeekModule, declarations: [CalendarWeekViewComponent,\r\n        CalendarWeekViewHeaderComponent,\r\n        CalendarWeekViewEventComponent,\r\n        CalendarWeekViewHourSegmentComponent,\r\n        CalendarWeekViewCurrentTimeMarkerComponent], imports: [CommonModule,\r\n        ResizableModule,\r\n        DragAndDropModule,\r\n        CalendarCommonModule], exports: [ResizableModule,\r\n        DragAndDropModule,\r\n        CalendarWeekViewComponent,\r\n        CalendarWeekViewHeaderComponent,\r\n        CalendarWeekViewEventComponent,\r\n        CalendarWeekViewHourSegmentComponent,\r\n        CalendarWeekViewCurrentTimeMarkerComponent] });\r\nCalendarWeekModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarWeekModule, imports: [CommonModule,\r\n        ResizableModule,\r\n        DragAndDropModule,\r\n        CalendarCommonModule, ResizableModule,\r\n        DragAndDropModule] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarWeekModule, decorators: [{\r\n            type: NgModule,\r\n            args: [{\r\n                    imports: [\r\n                        CommonModule,\r\n                        ResizableModule,\r\n                        DragAndDropModule,\r\n                        CalendarCommonModule,\r\n                    ],\r\n                    declarations: [\r\n                        CalendarWeekViewComponent,\r\n                        CalendarWeekViewHeaderComponent,\r\n                        CalendarWeekViewEventComponent,\r\n                        CalendarWeekViewHourSegmentComponent,\r\n                        CalendarWeekViewCurrentTimeMarkerComponent,\r\n                    ],\r\n                    exports: [\r\n                        ResizableModule,\r\n                        DragAndDropModule,\r\n                        CalendarWeekViewComponent,\r\n                        CalendarWeekViewHeaderComponent,\r\n                        CalendarWeekViewEventComponent,\r\n                        CalendarWeekViewHourSegmentComponent,\r\n                        CalendarWeekViewCurrentTimeMarkerComponent,\r\n                    ],\r\n                }]\r\n        }] });","originalLength":10630,"removedExports":[],"renderedExports":["CalendarWeekModule"],"renderedLength":2492},"C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\day\\calendar-day.module.mjs":{"code":"class CalendarDayModule {\r\n}\r\nCalendarDayModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarDayModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\r\nCalendarDayModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarDayModule, declarations: [CalendarDayViewComponent], imports: [CommonModule, CalendarCommonModule, CalendarWeekModule], exports: [CalendarDayViewComponent] });\r\nCalendarDayModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarDayModule, imports: [CommonModule, CalendarCommonModule, CalendarWeekModule] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarDayModule, decorators: [{\r\n            type: NgModule,\r\n            args: [{\r\n                    imports: [CommonModule, CalendarCommonModule, CalendarWeekModule],\r\n                    declarations: [CalendarDayViewComponent],\r\n                    exports: [CalendarDayViewComponent],\r\n                }]\r\n        }] });","originalLength":3625,"removedExports":[],"renderedExports":["CalendarDayModule"],"renderedLength":1111},"C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\month\\calendar-month-view\\calendar-month-cell\\calendar-month-cell.component.mjs":{"code":"class CalendarMonthCellComponent {\r\n    constructor() {\r\n        this.highlightDay = new EventEmitter();\r\n        this.unhighlightDay = new EventEmitter();\r\n        this.eventClicked = new EventEmitter();\r\n        this.trackByEventId = trackByEventId;\r\n        this.validateDrag = isWithinThreshold;\r\n    }\r\n}\r\nCalendarMonthCellComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarMonthCellComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\r\nCalendarMonthCellComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.0.4\", type: CalendarMonthCellComponent, selector: \"mwl-calendar-month-cell\", inputs: { day: \"day\", openDay: \"openDay\", locale: \"locale\", tooltipPlacement: \"tooltipPlacement\", tooltipAppendToBody: \"tooltipAppendToBody\", customTemplate: \"customTemplate\", tooltipTemplate: \"tooltipTemplate\", tooltipDelay: \"tooltipDelay\" }, outputs: { highlightDay: \"highlightDay\", unhighlightDay: \"unhighlightDay\", eventClicked: \"eventClicked\" }, host: { properties: { \"class.cal-past\": \"day.isPast\", \"class.cal-today\": \"day.isToday\", \"class.cal-future\": \"day.isFuture\", \"class.cal-weekend\": \"day.isWeekend\", \"class.cal-in-month\": \"day.inMonth\", \"class.cal-out-month\": \"!day.inMonth\", \"class.cal-has-events\": \"day.events.length > 0\", \"class.cal-open\": \"day === openDay\", \"class.cal-event-highlight\": \"!!day.backgroundColor\" }, classAttribute: \"cal-cell cal-day-cell\" }, ngImport: i0, template: `\r\n    <ng-template\r\n      #defaultTemplate\r\n      let-day=\"day\"\r\n      let-openDay=\"openDay\"\r\n      let-locale=\"locale\"\r\n      let-tooltipPlacement=\"tooltipPlacement\"\r\n      let-highlightDay=\"highlightDay\"\r\n      let-unhighlightDay=\"unhighlightDay\"\r\n      let-eventClicked=\"eventClicked\"\r\n      let-tooltipTemplate=\"tooltipTemplate\"\r\n      let-tooltipAppendToBody=\"tooltipAppendToBody\"\r\n      let-tooltipDelay=\"tooltipDelay\"\r\n      let-trackByEventId=\"trackByEventId\"\r\n      let-validateDrag=\"validateDrag\"\r\n    >\r\n      <div\r\n        class=\"cal-cell-top\"\r\n        [attr.aria-label]=\"\r\n          { day: day, locale: locale } | calendarA11y : 'monthCell'\r\n        \"\r\n      >\r\n        <span aria-hidden=\"true\">\r\n          <span class=\"cal-day-badge\" *ngIf=\"day.badgeTotal > 0\">{{\r\n            day.badgeTotal\r\n          }}</span>\r\n          <span class=\"cal-day-number\">{{\r\n            day.date | calendarDate : 'monthViewDayNumber' : locale\r\n          }}</span>\r\n        </span>\r\n      </div>\r\n      <div class=\"cal-events\" *ngIf=\"day.events.length > 0\">\r\n        <div\r\n          class=\"cal-event\"\r\n          *ngFor=\"let event of day.events; trackBy: trackByEventId\"\r\n          [ngStyle]=\"{ backgroundColor: event.color?.primary }\"\r\n          [ngClass]=\"event?.cssClass\"\r\n          (mouseenter)=\"highlightDay.emit({ event: event })\"\r\n          (mouseleave)=\"unhighlightDay.emit({ event: event })\"\r\n          [mwlCalendarTooltip]=\"\r\n            event.title | calendarEventTitle : 'monthTooltip' : event\r\n          \"\r\n          [tooltipPlacement]=\"tooltipPlacement\"\r\n          [tooltipEvent]=\"event\"\r\n          [tooltipTemplate]=\"tooltipTemplate\"\r\n          [tooltipAppendToBody]=\"tooltipAppendToBody\"\r\n          [tooltipDelay]=\"tooltipDelay\"\r\n          mwlDraggable\r\n          [class.cal-draggable]=\"event.draggable\"\r\n          dragActiveClass=\"cal-drag-active\"\r\n          [dropData]=\"{ event: event, draggedFrom: day }\"\r\n          [dragAxis]=\"{ x: event.draggable, y: event.draggable }\"\r\n          [validateDrag]=\"validateDrag\"\r\n          [touchStartLongPress]=\"{ delay: 300, delta: 30 }\"\r\n          (mwlClick)=\"eventClicked.emit({ event: event, sourceEvent: $event })\"\r\n          [attr.aria-hidden]=\"{} | calendarA11y : 'hideMonthCellEvents'\"\r\n        ></div>\r\n      </div>\r\n    </ng-template>\r\n    <ng-template\r\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\r\n      [ngTemplateOutletContext]=\"{\r\n        day: day,\r\n        openDay: openDay,\r\n        locale: locale,\r\n        tooltipPlacement: tooltipPlacement,\r\n        highlightDay: highlightDay,\r\n        unhighlightDay: unhighlightDay,\r\n        eventClicked: eventClicked,\r\n        tooltipTemplate: tooltipTemplate,\r\n        tooltipAppendToBody: tooltipAppendToBody,\r\n        tooltipDelay: tooltipDelay,\r\n        trackByEventId: trackByEventId,\r\n        validateDrag: validateDrag\r\n      }\"\r\n    >\r\n    </ng-template>\r\n  `, isInline: true, dependencies: [{ kind: \"directive\", type: i1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i1.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"directive\", type: i1.NgStyle, selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }, { kind: \"directive\", type: i2.DraggableDirective, selector: \"[mwlDraggable]\", inputs: [\"dropData\", \"dragAxis\", \"dragSnapGrid\", \"ghostDragEnabled\", \"showOriginalElementWhileDragging\", \"validateDrag\", \"dragCursor\", \"dragActiveClass\", \"ghostElementAppendTo\", \"ghostElementTemplate\", \"touchStartLongPress\", \"autoScroll\"], outputs: [\"dragPointerDown\", \"dragStart\", \"ghostElementCreated\", \"dragging\", \"dragEnd\"] }, { kind: \"directive\", type: CalendarTooltipDirective, selector: \"[mwlCalendarTooltip]\", inputs: [\"mwlCalendarTooltip\", \"tooltipPlacement\", \"tooltipTemplate\", \"tooltipEvent\", \"tooltipAppendToBody\", \"tooltipDelay\"] }, { kind: \"directive\", type: ClickDirective, selector: \"[mwlClick]\", inputs: [\"clickListenerDisabled\"], outputs: [\"mwlClick\"] }, { kind: \"pipe\", type: CalendarDatePipe, name: \"calendarDate\" }, { kind: \"pipe\", type: CalendarEventTitlePipe, name: \"calendarEventTitle\" }, { kind: \"pipe\", type: CalendarA11yPipe, name: \"calendarA11y\" }] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarMonthCellComponent, decorators: [{\r\n            type: Component,\r\n            args: [{\r\n                    selector: 'mwl-calendar-month-cell',\r\n                    template: `\r\n    <ng-template\r\n      #defaultTemplate\r\n      let-day=\"day\"\r\n      let-openDay=\"openDay\"\r\n      let-locale=\"locale\"\r\n      let-tooltipPlacement=\"tooltipPlacement\"\r\n      let-highlightDay=\"highlightDay\"\r\n      let-unhighlightDay=\"unhighlightDay\"\r\n      let-eventClicked=\"eventClicked\"\r\n      let-tooltipTemplate=\"tooltipTemplate\"\r\n      let-tooltipAppendToBody=\"tooltipAppendToBody\"\r\n      let-tooltipDelay=\"tooltipDelay\"\r\n      let-trackByEventId=\"trackByEventId\"\r\n      let-validateDrag=\"validateDrag\"\r\n    >\r\n      <div\r\n        class=\"cal-cell-top\"\r\n        [attr.aria-label]=\"\r\n          { day: day, locale: locale } | calendarA11y : 'monthCell'\r\n        \"\r\n      >\r\n        <span aria-hidden=\"true\">\r\n          <span class=\"cal-day-badge\" *ngIf=\"day.badgeTotal > 0\">{{\r\n            day.badgeTotal\r\n          }}</span>\r\n          <span class=\"cal-day-number\">{{\r\n            day.date | calendarDate : 'monthViewDayNumber' : locale\r\n          }}</span>\r\n        </span>\r\n      </div>\r\n      <div class=\"cal-events\" *ngIf=\"day.events.length > 0\">\r\n        <div\r\n          class=\"cal-event\"\r\n          *ngFor=\"let event of day.events; trackBy: trackByEventId\"\r\n          [ngStyle]=\"{ backgroundColor: event.color?.primary }\"\r\n          [ngClass]=\"event?.cssClass\"\r\n          (mouseenter)=\"highlightDay.emit({ event: event })\"\r\n          (mouseleave)=\"unhighlightDay.emit({ event: event })\"\r\n          [mwlCalendarTooltip]=\"\r\n            event.title | calendarEventTitle : 'monthTooltip' : event\r\n          \"\r\n          [tooltipPlacement]=\"tooltipPlacement\"\r\n          [tooltipEvent]=\"event\"\r\n          [tooltipTemplate]=\"tooltipTemplate\"\r\n          [tooltipAppendToBody]=\"tooltipAppendToBody\"\r\n          [tooltipDelay]=\"tooltipDelay\"\r\n          mwlDraggable\r\n          [class.cal-draggable]=\"event.draggable\"\r\n          dragActiveClass=\"cal-drag-active\"\r\n          [dropData]=\"{ event: event, draggedFrom: day }\"\r\n          [dragAxis]=\"{ x: event.draggable, y: event.draggable }\"\r\n          [validateDrag]=\"validateDrag\"\r\n          [touchStartLongPress]=\"{ delay: 300, delta: 30 }\"\r\n          (mwlClick)=\"eventClicked.emit({ event: event, sourceEvent: $event })\"\r\n          [attr.aria-hidden]=\"{} | calendarA11y : 'hideMonthCellEvents'\"\r\n        ></div>\r\n      </div>\r\n    </ng-template>\r\n    <ng-template\r\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\r\n      [ngTemplateOutletContext]=\"{\r\n        day: day,\r\n        openDay: openDay,\r\n        locale: locale,\r\n        tooltipPlacement: tooltipPlacement,\r\n        highlightDay: highlightDay,\r\n        unhighlightDay: unhighlightDay,\r\n        eventClicked: eventClicked,\r\n        tooltipTemplate: tooltipTemplate,\r\n        tooltipAppendToBody: tooltipAppendToBody,\r\n        tooltipDelay: tooltipDelay,\r\n        trackByEventId: trackByEventId,\r\n        validateDrag: validateDrag\r\n      }\"\r\n    >\r\n    </ng-template>\r\n  `,\r\n                    // eslint-disable-next-line @angular-eslint/no-host-metadata-property\r\n                    host: {\r\n                        class: 'cal-cell cal-day-cell',\r\n                        '[class.cal-past]': 'day.isPast',\r\n                        '[class.cal-today]': 'day.isToday',\r\n                        '[class.cal-future]': 'day.isFuture',\r\n                        '[class.cal-weekend]': 'day.isWeekend',\r\n                        '[class.cal-in-month]': 'day.inMonth',\r\n                        '[class.cal-out-month]': '!day.inMonth',\r\n                        '[class.cal-has-events]': 'day.events.length > 0',\r\n                        '[class.cal-open]': 'day === openDay',\r\n                        '[class.cal-event-highlight]': '!!day.backgroundColor',\r\n                    },\r\n                }]\r\n        }], propDecorators: { day: [{\r\n                type: Input\r\n            }], openDay: [{\r\n                type: Input\r\n            }], locale: [{\r\n                type: Input\r\n            }], tooltipPlacement: [{\r\n                type: Input\r\n            }], tooltipAppendToBody: [{\r\n                type: Input\r\n            }], customTemplate: [{\r\n                type: Input\r\n            }], tooltipTemplate: [{\r\n                type: Input\r\n            }], tooltipDelay: [{\r\n                type: Input\r\n            }], highlightDay: [{\r\n                type: Output\r\n            }], unhighlightDay: [{\r\n                type: Output\r\n            }], eventClicked: [{\r\n                type: Output\r\n            }] } });","originalLength":19775,"removedExports":[],"renderedExports":["CalendarMonthCellComponent"],"renderedLength":10650},"C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\month\\calendar-month-view\\calendar-open-day-events\\calendar-open-day-events.component.mjs":{"code":"const collapseAnimation = trigger('collapse', [\r\n    state('void', style({\r\n        height: 0,\r\n        overflow: 'hidden',\r\n        'padding-top': 0,\r\n        'padding-bottom': 0,\r\n    })),\r\n    state('*', style({\r\n        height: '*',\r\n        overflow: 'hidden',\r\n        'padding-top': '*',\r\n        'padding-bottom': '*',\r\n    })),\r\n    transition('* => void', animate('150ms ease-out')),\r\n    transition('void => *', animate('150ms ease-in')),\r\n]);\r\nclass CalendarOpenDayEventsComponent {\r\n    constructor() {\r\n        this.isOpen = false;\r\n        this.eventClicked = new EventEmitter();\r\n        this.trackByEventId = trackByEventId;\r\n        this.validateDrag = isWithinThreshold;\r\n    }\r\n}\r\nCalendarOpenDayEventsComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarOpenDayEventsComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\r\nCalendarOpenDayEventsComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.0.4\", type: CalendarOpenDayEventsComponent, selector: \"mwl-calendar-open-day-events\", inputs: { locale: \"locale\", isOpen: \"isOpen\", events: \"events\", customTemplate: \"customTemplate\", eventTitleTemplate: \"eventTitleTemplate\", eventActionsTemplate: \"eventActionsTemplate\", date: \"date\" }, outputs: { eventClicked: \"eventClicked\" }, ngImport: i0, template: `\r\n    <ng-template\r\n      #defaultTemplate\r\n      let-events=\"events\"\r\n      let-eventClicked=\"eventClicked\"\r\n      let-isOpen=\"isOpen\"\r\n      let-trackByEventId=\"trackByEventId\"\r\n      let-validateDrag=\"validateDrag\"\r\n    >\r\n      <div\r\n        class=\"cal-open-day-events\"\r\n        [@collapse]\r\n        *ngIf=\"isOpen\"\r\n        role=\"application\"\r\n      >\r\n        <span\r\n          tabindex=\"-1\"\r\n          role=\"alert\"\r\n          [attr.aria-label]=\"\r\n            { date: date, locale: locale } | calendarA11y : 'openDayEventsAlert'\r\n          \"\r\n        ></span>\r\n        <span\r\n          tabindex=\"0\"\r\n          role=\"landmark\"\r\n          [attr.aria-label]=\"\r\n            { date: date, locale: locale }\r\n              | calendarA11y : 'openDayEventsLandmark'\r\n          \"\r\n        ></span>\r\n        <div\r\n          *ngFor=\"let event of events; trackBy: trackByEventId\"\r\n          [ngClass]=\"event?.cssClass\"\r\n          mwlDraggable\r\n          [class.cal-draggable]=\"event.draggable\"\r\n          dragActiveClass=\"cal-drag-active\"\r\n          [dropData]=\"{ event: event }\"\r\n          [dragAxis]=\"{ x: event.draggable, y: event.draggable }\"\r\n          [validateDrag]=\"validateDrag\"\r\n          [touchStartLongPress]=\"{ delay: 300, delta: 30 }\"\r\n        >\r\n          <span\r\n            class=\"cal-event\"\r\n            [ngStyle]=\"{ backgroundColor: event.color?.primary }\"\r\n          >\r\n          </span>\r\n          &ngsp;\r\n          <mwl-calendar-event-title\r\n            [event]=\"event\"\r\n            [customTemplate]=\"eventTitleTemplate\"\r\n            view=\"month\"\r\n            (mwlClick)=\"\r\n              eventClicked.emit({ event: event, sourceEvent: $event })\r\n            \"\r\n            (mwlKeydownEnter)=\"\r\n              eventClicked.emit({ event: event, sourceEvent: $event })\r\n            \"\r\n            tabindex=\"0\"\r\n            [attr.aria-label]=\"\r\n              { event: event, locale: locale }\r\n                | calendarA11y : 'eventDescription'\r\n            \"\r\n          >\r\n          </mwl-calendar-event-title>\r\n          &ngsp;\r\n          <mwl-calendar-event-actions\r\n            [event]=\"event\"\r\n            [customTemplate]=\"eventActionsTemplate\"\r\n          >\r\n          </mwl-calendar-event-actions>\r\n        </div>\r\n      </div>\r\n    </ng-template>\r\n    <ng-template\r\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\r\n      [ngTemplateOutletContext]=\"{\r\n        events: events,\r\n        eventClicked: eventClicked,\r\n        isOpen: isOpen,\r\n        trackByEventId: trackByEventId,\r\n        validateDrag: validateDrag\r\n      }\"\r\n    >\r\n    </ng-template>\r\n  `, isInline: true, dependencies: [{ kind: \"directive\", type: i1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i1.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"directive\", type: i1.NgStyle, selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }, { kind: \"directive\", type: i2.DraggableDirective, selector: \"[mwlDraggable]\", inputs: [\"dropData\", \"dragAxis\", \"dragSnapGrid\", \"ghostDragEnabled\", \"showOriginalElementWhileDragging\", \"validateDrag\", \"dragCursor\", \"dragActiveClass\", \"ghostElementAppendTo\", \"ghostElementTemplate\", \"touchStartLongPress\", \"autoScroll\"], outputs: [\"dragPointerDown\", \"dragStart\", \"ghostElementCreated\", \"dragging\", \"dragEnd\"] }, { kind: \"component\", type: CalendarEventActionsComponent, selector: \"mwl-calendar-event-actions\", inputs: [\"event\", \"customTemplate\"] }, { kind: \"component\", type: CalendarEventTitleComponent, selector: \"mwl-calendar-event-title\", inputs: [\"event\", \"customTemplate\", \"view\"] }, { kind: \"directive\", type: ClickDirective, selector: \"[mwlClick]\", inputs: [\"clickListenerDisabled\"], outputs: [\"mwlClick\"] }, { kind: \"directive\", type: KeydownEnterDirective, selector: \"[mwlKeydownEnter]\", outputs: [\"mwlKeydownEnter\"] }, { kind: \"pipe\", type: CalendarA11yPipe, name: \"calendarA11y\" }], animations: [collapseAnimation] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarOpenDayEventsComponent, decorators: [{\r\n            type: Component,\r\n            args: [{\r\n                    selector: 'mwl-calendar-open-day-events',\r\n                    template: `\r\n    <ng-template\r\n      #defaultTemplate\r\n      let-events=\"events\"\r\n      let-eventClicked=\"eventClicked\"\r\n      let-isOpen=\"isOpen\"\r\n      let-trackByEventId=\"trackByEventId\"\r\n      let-validateDrag=\"validateDrag\"\r\n    >\r\n      <div\r\n        class=\"cal-open-day-events\"\r\n        [@collapse]\r\n        *ngIf=\"isOpen\"\r\n        role=\"application\"\r\n      >\r\n        <span\r\n          tabindex=\"-1\"\r\n          role=\"alert\"\r\n          [attr.aria-label]=\"\r\n            { date: date, locale: locale } | calendarA11y : 'openDayEventsAlert'\r\n          \"\r\n        ></span>\r\n        <span\r\n          tabindex=\"0\"\r\n          role=\"landmark\"\r\n          [attr.aria-label]=\"\r\n            { date: date, locale: locale }\r\n              | calendarA11y : 'openDayEventsLandmark'\r\n          \"\r\n        ></span>\r\n        <div\r\n          *ngFor=\"let event of events; trackBy: trackByEventId\"\r\n          [ngClass]=\"event?.cssClass\"\r\n          mwlDraggable\r\n          [class.cal-draggable]=\"event.draggable\"\r\n          dragActiveClass=\"cal-drag-active\"\r\n          [dropData]=\"{ event: event }\"\r\n          [dragAxis]=\"{ x: event.draggable, y: event.draggable }\"\r\n          [validateDrag]=\"validateDrag\"\r\n          [touchStartLongPress]=\"{ delay: 300, delta: 30 }\"\r\n        >\r\n          <span\r\n            class=\"cal-event\"\r\n            [ngStyle]=\"{ backgroundColor: event.color?.primary }\"\r\n          >\r\n          </span>\r\n          &ngsp;\r\n          <mwl-calendar-event-title\r\n            [event]=\"event\"\r\n            [customTemplate]=\"eventTitleTemplate\"\r\n            view=\"month\"\r\n            (mwlClick)=\"\r\n              eventClicked.emit({ event: event, sourceEvent: $event })\r\n            \"\r\n            (mwlKeydownEnter)=\"\r\n              eventClicked.emit({ event: event, sourceEvent: $event })\r\n            \"\r\n            tabindex=\"0\"\r\n            [attr.aria-label]=\"\r\n              { event: event, locale: locale }\r\n                | calendarA11y : 'eventDescription'\r\n            \"\r\n          >\r\n          </mwl-calendar-event-title>\r\n          &ngsp;\r\n          <mwl-calendar-event-actions\r\n            [event]=\"event\"\r\n            [customTemplate]=\"eventActionsTemplate\"\r\n          >\r\n          </mwl-calendar-event-actions>\r\n        </div>\r\n      </div>\r\n    </ng-template>\r\n    <ng-template\r\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\r\n      [ngTemplateOutletContext]=\"{\r\n        events: events,\r\n        eventClicked: eventClicked,\r\n        isOpen: isOpen,\r\n        trackByEventId: trackByEventId,\r\n        validateDrag: validateDrag\r\n      }\"\r\n    >\r\n    </ng-template>\r\n  `,\r\n                    animations: [collapseAnimation],\r\n                }]\r\n        }], propDecorators: { locale: [{\r\n                type: Input\r\n            }], isOpen: [{\r\n                type: Input\r\n            }], events: [{\r\n                type: Input\r\n            }], customTemplate: [{\r\n                type: Input\r\n            }], eventTitleTemplate: [{\r\n                type: Input\r\n            }], eventActionsTemplate: [{\r\n                type: Input\r\n            }], date: [{\r\n                type: Input\r\n            }], eventClicked: [{\r\n                type: Output\r\n            }] } });","originalLength":18107,"removedExports":[],"renderedExports":["collapseAnimation","CalendarOpenDayEventsComponent"],"renderedLength":9053},"C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\month\\calendar-month-view\\calendar-month-view-header\\calendar-month-view-header.component.mjs":{"code":"class CalendarMonthViewHeaderComponent {\r\n    constructor() {\r\n        this.columnHeaderClicked = new EventEmitter();\r\n        this.trackByWeekDayHeaderDate = trackByWeekDayHeaderDate;\r\n    }\r\n}\r\nCalendarMonthViewHeaderComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarMonthViewHeaderComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\r\nCalendarMonthViewHeaderComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.0.4\", type: CalendarMonthViewHeaderComponent, selector: \"mwl-calendar-month-view-header\", inputs: { days: \"days\", locale: \"locale\", customTemplate: \"customTemplate\" }, outputs: { columnHeaderClicked: \"columnHeaderClicked\" }, ngImport: i0, template: `\r\n    <ng-template\r\n      #defaultTemplate\r\n      let-days=\"days\"\r\n      let-locale=\"locale\"\r\n      let-trackByWeekDayHeaderDate=\"trackByWeekDayHeaderDate\"\r\n    >\r\n      <div class=\"cal-cell-row cal-header\" role=\"row\">\r\n        <div\r\n          class=\"cal-cell\"\r\n          *ngFor=\"let day of days; trackBy: trackByWeekDayHeaderDate\"\r\n          [class.cal-past]=\"day.isPast\"\r\n          [class.cal-today]=\"day.isToday\"\r\n          [class.cal-future]=\"day.isFuture\"\r\n          [class.cal-weekend]=\"day.isWeekend\"\r\n          (click)=\"\r\n            columnHeaderClicked.emit({\r\n              isoDayNumber: day.day,\r\n              sourceEvent: $event\r\n            })\r\n          \"\r\n          [ngClass]=\"day.cssClass\"\r\n          tabindex=\"0\"\r\n          role=\"columnheader\"\r\n        >\r\n          {{ day.date | calendarDate : 'monthViewColumnHeader' : locale }}\r\n        </div>\r\n      </div>\r\n    </ng-template>\r\n    <ng-template\r\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\r\n      [ngTemplateOutletContext]=\"{\r\n        days: days,\r\n        locale: locale,\r\n        trackByWeekDayHeaderDate: trackByWeekDayHeaderDate\r\n      }\"\r\n    >\r\n    </ng-template>\r\n  `, isInline: true, dependencies: [{ kind: \"directive\", type: i1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i1.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"pipe\", type: CalendarDatePipe, name: \"calendarDate\" }] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarMonthViewHeaderComponent, decorators: [{\r\n            type: Component,\r\n            args: [{\r\n                    selector: 'mwl-calendar-month-view-header',\r\n                    template: `\r\n    <ng-template\r\n      #defaultTemplate\r\n      let-days=\"days\"\r\n      let-locale=\"locale\"\r\n      let-trackByWeekDayHeaderDate=\"trackByWeekDayHeaderDate\"\r\n    >\r\n      <div class=\"cal-cell-row cal-header\" role=\"row\">\r\n        <div\r\n          class=\"cal-cell\"\r\n          *ngFor=\"let day of days; trackBy: trackByWeekDayHeaderDate\"\r\n          [class.cal-past]=\"day.isPast\"\r\n          [class.cal-today]=\"day.isToday\"\r\n          [class.cal-future]=\"day.isFuture\"\r\n          [class.cal-weekend]=\"day.isWeekend\"\r\n          (click)=\"\r\n            columnHeaderClicked.emit({\r\n              isoDayNumber: day.day,\r\n              sourceEvent: $event\r\n            })\r\n          \"\r\n          [ngClass]=\"day.cssClass\"\r\n          tabindex=\"0\"\r\n          role=\"columnheader\"\r\n        >\r\n          {{ day.date | calendarDate : 'monthViewColumnHeader' : locale }}\r\n        </div>\r\n      </div>\r\n    </ng-template>\r\n    <ng-template\r\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\r\n      [ngTemplateOutletContext]=\"{\r\n        days: days,\r\n        locale: locale,\r\n        trackByWeekDayHeaderDate: trackByWeekDayHeaderDate\r\n      }\"\r\n    >\r\n    </ng-template>\r\n  `,\r\n                }]\r\n        }], propDecorators: { days: [{\r\n                type: Input\r\n            }], locale: [{\r\n                type: Input\r\n            }], customTemplate: [{\r\n                type: Input\r\n            }], columnHeaderClicked: [{\r\n                type: Output\r\n            }] } });","originalLength":8218,"removedExports":[],"renderedExports":["CalendarMonthViewHeaderComponent"],"renderedLength":4164},"C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\month\\calendar-month-view\\calendar-month-view.component.mjs":{"code":"/**\r\n * Shows all events on a given month. Example usage:\r\n *\r\n * ```typescript\r\n * <mwl-calendar-month-view\r\n *  [viewDate]=\"viewDate\"\r\n *  [events]=\"events\">\r\n * </mwl-calendar-month-view>\r\n * ```\r\n */\r\nclass CalendarMonthViewComponent {\r\n    /**\r\n     * @hidden\r\n     */\r\n    constructor(cdr, utils, locale, dateAdapter) {\r\n        this.cdr = cdr;\r\n        this.utils = utils;\r\n        this.dateAdapter = dateAdapter;\r\n        /**\r\n         * An array of events to display on view.\r\n         * The schema is available here: https://github.com/mattlewis92/calendar-utils/blob/c51689985f59a271940e30bc4e2c4e1fee3fcb5c/src/calendarUtils.ts#L49-L63\r\n         */\r\n        this.events = [];\r\n        /**\r\n         * An array of day indexes (0 = sunday, 1 = monday etc) that will be hidden on the view\r\n         */\r\n        this.excludeDays = [];\r\n        /**\r\n         * Whether the events list for the day of the `viewDate` option is visible or not\r\n         */\r\n        this.activeDayIsOpen = false;\r\n        /**\r\n         * The placement of the event tooltip\r\n         */\r\n        this.tooltipPlacement = 'auto';\r\n        /**\r\n         * Whether to append tooltips to the body or next to the trigger element\r\n         */\r\n        this.tooltipAppendToBody = true;\r\n        /**\r\n         * The delay in milliseconds before the tooltip should be displayed. If not provided the tooltip\r\n         * will be displayed immediately.\r\n         */\r\n        this.tooltipDelay = null;\r\n        /**\r\n         * An output that will be called before the view is rendered for the current month.\r\n         * If you add the `cssClass` property to a day in the body it will add that class to the cell element in the template\r\n         */\r\n        this.beforeViewRender = new EventEmitter();\r\n        /**\r\n         * Called when the day cell is clicked\r\n         */\r\n        this.dayClicked = new EventEmitter();\r\n        /**\r\n         * Called when the event title is clicked\r\n         */\r\n        this.eventClicked = new EventEmitter();\r\n        /**\r\n         * Called when a header week day is clicked. Returns ISO day number.\r\n         */\r\n        this.columnHeaderClicked = new EventEmitter();\r\n        /**\r\n         * Called when an event is dragged and dropped\r\n         */\r\n        this.eventTimesChanged = new EventEmitter();\r\n        /**\r\n         * @hidden\r\n         */\r\n        this.trackByRowOffset = (index, offset) => this.view.days\r\n            .slice(offset, this.view.totalDaysVisibleInWeek)\r\n            .map((day) => day.date.toISOString())\r\n            .join('-');\r\n        /**\r\n         * @hidden\r\n         */\r\n        this.trackByDate = (index, day) => day.date.toISOString();\r\n        this.locale = locale;\r\n    }\r\n    /**\r\n     * @hidden\r\n     */\r\n    ngOnInit() {\r\n        if (this.refresh) {\r\n            this.refreshSubscription = this.refresh.subscribe(() => {\r\n                this.refreshAll();\r\n                this.cdr.markForCheck();\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * @hidden\r\n     */\r\n    ngOnChanges(changes) {\r\n        const refreshHeader = changes.viewDate || changes.excludeDays || changes.weekendDays;\r\n        const refreshBody = changes.viewDate ||\r\n            changes.events ||\r\n            changes.excludeDays ||\r\n            changes.weekendDays;\r\n        if (refreshHeader) {\r\n            this.refreshHeader();\r\n        }\r\n        if (changes.events) {\r\n            validateEvents(this.events);\r\n        }\r\n        if (refreshBody) {\r\n            this.refreshBody();\r\n        }\r\n        if (refreshHeader || refreshBody) {\r\n            this.emitBeforeViewRender();\r\n        }\r\n        if (changes.activeDayIsOpen ||\r\n            changes.viewDate ||\r\n            changes.events ||\r\n            changes.excludeDays ||\r\n            changes.activeDay) {\r\n            this.checkActiveDayIsOpen();\r\n        }\r\n    }\r\n    /**\r\n     * @hidden\r\n     */\r\n    ngOnDestroy() {\r\n        if (this.refreshSubscription) {\r\n            this.refreshSubscription.unsubscribe();\r\n        }\r\n    }\r\n    /**\r\n     * @hidden\r\n     */\r\n    toggleDayHighlight(event, isHighlighted) {\r\n        this.view.days.forEach((day) => {\r\n            if (isHighlighted && day.events.indexOf(event) > -1) {\r\n                day.backgroundColor =\r\n                    (event.color && event.color.secondary) || '#D1E8FF';\r\n            }\r\n            else {\r\n                delete day.backgroundColor;\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * @hidden\r\n     */\r\n    eventDropped(droppedOn, event, draggedFrom) {\r\n        if (droppedOn !== draggedFrom) {\r\n            const year = this.dateAdapter.getYear(droppedOn.date);\r\n            const month = this.dateAdapter.getMonth(droppedOn.date);\r\n            const date = this.dateAdapter.getDate(droppedOn.date);\r\n            const newStart = this.dateAdapter.setDate(this.dateAdapter.setMonth(this.dateAdapter.setYear(event.start, year), month), date);\r\n            let newEnd;\r\n            if (event.end) {\r\n                const secondsDiff = this.dateAdapter.differenceInSeconds(newStart, event.start);\r\n                newEnd = this.dateAdapter.addSeconds(event.end, secondsDiff);\r\n            }\r\n            this.eventTimesChanged.emit({\r\n                event,\r\n                newStart,\r\n                newEnd,\r\n                day: droppedOn,\r\n                type: CalendarEventTimesChangedEventType.Drop,\r\n            });\r\n        }\r\n    }\r\n    refreshHeader() {\r\n        this.columnHeaders = this.utils.getWeekViewHeader({\r\n            viewDate: this.viewDate,\r\n            weekStartsOn: this.weekStartsOn,\r\n            excluded: this.excludeDays,\r\n            weekendDays: this.weekendDays,\r\n        });\r\n    }\r\n    refreshBody() {\r\n        this.view = this.utils.getMonthView({\r\n            events: this.events,\r\n            viewDate: this.viewDate,\r\n            weekStartsOn: this.weekStartsOn,\r\n            excluded: this.excludeDays,\r\n            weekendDays: this.weekendDays,\r\n        });\r\n    }\r\n    checkActiveDayIsOpen() {\r\n        if (this.activeDayIsOpen === true) {\r\n            const activeDay = this.activeDay || this.viewDate;\r\n            this.openDay = this.view.days.find((day) => this.dateAdapter.isSameDay(day.date, activeDay));\r\n            const index = this.view.days.indexOf(this.openDay);\r\n            this.openRowIndex =\r\n                Math.floor(index / this.view.totalDaysVisibleInWeek) *\r\n                    this.view.totalDaysVisibleInWeek;\r\n        }\r\n        else {\r\n            this.openRowIndex = null;\r\n            this.openDay = null;\r\n        }\r\n    }\r\n    refreshAll() {\r\n        this.refreshHeader();\r\n        this.refreshBody();\r\n        this.emitBeforeViewRender();\r\n        this.checkActiveDayIsOpen();\r\n    }\r\n    emitBeforeViewRender() {\r\n        if (this.columnHeaders && this.view) {\r\n            this.beforeViewRender.emit({\r\n                header: this.columnHeaders,\r\n                body: this.view.days,\r\n                period: this.view.period,\r\n            });\r\n        }\r\n    }\r\n}\r\nCalendarMonthViewComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarMonthViewComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: CalendarUtils }, { token: LOCALE_ID }, { token: DateAdapter }], target: i0.ɵɵFactoryTarget.Component });\r\nCalendarMonthViewComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.0.4\", type: CalendarMonthViewComponent, selector: \"mwl-calendar-month-view\", inputs: { viewDate: \"viewDate\", events: \"events\", excludeDays: \"excludeDays\", activeDayIsOpen: \"activeDayIsOpen\", activeDay: \"activeDay\", refresh: \"refresh\", locale: \"locale\", tooltipPlacement: \"tooltipPlacement\", tooltipTemplate: \"tooltipTemplate\", tooltipAppendToBody: \"tooltipAppendToBody\", tooltipDelay: \"tooltipDelay\", weekStartsOn: \"weekStartsOn\", headerTemplate: \"headerTemplate\", cellTemplate: \"cellTemplate\", openDayEventsTemplate: \"openDayEventsTemplate\", eventTitleTemplate: \"eventTitleTemplate\", eventActionsTemplate: \"eventActionsTemplate\", weekendDays: \"weekendDays\" }, outputs: { beforeViewRender: \"beforeViewRender\", dayClicked: \"dayClicked\", eventClicked: \"eventClicked\", columnHeaderClicked: \"columnHeaderClicked\", eventTimesChanged: \"eventTimesChanged\" }, usesOnChanges: true, ngImport: i0, template: `\r\n    <div class=\"cal-month-view\" role=\"grid\">\r\n      <mwl-calendar-month-view-header\r\n        [days]=\"columnHeaders\"\r\n        [locale]=\"locale\"\r\n        (columnHeaderClicked)=\"columnHeaderClicked.emit($event)\"\r\n        [customTemplate]=\"headerTemplate\"\r\n      >\r\n      </mwl-calendar-month-view-header>\r\n      <div class=\"cal-days\">\r\n        <div\r\n          *ngFor=\"let rowIndex of view.rowOffsets; trackBy: trackByRowOffset\"\r\n        >\r\n          <div role=\"row\" class=\"cal-cell-row\">\r\n            <mwl-calendar-month-cell\r\n              role=\"gridcell\"\r\n              *ngFor=\"\r\n                let day of view.days\r\n                  | slice : rowIndex : rowIndex + view.totalDaysVisibleInWeek;\r\n                trackBy: trackByDate\r\n              \"\r\n              [ngClass]=\"day?.cssClass\"\r\n              [day]=\"day\"\r\n              [openDay]=\"openDay\"\r\n              [locale]=\"locale\"\r\n              [tooltipPlacement]=\"tooltipPlacement\"\r\n              [tooltipAppendToBody]=\"tooltipAppendToBody\"\r\n              [tooltipTemplate]=\"tooltipTemplate\"\r\n              [tooltipDelay]=\"tooltipDelay\"\r\n              [customTemplate]=\"cellTemplate\"\r\n              [ngStyle]=\"{ backgroundColor: day.backgroundColor }\"\r\n              (mwlClick)=\"dayClicked.emit({ day: day, sourceEvent: $event })\"\r\n              [clickListenerDisabled]=\"dayClicked.observers.length === 0\"\r\n              (mwlKeydownEnter)=\"\r\n                dayClicked.emit({ day: day, sourceEvent: $event })\r\n              \"\r\n              (highlightDay)=\"toggleDayHighlight($event.event, true)\"\r\n              (unhighlightDay)=\"toggleDayHighlight($event.event, false)\"\r\n              mwlDroppable\r\n              dragOverClass=\"cal-drag-over\"\r\n              (drop)=\"\r\n                eventDropped(\r\n                  day,\r\n                  $event.dropData.event,\r\n                  $event.dropData.draggedFrom\r\n                )\r\n              \"\r\n              (eventClicked)=\"\r\n                eventClicked.emit({\r\n                  event: $event.event,\r\n                  sourceEvent: $event.sourceEvent\r\n                })\r\n              \"\r\n              [attr.tabindex]=\"{} | calendarA11y : 'monthCellTabIndex'\"\r\n            >\r\n            </mwl-calendar-month-cell>\r\n          </div>\r\n          <mwl-calendar-open-day-events\r\n            [locale]=\"locale\"\r\n            [isOpen]=\"openRowIndex === rowIndex\"\r\n            [events]=\"openDay?.events\"\r\n            [date]=\"openDay?.date\"\r\n            [customTemplate]=\"openDayEventsTemplate\"\r\n            [eventTitleTemplate]=\"eventTitleTemplate\"\r\n            [eventActionsTemplate]=\"eventActionsTemplate\"\r\n            (eventClicked)=\"\r\n              eventClicked.emit({\r\n                event: $event.event,\r\n                sourceEvent: $event.sourceEvent\r\n              })\r\n            \"\r\n            mwlDroppable\r\n            dragOverClass=\"cal-drag-over\"\r\n            (drop)=\"\r\n              eventDropped(\r\n                openDay,\r\n                $event.dropData.event,\r\n                $event.dropData.draggedFrom\r\n              )\r\n            \"\r\n          >\r\n          </mwl-calendar-open-day-events>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  `, isInline: true, dependencies: [{ kind: \"directive\", type: i1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i1.NgStyle, selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }, { kind: \"directive\", type: i2.DroppableDirective, selector: \"[mwlDroppable]\", inputs: [\"dragOverClass\", \"dragActiveClass\", \"validateDrop\"], outputs: [\"dragEnter\", \"dragLeave\", \"dragOver\", \"drop\"] }, { kind: \"directive\", type: ClickDirective, selector: \"[mwlClick]\", inputs: [\"clickListenerDisabled\"], outputs: [\"mwlClick\"] }, { kind: \"directive\", type: KeydownEnterDirective, selector: \"[mwlKeydownEnter]\", outputs: [\"mwlKeydownEnter\"] }, { kind: \"component\", type: CalendarMonthCellComponent, selector: \"mwl-calendar-month-cell\", inputs: [\"day\", \"openDay\", \"locale\", \"tooltipPlacement\", \"tooltipAppendToBody\", \"customTemplate\", \"tooltipTemplate\", \"tooltipDelay\"], outputs: [\"highlightDay\", \"unhighlightDay\", \"eventClicked\"] }, { kind: \"component\", type: CalendarOpenDayEventsComponent, selector: \"mwl-calendar-open-day-events\", inputs: [\"locale\", \"isOpen\", \"events\", \"customTemplate\", \"eventTitleTemplate\", \"eventActionsTemplate\", \"date\"], outputs: [\"eventClicked\"] }, { kind: \"component\", type: CalendarMonthViewHeaderComponent, selector: \"mwl-calendar-month-view-header\", inputs: [\"days\", \"locale\", \"customTemplate\"], outputs: [\"columnHeaderClicked\"] }, { kind: \"pipe\", type: i1.SlicePipe, name: \"slice\" }, { kind: \"pipe\", type: CalendarA11yPipe, name: \"calendarA11y\" }] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarMonthViewComponent, decorators: [{\r\n            type: Component,\r\n            args: [{\r\n                    selector: 'mwl-calendar-month-view',\r\n                    template: `\r\n    <div class=\"cal-month-view\" role=\"grid\">\r\n      <mwl-calendar-month-view-header\r\n        [days]=\"columnHeaders\"\r\n        [locale]=\"locale\"\r\n        (columnHeaderClicked)=\"columnHeaderClicked.emit($event)\"\r\n        [customTemplate]=\"headerTemplate\"\r\n      >\r\n      </mwl-calendar-month-view-header>\r\n      <div class=\"cal-days\">\r\n        <div\r\n          *ngFor=\"let rowIndex of view.rowOffsets; trackBy: trackByRowOffset\"\r\n        >\r\n          <div role=\"row\" class=\"cal-cell-row\">\r\n            <mwl-calendar-month-cell\r\n              role=\"gridcell\"\r\n              *ngFor=\"\r\n                let day of view.days\r\n                  | slice : rowIndex : rowIndex + view.totalDaysVisibleInWeek;\r\n                trackBy: trackByDate\r\n              \"\r\n              [ngClass]=\"day?.cssClass\"\r\n              [day]=\"day\"\r\n              [openDay]=\"openDay\"\r\n              [locale]=\"locale\"\r\n              [tooltipPlacement]=\"tooltipPlacement\"\r\n              [tooltipAppendToBody]=\"tooltipAppendToBody\"\r\n              [tooltipTemplate]=\"tooltipTemplate\"\r\n              [tooltipDelay]=\"tooltipDelay\"\r\n              [customTemplate]=\"cellTemplate\"\r\n              [ngStyle]=\"{ backgroundColor: day.backgroundColor }\"\r\n              (mwlClick)=\"dayClicked.emit({ day: day, sourceEvent: $event })\"\r\n              [clickListenerDisabled]=\"dayClicked.observers.length === 0\"\r\n              (mwlKeydownEnter)=\"\r\n                dayClicked.emit({ day: day, sourceEvent: $event })\r\n              \"\r\n              (highlightDay)=\"toggleDayHighlight($event.event, true)\"\r\n              (unhighlightDay)=\"toggleDayHighlight($event.event, false)\"\r\n              mwlDroppable\r\n              dragOverClass=\"cal-drag-over\"\r\n              (drop)=\"\r\n                eventDropped(\r\n                  day,\r\n                  $event.dropData.event,\r\n                  $event.dropData.draggedFrom\r\n                )\r\n              \"\r\n              (eventClicked)=\"\r\n                eventClicked.emit({\r\n                  event: $event.event,\r\n                  sourceEvent: $event.sourceEvent\r\n                })\r\n              \"\r\n              [attr.tabindex]=\"{} | calendarA11y : 'monthCellTabIndex'\"\r\n            >\r\n            </mwl-calendar-month-cell>\r\n          </div>\r\n          <mwl-calendar-open-day-events\r\n            [locale]=\"locale\"\r\n            [isOpen]=\"openRowIndex === rowIndex\"\r\n            [events]=\"openDay?.events\"\r\n            [date]=\"openDay?.date\"\r\n            [customTemplate]=\"openDayEventsTemplate\"\r\n            [eventTitleTemplate]=\"eventTitleTemplate\"\r\n            [eventActionsTemplate]=\"eventActionsTemplate\"\r\n            (eventClicked)=\"\r\n              eventClicked.emit({\r\n                event: $event.event,\r\n                sourceEvent: $event.sourceEvent\r\n              })\r\n            \"\r\n            mwlDroppable\r\n            dragOverClass=\"cal-drag-over\"\r\n            (drop)=\"\r\n              eventDropped(\r\n                openDay,\r\n                $event.dropData.event,\r\n                $event.dropData.draggedFrom\r\n              )\r\n            \"\r\n          >\r\n          </mwl-calendar-open-day-events>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  `,\r\n                }]\r\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: CalendarUtils }, { type: undefined, decorators: [{\r\n                    type: Inject,\r\n                    args: [LOCALE_ID]\r\n                }] }, { type: DateAdapter }]; }, propDecorators: { viewDate: [{\r\n                type: Input\r\n            }], events: [{\r\n                type: Input\r\n            }], excludeDays: [{\r\n                type: Input\r\n            }], activeDayIsOpen: [{\r\n                type: Input\r\n            }], activeDay: [{\r\n                type: Input\r\n            }], refresh: [{\r\n                type: Input\r\n            }], locale: [{\r\n                type: Input\r\n            }], tooltipPlacement: [{\r\n                type: Input\r\n            }], tooltipTemplate: [{\r\n                type: Input\r\n            }], tooltipAppendToBody: [{\r\n                type: Input\r\n            }], tooltipDelay: [{\r\n                type: Input\r\n            }], weekStartsOn: [{\r\n                type: Input\r\n            }], headerTemplate: [{\r\n                type: Input\r\n            }], cellTemplate: [{\r\n                type: Input\r\n            }], openDayEventsTemplate: [{\r\n                type: Input\r\n            }], eventTitleTemplate: [{\r\n                type: Input\r\n            }], eventActionsTemplate: [{\r\n                type: Input\r\n            }], weekendDays: [{\r\n                type: Input\r\n            }], beforeViewRender: [{\r\n                type: Output\r\n            }], dayClicked: [{\r\n                type: Output\r\n            }], eventClicked: [{\r\n                type: Output\r\n            }], columnHeaderClicked: [{\r\n                type: Output\r\n            }], eventTimesChanged: [{\r\n                type: Output\r\n            }] } });","originalLength":46794,"removedExports":[],"renderedExports":["CalendarMonthViewComponent"],"renderedLength":18332},"C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\month\\calendar-month.module.mjs":{"code":"class CalendarMonthModule {\r\n}\r\nCalendarMonthModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarMonthModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\r\nCalendarMonthModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarMonthModule, declarations: [CalendarMonthViewComponent,\r\n        CalendarMonthCellComponent,\r\n        CalendarOpenDayEventsComponent,\r\n        CalendarMonthViewHeaderComponent], imports: [CommonModule, DragAndDropModule, CalendarCommonModule], exports: [DragAndDropModule,\r\n        CalendarMonthViewComponent,\r\n        CalendarMonthCellComponent,\r\n        CalendarOpenDayEventsComponent,\r\n        CalendarMonthViewHeaderComponent] });\r\nCalendarMonthModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarMonthModule, imports: [CommonModule, DragAndDropModule, CalendarCommonModule, DragAndDropModule] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarMonthModule, decorators: [{\r\n            type: NgModule,\r\n            args: [{\r\n                    imports: [CommonModule, DragAndDropModule, CalendarCommonModule],\r\n                    declarations: [\r\n                        CalendarMonthViewComponent,\r\n                        CalendarMonthCellComponent,\r\n                        CalendarOpenDayEventsComponent,\r\n                        CalendarMonthViewHeaderComponent,\r\n                    ],\r\n                    exports: [\r\n                        DragAndDropModule,\r\n                        CalendarMonthViewComponent,\r\n                        CalendarMonthCellComponent,\r\n                        CalendarOpenDayEventsComponent,\r\n                        CalendarMonthViewHeaderComponent,\r\n                    ],\r\n                }]\r\n        }] });","originalLength":8245,"removedExports":[],"renderedExports":["CalendarMonthModule"],"renderedLength":1901},"C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\calendar.component.mjs":{"code":"class CalendarComponent {\r\n    constructor() { }\r\n    ngOnInit() { }\r\n}\r\nCalendarComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\r\nCalendarComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.0.4\", type: CalendarComponent, selector: \"calendar-name\", ngImport: i0, template: \"\", styles: [\"@charset \\\"UTF-8\\\";.cal-month-view .cal-header{text-align:center;font-weight:bolder}.cal-month-view .cal-header .cal-cell{padding:5px 0;overflow:hidden;text-overflow:ellipsis;display:block;white-space:nowrap}.cal-month-view .cal-days{border:1px solid;border-bottom:0}.cal-month-view .cal-cell-top{min-height:78px;flex:1}.cal-month-view .cal-cell-row{display:flex}.cal-month-view .cal-cell{float:left;flex:1;display:flex;flex-direction:column;align-items:stretch}.cal-month-view .cal-cell .cal-event{pointer-events:all!important}.cal-month-view .cal-day-cell{min-height:100px}.cal-month-view .cal-day-cell:not(:last-child){border-right:1px solid}[dir=rtl] .cal-month-view .cal-day-cell:not(:last-child){border-right:initial;border-left:1px solid}.cal-month-view .cal-days .cal-cell-row{border-bottom:1px solid}.cal-month-view .cal-day-badge{margin-top:18px;margin-left:10px;display:inline-block;min-width:10px;padding:3px 7px;font-size:12px;font-weight:700;line-height:1;text-align:center;white-space:nowrap;vertical-align:middle;border-radius:10px;float:left}.cal-month-view .cal-day-number{font-size:1.2em;font-weight:400;opacity:.5;margin-top:15px;margin-right:15px;float:right;margin-bottom:10px}.cal-month-view .cal-events{flex:1;align-items:flex-end;margin:3px;line-height:10px;display:flex;flex-wrap:wrap}.cal-month-view .cal-event{width:10px;height:10px;border-radius:50%;display:inline-block;margin:2px}.cal-month-view .cal-day-cell.cal-in-month.cal-has-events{cursor:pointer}.cal-month-view .cal-day-cell.cal-out-month .cal-day-number{opacity:.1;cursor:default}.cal-month-view .cal-day-cell.cal-today .cal-day-number{font-size:1.9em}.cal-month-view .cal-open-day-events{padding:15px}.cal-month-view .cal-open-day-events .cal-event{position:relative;top:2px}.cal-month-view .cal-out-month .cal-day-badge,.cal-month-view .cal-out-month .cal-event{opacity:.3}.cal-month-view .cal-draggable{cursor:move}.cal-month-view .cal-drag-active *{pointer-events:none}.cal-month-view .cal-event-title{cursor:pointer}.cal-month-view .cal-event-title:hover{text-decoration:underline}.cal-month-view{background-color:#fff}.cal-month-view .cal-cell-row:hover{background-color:#fafafa}.cal-month-view .cal-cell-row .cal-cell:hover,.cal-month-view .cal-cell.cal-has-events.cal-open{background-color:#ededed}.cal-month-view .cal-days{border-color:#e1e1e1}.cal-month-view .cal-day-cell:not(:last-child){border-right-color:#e1e1e1}[dir=rtl] .cal-month-view .cal-day-cell:not(:last-child){border-right-color:initial;border-left-color:#e1e1e1}.cal-month-view .cal-days .cal-cell-row{border-bottom-color:#e1e1e1}.cal-month-view .cal-day-badge{background-color:#b94a48;color:#fff}.cal-month-view .cal-event{background-color:#1e90ff;border-color:#d1e8ff;color:#fff}.cal-month-view .cal-day-cell.cal-weekend .cal-day-number{color:#8b0000}.cal-month-view .cal-day-cell.cal-today{background-color:#e8fde7}.cal-month-view .cal-day-cell.cal-drag-over{background-color:#e0e0e0!important}.cal-month-view .cal-open-day-events{color:#fff;background-color:#555;box-shadow:inset 0 0 15px #00000080}.cal-week-view *{box-sizing:border-box}.cal-week-view .cal-day-headers{display:flex;padding-left:70px;border:1px solid}[dir=rtl] .cal-week-view .cal-day-headers{padding-left:initial;padding-right:70px}.cal-week-view .cal-day-headers .cal-header{flex:1;text-align:center;padding:5px}.cal-week-view .cal-day-headers .cal-header:not(:last-child){border-right:1px solid}[dir=rtl] .cal-week-view .cal-day-headers .cal-header:not(:last-child){border-right:initial;border-left:1px solid}.cal-week-view .cal-day-headers .cal-header:first-child{border-left:1px solid}[dir=rtl] .cal-week-view .cal-day-headers .cal-header:first-child{border-left:initial;border-right:1px solid}.cal-week-view .cal-day-headers span{font-weight:400;opacity:.5}.cal-week-view .cal-day-column{flex-grow:1;border-left:solid 1px}[dir=rtl] .cal-week-view .cal-day-column{border-left:initial;border-right:solid 1px}.cal-week-view .cal-event{font-size:12px;border:1px solid;direction:ltr}.cal-week-view .cal-time-label-column{width:70px;height:100%}.cal-week-view .cal-current-time-marker{position:absolute;width:100%;height:2px;z-index:2}.cal-week-view .cal-all-day-events{border:solid 1px;border-top:0;border-bottom-width:3px;padding-top:3px;position:relative}.cal-week-view .cal-all-day-events .cal-day-columns{height:100%;width:100%;display:flex;position:absolute;top:0;z-index:0}.cal-week-view .cal-all-day-events .cal-events-row{position:relative;height:31px;margin-left:70px}[dir=rtl] .cal-week-view .cal-all-day-events .cal-events-row{margin-left:initial;margin-right:70px}.cal-week-view .cal-all-day-events .cal-event-container{display:inline-block;position:absolute}.cal-week-view .cal-all-day-events .cal-event-container.resize-active{z-index:1;pointer-events:none}.cal-week-view .cal-all-day-events .cal-event{padding:0 5px;margin-left:2px;margin-right:2px;height:28px;line-height:28px}.cal-week-view .cal-all-day-events .cal-starts-within-week .cal-event{border-top-left-radius:5px;border-bottom-left-radius:5px}[dir=rtl] .cal-week-view .cal-all-day-events .cal-starts-within-week .cal-event{border-top-left-radius:initial;border-bottom-left-radius:initial;border-top-right-radius:5px!important;border-bottom-right-radius:5px!important}.cal-week-view .cal-all-day-events .cal-ends-within-week .cal-event{border-top-right-radius:5px;border-bottom-right-radius:5px}[dir=rtl] .cal-week-view .cal-all-day-events .cal-ends-within-week .cal-event{border-top-right-radius:initial;border-bottom-right-radius:initial;border-top-left-radius:5px;border-bottom-left-radius:5px}.cal-week-view .cal-all-day-events .cal-time-label-column{display:flex;align-items:center;justify-content:center;font-size:14px}.cal-week-view .cal-all-day-events .cal-resize-handle{width:6px;height:100%;cursor:col-resize;position:absolute;top:0}.cal-week-view .cal-all-day-events .cal-resize-handle.cal-resize-handle-after-end{right:0}[dir=rtl] .cal-week-view .cal-all-day-events .cal-resize-handle.cal-resize-handle-after-end{right:initial;left:0}.cal-week-view .cal-event,.cal-week-view .cal-header{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.cal-week-view .cal-drag-active{pointer-events:none;z-index:1}.cal-week-view .cal-drag-active *{pointer-events:none}.cal-week-view .cal-time-events{position:relative;border:solid 1px;border-top:0;display:flex}.cal-week-view .cal-time-events .cal-day-columns{display:flex;flex-grow:1}.cal-week-view .cal-time-events .cal-day-column,.cal-week-view .cal-time-events .cal-events-container{position:relative}.cal-week-view .cal-time-events .cal-event-container{position:absolute;z-index:1}.cal-week-view .cal-time-events .cal-event{width:calc(100% - 2px);height:calc(100% - 2px);margin:1px;padding:0 5px;line-height:25px}.cal-week-view .cal-time-events .cal-resize-handle{width:100%;height:4px;cursor:row-resize;position:absolute}.cal-week-view .cal-time-events .cal-resize-handle.cal-resize-handle-after-end{bottom:0}.cal-week-view .cal-hour-segment{position:relative}.cal-week-view .cal-hour-segment:after{content:\\\"\\\\a0\\\"}.cal-week-view .cal-event-container:not(.cal-draggable){cursor:pointer}.cal-week-view .cal-draggable{cursor:move}.cal-week-view mwl-calendar-week-view-hour-segment,.cal-week-view .cal-hour-segment{display:block}.cal-week-view .cal-hour:not(:last-child) .cal-hour-segment,.cal-week-view .cal-hour:last-child :not(:last-child) .cal-hour-segment{border-bottom:thin dashed}.cal-week-view .cal-time{font-weight:700;padding-top:5px;width:70px;text-align:center}.cal-week-view .cal-hour-segment.cal-after-hour-start .cal-time{display:none}.cal-week-view .cal-starts-within-day .cal-event{border-top-left-radius:5px;border-top-right-radius:5px}.cal-week-view .cal-ends-within-day .cal-event{border-bottom-left-radius:5px;border-bottom-right-radius:5px}.cal-week-view{background-color:#fff;border-top:solid 1px #e1e1e1}.cal-week-view .cal-day-headers{border-color:#e1e1e1;border-top:0}.cal-week-view .cal-day-headers .cal-header:not(:last-child){border-right-color:#e1e1e1}[dir=rtl] .cal-week-view .cal-day-headers .cal-header:not(:last-child){border-right-color:initial;border-left:solid 1px #e1e1e1!important}.cal-week-view .cal-day-headers .cal-header:first-child{border-left-color:#e1e1e1}[dir=rtl] .cal-week-view .cal-day-headers .cal-header:first-child{border-left-color:initial;border-right-color:#e1e1e1}.cal-week-view .cal-day-headers .cal-header:hover,.cal-week-view .cal-day-headers .cal-drag-over{background-color:#ededed}.cal-week-view .cal-day-column{border-left-color:#e1e1e1}[dir=rtl] .cal-week-view .cal-day-column{border-left-color:initial;border-right-color:#e1e1e1}.cal-week-view .cal-event{background-color:#d1e8ff;border-color:#1e90ff;color:#1e90ff}.cal-week-view .cal-all-day-events{border-color:#e1e1e1}.cal-week-view .cal-header.cal-today{background-color:#e8fde7}.cal-week-view .cal-header.cal-weekend span{color:#8b0000}.cal-week-view .cal-time-events{border-color:#e1e1e1}.cal-week-view .cal-time-events .cal-day-columns:not(.cal-resize-active) .cal-hour-segment:hover{background-color:#ededed}.cal-week-view .cal-hour-odd{background-color:#fafafa}.cal-week-view .cal-drag-over .cal-hour-segment{background-color:#ededed}.cal-week-view .cal-hour:not(:last-child) .cal-hour-segment,.cal-week-view .cal-hour:last-child :not(:last-child) .cal-hour-segment{border-bottom-color:#e1e1e1}.cal-week-view .cal-current-time-marker{background-color:#ea4334}.cal-day-view mwl-calendar-week-view-header{display:none}.cal-day-view .cal-events-container{margin-left:70px}[dir=rtl] .cal-day-view .cal-events-container{margin-left:initial;margin-right:70px}.cal-day-view .cal-day-column{border-left:0}.cal-day-view .cal-current-time-marker{margin-left:70px;width:calc(100% - 70px)}[dir=rtl] .cal-day-view .cal-current-time-marker{margin-left:initial;margin-right:70px}.cal-tooltip{position:absolute;z-index:1070;display:block;font-style:normal;font-weight:400;letter-spacing:normal;line-break:auto;line-height:1.5;text-align:start;text-decoration:none;text-shadow:none;text-transform:none;white-space:normal;word-break:normal;word-spacing:normal;font-size:11px;word-wrap:break-word;opacity:.9}.cal-tooltip.cal-tooltip-top{padding:5px 0;margin-top:-3px}.cal-tooltip.cal-tooltip-top .cal-tooltip-arrow{bottom:0;left:50%;margin-left:-5px;border-width:5px 5px 0}.cal-tooltip.cal-tooltip-right{padding:0 5px;margin-left:3px}.cal-tooltip.cal-tooltip-right .cal-tooltip-arrow{top:50%;left:0;margin-top:-5px;border-width:5px 5px 5px 0}.cal-tooltip.cal-tooltip-bottom{padding:5px 0;margin-top:3px}.cal-tooltip.cal-tooltip-bottom .cal-tooltip-arrow{top:0;left:50%;margin-left:-5px;border-width:0 5px 5px}.cal-tooltip.cal-tooltip-left{padding:0 5px;margin-left:-3px}.cal-tooltip.cal-tooltip-left .cal-tooltip-arrow{top:50%;right:0;margin-top:-5px;border-width:5px 0 5px 5px}.cal-tooltip-inner{max-width:200px;padding:3px 8px;text-align:center;border-radius:.25rem}.cal-tooltip-arrow{position:absolute;width:0;height:0;border-color:transparent;border-style:solid}.cal-tooltip.cal-tooltip-top .cal-tooltip-arrow{border-top-color:#000}.cal-tooltip.cal-tooltip-right .cal-tooltip-arrow{border-right-color:#000}.cal-tooltip.cal-tooltip-bottom .cal-tooltip-arrow{border-bottom-color:#000}.cal-tooltip.cal-tooltip-left .cal-tooltip-arrow{border-left-color:#000}.cal-tooltip-inner{color:#fff;background-color:#000}\\n\"] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarComponent, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'calendar-name', template: \"\", styles: [\"@charset \\\"UTF-8\\\";.cal-month-view .cal-header{text-align:center;font-weight:bolder}.cal-month-view .cal-header .cal-cell{padding:5px 0;overflow:hidden;text-overflow:ellipsis;display:block;white-space:nowrap}.cal-month-view .cal-days{border:1px solid;border-bottom:0}.cal-month-view .cal-cell-top{min-height:78px;flex:1}.cal-month-view .cal-cell-row{display:flex}.cal-month-view .cal-cell{float:left;flex:1;display:flex;flex-direction:column;align-items:stretch}.cal-month-view .cal-cell .cal-event{pointer-events:all!important}.cal-month-view .cal-day-cell{min-height:100px}.cal-month-view .cal-day-cell:not(:last-child){border-right:1px solid}[dir=rtl] .cal-month-view .cal-day-cell:not(:last-child){border-right:initial;border-left:1px solid}.cal-month-view .cal-days .cal-cell-row{border-bottom:1px solid}.cal-month-view .cal-day-badge{margin-top:18px;margin-left:10px;display:inline-block;min-width:10px;padding:3px 7px;font-size:12px;font-weight:700;line-height:1;text-align:center;white-space:nowrap;vertical-align:middle;border-radius:10px;float:left}.cal-month-view .cal-day-number{font-size:1.2em;font-weight:400;opacity:.5;margin-top:15px;margin-right:15px;float:right;margin-bottom:10px}.cal-month-view .cal-events{flex:1;align-items:flex-end;margin:3px;line-height:10px;display:flex;flex-wrap:wrap}.cal-month-view .cal-event{width:10px;height:10px;border-radius:50%;display:inline-block;margin:2px}.cal-month-view .cal-day-cell.cal-in-month.cal-has-events{cursor:pointer}.cal-month-view .cal-day-cell.cal-out-month .cal-day-number{opacity:.1;cursor:default}.cal-month-view .cal-day-cell.cal-today .cal-day-number{font-size:1.9em}.cal-month-view .cal-open-day-events{padding:15px}.cal-month-view .cal-open-day-events .cal-event{position:relative;top:2px}.cal-month-view .cal-out-month .cal-day-badge,.cal-month-view .cal-out-month .cal-event{opacity:.3}.cal-month-view .cal-draggable{cursor:move}.cal-month-view .cal-drag-active *{pointer-events:none}.cal-month-view .cal-event-title{cursor:pointer}.cal-month-view .cal-event-title:hover{text-decoration:underline}.cal-month-view{background-color:#fff}.cal-month-view .cal-cell-row:hover{background-color:#fafafa}.cal-month-view .cal-cell-row .cal-cell:hover,.cal-month-view .cal-cell.cal-has-events.cal-open{background-color:#ededed}.cal-month-view .cal-days{border-color:#e1e1e1}.cal-month-view .cal-day-cell:not(:last-child){border-right-color:#e1e1e1}[dir=rtl] .cal-month-view .cal-day-cell:not(:last-child){border-right-color:initial;border-left-color:#e1e1e1}.cal-month-view .cal-days .cal-cell-row{border-bottom-color:#e1e1e1}.cal-month-view .cal-day-badge{background-color:#b94a48;color:#fff}.cal-month-view .cal-event{background-color:#1e90ff;border-color:#d1e8ff;color:#fff}.cal-month-view .cal-day-cell.cal-weekend .cal-day-number{color:#8b0000}.cal-month-view .cal-day-cell.cal-today{background-color:#e8fde7}.cal-month-view .cal-day-cell.cal-drag-over{background-color:#e0e0e0!important}.cal-month-view .cal-open-day-events{color:#fff;background-color:#555;box-shadow:inset 0 0 15px #00000080}.cal-week-view *{box-sizing:border-box}.cal-week-view .cal-day-headers{display:flex;padding-left:70px;border:1px solid}[dir=rtl] .cal-week-view .cal-day-headers{padding-left:initial;padding-right:70px}.cal-week-view .cal-day-headers .cal-header{flex:1;text-align:center;padding:5px}.cal-week-view .cal-day-headers .cal-header:not(:last-child){border-right:1px solid}[dir=rtl] .cal-week-view .cal-day-headers .cal-header:not(:last-child){border-right:initial;border-left:1px solid}.cal-week-view .cal-day-headers .cal-header:first-child{border-left:1px solid}[dir=rtl] .cal-week-view .cal-day-headers .cal-header:first-child{border-left:initial;border-right:1px solid}.cal-week-view .cal-day-headers span{font-weight:400;opacity:.5}.cal-week-view .cal-day-column{flex-grow:1;border-left:solid 1px}[dir=rtl] .cal-week-view .cal-day-column{border-left:initial;border-right:solid 1px}.cal-week-view .cal-event{font-size:12px;border:1px solid;direction:ltr}.cal-week-view .cal-time-label-column{width:70px;height:100%}.cal-week-view .cal-current-time-marker{position:absolute;width:100%;height:2px;z-index:2}.cal-week-view .cal-all-day-events{border:solid 1px;border-top:0;border-bottom-width:3px;padding-top:3px;position:relative}.cal-week-view .cal-all-day-events .cal-day-columns{height:100%;width:100%;display:flex;position:absolute;top:0;z-index:0}.cal-week-view .cal-all-day-events .cal-events-row{position:relative;height:31px;margin-left:70px}[dir=rtl] .cal-week-view .cal-all-day-events .cal-events-row{margin-left:initial;margin-right:70px}.cal-week-view .cal-all-day-events .cal-event-container{display:inline-block;position:absolute}.cal-week-view .cal-all-day-events .cal-event-container.resize-active{z-index:1;pointer-events:none}.cal-week-view .cal-all-day-events .cal-event{padding:0 5px;margin-left:2px;margin-right:2px;height:28px;line-height:28px}.cal-week-view .cal-all-day-events .cal-starts-within-week .cal-event{border-top-left-radius:5px;border-bottom-left-radius:5px}[dir=rtl] .cal-week-view .cal-all-day-events .cal-starts-within-week .cal-event{border-top-left-radius:initial;border-bottom-left-radius:initial;border-top-right-radius:5px!important;border-bottom-right-radius:5px!important}.cal-week-view .cal-all-day-events .cal-ends-within-week .cal-event{border-top-right-radius:5px;border-bottom-right-radius:5px}[dir=rtl] .cal-week-view .cal-all-day-events .cal-ends-within-week .cal-event{border-top-right-radius:initial;border-bottom-right-radius:initial;border-top-left-radius:5px;border-bottom-left-radius:5px}.cal-week-view .cal-all-day-events .cal-time-label-column{display:flex;align-items:center;justify-content:center;font-size:14px}.cal-week-view .cal-all-day-events .cal-resize-handle{width:6px;height:100%;cursor:col-resize;position:absolute;top:0}.cal-week-view .cal-all-day-events .cal-resize-handle.cal-resize-handle-after-end{right:0}[dir=rtl] .cal-week-view .cal-all-day-events .cal-resize-handle.cal-resize-handle-after-end{right:initial;left:0}.cal-week-view .cal-event,.cal-week-view .cal-header{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.cal-week-view .cal-drag-active{pointer-events:none;z-index:1}.cal-week-view .cal-drag-active *{pointer-events:none}.cal-week-view .cal-time-events{position:relative;border:solid 1px;border-top:0;display:flex}.cal-week-view .cal-time-events .cal-day-columns{display:flex;flex-grow:1}.cal-week-view .cal-time-events .cal-day-column,.cal-week-view .cal-time-events .cal-events-container{position:relative}.cal-week-view .cal-time-events .cal-event-container{position:absolute;z-index:1}.cal-week-view .cal-time-events .cal-event{width:calc(100% - 2px);height:calc(100% - 2px);margin:1px;padding:0 5px;line-height:25px}.cal-week-view .cal-time-events .cal-resize-handle{width:100%;height:4px;cursor:row-resize;position:absolute}.cal-week-view .cal-time-events .cal-resize-handle.cal-resize-handle-after-end{bottom:0}.cal-week-view .cal-hour-segment{position:relative}.cal-week-view .cal-hour-segment:after{content:\\\"\\\\a0\\\"}.cal-week-view .cal-event-container:not(.cal-draggable){cursor:pointer}.cal-week-view .cal-draggable{cursor:move}.cal-week-view mwl-calendar-week-view-hour-segment,.cal-week-view .cal-hour-segment{display:block}.cal-week-view .cal-hour:not(:last-child) .cal-hour-segment,.cal-week-view .cal-hour:last-child :not(:last-child) .cal-hour-segment{border-bottom:thin dashed}.cal-week-view .cal-time{font-weight:700;padding-top:5px;width:70px;text-align:center}.cal-week-view .cal-hour-segment.cal-after-hour-start .cal-time{display:none}.cal-week-view .cal-starts-within-day .cal-event{border-top-left-radius:5px;border-top-right-radius:5px}.cal-week-view .cal-ends-within-day .cal-event{border-bottom-left-radius:5px;border-bottom-right-radius:5px}.cal-week-view{background-color:#fff;border-top:solid 1px #e1e1e1}.cal-week-view .cal-day-headers{border-color:#e1e1e1;border-top:0}.cal-week-view .cal-day-headers .cal-header:not(:last-child){border-right-color:#e1e1e1}[dir=rtl] .cal-week-view .cal-day-headers .cal-header:not(:last-child){border-right-color:initial;border-left:solid 1px #e1e1e1!important}.cal-week-view .cal-day-headers .cal-header:first-child{border-left-color:#e1e1e1}[dir=rtl] .cal-week-view .cal-day-headers .cal-header:first-child{border-left-color:initial;border-right-color:#e1e1e1}.cal-week-view .cal-day-headers .cal-header:hover,.cal-week-view .cal-day-headers .cal-drag-over{background-color:#ededed}.cal-week-view .cal-day-column{border-left-color:#e1e1e1}[dir=rtl] .cal-week-view .cal-day-column{border-left-color:initial;border-right-color:#e1e1e1}.cal-week-view .cal-event{background-color:#d1e8ff;border-color:#1e90ff;color:#1e90ff}.cal-week-view .cal-all-day-events{border-color:#e1e1e1}.cal-week-view .cal-header.cal-today{background-color:#e8fde7}.cal-week-view .cal-header.cal-weekend span{color:#8b0000}.cal-week-view .cal-time-events{border-color:#e1e1e1}.cal-week-view .cal-time-events .cal-day-columns:not(.cal-resize-active) .cal-hour-segment:hover{background-color:#ededed}.cal-week-view .cal-hour-odd{background-color:#fafafa}.cal-week-view .cal-drag-over .cal-hour-segment{background-color:#ededed}.cal-week-view .cal-hour:not(:last-child) .cal-hour-segment,.cal-week-view .cal-hour:last-child :not(:last-child) .cal-hour-segment{border-bottom-color:#e1e1e1}.cal-week-view .cal-current-time-marker{background-color:#ea4334}.cal-day-view mwl-calendar-week-view-header{display:none}.cal-day-view .cal-events-container{margin-left:70px}[dir=rtl] .cal-day-view .cal-events-container{margin-left:initial;margin-right:70px}.cal-day-view .cal-day-column{border-left:0}.cal-day-view .cal-current-time-marker{margin-left:70px;width:calc(100% - 70px)}[dir=rtl] .cal-day-view .cal-current-time-marker{margin-left:initial;margin-right:70px}.cal-tooltip{position:absolute;z-index:1070;display:block;font-style:normal;font-weight:400;letter-spacing:normal;line-break:auto;line-height:1.5;text-align:start;text-decoration:none;text-shadow:none;text-transform:none;white-space:normal;word-break:normal;word-spacing:normal;font-size:11px;word-wrap:break-word;opacity:.9}.cal-tooltip.cal-tooltip-top{padding:5px 0;margin-top:-3px}.cal-tooltip.cal-tooltip-top .cal-tooltip-arrow{bottom:0;left:50%;margin-left:-5px;border-width:5px 5px 0}.cal-tooltip.cal-tooltip-right{padding:0 5px;margin-left:3px}.cal-tooltip.cal-tooltip-right .cal-tooltip-arrow{top:50%;left:0;margin-top:-5px;border-width:5px 5px 5px 0}.cal-tooltip.cal-tooltip-bottom{padding:5px 0;margin-top:3px}.cal-tooltip.cal-tooltip-bottom .cal-tooltip-arrow{top:0;left:50%;margin-left:-5px;border-width:0 5px 5px}.cal-tooltip.cal-tooltip-left{padding:0 5px;margin-left:-3px}.cal-tooltip.cal-tooltip-left .cal-tooltip-arrow{top:50%;right:0;margin-top:-5px;border-width:5px 0 5px 5px}.cal-tooltip-inner{max-width:200px;padding:3px 8px;text-align:center;border-radius:.25rem}.cal-tooltip-arrow{position:absolute;width:0;height:0;border-color:transparent;border-style:solid}.cal-tooltip.cal-tooltip-top .cal-tooltip-arrow{border-top-color:#000}.cal-tooltip.cal-tooltip-right .cal-tooltip-arrow{border-right-color:#000}.cal-tooltip.cal-tooltip-bottom .cal-tooltip-arrow{border-bottom-color:#000}.cal-tooltip.cal-tooltip-left .cal-tooltip-arrow{border-left-color:#000}.cal-tooltip-inner{color:#fff;background-color:#000}\\n\"] }]\r\n        }], ctorParameters: function () { return []; } });","originalLength":24680,"removedExports":[],"renderedExports":["CalendarComponent"],"renderedLength":23515},"C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\calendar.module.mjs":{"code":"class CalendarModule {\r\n    static forRoot(dateAdapter, config = {}) {\r\n        return {\r\n            ngModule: CalendarModule,\r\n            providers: [\r\n                dateAdapter,\r\n                config.eventTitleFormatter || CalendarEventTitleFormatter,\r\n                config.dateFormatter || CalendarDateFormatter,\r\n                config.utils || CalendarUtils,\r\n                config.a11y || CalendarA11y,\r\n            ],\r\n        };\r\n    }\r\n}\r\nCalendarModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\r\nCalendarModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarModule, declarations: [CalendarComponent], imports: [CalendarMonthModule,\r\n        CalendarWeekModule,\r\n        CalendarDayModule,\r\n        CalendarCommonModule], exports: [CalendarComponent,\r\n        CalendarMonthModule,\r\n        CalendarWeekModule,\r\n        CalendarDayModule,\r\n        CalendarCommonModule] });\r\nCalendarModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarModule, imports: [CalendarMonthModule,\r\n        CalendarWeekModule,\r\n        CalendarDayModule,\r\n        CalendarCommonModule, CalendarMonthModule,\r\n        CalendarWeekModule,\r\n        CalendarDayModule,\r\n        CalendarCommonModule] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarModule, decorators: [{\r\n            type: NgModule,\r\n            args: [{\r\n                    declarations: [\r\n                        CalendarComponent\r\n                    ],\r\n                    imports: [\r\n                        CalendarMonthModule,\r\n                        CalendarWeekModule,\r\n                        CalendarDayModule,\r\n                        CalendarCommonModule\r\n                    ],\r\n                    exports: [\r\n                        CalendarComponent,\r\n                        CalendarMonthModule,\r\n                        CalendarWeekModule,\r\n                        CalendarDayModule,\r\n                        CalendarCommonModule\r\n                    ]\r\n                }]\r\n        }] });","originalLength":6526,"removedExports":[],"renderedExports":["CalendarModule"],"renderedLength":2248},"C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\public-api.mjs":{"code":"/*\r\n * Public API Surface of ng-calendar-schedule\r\n */","originalLength":1563,"removedExports":[],"renderedExports":[],"renderedLength":54},"C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\ng-calendar-schedule.mjs":{"code":"/**\r\n * Generated bundle index. Do not edit.\r\n */","originalLength":540,"removedExports":[],"renderedExports":[],"renderedLength":49}},"referencedFiles":[],"code":"import { adapterFactory as adapterFactory$1 } from 'calendar-utils/date-adapters/date-fns';\nimport { addWeeks, addMonths, subDays, subWeeks, subMonths, getISOWeek, setDate, setMonth, setYear, getDate, getYear } from 'date-fns';\nimport * as i0 from '@angular/core';\nimport { EventEmitter, Directive, Inject, Input, Output, Injectable, LOCALE_ID, Pipe, Component, HostListener, InjectionToken, NgModule } from '@angular/core';\nimport * as i1 from '@angular/common';\nimport { DOCUMENT, formatDate, CommonModule, I18nPluralPipe } from '@angular/common';\nimport { Subject, Observable, of, timer, BehaviorSubject, interval } from 'rxjs';\nimport { takeUntil, switchMap, startWith, switchMapTo, map } from 'rxjs/operators';\nimport { positionElements } from 'positioning';\nimport { validateEvents as validateEvents$1, getMonthView, getWeekViewHeader, getWeekView } from 'calendar-utils';\nexport { DAYS_OF_WEEK } from 'calendar-utils';\nimport * as i4 from 'angular-resizable-element';\nimport { ResizableModule } from 'angular-resizable-element';\nimport * as i2 from 'angular-draggable-droppable';\nimport { DragAndDropModule } from 'angular-draggable-droppable';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\n\nclass DateAdapter {\r\n}\n\nfunction adapterFactory() {\r\n    return {\r\n        ...adapterFactory$1(),\r\n        addWeeks,\r\n        addMonths,\r\n        subDays,\r\n        subWeeks,\r\n        subMonths,\r\n        getISOWeek,\r\n        setDate,\r\n        setMonth,\r\n        setYear,\r\n        getDate,\r\n        getYear,\r\n    };\r\n}\n\nclass ClickDirective {\r\n    constructor(renderer, elm, document) {\r\n        this.renderer = renderer;\r\n        this.elm = elm;\r\n        this.document = document;\r\n        this.clickListenerDisabled = false;\r\n        this.click = new EventEmitter(); // eslint-disable-line\r\n        this.destroy$ = new Subject();\r\n    }\r\n    ngOnInit() {\r\n        if (!this.clickListenerDisabled) {\r\n            this.listen()\r\n                .pipe(takeUntil(this.destroy$))\r\n                .subscribe((event) => {\r\n                event.stopPropagation();\r\n                this.click.emit(event);\r\n            });\r\n        }\r\n    }\r\n    ngOnDestroy() {\r\n        this.destroy$.next();\r\n    }\r\n    listen() {\r\n        return new Observable((observer) => {\r\n            return this.renderer.listen(this.elm.nativeElement, 'click', (event) => {\r\n                observer.next(event);\r\n            });\r\n        });\r\n    }\r\n}\r\nClickDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: ClickDirective, deps: [{ token: i0.Renderer2 }, { token: i0.ElementRef }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Directive });\r\nClickDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.0.4\", type: ClickDirective, selector: \"[mwlClick]\", inputs: { clickListenerDisabled: \"clickListenerDisabled\" }, outputs: { click: \"mwlClick\" }, ngImport: i0 });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: ClickDirective, decorators: [{\r\n            type: Directive,\r\n            args: [{\r\n                    selector: '[mwlClick]',\r\n                }]\r\n        }], ctorParameters: function () { return [{ type: i0.Renderer2 }, { type: i0.ElementRef }, { type: undefined, decorators: [{\r\n                    type: Inject,\r\n                    args: [DOCUMENT]\r\n                }] }]; }, propDecorators: { clickListenerDisabled: [{\r\n                type: Input\r\n            }], click: [{\r\n                type: Output,\r\n                args: ['mwlClick']\r\n            }] } });\n\nclass KeydownEnterDirective {\r\n    constructor(host, ngZone, renderer) {\r\n        this.host = host;\r\n        this.ngZone = ngZone;\r\n        this.renderer = renderer;\r\n        this.keydown = new EventEmitter(); // eslint-disable-line\r\n        this.keydownListener = null;\r\n    }\r\n    ngOnInit() {\r\n        this.ngZone.runOutsideAngular(() => {\r\n            this.keydownListener = this.renderer.listen(this.host.nativeElement, 'keydown', (event) => {\r\n                if (event.keyCode === 13 ||\r\n                    event.which === 13 ||\r\n                    event.key === 'Enter') {\r\n                    event.preventDefault();\r\n                    event.stopPropagation();\r\n                    this.ngZone.run(() => {\r\n                        this.keydown.emit(event);\r\n                    });\r\n                }\r\n            });\r\n        });\r\n    }\r\n    ngOnDestroy() {\r\n        if (this.keydownListener !== null) {\r\n            this.keydownListener();\r\n            this.keydownListener = null;\r\n        }\r\n    }\r\n}\r\nKeydownEnterDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: KeydownEnterDirective, deps: [{ token: i0.ElementRef }, { token: i0.NgZone }, { token: i0.Renderer2 }], target: i0.ɵɵFactoryTarget.Directive });\r\nKeydownEnterDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.0.4\", type: KeydownEnterDirective, selector: \"[mwlKeydownEnter]\", outputs: { keydown: \"mwlKeydownEnter\" }, ngImport: i0 });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: KeydownEnterDirective, decorators: [{\r\n            type: Directive,\r\n            args: [{\r\n                    selector: '[mwlKeydownEnter]',\r\n                }]\r\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.NgZone }, { type: i0.Renderer2 }]; }, propDecorators: { keydown: [{\r\n                type: Output,\r\n                args: ['mwlKeydownEnter']\r\n            }] } });\n\n/**\r\n * This class is responsible for adding accessibility to the calendar.\r\n * You may override any of its methods via angulars DI to suit your requirements.\r\n * For example:\r\n *\r\n * ```typescript\r\n * import { A11yParams, CalendarA11y } from 'angular-calendar';\r\n * import { formatDate, I18nPluralPipe } from '@angular/common';\r\n * import { Injectable } from '@angular/core';\r\n *\r\n * // adding your own a11y params\r\n * export interface CustomA11yParams extends A11yParams {\r\n *   isDrSuess?: boolean;\r\n * }\r\n *\r\n * @Injectable()\r\n * export class CustomCalendarA11y extends CalendarA11y {\r\n *   constructor(protected i18nPlural: I18nPluralPipe) {\r\n *     super(i18nPlural);\r\n *   }\r\n *\r\n *   // overriding a function\r\n *   public openDayEventsLandmark({ date, locale, isDrSuess }: CustomA11yParams): string {\r\n *     if (isDrSuess) {\r\n *       return `\r\n *         ${formatDate(date, 'EEEE MMMM d', locale)}\r\n *          Today you are you! That is truer than true! There is no one alive\r\n *          who is you-er than you!\r\n *       `;\r\n *     }\r\n *   }\r\n * }\r\n *\r\n * // in your component that uses the calendar\r\n * providers: [{\r\n *  provide: CalendarA11y,\r\n *  useClass: CustomCalendarA11y\r\n * }]\r\n * ```\r\n */\r\nclass CalendarA11y {\r\n    constructor(i18nPlural) {\r\n        this.i18nPlural = i18nPlural;\r\n    }\r\n    /**\r\n     * Aria label for the badges/date of a cell\r\n     * @example: `Saturday October 19 1 event click to expand`\r\n     */\r\n    monthCell({ day, locale }) {\r\n        if (day.badgeTotal > 0) {\r\n            return `\r\n        ${formatDate(day.date, 'EEEE MMMM d', locale)},\r\n        ${this.i18nPlural.transform(day.badgeTotal, {\r\n                '=0': 'No events',\r\n                '=1': 'One event',\r\n                other: '# events',\r\n            })},\r\n         click to expand\r\n      `;\r\n        }\r\n        else {\r\n            return `${formatDate(day.date, 'EEEE MMMM d', locale)}`;\r\n        }\r\n    }\r\n    /**\r\n     * Aria label for the open day events start landmark\r\n     * @example: `Saturday October 19 expanded view`\r\n     */\r\n    openDayEventsLandmark({ date, locale }) {\r\n        return `\r\n      Beginning of expanded view for ${formatDate(date, 'EEEE MMMM dd', locale)}\r\n    `;\r\n    }\r\n    /**\r\n     * Aria label for alert that a day in the month view was expanded\r\n     * @example: `Saturday October 19 expanded`\r\n     */\r\n    openDayEventsAlert({ date, locale }) {\r\n        return `${formatDate(date, 'EEEE MMMM dd', locale)} expanded`;\r\n    }\r\n    /**\r\n     * Descriptive aria label for an event\r\n     * @example: `Saturday October 19th, Scott's Pizza Party, from 11:00am to 5:00pm`\r\n     */\r\n    eventDescription({ event, locale }) {\r\n        if (event.allDay === true) {\r\n            return this.allDayEventDescription({ event, locale });\r\n        }\r\n        const aria = `\r\n      ${formatDate(event.start, 'EEEE MMMM dd', locale)},\r\n      ${event.title}, from ${formatDate(event.start, 'hh:mm a', locale)}\r\n    `;\r\n        if (event.end) {\r\n            return aria + ` to ${formatDate(event.end, 'hh:mm a', locale)}`;\r\n        }\r\n        return aria;\r\n    }\r\n    /**\r\n     * Descriptive aria label for an all day event\r\n     * @example:\r\n     * `Scott's Party, event spans multiple days: start time October 19 5:00pm, no stop time`\r\n     */\r\n    allDayEventDescription({ event, locale }) {\r\n        const aria = `\r\n      ${event.title}, event spans multiple days:\r\n      start time ${formatDate(event.start, 'MMMM dd hh:mm a', locale)}\r\n    `;\r\n        if (event.end) {\r\n            return (aria + `, stop time ${formatDate(event.end, 'MMMM d hh:mm a', locale)}`);\r\n        }\r\n        return aria + `, no stop time`;\r\n    }\r\n    /**\r\n     * Aria label for the calendar event actions icons\r\n     * @returns 'Edit' for fa-pencil icons, and 'Delete' for fa-times icons\r\n     */\r\n    actionButtonLabel({ action }) {\r\n        return action.a11yLabel;\r\n    }\r\n    /**\r\n     * @returns {number} Tab index to be given to month cells\r\n     */\r\n    monthCellTabIndex() {\r\n        return 0;\r\n    }\r\n    /**\r\n     * @returns true if the events inside the month cell should be aria-hidden\r\n     */\r\n    hideMonthCellEvents() {\r\n        return true;\r\n    }\r\n    /**\r\n     * @returns true if event titles should be aria-hidden (global)\r\n     */\r\n    hideEventTitle() {\r\n        return true;\r\n    }\r\n    /**\r\n     * @returns true if hour segments in the week view should be aria-hidden\r\n     */\r\n    hideWeekHourSegment() {\r\n        return true;\r\n    }\r\n    /**\r\n     * @returns true if hour segments in the day view should be aria-hidden\r\n     */\r\n    hideDayHourSegment() {\r\n        return true;\r\n    }\r\n}\r\nCalendarA11y.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarA11y, deps: [{ token: i1.I18nPluralPipe }], target: i0.ɵɵFactoryTarget.Injectable });\r\nCalendarA11y.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarA11y });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarA11y, decorators: [{\r\n            type: Injectable\r\n        }], ctorParameters: function () { return [{ type: i1.I18nPluralPipe }]; } });\n\n/**\r\n * This pipe is primarily for rendering aria labels. Example usage:\r\n * ```typescript\r\n * // where `myEvent` is a `CalendarEvent` and myLocale is a locale identifier\r\n * {{ { event: myEvent, locale: myLocale } | calendarA11y: 'eventDescription' }}\r\n * ```\r\n */\r\nclass CalendarA11yPipe {\r\n    constructor(calendarA11y, locale) {\r\n        this.calendarA11y = calendarA11y;\r\n        this.locale = locale;\r\n    }\r\n    transform(a11yParams, method) {\r\n        a11yParams.locale = a11yParams.locale || this.locale;\r\n        if (typeof this.calendarA11y[method] === 'undefined') {\r\n            const allowedMethods = Object.getOwnPropertyNames(Object.getPrototypeOf(CalendarA11y.prototype)).filter((iMethod) => iMethod !== 'constructor');\r\n            throw new Error(`${method} is not a valid a11y method. Can only be one of ${allowedMethods.join(', ')}`);\r\n        }\r\n        return this.calendarA11y[method](a11yParams);\r\n    }\r\n}\r\nCalendarA11yPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarA11yPipe, deps: [{ token: CalendarA11y }, { token: LOCALE_ID }], target: i0.ɵɵFactoryTarget.Pipe });\r\nCalendarA11yPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"14.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarA11yPipe, name: \"calendarA11y\" });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarA11yPipe, decorators: [{\r\n            type: Pipe,\r\n            args: [{\r\n                    name: 'calendarA11y',\r\n                }]\r\n        }], ctorParameters: function () { return [{ type: CalendarA11y }, { type: undefined, decorators: [{\r\n                    type: Inject,\r\n                    args: [LOCALE_ID]\r\n                }] }]; } });\n\nclass CalendarEventActionsComponent {\r\n    constructor() {\r\n        this.trackByActionId = (index, action) => action.id ? action.id : action;\r\n    }\r\n}\r\nCalendarEventActionsComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarEventActionsComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\r\nCalendarEventActionsComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.0.4\", type: CalendarEventActionsComponent, selector: \"mwl-calendar-event-actions\", inputs: { event: \"event\", customTemplate: \"customTemplate\" }, ngImport: i0, template: `\r\n    <ng-template\r\n      #defaultTemplate\r\n      let-event=\"event\"\r\n      let-trackByActionId=\"trackByActionId\"\r\n    >\r\n      <span *ngIf=\"event.actions\" class=\"cal-event-actions\">\r\n        <a\r\n          class=\"cal-event-action\"\r\n          href=\"javascript:;\"\r\n          *ngFor=\"let action of event.actions; trackBy: trackByActionId\"\r\n          (mwlClick)=\"action.onClick({ event: event, sourceEvent: $event })\"\r\n          (mwlKeydownEnter)=\"\r\n            action.onClick({ event: event, sourceEvent: $event })\r\n          \"\r\n          [ngClass]=\"action.cssClass\"\r\n          [innerHtml]=\"action.label\"\r\n          tabindex=\"0\"\r\n          role=\"button\"\r\n          [attr.aria-label]=\"\r\n            { action: action } | calendarA11y : 'actionButtonLabel'\r\n          \"\r\n        >\r\n        </a>\r\n      </span>\r\n    </ng-template>\r\n    <ng-template\r\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\r\n      [ngTemplateOutletContext]=\"{\r\n        event: event,\r\n        trackByActionId: trackByActionId\r\n      }\"\r\n    >\r\n    </ng-template>\r\n  `, isInline: true, dependencies: [{ kind: \"directive\", type: i1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i1.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"directive\", type: ClickDirective, selector: \"[mwlClick]\", inputs: [\"clickListenerDisabled\"], outputs: [\"mwlClick\"] }, { kind: \"directive\", type: KeydownEnterDirective, selector: \"[mwlKeydownEnter]\", outputs: [\"mwlKeydownEnter\"] }, { kind: \"pipe\", type: CalendarA11yPipe, name: \"calendarA11y\" }] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarEventActionsComponent, decorators: [{\r\n            type: Component,\r\n            args: [{\r\n                    selector: 'mwl-calendar-event-actions',\r\n                    template: `\r\n    <ng-template\r\n      #defaultTemplate\r\n      let-event=\"event\"\r\n      let-trackByActionId=\"trackByActionId\"\r\n    >\r\n      <span *ngIf=\"event.actions\" class=\"cal-event-actions\">\r\n        <a\r\n          class=\"cal-event-action\"\r\n          href=\"javascript:;\"\r\n          *ngFor=\"let action of event.actions; trackBy: trackByActionId\"\r\n          (mwlClick)=\"action.onClick({ event: event, sourceEvent: $event })\"\r\n          (mwlKeydownEnter)=\"\r\n            action.onClick({ event: event, sourceEvent: $event })\r\n          \"\r\n          [ngClass]=\"action.cssClass\"\r\n          [innerHtml]=\"action.label\"\r\n          tabindex=\"0\"\r\n          role=\"button\"\r\n          [attr.aria-label]=\"\r\n            { action: action } | calendarA11y : 'actionButtonLabel'\r\n          \"\r\n        >\r\n        </a>\r\n      </span>\r\n    </ng-template>\r\n    <ng-template\r\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\r\n      [ngTemplateOutletContext]=\"{\r\n        event: event,\r\n        trackByActionId: trackByActionId\r\n      }\"\r\n    >\r\n    </ng-template>\r\n  `,\r\n                }]\r\n        }], propDecorators: { event: [{\r\n                type: Input\r\n            }], customTemplate: [{\r\n                type: Input\r\n            }] } });\n\n/**\r\n * This class is responsible for displaying all event titles within the calendar. You may override any of its methods via angulars DI to suit your requirements. For example:\r\n *\r\n * ```typescript\r\n * import { Injectable } from '@angular/core';\r\n * import { CalendarEventTitleFormatter, CalendarEvent } from 'angular-calendar';\r\n *\r\n * @Injectable()\r\n * class CustomEventTitleFormatter extends CalendarEventTitleFormatter {\r\n *\r\n *   month(event: CalendarEvent): string {\r\n *     return `Custom prefix: ${event.title}`;\r\n *   }\r\n *\r\n * }\r\n *\r\n * // in your component\r\n * providers: [{\r\n *  provide: CalendarEventTitleFormatter,\r\n *  useClass: CustomEventTitleFormatter\r\n * }]\r\n * ```\r\n */\r\nclass CalendarEventTitleFormatter {\r\n    /**\r\n     * The month view event title.\r\n     */\r\n    month(event, title) {\r\n        return event.title;\r\n    }\r\n    /**\r\n     * The month view event tooltip. Return a falsey value from this to disable the tooltip.\r\n     */\r\n    monthTooltip(event, title) {\r\n        return event.title;\r\n    }\r\n    /**\r\n     * The week view event title.\r\n     */\r\n    week(event, title) {\r\n        return event.title;\r\n    }\r\n    /**\r\n     * The week view event tooltip. Return a falsey value from this to disable the tooltip.\r\n     */\r\n    weekTooltip(event, title) {\r\n        return event.title;\r\n    }\r\n    /**\r\n     * The day view event title.\r\n     */\r\n    day(event, title) {\r\n        return event.title;\r\n    }\r\n    /**\r\n     * The day view event tooltip. Return a falsey value from this to disable the tooltip.\r\n     */\r\n    dayTooltip(event, title) {\r\n        return event.title;\r\n    }\r\n}\n\nclass CalendarEventTitlePipe {\r\n    constructor(calendarEventTitle) {\r\n        this.calendarEventTitle = calendarEventTitle;\r\n    }\r\n    transform(title, titleType, event) {\r\n        return this.calendarEventTitle[titleType](event, title);\r\n    }\r\n}\r\nCalendarEventTitlePipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarEventTitlePipe, deps: [{ token: CalendarEventTitleFormatter }], target: i0.ɵɵFactoryTarget.Pipe });\r\nCalendarEventTitlePipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"14.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarEventTitlePipe, name: \"calendarEventTitle\" });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarEventTitlePipe, decorators: [{\r\n            type: Pipe,\r\n            args: [{\r\n                    name: 'calendarEventTitle',\r\n                }]\r\n        }], ctorParameters: function () { return [{ type: CalendarEventTitleFormatter }]; } });\n\nclass CalendarEventTitleComponent {\r\n}\r\nCalendarEventTitleComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarEventTitleComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\r\nCalendarEventTitleComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.0.4\", type: CalendarEventTitleComponent, selector: \"mwl-calendar-event-title\", inputs: { event: \"event\", customTemplate: \"customTemplate\", view: \"view\" }, ngImport: i0, template: `\r\n    <ng-template #defaultTemplate let-event=\"event\" let-view=\"view\">\r\n      <span\r\n        class=\"cal-event-title\"\r\n        [innerHTML]=\"event.title | calendarEventTitle : view : event\"\r\n        [attr.aria-hidden]=\"{} | calendarA11y : 'hideEventTitle'\"\r\n      >\r\n      </span>\r\n    </ng-template>\r\n    <ng-template\r\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\r\n      [ngTemplateOutletContext]=\"{\r\n        event: event,\r\n        view: view\r\n      }\"\r\n    >\r\n    </ng-template>\r\n  `, isInline: true, dependencies: [{ kind: \"directive\", type: i1.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"pipe\", type: CalendarEventTitlePipe, name: \"calendarEventTitle\" }, { kind: \"pipe\", type: CalendarA11yPipe, name: \"calendarA11y\" }] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarEventTitleComponent, decorators: [{\r\n            type: Component,\r\n            args: [{\r\n                    selector: 'mwl-calendar-event-title',\r\n                    template: `\r\n    <ng-template #defaultTemplate let-event=\"event\" let-view=\"view\">\r\n      <span\r\n        class=\"cal-event-title\"\r\n        [innerHTML]=\"event.title | calendarEventTitle : view : event\"\r\n        [attr.aria-hidden]=\"{} | calendarA11y : 'hideEventTitle'\"\r\n      >\r\n      </span>\r\n    </ng-template>\r\n    <ng-template\r\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\r\n      [ngTemplateOutletContext]=\"{\r\n        event: event,\r\n        view: view\r\n      }\"\r\n    >\r\n    </ng-template>\r\n  `,\r\n                }]\r\n        }], propDecorators: { event: [{\r\n                type: Input\r\n            }], customTemplate: [{\r\n                type: Input\r\n            }], view: [{\r\n                type: Input\r\n            }] } });\n\nclass CalendarTooltipWindowComponent {\r\n}\r\nCalendarTooltipWindowComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarTooltipWindowComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\r\nCalendarTooltipWindowComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.0.4\", type: CalendarTooltipWindowComponent, selector: \"mwl-calendar-tooltip-window\", inputs: { contents: \"contents\", placement: \"placement\", event: \"event\", customTemplate: \"customTemplate\" }, ngImport: i0, template: `\r\n    <ng-template\r\n      #defaultTemplate\r\n      let-contents=\"contents\"\r\n      let-placement=\"placement\"\r\n      let-event=\"event\"\r\n    >\r\n      <div class=\"cal-tooltip\" [ngClass]=\"'cal-tooltip-' + placement\">\r\n        <div class=\"cal-tooltip-arrow\"></div>\r\n        <div class=\"cal-tooltip-inner\" [innerHtml]=\"contents\"></div>\r\n      </div>\r\n    </ng-template>\r\n    <ng-template\r\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\r\n      [ngTemplateOutletContext]=\"{\r\n        contents: contents,\r\n        placement: placement,\r\n        event: event\r\n      }\"\r\n    >\r\n    </ng-template>\r\n  `, isInline: true, dependencies: [{ kind: \"directive\", type: i1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i1.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarTooltipWindowComponent, decorators: [{\r\n            type: Component,\r\n            args: [{\r\n                    selector: 'mwl-calendar-tooltip-window',\r\n                    template: `\r\n    <ng-template\r\n      #defaultTemplate\r\n      let-contents=\"contents\"\r\n      let-placement=\"placement\"\r\n      let-event=\"event\"\r\n    >\r\n      <div class=\"cal-tooltip\" [ngClass]=\"'cal-tooltip-' + placement\">\r\n        <div class=\"cal-tooltip-arrow\"></div>\r\n        <div class=\"cal-tooltip-inner\" [innerHtml]=\"contents\"></div>\r\n      </div>\r\n    </ng-template>\r\n    <ng-template\r\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\r\n      [ngTemplateOutletContext]=\"{\r\n        contents: contents,\r\n        placement: placement,\r\n        event: event\r\n      }\"\r\n    >\r\n    </ng-template>\r\n  `,\r\n                }]\r\n        }], propDecorators: { contents: [{\r\n                type: Input\r\n            }], placement: [{\r\n                type: Input\r\n            }], event: [{\r\n                type: Input\r\n            }], customTemplate: [{\r\n                type: Input\r\n            }] } });\r\nclass CalendarTooltipDirective {\r\n    constructor(elementRef, injector, renderer, componentFactoryResolver, viewContainerRef, document // eslint-disable-line\r\n    ) {\r\n        this.elementRef = elementRef;\r\n        this.injector = injector;\r\n        this.renderer = renderer;\r\n        this.viewContainerRef = viewContainerRef;\r\n        this.document = document;\r\n        this.placement = 'auto'; // eslint-disable-line  @angular-eslint/no-input-rename\r\n        this.delay = null; // eslint-disable-line  @angular-eslint/no-input-rename\r\n        this.cancelTooltipDelay$ = new Subject();\r\n        this.tooltipFactory = componentFactoryResolver.resolveComponentFactory(CalendarTooltipWindowComponent);\r\n    }\r\n    ngOnChanges(changes) {\r\n        if (this.tooltipRef &&\r\n            (changes.contents || changes.customTemplate || changes.event)) {\r\n            this.tooltipRef.instance.contents = this.contents;\r\n            this.tooltipRef.instance.customTemplate = this.customTemplate;\r\n            this.tooltipRef.instance.event = this.event;\r\n            this.tooltipRef.changeDetectorRef.markForCheck();\r\n            if (!this.contents) {\r\n                this.hide();\r\n            }\r\n        }\r\n    }\r\n    ngOnDestroy() {\r\n        this.hide();\r\n    }\r\n    onMouseOver() {\r\n        const delay$ = this.delay === null ? of('now') : timer(this.delay);\r\n        delay$.pipe(takeUntil(this.cancelTooltipDelay$)).subscribe(() => {\r\n            this.show();\r\n        });\r\n    }\r\n    onMouseOut() {\r\n        this.hide();\r\n    }\r\n    show() {\r\n        if (!this.tooltipRef && this.contents) {\r\n            this.tooltipRef = this.viewContainerRef.createComponent(this.tooltipFactory, 0, this.injector, []);\r\n            this.tooltipRef.instance.contents = this.contents;\r\n            this.tooltipRef.instance.customTemplate = this.customTemplate;\r\n            this.tooltipRef.instance.event = this.event;\r\n            if (this.appendToBody) {\r\n                this.document.body.appendChild(this.tooltipRef.location.nativeElement);\r\n            }\r\n            requestAnimationFrame(() => {\r\n                this.positionTooltip();\r\n            });\r\n        }\r\n    }\r\n    hide() {\r\n        if (this.tooltipRef) {\r\n            this.viewContainerRef.remove(this.viewContainerRef.indexOf(this.tooltipRef.hostView));\r\n            this.tooltipRef = null;\r\n        }\r\n        this.cancelTooltipDelay$.next();\r\n    }\r\n    positionTooltip(previousPositions = []) {\r\n        if (this.tooltipRef) {\r\n            this.tooltipRef.changeDetectorRef.detectChanges();\r\n            this.tooltipRef.instance.placement = positionElements(this.elementRef.nativeElement, this.tooltipRef.location.nativeElement.children[0], this.placement, this.appendToBody);\r\n            // keep re-positioning the tooltip until the arrow position doesn't make a difference\r\n            if (previousPositions.indexOf(this.tooltipRef.instance.placement) === -1) {\r\n                this.positionTooltip([\r\n                    ...previousPositions,\r\n                    this.tooltipRef.instance.placement,\r\n                ]);\r\n            }\r\n        }\r\n    }\r\n}\r\nCalendarTooltipDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarTooltipDirective, deps: [{ token: i0.ElementRef }, { token: i0.Injector }, { token: i0.Renderer2 }, { token: i0.ComponentFactoryResolver }, { token: i0.ViewContainerRef }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Directive });\r\nCalendarTooltipDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.0.4\", type: CalendarTooltipDirective, selector: \"[mwlCalendarTooltip]\", inputs: { contents: [\"mwlCalendarTooltip\", \"contents\"], placement: [\"tooltipPlacement\", \"placement\"], customTemplate: [\"tooltipTemplate\", \"customTemplate\"], event: [\"tooltipEvent\", \"event\"], appendToBody: [\"tooltipAppendToBody\", \"appendToBody\"], delay: [\"tooltipDelay\", \"delay\"] }, host: { listeners: { \"mouseenter\": \"onMouseOver()\", \"mouseleave\": \"onMouseOut()\" } }, usesOnChanges: true, ngImport: i0 });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarTooltipDirective, decorators: [{\r\n            type: Directive,\r\n            args: [{\r\n                    selector: '[mwlCalendarTooltip]',\r\n                }]\r\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.Injector }, { type: i0.Renderer2 }, { type: i0.ComponentFactoryResolver }, { type: i0.ViewContainerRef }, { type: undefined, decorators: [{\r\n                    type: Inject,\r\n                    args: [DOCUMENT]\r\n                }] }]; }, propDecorators: { contents: [{\r\n                type: Input,\r\n                args: ['mwlCalendarTooltip']\r\n            }], placement: [{\r\n                type: Input,\r\n                args: ['tooltipPlacement']\r\n            }], customTemplate: [{\r\n                type: Input,\r\n                args: ['tooltipTemplate']\r\n            }], event: [{\r\n                type: Input,\r\n                args: ['tooltipEvent']\r\n            }], appendToBody: [{\r\n                type: Input,\r\n                args: ['tooltipAppendToBody']\r\n            }], delay: [{\r\n                type: Input,\r\n                args: ['tooltipDelay']\r\n            }], onMouseOver: [{\r\n                type: HostListener,\r\n                args: ['mouseenter']\r\n            }], onMouseOut: [{\r\n                type: HostListener,\r\n                args: ['mouseleave']\r\n            }] } });\n\nvar CalendarView;\r\n(function (CalendarView) {\r\n    CalendarView[\"Month\"] = \"month\";\r\n    CalendarView[\"Week\"] = \"week\";\r\n    CalendarView[\"Day\"] = \"day\";\r\n})(CalendarView || (CalendarView = {}));\n\nconst validateEvents = (events) => {\r\n    const warn = (...args) => console.warn('angular-calendar', ...args);\r\n    return validateEvents$1(events, warn);\r\n};\r\nfunction isInsideLeftAndRight(outer, inner) {\r\n    return (Math.floor(outer.left) <= Math.ceil(inner.left) &&\r\n        Math.floor(inner.left) <= Math.ceil(outer.right) &&\r\n        Math.floor(outer.left) <= Math.ceil(inner.right) &&\r\n        Math.floor(inner.right) <= Math.ceil(outer.right));\r\n}\r\nfunction isInsideTopAndBottom(outer, inner) {\r\n    return (Math.floor(outer.top) <= Math.ceil(inner.top) &&\r\n        Math.floor(inner.top) <= Math.ceil(outer.bottom) &&\r\n        Math.floor(outer.top) <= Math.ceil(inner.bottom) &&\r\n        Math.floor(inner.bottom) <= Math.ceil(outer.bottom));\r\n}\r\nfunction isInside(outer, inner) {\r\n    return (isInsideLeftAndRight(outer, inner) && isInsideTopAndBottom(outer, inner));\r\n}\r\nfunction roundToNearest(amount, precision) {\r\n    return Math.round(amount / precision) * precision;\r\n}\r\nconst trackByEventId = (index, event) => event.id ? event.id : event;\r\nconst trackByWeekDayHeaderDate = (index, day) => day.date.toISOString();\r\nconst trackByHourSegment = (index, segment) => segment.date.toISOString();\r\nconst trackByHour = (index, hour) => hour.segments[0].date.toISOString();\r\nconst trackByWeekAllDayEvent = (index, weekEvent) => (weekEvent.event.id ? weekEvent.event.id : weekEvent.event);\r\nconst trackByWeekTimeEvent = (index, weekEvent) => (weekEvent.event.id ? weekEvent.event.id : weekEvent.event);\r\nconst MINUTES_IN_HOUR = 60;\r\nfunction getPixelAmountInMinutes(hourSegments, hourSegmentHeight, hourDuration) {\r\n    return (hourDuration || MINUTES_IN_HOUR) / (hourSegments * hourSegmentHeight);\r\n}\r\nfunction getMinutesMoved(movedY, hourSegments, hourSegmentHeight, eventSnapSize, hourDuration) {\r\n    const draggedInPixelsSnapSize = roundToNearest(movedY, eventSnapSize || hourSegmentHeight);\r\n    const pixelAmountInMinutes = getPixelAmountInMinutes(hourSegments, hourSegmentHeight, hourDuration);\r\n    return draggedInPixelsSnapSize * pixelAmountInMinutes;\r\n}\r\nfunction getDefaultEventEnd(dateAdapter, event, minimumMinutes) {\r\n    if (event.end) {\r\n        return event.end;\r\n    }\r\n    else {\r\n        return dateAdapter.addMinutes(event.start, minimumMinutes);\r\n    }\r\n}\r\nfunction addDaysWithExclusions(dateAdapter, date, days, excluded) {\r\n    let daysCounter = 0;\r\n    let daysToAdd = 0;\r\n    const changeDays = days < 0 ? dateAdapter.subDays : dateAdapter.addDays;\r\n    let result = date;\r\n    while (daysToAdd <= Math.abs(days)) {\r\n        result = changeDays(date, daysCounter);\r\n        const day = dateAdapter.getDay(result);\r\n        if (excluded.indexOf(day) === -1) {\r\n            daysToAdd++;\r\n        }\r\n        daysCounter++;\r\n    }\r\n    return result;\r\n}\r\nfunction isDraggedWithinPeriod(newStart, newEnd, period) {\r\n    const end = newEnd || newStart;\r\n    return ((period.start <= newStart && newStart <= period.end) ||\r\n        (period.start <= end && end <= period.end));\r\n}\r\nfunction shouldFireDroppedEvent(dropEvent, date, allDay, calendarId) {\r\n    return (dropEvent.dropData &&\r\n        dropEvent.dropData.event &&\r\n        (dropEvent.dropData.calendarId !== calendarId ||\r\n            (dropEvent.dropData.event.allDay && !allDay) ||\r\n            (!dropEvent.dropData.event.allDay && allDay)));\r\n}\r\nfunction getWeekViewPeriod(dateAdapter, viewDate, weekStartsOn, excluded = [], daysInWeek) {\r\n    let viewStart = daysInWeek\r\n        ? dateAdapter.startOfDay(viewDate)\r\n        : dateAdapter.startOfWeek(viewDate, { weekStartsOn });\r\n    const endOfWeek = dateAdapter.endOfWeek(viewDate, { weekStartsOn });\r\n    while (excluded.indexOf(dateAdapter.getDay(viewStart)) > -1 &&\r\n        viewStart < endOfWeek) {\r\n        viewStart = dateAdapter.addDays(viewStart, 1);\r\n    }\r\n    if (daysInWeek) {\r\n        const viewEnd = dateAdapter.endOfDay(addDaysWithExclusions(dateAdapter, viewStart, daysInWeek - 1, excluded));\r\n        return { viewStart, viewEnd };\r\n    }\r\n    else {\r\n        let viewEnd = endOfWeek;\r\n        while (excluded.indexOf(dateAdapter.getDay(viewEnd)) > -1 &&\r\n            viewEnd > viewStart) {\r\n            viewEnd = dateAdapter.subDays(viewEnd, 1);\r\n        }\r\n        return { viewStart, viewEnd };\r\n    }\r\n}\r\nfunction isWithinThreshold({ x, y }) {\r\n    const DRAG_THRESHOLD = 1;\r\n    return Math.abs(x) > DRAG_THRESHOLD || Math.abs(y) > DRAG_THRESHOLD;\r\n}\n\n/**\r\n * Change the view date to the previous view. For example:\r\n *\r\n * ```typescript\r\n * <button\r\n *  mwlCalendarPreviousView\r\n *  [(viewDate)]=\"viewDate\"\r\n *  [view]=\"view\">\r\n *  Previous\r\n * </button>\r\n * ```\r\n */\r\nclass CalendarPreviousViewDirective {\r\n    constructor(dateAdapter) {\r\n        this.dateAdapter = dateAdapter;\r\n        /**\r\n         * Days to skip when going back by 1 day\r\n         */\r\n        this.excludeDays = [];\r\n        /**\r\n         * Called when the view date is changed\r\n         */\r\n        this.viewDateChange = new EventEmitter();\r\n    }\r\n    /**\r\n     * @hidden\r\n     */\r\n    onClick() {\r\n        const subFn = {\r\n            day: this.dateAdapter.subDays,\r\n            week: this.dateAdapter.subWeeks,\r\n            month: this.dateAdapter.subMonths,\r\n        }[this.view];\r\n        if (this.view === CalendarView.Day) {\r\n            this.viewDateChange.emit(addDaysWithExclusions(this.dateAdapter, this.viewDate, -1, this.excludeDays));\r\n        }\r\n        else if (this.view === CalendarView.Week && this.daysInWeek) {\r\n            this.viewDateChange.emit(addDaysWithExclusions(this.dateAdapter, this.viewDate, -this.daysInWeek, this.excludeDays));\r\n        }\r\n        else {\r\n            this.viewDateChange.emit(subFn(this.viewDate, 1));\r\n        }\r\n    }\r\n}\r\nCalendarPreviousViewDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarPreviousViewDirective, deps: [{ token: DateAdapter }], target: i0.ɵɵFactoryTarget.Directive });\r\nCalendarPreviousViewDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.0.4\", type: CalendarPreviousViewDirective, selector: \"[mwlCalendarPreviousView]\", inputs: { view: \"view\", viewDate: \"viewDate\", excludeDays: \"excludeDays\", daysInWeek: \"daysInWeek\" }, outputs: { viewDateChange: \"viewDateChange\" }, host: { listeners: { \"click\": \"onClick()\" } }, ngImport: i0 });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarPreviousViewDirective, decorators: [{\r\n            type: Directive,\r\n            args: [{\r\n                    selector: '[mwlCalendarPreviousView]',\r\n                }]\r\n        }], ctorParameters: function () { return [{ type: DateAdapter }]; }, propDecorators: { view: [{\r\n                type: Input\r\n            }], viewDate: [{\r\n                type: Input\r\n            }], excludeDays: [{\r\n                type: Input\r\n            }], daysInWeek: [{\r\n                type: Input\r\n            }], viewDateChange: [{\r\n                type: Output\r\n            }], onClick: [{\r\n                type: HostListener,\r\n                args: ['click']\r\n            }] } });\n\n/**\r\n * Change the view date to the next view. For example:\r\n *\r\n * ```typescript\r\n * <button\r\n *  mwlCalendarNextView\r\n *  [(viewDate)]=\"viewDate\"\r\n *  [view]=\"view\">\r\n *  Next\r\n * </button>\r\n * ```\r\n */\r\nclass CalendarNextViewDirective {\r\n    constructor(dateAdapter) {\r\n        this.dateAdapter = dateAdapter;\r\n        /**\r\n         * Days to skip when going forward by 1 day\r\n         */\r\n        this.excludeDays = [];\r\n        /**\r\n         * Called when the view date is changed\r\n         */\r\n        this.viewDateChange = new EventEmitter();\r\n    }\r\n    /**\r\n     * @hidden\r\n     */\r\n    onClick() {\r\n        const addFn = {\r\n            day: this.dateAdapter.addDays,\r\n            week: this.dateAdapter.addWeeks,\r\n            month: this.dateAdapter.addMonths,\r\n        }[this.view];\r\n        if (this.view === CalendarView.Day) {\r\n            this.viewDateChange.emit(addDaysWithExclusions(this.dateAdapter, this.viewDate, 1, this.excludeDays));\r\n        }\r\n        else if (this.view === CalendarView.Week && this.daysInWeek) {\r\n            this.viewDateChange.emit(addDaysWithExclusions(this.dateAdapter, this.viewDate, this.daysInWeek, this.excludeDays));\r\n        }\r\n        else {\r\n            this.viewDateChange.emit(addFn(this.viewDate, 1));\r\n        }\r\n    }\r\n}\r\nCalendarNextViewDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarNextViewDirective, deps: [{ token: DateAdapter }], target: i0.ɵɵFactoryTarget.Directive });\r\nCalendarNextViewDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.0.4\", type: CalendarNextViewDirective, selector: \"[mwlCalendarNextView]\", inputs: { view: \"view\", viewDate: \"viewDate\", excludeDays: \"excludeDays\", daysInWeek: \"daysInWeek\" }, outputs: { viewDateChange: \"viewDateChange\" }, host: { listeners: { \"click\": \"onClick()\" } }, ngImport: i0 });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarNextViewDirective, decorators: [{\r\n            type: Directive,\r\n            args: [{\r\n                    selector: '[mwlCalendarNextView]',\r\n                }]\r\n        }], ctorParameters: function () { return [{ type: DateAdapter }]; }, propDecorators: { view: [{\r\n                type: Input\r\n            }], viewDate: [{\r\n                type: Input\r\n            }], excludeDays: [{\r\n                type: Input\r\n            }], daysInWeek: [{\r\n                type: Input\r\n            }], viewDateChange: [{\r\n                type: Output\r\n            }], onClick: [{\r\n                type: HostListener,\r\n                args: ['click']\r\n            }] } });\n\n/**\r\n * Change the view date to the current day. For example:\r\n *\r\n * ```typescript\r\n * <button\r\n *  mwlCalendarToday\r\n *  [(viewDate)]=\"viewDate\">\r\n *  Today\r\n * </button>\r\n * ```\r\n */\r\nclass CalendarTodayDirective {\r\n    constructor(dateAdapter) {\r\n        this.dateAdapter = dateAdapter;\r\n        /**\r\n         * Called when the view date is changed\r\n         */\r\n        this.viewDateChange = new EventEmitter();\r\n    }\r\n    /**\r\n     * @hidden\r\n     */\r\n    onClick() {\r\n        this.viewDateChange.emit(this.dateAdapter.startOfDay(new Date()));\r\n    }\r\n}\r\nCalendarTodayDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarTodayDirective, deps: [{ token: DateAdapter }], target: i0.ɵɵFactoryTarget.Directive });\r\nCalendarTodayDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.0.4\", type: CalendarTodayDirective, selector: \"[mwlCalendarToday]\", inputs: { viewDate: \"viewDate\" }, outputs: { viewDateChange: \"viewDateChange\" }, host: { listeners: { \"click\": \"onClick()\" } }, ngImport: i0 });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarTodayDirective, decorators: [{\r\n            type: Directive,\r\n            args: [{\r\n                    selector: '[mwlCalendarToday]',\r\n                }]\r\n        }], ctorParameters: function () { return [{ type: DateAdapter }]; }, propDecorators: { viewDate: [{\r\n                type: Input\r\n            }], viewDateChange: [{\r\n                type: Output\r\n            }], onClick: [{\r\n                type: HostListener,\r\n                args: ['click']\r\n            }] } });\n\n/**\r\n * This will use the angular date pipe to do all date formatting. It is the default date formatter used by the calendar.\r\n */\r\nclass CalendarAngularDateFormatter {\r\n    constructor(dateAdapter) {\r\n        this.dateAdapter = dateAdapter;\r\n    }\r\n    /**\r\n     * The month view header week day labels\r\n     */\r\n    monthViewColumnHeader({ date, locale }) {\r\n        return formatDate(date, 'EEEE', locale);\r\n    }\r\n    /**\r\n     * The month view cell day number\r\n     */\r\n    monthViewDayNumber({ date, locale }) {\r\n        return formatDate(date, 'd', locale);\r\n    }\r\n    /**\r\n     * The month view title\r\n     */\r\n    monthViewTitle({ date, locale }) {\r\n        return formatDate(date, 'LLLL y', locale);\r\n    }\r\n    /**\r\n     * The week view header week day labels\r\n     */\r\n    weekViewColumnHeader({ date, locale }) {\r\n        return formatDate(date, 'EEEE', locale);\r\n    }\r\n    /**\r\n     * The week view sub header day and month labels\r\n     */\r\n    weekViewColumnSubHeader({ date, locale, }) {\r\n        return formatDate(date, 'MMM d', locale);\r\n    }\r\n    /**\r\n     * The week view title\r\n     */\r\n    weekViewTitle({ date, locale, weekStartsOn, excludeDays, daysInWeek, }) {\r\n        const { viewStart, viewEnd } = getWeekViewPeriod(this.dateAdapter, date, weekStartsOn, excludeDays, daysInWeek);\r\n        const format = (dateToFormat, showYear) => formatDate(dateToFormat, 'MMM d' + (showYear ? ', yyyy' : ''), locale);\r\n        return `${format(viewStart, viewStart.getUTCFullYear() !== viewEnd.getUTCFullYear())} - ${format(viewEnd, true)}`;\r\n    }\r\n    /**\r\n     * The time formatting down the left hand side of the week view\r\n     */\r\n    weekViewHour({ date, locale }) {\r\n        return formatDate(date, 'h a', locale);\r\n    }\r\n    /**\r\n     * The time formatting down the left hand side of the day view\r\n     */\r\n    dayViewHour({ date, locale }) {\r\n        return formatDate(date, 'h a', locale);\r\n    }\r\n    /**\r\n     * The day view title\r\n     */\r\n    dayViewTitle({ date, locale }) {\r\n        return formatDate(date, 'EEEE, MMMM d, y', locale);\r\n    }\r\n}\r\nCalendarAngularDateFormatter.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarAngularDateFormatter, deps: [{ token: DateAdapter }], target: i0.ɵɵFactoryTarget.Injectable });\r\nCalendarAngularDateFormatter.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarAngularDateFormatter });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarAngularDateFormatter, decorators: [{\r\n            type: Injectable\r\n        }], ctorParameters: function () { return [{ type: DateAdapter }]; } });\n\n/**\r\n * This class is responsible for all formatting of dates. There are 3 implementations available, the `CalendarAngularDateFormatter` (default) which uses the angular date pipe to format dates, the `CalendarNativeDateFormatter` which will use the <a href=\"https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Intl\" target=\"_blank\">Intl</a> API to format dates, or there is the `CalendarMomentDateFormatter` which uses <a href=\"http://momentjs.com/\" target=\"_blank\">moment</a>.\r\n *\r\n * If you wish, you may override any of the defaults via angulars DI. For example:\r\n *\r\n * ```typescript\r\n * import { CalendarDateFormatter, DateFormatterParams } from 'angular-calendar';\r\n * import { formatDate } from '@angular/common';\r\n * import { Injectable } from '@angular/core';\r\n *\r\n * @Injectable()\r\n * class CustomDateFormatter extends CalendarDateFormatter {\r\n *\r\n *   public monthViewColumnHeader({date, locale}: DateFormatterParams): string {\r\n *     return formatDate(date, 'EEE', locale); // use short week days\r\n *   }\r\n *\r\n * }\r\n *\r\n * // in your component that uses the calendar\r\n * providers: [{\r\n *   provide: CalendarDateFormatter,\r\n *   useClass: CustomDateFormatter\r\n * }]\r\n * ```\r\n */\r\nclass CalendarDateFormatter extends CalendarAngularDateFormatter {\r\n}\r\nCalendarDateFormatter.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarDateFormatter, deps: null, target: i0.ɵɵFactoryTarget.Injectable });\r\nCalendarDateFormatter.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarDateFormatter });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarDateFormatter, decorators: [{\r\n            type: Injectable\r\n        }] });\n\n/**\r\n * This pipe is primarily for rendering the current view title. Example usage:\r\n * ```typescript\r\n * // where `viewDate` is a `Date` and view is `'month' | 'week' | 'day'`\r\n * {{ viewDate | calendarDate:(view + 'ViewTitle'):'en' }}\r\n * ```\r\n */\r\nclass CalendarDatePipe {\r\n    constructor(dateFormatter, locale) {\r\n        this.dateFormatter = dateFormatter;\r\n        this.locale = locale;\r\n    }\r\n    transform(date, method, locale = this.locale, weekStartsOn = 0, excludeDays = [], daysInWeek) {\r\n        if (typeof this.dateFormatter[method] === 'undefined') {\r\n            const allowedMethods = Object.getOwnPropertyNames(Object.getPrototypeOf(CalendarDateFormatter.prototype)).filter((iMethod) => iMethod !== 'constructor');\r\n            throw new Error(`${method} is not a valid date formatter. Can only be one of ${allowedMethods.join(', ')}`);\r\n        }\r\n        return this.dateFormatter[method]({\r\n            date,\r\n            locale,\r\n            weekStartsOn,\r\n            excludeDays,\r\n            daysInWeek,\r\n        });\r\n    }\r\n}\r\nCalendarDatePipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarDatePipe, deps: [{ token: CalendarDateFormatter }, { token: LOCALE_ID }], target: i0.ɵɵFactoryTarget.Pipe });\r\nCalendarDatePipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"14.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarDatePipe, name: \"calendarDate\" });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarDatePipe, decorators: [{\r\n            type: Pipe,\r\n            args: [{\r\n                    name: 'calendarDate',\r\n                }]\r\n        }], ctorParameters: function () { return [{ type: CalendarDateFormatter }, { type: undefined, decorators: [{\r\n                    type: Inject,\r\n                    args: [LOCALE_ID]\r\n                }] }]; } });\n\nclass CalendarUtils {\r\n    constructor(dateAdapter) {\r\n        this.dateAdapter = dateAdapter;\r\n    }\r\n    getMonthView(args) {\r\n        return getMonthView(this.dateAdapter, args);\r\n    }\r\n    getWeekViewHeader(args) {\r\n        return getWeekViewHeader(this.dateAdapter, args);\r\n    }\r\n    getWeekView(args) {\r\n        return getWeekView(this.dateAdapter, args);\r\n    }\r\n}\r\nCalendarUtils.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarUtils, deps: [{ token: DateAdapter }], target: i0.ɵɵFactoryTarget.Injectable });\r\nCalendarUtils.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarUtils });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarUtils, decorators: [{\r\n            type: Injectable\r\n        }], ctorParameters: function () { return [{ type: DateAdapter }]; } });\n\nconst MOMENT = new InjectionToken('Moment');\r\n/**\r\n * This will use <a href=\"http://momentjs.com/\" target=\"_blank\">moment</a> to do all date formatting. To use this class:\r\n *\r\n * ```typescript\r\n * import { CalendarDateFormatter, CalendarMomentDateFormatter, MOMENT } from 'angular-calendar';\r\n * import moment from 'moment';\r\n *\r\n * // in your component\r\n * provide: [{\r\n *   provide: MOMENT, useValue: moment\r\n * }, {\r\n *   provide: CalendarDateFormatter, useClass: CalendarMomentDateFormatter\r\n * }]\r\n *\r\n * ```\r\n */\r\nclass CalendarMomentDateFormatter {\r\n    /**\r\n     * @hidden\r\n     */\r\n    constructor(moment, dateAdapter) {\r\n        this.moment = moment;\r\n        this.dateAdapter = dateAdapter;\r\n    }\r\n    /**\r\n     * The month view header week day labels\r\n     */\r\n    monthViewColumnHeader({ date, locale }) {\r\n        return this.moment(date).locale(locale).format('dddd');\r\n    }\r\n    /**\r\n     * The month view cell day number\r\n     */\r\n    monthViewDayNumber({ date, locale }) {\r\n        return this.moment(date).locale(locale).format('D');\r\n    }\r\n    /**\r\n     * The month view title\r\n     */\r\n    monthViewTitle({ date, locale }) {\r\n        return this.moment(date).locale(locale).format('MMMM YYYY');\r\n    }\r\n    /**\r\n     * The week view header week day labels\r\n     */\r\n    weekViewColumnHeader({ date, locale }) {\r\n        return this.moment(date).locale(locale).format('dddd');\r\n    }\r\n    /**\r\n     * The week view sub header day and month labels\r\n     */\r\n    weekViewColumnSubHeader({ date, locale, }) {\r\n        return this.moment(date).locale(locale).format('MMM D');\r\n    }\r\n    /**\r\n     * The week view title\r\n     */\r\n    weekViewTitle({ date, locale, weekStartsOn, excludeDays, daysInWeek, }) {\r\n        const { viewStart, viewEnd } = getWeekViewPeriod(this.dateAdapter, date, weekStartsOn, excludeDays, daysInWeek);\r\n        const format = (dateToFormat, showYear) => this.moment(dateToFormat)\r\n            .locale(locale)\r\n            .format('MMM D' + (showYear ? ', YYYY' : ''));\r\n        return `${format(viewStart, viewStart.getUTCFullYear() !== viewEnd.getUTCFullYear())} - ${format(viewEnd, true)}`;\r\n    }\r\n    /**\r\n     * The time formatting down the left hand side of the week view\r\n     */\r\n    weekViewHour({ date, locale }) {\r\n        return this.moment(date).locale(locale).format('ha');\r\n    }\r\n    /**\r\n     * The time formatting down the left hand side of the day view\r\n     */\r\n    dayViewHour({ date, locale }) {\r\n        return this.moment(date).locale(locale).format('ha');\r\n    }\r\n    /**\r\n     * The day view title\r\n     */\r\n    dayViewTitle({ date, locale }) {\r\n        return this.moment(date).locale(locale).format('dddd, LL'); // dddd = Thursday\r\n    } // LL = locale-dependent Month Day, Year\r\n}\r\nCalendarMomentDateFormatter.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarMomentDateFormatter, deps: [{ token: MOMENT }, { token: DateAdapter }], target: i0.ɵɵFactoryTarget.Injectable });\r\nCalendarMomentDateFormatter.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarMomentDateFormatter });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarMomentDateFormatter, decorators: [{\r\n            type: Injectable\r\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\r\n                    type: Inject,\r\n                    args: [MOMENT]\r\n                }] }, { type: DateAdapter }]; } });\n\n/**\r\n * This will use <a href=\"https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Intl\" target=\"_blank\">Intl</a> API to do all date formatting.\r\n *\r\n * You will need to include a <a href=\"https://github.com/andyearnshaw/Intl.js/\">polyfill</a> for older browsers.\r\n */\r\nclass CalendarNativeDateFormatter {\r\n    constructor(dateAdapter) {\r\n        this.dateAdapter = dateAdapter;\r\n    }\r\n    /**\r\n     * The month view header week day labels\r\n     */\r\n    monthViewColumnHeader({ date, locale }) {\r\n        return new Intl.DateTimeFormat(locale, { weekday: 'long' }).format(date);\r\n    }\r\n    /**\r\n     * The month view cell day number\r\n     */\r\n    monthViewDayNumber({ date, locale }) {\r\n        return new Intl.DateTimeFormat(locale, { day: 'numeric' }).format(date);\r\n    }\r\n    /**\r\n     * The month view title\r\n     */\r\n    monthViewTitle({ date, locale }) {\r\n        return new Intl.DateTimeFormat(locale, {\r\n            year: 'numeric',\r\n            month: 'long',\r\n        }).format(date);\r\n    }\r\n    /**\r\n     * The week view header week day labels\r\n     */\r\n    weekViewColumnHeader({ date, locale }) {\r\n        return new Intl.DateTimeFormat(locale, { weekday: 'long' }).format(date);\r\n    }\r\n    /**\r\n     * The week view sub header day and month labels\r\n     */\r\n    weekViewColumnSubHeader({ date, locale, }) {\r\n        return new Intl.DateTimeFormat(locale, {\r\n            day: 'numeric',\r\n            month: 'short',\r\n        }).format(date);\r\n    }\r\n    /**\r\n     * The week view title\r\n     */\r\n    weekViewTitle({ date, locale, weekStartsOn, excludeDays, daysInWeek, }) {\r\n        const { viewStart, viewEnd } = getWeekViewPeriod(this.dateAdapter, date, weekStartsOn, excludeDays, daysInWeek);\r\n        const format = (dateToFormat, showYear) => new Intl.DateTimeFormat(locale, {\r\n            day: 'numeric',\r\n            month: 'short',\r\n            year: showYear ? 'numeric' : undefined,\r\n        }).format(dateToFormat);\r\n        return `${format(viewStart, viewStart.getUTCFullYear() !== viewEnd.getUTCFullYear())} - ${format(viewEnd, true)}`;\r\n    }\r\n    /**\r\n     * The time formatting down the left hand side of the week view\r\n     */\r\n    weekViewHour({ date, locale }) {\r\n        return new Intl.DateTimeFormat(locale, { hour: 'numeric' }).format(date);\r\n    }\r\n    /**\r\n     * The time formatting down the left hand side of the day view\r\n     */\r\n    dayViewHour({ date, locale }) {\r\n        return new Intl.DateTimeFormat(locale, { hour: 'numeric' }).format(date);\r\n    }\r\n    /**\r\n     * The day view title\r\n     */\r\n    dayViewTitle({ date, locale }) {\r\n        return new Intl.DateTimeFormat(locale, {\r\n            day: 'numeric',\r\n            month: 'long',\r\n            year: 'numeric',\r\n            weekday: 'long',\r\n        }).format(date);\r\n    }\r\n}\r\nCalendarNativeDateFormatter.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarNativeDateFormatter, deps: [{ token: DateAdapter }], target: i0.ɵɵFactoryTarget.Injectable });\r\nCalendarNativeDateFormatter.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarNativeDateFormatter });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarNativeDateFormatter, decorators: [{\r\n            type: Injectable\r\n        }], ctorParameters: function () { return [{ type: DateAdapter }]; } });\n\nvar CalendarEventTimesChangedEventType;\r\n(function (CalendarEventTimesChangedEventType) {\r\n    CalendarEventTimesChangedEventType[\"Drag\"] = \"drag\";\r\n    CalendarEventTimesChangedEventType[\"Drop\"] = \"drop\";\r\n    CalendarEventTimesChangedEventType[\"Resize\"] = \"resize\";\r\n})(CalendarEventTimesChangedEventType || (CalendarEventTimesChangedEventType = {}));\n\n/**\r\n * Import this module to if you're just using a singular view and want to save on bundle size. Example usage:\r\n *\r\n * ```typescript\r\n * import { CalendarCommonModule, CalendarMonthModule } from 'angular-calendar';\r\n *\r\n * @NgModule({\r\n *   imports: [\r\n *     CalendarCommonModule.forRoot(),\r\n *     CalendarMonthModule\r\n *   ]\r\n * })\r\n * class MyModule {}\r\n * ```\r\n *\r\n */\r\nclass CalendarCommonModule {\r\n    static forRoot(dateAdapter, config = {}) {\r\n        return {\r\n            ngModule: CalendarCommonModule,\r\n            providers: [\r\n                dateAdapter,\r\n                config.eventTitleFormatter || CalendarEventTitleFormatter,\r\n                config.dateFormatter || CalendarDateFormatter,\r\n                config.utils || CalendarUtils,\r\n                config.a11y || CalendarA11y,\r\n            ],\r\n        };\r\n    }\r\n}\r\nCalendarCommonModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarCommonModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\r\nCalendarCommonModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarCommonModule, declarations: [CalendarEventActionsComponent,\r\n        CalendarEventTitleComponent,\r\n        CalendarTooltipWindowComponent,\r\n        CalendarTooltipDirective,\r\n        CalendarPreviousViewDirective,\r\n        CalendarNextViewDirective,\r\n        CalendarTodayDirective,\r\n        CalendarDatePipe,\r\n        CalendarEventTitlePipe,\r\n        CalendarA11yPipe,\r\n        ClickDirective,\r\n        KeydownEnterDirective], imports: [CommonModule], exports: [CalendarEventActionsComponent,\r\n        CalendarEventTitleComponent,\r\n        CalendarTooltipWindowComponent,\r\n        CalendarTooltipDirective,\r\n        CalendarPreviousViewDirective,\r\n        CalendarNextViewDirective,\r\n        CalendarTodayDirective,\r\n        CalendarDatePipe,\r\n        CalendarEventTitlePipe,\r\n        CalendarA11yPipe,\r\n        ClickDirective,\r\n        KeydownEnterDirective] });\r\nCalendarCommonModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarCommonModule, providers: [I18nPluralPipe], imports: [CommonModule] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarCommonModule, decorators: [{\r\n            type: NgModule,\r\n            args: [{\r\n                    declarations: [\r\n                        CalendarEventActionsComponent,\r\n                        CalendarEventTitleComponent,\r\n                        CalendarTooltipWindowComponent,\r\n                        CalendarTooltipDirective,\r\n                        CalendarPreviousViewDirective,\r\n                        CalendarNextViewDirective,\r\n                        CalendarTodayDirective,\r\n                        CalendarDatePipe,\r\n                        CalendarEventTitlePipe,\r\n                        CalendarA11yPipe,\r\n                        ClickDirective,\r\n                        KeydownEnterDirective,\r\n                    ],\r\n                    imports: [CommonModule],\r\n                    exports: [\r\n                        CalendarEventActionsComponent,\r\n                        CalendarEventTitleComponent,\r\n                        CalendarTooltipWindowComponent,\r\n                        CalendarTooltipDirective,\r\n                        CalendarPreviousViewDirective,\r\n                        CalendarNextViewDirective,\r\n                        CalendarTodayDirective,\r\n                        CalendarDatePipe,\r\n                        CalendarEventTitlePipe,\r\n                        CalendarA11yPipe,\r\n                        ClickDirective,\r\n                        KeydownEnterDirective,\r\n                    ],\r\n                    providers: [I18nPluralPipe],\r\n                }]\r\n        }] });\n\nclass CalendarDragHelper {\r\n    constructor(dragContainerElement, draggableElement) {\r\n        this.dragContainerElement = dragContainerElement;\r\n        this.startPosition = draggableElement.getBoundingClientRect();\r\n    }\r\n    validateDrag({ x, y, snapDraggedEvents, dragAlreadyMoved, transform, }) {\r\n        const isDraggedWithinThreshold = isWithinThreshold({ x, y }) || dragAlreadyMoved;\r\n        if (snapDraggedEvents) {\r\n            const inner = Object.assign({}, this.startPosition, {\r\n                left: this.startPosition.left + transform.x,\r\n                right: this.startPosition.right + transform.x,\r\n                top: this.startPosition.top + transform.y,\r\n                bottom: this.startPosition.bottom + transform.y,\r\n            });\r\n            if (isDraggedWithinThreshold) {\r\n                const outer = this.dragContainerElement.getBoundingClientRect();\r\n                const isTopInside = outer.top < inner.top && inner.top < outer.bottom;\r\n                const isBottomInside = outer.top < inner.bottom && inner.bottom < outer.bottom;\r\n                return (isInsideLeftAndRight(outer, inner) && (isTopInside || isBottomInside));\r\n            }\r\n            /* istanbul ignore next */\r\n            return false;\r\n        }\r\n        else {\r\n            return isDraggedWithinThreshold;\r\n        }\r\n    }\r\n}\n\nclass CalendarResizeHelper {\r\n    constructor(resizeContainerElement, minWidth, rtl) {\r\n        this.resizeContainerElement = resizeContainerElement;\r\n        this.minWidth = minWidth;\r\n        this.rtl = rtl;\r\n    }\r\n    validateResize({ rectangle, edges }) {\r\n        if (this.rtl) {\r\n            // TODO - find a way of testing this, for some reason the tests always fail but it does actually work\r\n            /* istanbul ignore next */\r\n            if (typeof edges.left !== 'undefined') {\r\n                rectangle.left -= edges.left;\r\n                rectangle.right += edges.left;\r\n            }\r\n            else if (typeof edges.right !== 'undefined') {\r\n                rectangle.left += edges.right;\r\n                rectangle.right -= edges.right;\r\n            }\r\n            rectangle.width = rectangle.right - rectangle.left;\r\n        }\r\n        if (this.minWidth &&\r\n            Math.ceil(rectangle.width) < Math.ceil(this.minWidth)) {\r\n            return false;\r\n        }\r\n        return isInside(this.resizeContainerElement.getBoundingClientRect(), rectangle);\r\n    }\r\n}\n\nclass CalendarWeekViewHeaderComponent {\r\n    constructor() {\r\n        this.dayHeaderClicked = new EventEmitter();\r\n        this.eventDropped = new EventEmitter();\r\n        this.dragEnter = new EventEmitter();\r\n        this.trackByWeekDayHeaderDate = trackByWeekDayHeaderDate;\r\n    }\r\n}\r\nCalendarWeekViewHeaderComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarWeekViewHeaderComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\r\nCalendarWeekViewHeaderComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.0.4\", type: CalendarWeekViewHeaderComponent, selector: \"mwl-calendar-week-view-header\", inputs: { days: \"days\", locale: \"locale\", customTemplate: \"customTemplate\" }, outputs: { dayHeaderClicked: \"dayHeaderClicked\", eventDropped: \"eventDropped\", dragEnter: \"dragEnter\" }, ngImport: i0, template: `\r\n    <ng-template\r\n      #defaultTemplate\r\n      let-days=\"days\"\r\n      let-locale=\"locale\"\r\n      let-dayHeaderClicked=\"dayHeaderClicked\"\r\n      let-eventDropped=\"eventDropped\"\r\n      let-trackByWeekDayHeaderDate=\"trackByWeekDayHeaderDate\"\r\n      let-dragEnter=\"dragEnter\"\r\n    >\r\n      <div class=\"cal-day-headers\" role=\"row\">\r\n        <div\r\n          class=\"cal-header\"\r\n          *ngFor=\"let day of days; trackBy: trackByWeekDayHeaderDate\"\r\n          [class.cal-past]=\"day.isPast\"\r\n          [class.cal-today]=\"day.isToday\"\r\n          [class.cal-future]=\"day.isFuture\"\r\n          [class.cal-weekend]=\"day.isWeekend\"\r\n          [ngClass]=\"day.cssClass\"\r\n          (mwlClick)=\"dayHeaderClicked.emit({ day: day, sourceEvent: $event })\"\r\n          mwlDroppable\r\n          dragOverClass=\"cal-drag-over\"\r\n          (drop)=\"\r\n            eventDropped.emit({\r\n              event: $event.dropData.event,\r\n              newStart: day.date\r\n            })\r\n          \"\r\n          (dragEnter)=\"dragEnter.emit({ date: day.date })\"\r\n          tabindex=\"0\"\r\n          role=\"columnheader\"\r\n        >\r\n          <b>{{ day.date | calendarDate : 'weekViewColumnHeader' : locale }}</b\r\n          ><br />\r\n          <span>{{\r\n            day.date | calendarDate : 'weekViewColumnSubHeader' : locale\r\n          }}</span>\r\n        </div>\r\n      </div>\r\n    </ng-template>\r\n    <ng-template\r\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\r\n      [ngTemplateOutletContext]=\"{\r\n        days: days,\r\n        locale: locale,\r\n        dayHeaderClicked: dayHeaderClicked,\r\n        eventDropped: eventDropped,\r\n        dragEnter: dragEnter,\r\n        trackByWeekDayHeaderDate: trackByWeekDayHeaderDate\r\n      }\"\r\n    >\r\n    </ng-template>\r\n  `, isInline: true, dependencies: [{ kind: \"directive\", type: i1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i1.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"directive\", type: i2.DroppableDirective, selector: \"[mwlDroppable]\", inputs: [\"dragOverClass\", \"dragActiveClass\", \"validateDrop\"], outputs: [\"dragEnter\", \"dragLeave\", \"dragOver\", \"drop\"] }, { kind: \"directive\", type: ClickDirective, selector: \"[mwlClick]\", inputs: [\"clickListenerDisabled\"], outputs: [\"mwlClick\"] }, { kind: \"pipe\", type: CalendarDatePipe, name: \"calendarDate\" }] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarWeekViewHeaderComponent, decorators: [{\r\n            type: Component,\r\n            args: [{\r\n                    selector: 'mwl-calendar-week-view-header',\r\n                    template: `\r\n    <ng-template\r\n      #defaultTemplate\r\n      let-days=\"days\"\r\n      let-locale=\"locale\"\r\n      let-dayHeaderClicked=\"dayHeaderClicked\"\r\n      let-eventDropped=\"eventDropped\"\r\n      let-trackByWeekDayHeaderDate=\"trackByWeekDayHeaderDate\"\r\n      let-dragEnter=\"dragEnter\"\r\n    >\r\n      <div class=\"cal-day-headers\" role=\"row\">\r\n        <div\r\n          class=\"cal-header\"\r\n          *ngFor=\"let day of days; trackBy: trackByWeekDayHeaderDate\"\r\n          [class.cal-past]=\"day.isPast\"\r\n          [class.cal-today]=\"day.isToday\"\r\n          [class.cal-future]=\"day.isFuture\"\r\n          [class.cal-weekend]=\"day.isWeekend\"\r\n          [ngClass]=\"day.cssClass\"\r\n          (mwlClick)=\"dayHeaderClicked.emit({ day: day, sourceEvent: $event })\"\r\n          mwlDroppable\r\n          dragOverClass=\"cal-drag-over\"\r\n          (drop)=\"\r\n            eventDropped.emit({\r\n              event: $event.dropData.event,\r\n              newStart: day.date\r\n            })\r\n          \"\r\n          (dragEnter)=\"dragEnter.emit({ date: day.date })\"\r\n          tabindex=\"0\"\r\n          role=\"columnheader\"\r\n        >\r\n          <b>{{ day.date | calendarDate : 'weekViewColumnHeader' : locale }}</b\r\n          ><br />\r\n          <span>{{\r\n            day.date | calendarDate : 'weekViewColumnSubHeader' : locale\r\n          }}</span>\r\n        </div>\r\n      </div>\r\n    </ng-template>\r\n    <ng-template\r\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\r\n      [ngTemplateOutletContext]=\"{\r\n        days: days,\r\n        locale: locale,\r\n        dayHeaderClicked: dayHeaderClicked,\r\n        eventDropped: eventDropped,\r\n        dragEnter: dragEnter,\r\n        trackByWeekDayHeaderDate: trackByWeekDayHeaderDate\r\n      }\"\r\n    >\r\n    </ng-template>\r\n  `,\r\n                }]\r\n        }], propDecorators: { days: [{\r\n                type: Input\r\n            }], locale: [{\r\n                type: Input\r\n            }], customTemplate: [{\r\n                type: Input\r\n            }], dayHeaderClicked: [{\r\n                type: Output\r\n            }], eventDropped: [{\r\n                type: Output\r\n            }], dragEnter: [{\r\n                type: Output\r\n            }] } });\n\nclass CalendarWeekViewEventComponent {\r\n    constructor() {\r\n        this.eventClicked = new EventEmitter();\r\n    }\r\n}\r\nCalendarWeekViewEventComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarWeekViewEventComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\r\nCalendarWeekViewEventComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.0.4\", type: CalendarWeekViewEventComponent, selector: \"mwl-calendar-week-view-event\", inputs: { locale: \"locale\", weekEvent: \"weekEvent\", tooltipPlacement: \"tooltipPlacement\", tooltipAppendToBody: \"tooltipAppendToBody\", tooltipDisabled: \"tooltipDisabled\", tooltipDelay: \"tooltipDelay\", customTemplate: \"customTemplate\", eventTitleTemplate: \"eventTitleTemplate\", eventActionsTemplate: \"eventActionsTemplate\", tooltipTemplate: \"tooltipTemplate\", column: \"column\", daysInWeek: \"daysInWeek\" }, outputs: { eventClicked: \"eventClicked\" }, ngImport: i0, template: `\r\n    <ng-template\r\n      #defaultTemplate\r\n      let-weekEvent=\"weekEvent\"\r\n      let-tooltipPlacement=\"tooltipPlacement\"\r\n      let-eventClicked=\"eventClicked\"\r\n      let-tooltipTemplate=\"tooltipTemplate\"\r\n      let-tooltipAppendToBody=\"tooltipAppendToBody\"\r\n      let-tooltipDisabled=\"tooltipDisabled\"\r\n      let-tooltipDelay=\"tooltipDelay\"\r\n      let-column=\"column\"\r\n      let-daysInWeek=\"daysInWeek\"\r\n    >\r\n      <div\r\n        class=\"cal-event\"\r\n        [ngStyle]=\"{\r\n          color: weekEvent.event.color?.secondaryText,\r\n          backgroundColor: weekEvent.event.color?.secondary,\r\n          borderColor: weekEvent.event.color?.primary\r\n        }\"\r\n        [mwlCalendarTooltip]=\"\r\n          !tooltipDisabled\r\n            ? (weekEvent.event.title\r\n              | calendarEventTitle\r\n                : (daysInWeek === 1 ? 'dayTooltip' : 'weekTooltip')\r\n                : weekEvent.tempEvent || weekEvent.event)\r\n            : ''\r\n        \"\r\n        [tooltipPlacement]=\"tooltipPlacement\"\r\n        [tooltipEvent]=\"weekEvent.tempEvent || weekEvent.event\"\r\n        [tooltipTemplate]=\"tooltipTemplate\"\r\n        [tooltipAppendToBody]=\"tooltipAppendToBody\"\r\n        [tooltipDelay]=\"tooltipDelay\"\r\n        (mwlClick)=\"eventClicked.emit({ sourceEvent: $event })\"\r\n        (mwlKeydownEnter)=\"eventClicked.emit({ sourceEvent: $event })\"\r\n        tabindex=\"0\"\r\n        role=\"application\"\r\n        [attr.aria-label]=\"\r\n          { event: weekEvent.tempEvent || weekEvent.event, locale: locale }\r\n            | calendarA11y : 'eventDescription'\r\n        \"\r\n      >\r\n        <mwl-calendar-event-actions\r\n          [event]=\"weekEvent.tempEvent || weekEvent.event\"\r\n          [customTemplate]=\"eventActionsTemplate\"\r\n        >\r\n        </mwl-calendar-event-actions>\r\n        &ngsp;\r\n        <mwl-calendar-event-title\r\n          [event]=\"weekEvent.tempEvent || weekEvent.event\"\r\n          [customTemplate]=\"eventTitleTemplate\"\r\n          [view]=\"daysInWeek === 1 ? 'day' : 'week'\"\r\n        >\r\n        </mwl-calendar-event-title>\r\n      </div>\r\n    </ng-template>\r\n    <ng-template\r\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\r\n      [ngTemplateOutletContext]=\"{\r\n        weekEvent: weekEvent,\r\n        tooltipPlacement: tooltipPlacement,\r\n        eventClicked: eventClicked,\r\n        tooltipTemplate: tooltipTemplate,\r\n        tooltipAppendToBody: tooltipAppendToBody,\r\n        tooltipDisabled: tooltipDisabled,\r\n        tooltipDelay: tooltipDelay,\r\n        column: column,\r\n        daysInWeek: daysInWeek\r\n      }\"\r\n    >\r\n    </ng-template>\r\n  `, isInline: true, dependencies: [{ kind: \"directive\", type: i1.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"directive\", type: i1.NgStyle, selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }, { kind: \"component\", type: CalendarEventActionsComponent, selector: \"mwl-calendar-event-actions\", inputs: [\"event\", \"customTemplate\"] }, { kind: \"component\", type: CalendarEventTitleComponent, selector: \"mwl-calendar-event-title\", inputs: [\"event\", \"customTemplate\", \"view\"] }, { kind: \"directive\", type: CalendarTooltipDirective, selector: \"[mwlCalendarTooltip]\", inputs: [\"mwlCalendarTooltip\", \"tooltipPlacement\", \"tooltipTemplate\", \"tooltipEvent\", \"tooltipAppendToBody\", \"tooltipDelay\"] }, { kind: \"directive\", type: ClickDirective, selector: \"[mwlClick]\", inputs: [\"clickListenerDisabled\"], outputs: [\"mwlClick\"] }, { kind: \"directive\", type: KeydownEnterDirective, selector: \"[mwlKeydownEnter]\", outputs: [\"mwlKeydownEnter\"] }, { kind: \"pipe\", type: CalendarEventTitlePipe, name: \"calendarEventTitle\" }, { kind: \"pipe\", type: CalendarA11yPipe, name: \"calendarA11y\" }] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarWeekViewEventComponent, decorators: [{\r\n            type: Component,\r\n            args: [{\r\n                    selector: 'mwl-calendar-week-view-event',\r\n                    template: `\r\n    <ng-template\r\n      #defaultTemplate\r\n      let-weekEvent=\"weekEvent\"\r\n      let-tooltipPlacement=\"tooltipPlacement\"\r\n      let-eventClicked=\"eventClicked\"\r\n      let-tooltipTemplate=\"tooltipTemplate\"\r\n      let-tooltipAppendToBody=\"tooltipAppendToBody\"\r\n      let-tooltipDisabled=\"tooltipDisabled\"\r\n      let-tooltipDelay=\"tooltipDelay\"\r\n      let-column=\"column\"\r\n      let-daysInWeek=\"daysInWeek\"\r\n    >\r\n      <div\r\n        class=\"cal-event\"\r\n        [ngStyle]=\"{\r\n          color: weekEvent.event.color?.secondaryText,\r\n          backgroundColor: weekEvent.event.color?.secondary,\r\n          borderColor: weekEvent.event.color?.primary\r\n        }\"\r\n        [mwlCalendarTooltip]=\"\r\n          !tooltipDisabled\r\n            ? (weekEvent.event.title\r\n              | calendarEventTitle\r\n                : (daysInWeek === 1 ? 'dayTooltip' : 'weekTooltip')\r\n                : weekEvent.tempEvent || weekEvent.event)\r\n            : ''\r\n        \"\r\n        [tooltipPlacement]=\"tooltipPlacement\"\r\n        [tooltipEvent]=\"weekEvent.tempEvent || weekEvent.event\"\r\n        [tooltipTemplate]=\"tooltipTemplate\"\r\n        [tooltipAppendToBody]=\"tooltipAppendToBody\"\r\n        [tooltipDelay]=\"tooltipDelay\"\r\n        (mwlClick)=\"eventClicked.emit({ sourceEvent: $event })\"\r\n        (mwlKeydownEnter)=\"eventClicked.emit({ sourceEvent: $event })\"\r\n        tabindex=\"0\"\r\n        role=\"application\"\r\n        [attr.aria-label]=\"\r\n          { event: weekEvent.tempEvent || weekEvent.event, locale: locale }\r\n            | calendarA11y : 'eventDescription'\r\n        \"\r\n      >\r\n        <mwl-calendar-event-actions\r\n          [event]=\"weekEvent.tempEvent || weekEvent.event\"\r\n          [customTemplate]=\"eventActionsTemplate\"\r\n        >\r\n        </mwl-calendar-event-actions>\r\n        &ngsp;\r\n        <mwl-calendar-event-title\r\n          [event]=\"weekEvent.tempEvent || weekEvent.event\"\r\n          [customTemplate]=\"eventTitleTemplate\"\r\n          [view]=\"daysInWeek === 1 ? 'day' : 'week'\"\r\n        >\r\n        </mwl-calendar-event-title>\r\n      </div>\r\n    </ng-template>\r\n    <ng-template\r\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\r\n      [ngTemplateOutletContext]=\"{\r\n        weekEvent: weekEvent,\r\n        tooltipPlacement: tooltipPlacement,\r\n        eventClicked: eventClicked,\r\n        tooltipTemplate: tooltipTemplate,\r\n        tooltipAppendToBody: tooltipAppendToBody,\r\n        tooltipDisabled: tooltipDisabled,\r\n        tooltipDelay: tooltipDelay,\r\n        column: column,\r\n        daysInWeek: daysInWeek\r\n      }\"\r\n    >\r\n    </ng-template>\r\n  `,\r\n                }]\r\n        }], propDecorators: { locale: [{\r\n                type: Input\r\n            }], weekEvent: [{\r\n                type: Input\r\n            }], tooltipPlacement: [{\r\n                type: Input\r\n            }], tooltipAppendToBody: [{\r\n                type: Input\r\n            }], tooltipDisabled: [{\r\n                type: Input\r\n            }], tooltipDelay: [{\r\n                type: Input\r\n            }], customTemplate: [{\r\n                type: Input\r\n            }], eventTitleTemplate: [{\r\n                type: Input\r\n            }], eventActionsTemplate: [{\r\n                type: Input\r\n            }], tooltipTemplate: [{\r\n                type: Input\r\n            }], column: [{\r\n                type: Input\r\n            }], daysInWeek: [{\r\n                type: Input\r\n            }], eventClicked: [{\r\n                type: Output\r\n            }] } });\n\nclass CalendarWeekViewHourSegmentComponent {\r\n}\r\nCalendarWeekViewHourSegmentComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarWeekViewHourSegmentComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\r\nCalendarWeekViewHourSegmentComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.0.4\", type: CalendarWeekViewHourSegmentComponent, selector: \"mwl-calendar-week-view-hour-segment\", inputs: { segment: \"segment\", segmentHeight: \"segmentHeight\", locale: \"locale\", isTimeLabel: \"isTimeLabel\", daysInWeek: \"daysInWeek\", customTemplate: \"customTemplate\" }, ngImport: i0, template: `\r\n    <ng-template\r\n      #defaultTemplate\r\n      let-segment=\"segment\"\r\n      let-locale=\"locale\"\r\n      let-segmentHeight=\"segmentHeight\"\r\n      let-isTimeLabel=\"isTimeLabel\"\r\n      let-daysInWeek=\"daysInWeek\"\r\n    >\r\n      <div\r\n        [attr.aria-hidden]=\"\r\n          {}\r\n            | calendarA11y\r\n              : (daysInWeek === 1\r\n                  ? 'hideDayHourSegment'\r\n                  : 'hideWeekHourSegment')\r\n        \"\r\n        class=\"cal-hour-segment\"\r\n        [style.height.px]=\"segmentHeight\"\r\n        [class.cal-hour-start]=\"segment.isStart\"\r\n        [class.cal-after-hour-start]=\"!segment.isStart\"\r\n        [ngClass]=\"segment.cssClass\"\r\n      >\r\n        <div class=\"cal-time\" *ngIf=\"isTimeLabel\">\r\n          {{\r\n            segment.displayDate\r\n              | calendarDate\r\n                : (daysInWeek === 1 ? 'dayViewHour' : 'weekViewHour')\r\n                : locale\r\n          }}\r\n        </div>\r\n      </div>\r\n    </ng-template>\r\n    <ng-template\r\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\r\n      [ngTemplateOutletContext]=\"{\r\n        segment: segment,\r\n        locale: locale,\r\n        segmentHeight: segmentHeight,\r\n        isTimeLabel: isTimeLabel,\r\n        daysInWeek: daysInWeek\r\n      }\"\r\n    >\r\n    </ng-template>\r\n  `, isInline: true, dependencies: [{ kind: \"directive\", type: i1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i1.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"pipe\", type: CalendarDatePipe, name: \"calendarDate\" }, { kind: \"pipe\", type: CalendarA11yPipe, name: \"calendarA11y\" }] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarWeekViewHourSegmentComponent, decorators: [{\r\n            type: Component,\r\n            args: [{\r\n                    selector: 'mwl-calendar-week-view-hour-segment',\r\n                    template: `\r\n    <ng-template\r\n      #defaultTemplate\r\n      let-segment=\"segment\"\r\n      let-locale=\"locale\"\r\n      let-segmentHeight=\"segmentHeight\"\r\n      let-isTimeLabel=\"isTimeLabel\"\r\n      let-daysInWeek=\"daysInWeek\"\r\n    >\r\n      <div\r\n        [attr.aria-hidden]=\"\r\n          {}\r\n            | calendarA11y\r\n              : (daysInWeek === 1\r\n                  ? 'hideDayHourSegment'\r\n                  : 'hideWeekHourSegment')\r\n        \"\r\n        class=\"cal-hour-segment\"\r\n        [style.height.px]=\"segmentHeight\"\r\n        [class.cal-hour-start]=\"segment.isStart\"\r\n        [class.cal-after-hour-start]=\"!segment.isStart\"\r\n        [ngClass]=\"segment.cssClass\"\r\n      >\r\n        <div class=\"cal-time\" *ngIf=\"isTimeLabel\">\r\n          {{\r\n            segment.displayDate\r\n              | calendarDate\r\n                : (daysInWeek === 1 ? 'dayViewHour' : 'weekViewHour')\r\n                : locale\r\n          }}\r\n        </div>\r\n      </div>\r\n    </ng-template>\r\n    <ng-template\r\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\r\n      [ngTemplateOutletContext]=\"{\r\n        segment: segment,\r\n        locale: locale,\r\n        segmentHeight: segmentHeight,\r\n        isTimeLabel: isTimeLabel,\r\n        daysInWeek: daysInWeek\r\n      }\"\r\n    >\r\n    </ng-template>\r\n  `,\r\n                }]\r\n        }], propDecorators: { segment: [{\r\n                type: Input\r\n            }], segmentHeight: [{\r\n                type: Input\r\n            }], locale: [{\r\n                type: Input\r\n            }], isTimeLabel: [{\r\n                type: Input\r\n            }], daysInWeek: [{\r\n                type: Input\r\n            }], customTemplate: [{\r\n                type: Input\r\n            }] } });\n\nclass CalendarWeekViewCurrentTimeMarkerComponent {\r\n    constructor(dateAdapter, zone) {\r\n        this.dateAdapter = dateAdapter;\r\n        this.zone = zone;\r\n        this.columnDate$ = new BehaviorSubject(undefined);\r\n        this.marker$ = this.zone.onStable.pipe(switchMap(() => interval(60 * 1000)), startWith(0), switchMapTo(this.columnDate$), map((columnDate) => {\r\n            const startOfDay = this.dateAdapter.setMinutes(this.dateAdapter.setHours(columnDate, this.dayStartHour), this.dayStartMinute);\r\n            const endOfDay = this.dateAdapter.setMinutes(this.dateAdapter.setHours(columnDate, this.dayEndHour), this.dayEndMinute);\r\n            const hourHeightModifier = (this.hourSegments * this.hourSegmentHeight) /\r\n                (this.hourDuration || 60);\r\n            const now = new Date();\r\n            return {\r\n                isVisible: this.dateAdapter.isSameDay(columnDate, now) &&\r\n                    now >= startOfDay &&\r\n                    now <= endOfDay,\r\n                top: this.dateAdapter.differenceInMinutes(now, startOfDay) *\r\n                    hourHeightModifier,\r\n            };\r\n        }));\r\n    }\r\n    ngOnChanges(changes) {\r\n        if (changes.columnDate) {\r\n            this.columnDate$.next(changes.columnDate.currentValue);\r\n        }\r\n    }\r\n}\r\nCalendarWeekViewCurrentTimeMarkerComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarWeekViewCurrentTimeMarkerComponent, deps: [{ token: DateAdapter }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\r\nCalendarWeekViewCurrentTimeMarkerComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.0.4\", type: CalendarWeekViewCurrentTimeMarkerComponent, selector: \"mwl-calendar-week-view-current-time-marker\", inputs: { columnDate: \"columnDate\", dayStartHour: \"dayStartHour\", dayStartMinute: \"dayStartMinute\", dayEndHour: \"dayEndHour\", dayEndMinute: \"dayEndMinute\", hourSegments: \"hourSegments\", hourDuration: \"hourDuration\", hourSegmentHeight: \"hourSegmentHeight\", customTemplate: \"customTemplate\" }, usesOnChanges: true, ngImport: i0, template: `\r\n    <ng-template\r\n      #defaultTemplate\r\n      let-columnDate=\"columnDate\"\r\n      let-dayStartHour=\"dayStartHour\"\r\n      let-dayStartMinute=\"dayStartMinute\"\r\n      let-dayEndHour=\"dayEndHour\"\r\n      let-dayEndMinute=\"dayEndMinute\"\r\n      let-isVisible=\"isVisible\"\r\n      let-topPx=\"topPx\"\r\n    >\r\n      <div\r\n        class=\"cal-current-time-marker\"\r\n        *ngIf=\"isVisible\"\r\n        [style.top.px]=\"topPx\"\r\n      ></div>\r\n    </ng-template>\r\n    <ng-template\r\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\r\n      [ngTemplateOutletContext]=\"{\r\n        columnDate: columnDate,\r\n        dayStartHour: dayStartHour,\r\n        dayStartMinute: dayStartMinute,\r\n        dayEndHour: dayEndHour,\r\n        dayEndMinute: dayEndMinute,\r\n        isVisible: (marker$ | async)?.isVisible,\r\n        topPx: (marker$ | async)?.top\r\n      }\"\r\n    >\r\n    </ng-template>\r\n  `, isInline: true, dependencies: [{ kind: \"directive\", type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i1.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"pipe\", type: i1.AsyncPipe, name: \"async\" }] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarWeekViewCurrentTimeMarkerComponent, decorators: [{\r\n            type: Component,\r\n            args: [{\r\n                    selector: 'mwl-calendar-week-view-current-time-marker',\r\n                    template: `\r\n    <ng-template\r\n      #defaultTemplate\r\n      let-columnDate=\"columnDate\"\r\n      let-dayStartHour=\"dayStartHour\"\r\n      let-dayStartMinute=\"dayStartMinute\"\r\n      let-dayEndHour=\"dayEndHour\"\r\n      let-dayEndMinute=\"dayEndMinute\"\r\n      let-isVisible=\"isVisible\"\r\n      let-topPx=\"topPx\"\r\n    >\r\n      <div\r\n        class=\"cal-current-time-marker\"\r\n        *ngIf=\"isVisible\"\r\n        [style.top.px]=\"topPx\"\r\n      ></div>\r\n    </ng-template>\r\n    <ng-template\r\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\r\n      [ngTemplateOutletContext]=\"{\r\n        columnDate: columnDate,\r\n        dayStartHour: dayStartHour,\r\n        dayStartMinute: dayStartMinute,\r\n        dayEndHour: dayEndHour,\r\n        dayEndMinute: dayEndMinute,\r\n        isVisible: (marker$ | async)?.isVisible,\r\n        topPx: (marker$ | async)?.top\r\n      }\"\r\n    >\r\n    </ng-template>\r\n  `,\r\n                }]\r\n        }], ctorParameters: function () { return [{ type: DateAdapter }, { type: i0.NgZone }]; }, propDecorators: { columnDate: [{\r\n                type: Input\r\n            }], dayStartHour: [{\r\n                type: Input\r\n            }], dayStartMinute: [{\r\n                type: Input\r\n            }], dayEndHour: [{\r\n                type: Input\r\n            }], dayEndMinute: [{\r\n                type: Input\r\n            }], hourSegments: [{\r\n                type: Input\r\n            }], hourDuration: [{\r\n                type: Input\r\n            }], hourSegmentHeight: [{\r\n                type: Input\r\n            }], customTemplate: [{\r\n                type: Input\r\n            }] } });\n\n/**\r\n * Shows all events on a given week. Example usage:\r\n *\r\n * ```typescript\r\n * <mwl-calendar-week-view\r\n *  [viewDate]=\"viewDate\"\r\n *  [events]=\"events\">\r\n * </mwl-calendar-week-view>\r\n * ```\r\n */\r\nclass CalendarWeekViewComponent {\r\n    /**\r\n     * @hidden\r\n     */\r\n    constructor(cdr, utils, locale, dateAdapter, element) {\r\n        this.cdr = cdr;\r\n        this.utils = utils;\r\n        this.dateAdapter = dateAdapter;\r\n        this.element = element;\r\n        /**\r\n         * An array of events to display on view\r\n         * The schema is available here: https://github.com/mattlewis92/calendar-utils/blob/c51689985f59a271940e30bc4e2c4e1fee3fcb5c/src/calendarUtils.ts#L49-L63\r\n         */\r\n        this.events = [];\r\n        /**\r\n         * An array of day indexes (0 = sunday, 1 = monday etc) that will be hidden on the view\r\n         */\r\n        this.excludeDays = [];\r\n        /**\r\n         * The placement of the event tooltip\r\n         */\r\n        this.tooltipPlacement = 'auto';\r\n        /**\r\n         * Whether to append tooltips to the body or next to the trigger element\r\n         */\r\n        this.tooltipAppendToBody = true;\r\n        /**\r\n         * The delay in milliseconds before the tooltip should be displayed. If not provided the tooltip\r\n         * will be displayed immediately.\r\n         */\r\n        this.tooltipDelay = null;\r\n        /**\r\n         * The precision to display events.\r\n         * `days` will round event start and end dates to the nearest day and `minutes` will not do this rounding\r\n         */\r\n        this.precision = 'days';\r\n        /**\r\n         * Whether to snap events to a grid when dragging\r\n         */\r\n        this.snapDraggedEvents = true;\r\n        /**\r\n         * The number of segments in an hour. Must divide equally into 60.\r\n         */\r\n        this.hourSegments = 2;\r\n        /**\r\n         * The height in pixels of each hour segment\r\n         */\r\n        this.hourSegmentHeight = 30;\r\n        /**\r\n         * The minimum height in pixels of each event\r\n         */\r\n        this.minimumEventHeight = 30;\r\n        /**\r\n         * The day start hours in 24 hour time. Must be 0-23\r\n         */\r\n        this.dayStartHour = 0;\r\n        /**\r\n         * The day start minutes. Must be 0-59\r\n         */\r\n        this.dayStartMinute = 0;\r\n        /**\r\n         * The day end hours in 24 hour time. Must be 0-23\r\n         */\r\n        this.dayEndHour = 23;\r\n        /**\r\n         * The day end minutes. Must be 0-59\r\n         */\r\n        this.dayEndMinute = 59;\r\n        /**\r\n         * Called when a header week day is clicked. Adding a `cssClass` property on `$event.day` will add that class to the header element\r\n         */\r\n        this.dayHeaderClicked = new EventEmitter();\r\n        /**\r\n         * Called when an event title is clicked\r\n         */\r\n        this.eventClicked = new EventEmitter();\r\n        /**\r\n         * Called when an event is resized or dragged and dropped\r\n         */\r\n        this.eventTimesChanged = new EventEmitter();\r\n        /**\r\n         * An output that will be called before the view is rendered for the current week.\r\n         * If you add the `cssClass` property to a day in the header it will add that class to the cell element in the template\r\n         */\r\n        this.beforeViewRender = new EventEmitter();\r\n        /**\r\n         * Called when an hour segment is clicked\r\n         */\r\n        this.hourSegmentClicked = new EventEmitter();\r\n        /**\r\n         * @hidden\r\n         */\r\n        this.allDayEventResizes = new Map();\r\n        /**\r\n         * @hidden\r\n         */\r\n        this.timeEventResizes = new Map();\r\n        /**\r\n         * @hidden\r\n         */\r\n        this.eventDragEnterByType = {\r\n            allDay: 0,\r\n            time: 0,\r\n        };\r\n        /**\r\n         * @hidden\r\n         */\r\n        this.dragActive = false;\r\n        /**\r\n         * @hidden\r\n         */\r\n        this.dragAlreadyMoved = false;\r\n        /**\r\n         * @hidden\r\n         */\r\n        this.calendarId = Symbol('angular calendar week view id');\r\n        /**\r\n         * @hidden\r\n         */\r\n        this.rtl = false;\r\n        /**\r\n         * @hidden\r\n         */\r\n        this.trackByWeekDayHeaderDate = trackByWeekDayHeaderDate;\r\n        /**\r\n         * @hidden\r\n         */\r\n        this.trackByHourSegment = trackByHourSegment;\r\n        /**\r\n         * @hidden\r\n         */\r\n        this.trackByHour = trackByHour;\r\n        /**\r\n         * @hidden\r\n         */\r\n        this.trackByWeekAllDayEvent = trackByWeekAllDayEvent;\r\n        /**\r\n         * @hidden\r\n         */\r\n        this.trackByWeekTimeEvent = trackByWeekTimeEvent;\r\n        /**\r\n         * @hidden\r\n         */\r\n        this.trackByHourColumn = (index, column) => column.hours[0] ? column.hours[0].segments[0].date.toISOString() : column;\r\n        /**\r\n         * @hidden\r\n         */\r\n        this.trackById = (index, row) => row.id;\r\n        this.locale = locale;\r\n    }\r\n    /**\r\n     * @hidden\r\n     */\r\n    ngOnInit() {\r\n        if (this.refresh) {\r\n            this.refreshSubscription = this.refresh.subscribe(() => {\r\n                this.refreshAll();\r\n                this.cdr.markForCheck();\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * @hidden\r\n     */\r\n    ngOnChanges(changes) {\r\n        const refreshHeader = changes.viewDate ||\r\n            changes.excludeDays ||\r\n            changes.weekendDays ||\r\n            changes.daysInWeek ||\r\n            changes.weekStartsOn;\r\n        const refreshBody = changes.viewDate ||\r\n            changes.dayStartHour ||\r\n            changes.dayStartMinute ||\r\n            changes.dayEndHour ||\r\n            changes.dayEndMinute ||\r\n            changes.hourSegments ||\r\n            changes.hourDuration ||\r\n            changes.weekStartsOn ||\r\n            changes.weekendDays ||\r\n            changes.excludeDays ||\r\n            changes.hourSegmentHeight ||\r\n            changes.events ||\r\n            changes.daysInWeek ||\r\n            changes.minimumEventHeight;\r\n        if (refreshHeader) {\r\n            this.refreshHeader();\r\n        }\r\n        if (changes.events) {\r\n            validateEvents(this.events);\r\n        }\r\n        if (refreshBody) {\r\n            this.refreshBody();\r\n        }\r\n        if (refreshHeader || refreshBody) {\r\n            this.emitBeforeViewRender();\r\n        }\r\n    }\r\n    /**\r\n     * @hidden\r\n     */\r\n    ngOnDestroy() {\r\n        if (this.refreshSubscription) {\r\n            this.refreshSubscription.unsubscribe();\r\n        }\r\n    }\r\n    /**\r\n     * @hidden\r\n     */\r\n    ngAfterViewInit() {\r\n        this.rtl =\r\n            typeof window !== 'undefined' &&\r\n                getComputedStyle(this.element.nativeElement).direction === 'rtl';\r\n        this.cdr.detectChanges();\r\n    }\r\n    /**\r\n     * @hidden\r\n     */\r\n    timeEventResizeStarted(eventsContainer, timeEvent, resizeEvent) {\r\n        this.timeEventResizes.set(timeEvent.event, resizeEvent);\r\n        this.resizeStarted(eventsContainer, timeEvent);\r\n    }\r\n    /**\r\n     * @hidden\r\n     */\r\n    timeEventResizing(timeEvent, resizeEvent) {\r\n        this.timeEventResizes.set(timeEvent.event, resizeEvent);\r\n        const adjustedEvents = new Map();\r\n        const tempEvents = [...this.events];\r\n        this.timeEventResizes.forEach((lastResizeEvent, event) => {\r\n            const newEventDates = this.getTimeEventResizedDates(event, lastResizeEvent);\r\n            const adjustedEvent = { ...event, ...newEventDates };\r\n            adjustedEvents.set(adjustedEvent, event);\r\n            const eventIndex = tempEvents.indexOf(event);\r\n            tempEvents[eventIndex] = adjustedEvent;\r\n        });\r\n        this.restoreOriginalEvents(tempEvents, adjustedEvents, true);\r\n    }\r\n    /**\r\n     * @hidden\r\n     */\r\n    timeEventResizeEnded(timeEvent) {\r\n        this.view = this.getWeekView(this.events);\r\n        const lastResizeEvent = this.timeEventResizes.get(timeEvent.event);\r\n        if (lastResizeEvent) {\r\n            this.timeEventResizes.delete(timeEvent.event);\r\n            const newEventDates = this.getTimeEventResizedDates(timeEvent.event, lastResizeEvent);\r\n            this.eventTimesChanged.emit({\r\n                newStart: newEventDates.start,\r\n                newEnd: newEventDates.end,\r\n                event: timeEvent.event,\r\n                type: CalendarEventTimesChangedEventType.Resize,\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * @hidden\r\n     */\r\n    allDayEventResizeStarted(allDayEventsContainer, allDayEvent, resizeEvent) {\r\n        this.allDayEventResizes.set(allDayEvent, {\r\n            originalOffset: allDayEvent.offset,\r\n            originalSpan: allDayEvent.span,\r\n            edge: typeof resizeEvent.edges.left !== 'undefined' ? 'left' : 'right',\r\n        });\r\n        this.resizeStarted(allDayEventsContainer, allDayEvent, this.getDayColumnWidth(allDayEventsContainer));\r\n    }\r\n    /**\r\n     * @hidden\r\n     */\r\n    allDayEventResizing(allDayEvent, resizeEvent, dayWidth) {\r\n        const currentResize = this.allDayEventResizes.get(allDayEvent);\r\n        const modifier = this.rtl ? -1 : 1;\r\n        if (typeof resizeEvent.edges.left !== 'undefined') {\r\n            const diff = Math.round(+resizeEvent.edges.left / dayWidth) * modifier;\r\n            allDayEvent.offset = currentResize.originalOffset + diff;\r\n            allDayEvent.span = currentResize.originalSpan - diff;\r\n        }\r\n        else if (typeof resizeEvent.edges.right !== 'undefined') {\r\n            const diff = Math.round(+resizeEvent.edges.right / dayWidth) * modifier;\r\n            allDayEvent.span = currentResize.originalSpan + diff;\r\n        }\r\n    }\r\n    /**\r\n     * @hidden\r\n     */\r\n    allDayEventResizeEnded(allDayEvent) {\r\n        const currentResize = this.allDayEventResizes.get(allDayEvent);\r\n        if (currentResize) {\r\n            const allDayEventResizingBeforeStart = currentResize.edge === 'left';\r\n            let daysDiff;\r\n            if (allDayEventResizingBeforeStart) {\r\n                daysDiff = allDayEvent.offset - currentResize.originalOffset;\r\n            }\r\n            else {\r\n                daysDiff = allDayEvent.span - currentResize.originalSpan;\r\n            }\r\n            allDayEvent.offset = currentResize.originalOffset;\r\n            allDayEvent.span = currentResize.originalSpan;\r\n            const newDates = this.getAllDayEventResizedDates(allDayEvent.event, daysDiff, allDayEventResizingBeforeStart);\r\n            this.eventTimesChanged.emit({\r\n                newStart: newDates.start,\r\n                newEnd: newDates.end,\r\n                event: allDayEvent.event,\r\n                type: CalendarEventTimesChangedEventType.Resize,\r\n            });\r\n            this.allDayEventResizes.delete(allDayEvent);\r\n        }\r\n    }\r\n    /**\r\n     * @hidden\r\n     */\r\n    getDayColumnWidth(eventRowContainer) {\r\n        return Math.floor(eventRowContainer.offsetWidth / this.days.length);\r\n    }\r\n    /**\r\n     * @hidden\r\n     */\r\n    dateDragEnter(date) {\r\n        this.lastDragEnterDate = date;\r\n    }\r\n    /**\r\n     * @hidden\r\n     */\r\n    eventDropped(dropEvent, date, allDay) {\r\n        if (shouldFireDroppedEvent(dropEvent, date, allDay, this.calendarId) &&\r\n            this.lastDragEnterDate.getTime() === date.getTime() &&\r\n            (!this.snapDraggedEvents ||\r\n                dropEvent.dropData.event !== this.lastDraggedEvent)) {\r\n            this.eventTimesChanged.emit({\r\n                type: CalendarEventTimesChangedEventType.Drop,\r\n                event: dropEvent.dropData.event,\r\n                newStart: date,\r\n                allDay,\r\n            });\r\n        }\r\n        this.lastDraggedEvent = null;\r\n    }\r\n    /**\r\n     * @hidden\r\n     */\r\n    dragEnter(type) {\r\n        this.eventDragEnterByType[type]++;\r\n    }\r\n    /**\r\n     * @hidden\r\n     */\r\n    dragLeave(type) {\r\n        this.eventDragEnterByType[type]--;\r\n    }\r\n    /**\r\n     * @hidden\r\n     */\r\n    dragStarted(eventsContainerElement, eventElement, event, useY) {\r\n        this.dayColumnWidth = this.getDayColumnWidth(eventsContainerElement);\r\n        const dragHelper = new CalendarDragHelper(eventsContainerElement, eventElement);\r\n        this.validateDrag = ({ x, y, transform }) => {\r\n            const isAllowed = this.allDayEventResizes.size === 0 &&\r\n                this.timeEventResizes.size === 0 &&\r\n                dragHelper.validateDrag({\r\n                    x,\r\n                    y,\r\n                    snapDraggedEvents: this.snapDraggedEvents,\r\n                    dragAlreadyMoved: this.dragAlreadyMoved,\r\n                    transform,\r\n                });\r\n            if (isAllowed && this.validateEventTimesChanged) {\r\n                const newEventTimes = this.getDragMovedEventTimes(event, { x, y }, this.dayColumnWidth, useY);\r\n                return this.validateEventTimesChanged({\r\n                    type: CalendarEventTimesChangedEventType.Drag,\r\n                    event: event.event,\r\n                    newStart: newEventTimes.start,\r\n                    newEnd: newEventTimes.end,\r\n                });\r\n            }\r\n            return isAllowed;\r\n        };\r\n        this.dragActive = true;\r\n        this.dragAlreadyMoved = false;\r\n        this.lastDraggedEvent = null;\r\n        this.eventDragEnterByType = {\r\n            allDay: 0,\r\n            time: 0,\r\n        };\r\n        if (!this.snapDraggedEvents && useY) {\r\n            this.view.hourColumns.forEach((column) => {\r\n                const linkedEvent = column.events.find((columnEvent) => columnEvent.event === event.event && columnEvent !== event);\r\n                // hide any linked events while dragging\r\n                if (linkedEvent) {\r\n                    linkedEvent.width = 0;\r\n                    linkedEvent.height = 0;\r\n                }\r\n            });\r\n        }\r\n        this.cdr.markForCheck();\r\n    }\r\n    /**\r\n     * @hidden\r\n     */\r\n    dragMove(dayEvent, dragEvent) {\r\n        const newEventTimes = this.getDragMovedEventTimes(dayEvent, dragEvent, this.dayColumnWidth, true);\r\n        const originalEvent = dayEvent.event;\r\n        const adjustedEvent = { ...originalEvent, ...newEventTimes };\r\n        const tempEvents = this.events.map((event) => {\r\n            if (event === originalEvent) {\r\n                return adjustedEvent;\r\n            }\r\n            return event;\r\n        });\r\n        this.restoreOriginalEvents(tempEvents, new Map([[adjustedEvent, originalEvent]]), this.snapDraggedEvents);\r\n        this.dragAlreadyMoved = true;\r\n    }\r\n    /**\r\n     * @hidden\r\n     */\r\n    allDayEventDragMove() {\r\n        this.dragAlreadyMoved = true;\r\n    }\r\n    /**\r\n     * @hidden\r\n     */\r\n    dragEnded(weekEvent, dragEndEvent, dayWidth, useY = false) {\r\n        this.view = this.getWeekView(this.events);\r\n        this.dragActive = false;\r\n        this.validateDrag = null;\r\n        const { start, end } = this.getDragMovedEventTimes(weekEvent, dragEndEvent, dayWidth, useY);\r\n        if ((this.snapDraggedEvents ||\r\n            this.eventDragEnterByType[useY ? 'time' : 'allDay'] > 0) &&\r\n            isDraggedWithinPeriod(start, end, this.view.period)) {\r\n            this.lastDraggedEvent = weekEvent.event;\r\n            this.eventTimesChanged.emit({\r\n                newStart: start,\r\n                newEnd: end,\r\n                event: weekEvent.event,\r\n                type: CalendarEventTimesChangedEventType.Drag,\r\n                allDay: !useY,\r\n            });\r\n        }\r\n    }\r\n    refreshHeader() {\r\n        this.days = this.utils.getWeekViewHeader({\r\n            viewDate: this.viewDate,\r\n            weekStartsOn: this.weekStartsOn,\r\n            excluded: this.excludeDays,\r\n            weekendDays: this.weekendDays,\r\n            ...getWeekViewPeriod(this.dateAdapter, this.viewDate, this.weekStartsOn, this.excludeDays, this.daysInWeek),\r\n        });\r\n    }\r\n    refreshBody() {\r\n        this.view = this.getWeekView(this.events);\r\n    }\r\n    refreshAll() {\r\n        this.refreshHeader();\r\n        this.refreshBody();\r\n        this.emitBeforeViewRender();\r\n    }\r\n    emitBeforeViewRender() {\r\n        if (this.days && this.view) {\r\n            this.beforeViewRender.emit({\r\n                header: this.days,\r\n                ...this.view,\r\n            });\r\n        }\r\n    }\r\n    getWeekView(events) {\r\n        return this.utils.getWeekView({\r\n            events,\r\n            viewDate: this.viewDate,\r\n            weekStartsOn: this.weekStartsOn,\r\n            excluded: this.excludeDays,\r\n            precision: this.precision,\r\n            absolutePositionedEvents: true,\r\n            hourSegments: this.hourSegments,\r\n            hourDuration: this.hourDuration,\r\n            dayStart: {\r\n                hour: this.dayStartHour,\r\n                minute: this.dayStartMinute,\r\n            },\r\n            dayEnd: {\r\n                hour: this.dayEndHour,\r\n                minute: this.dayEndMinute,\r\n            },\r\n            segmentHeight: this.hourSegmentHeight,\r\n            weekendDays: this.weekendDays,\r\n            minimumEventHeight: this.minimumEventHeight,\r\n            ...getWeekViewPeriod(this.dateAdapter, this.viewDate, this.weekStartsOn, this.excludeDays, this.daysInWeek),\r\n        });\r\n    }\r\n    getDragMovedEventTimes(weekEvent, dragEndEvent, dayWidth, useY) {\r\n        const daysDragged = (roundToNearest(dragEndEvent.x, dayWidth) / dayWidth) *\r\n            (this.rtl ? -1 : 1);\r\n        const minutesMoved = useY\r\n            ? getMinutesMoved(dragEndEvent.y, this.hourSegments, this.hourSegmentHeight, this.eventSnapSize, this.hourDuration)\r\n            : 0;\r\n        const start = this.dateAdapter.addMinutes(addDaysWithExclusions(this.dateAdapter, weekEvent.event.start, daysDragged, this.excludeDays), minutesMoved);\r\n        let end;\r\n        if (weekEvent.event.end) {\r\n            end = this.dateAdapter.addMinutes(addDaysWithExclusions(this.dateAdapter, weekEvent.event.end, daysDragged, this.excludeDays), minutesMoved);\r\n        }\r\n        return { start, end };\r\n    }\r\n    restoreOriginalEvents(tempEvents, adjustedEvents, snapDraggedEvents = true) {\r\n        const previousView = this.view;\r\n        if (snapDraggedEvents) {\r\n            this.view = this.getWeekView(tempEvents);\r\n        }\r\n        const adjustedEventsArray = tempEvents.filter((event) => adjustedEvents.has(event));\r\n        this.view.hourColumns.forEach((column, columnIndex) => {\r\n            previousView.hourColumns[columnIndex].hours.forEach((hour, hourIndex) => {\r\n                hour.segments.forEach((segment, segmentIndex) => {\r\n                    column.hours[hourIndex].segments[segmentIndex].cssClass =\r\n                        segment.cssClass;\r\n                });\r\n            });\r\n            adjustedEventsArray.forEach((adjustedEvent) => {\r\n                const originalEvent = adjustedEvents.get(adjustedEvent);\r\n                const existingColumnEvent = column.events.find((columnEvent) => columnEvent.event ===\r\n                    (snapDraggedEvents ? adjustedEvent : originalEvent));\r\n                if (existingColumnEvent) {\r\n                    // restore the original event so trackBy kicks in and the dom isn't changed\r\n                    existingColumnEvent.event = originalEvent;\r\n                    existingColumnEvent['tempEvent'] = adjustedEvent;\r\n                    if (!snapDraggedEvents) {\r\n                        existingColumnEvent.height = 0;\r\n                        existingColumnEvent.width = 0;\r\n                    }\r\n                }\r\n                else {\r\n                    // add a dummy event to the drop so if the event was removed from the original column the drag doesn't end early\r\n                    const event = {\r\n                        event: originalEvent,\r\n                        left: 0,\r\n                        top: 0,\r\n                        height: 0,\r\n                        width: 0,\r\n                        startsBeforeDay: false,\r\n                        endsAfterDay: false,\r\n                        tempEvent: adjustedEvent,\r\n                    };\r\n                    column.events.push(event);\r\n                }\r\n            });\r\n        });\r\n        adjustedEvents.clear();\r\n    }\r\n    getTimeEventResizedDates(calendarEvent, resizeEvent) {\r\n        const newEventDates = {\r\n            start: calendarEvent.start,\r\n            end: getDefaultEventEnd(this.dateAdapter, calendarEvent, this.minimumEventHeight),\r\n        };\r\n        const { end, ...eventWithoutEnd } = calendarEvent;\r\n        const smallestResizes = {\r\n            start: this.dateAdapter.addMinutes(newEventDates.end, this.minimumEventHeight * -1),\r\n            end: getDefaultEventEnd(this.dateAdapter, eventWithoutEnd, this.minimumEventHeight),\r\n        };\r\n        const modifier = this.rtl ? -1 : 1;\r\n        if (typeof resizeEvent.edges.left !== 'undefined') {\r\n            const daysDiff = Math.round(+resizeEvent.edges.left / this.dayColumnWidth) * modifier;\r\n            const newStart = addDaysWithExclusions(this.dateAdapter, newEventDates.start, daysDiff, this.excludeDays);\r\n            if (newStart < smallestResizes.start) {\r\n                newEventDates.start = newStart;\r\n            }\r\n            else {\r\n                newEventDates.start = smallestResizes.start;\r\n            }\r\n        }\r\n        else if (typeof resizeEvent.edges.right !== 'undefined') {\r\n            const daysDiff = Math.round(+resizeEvent.edges.right / this.dayColumnWidth) * modifier;\r\n            const newEnd = addDaysWithExclusions(this.dateAdapter, newEventDates.end, daysDiff, this.excludeDays);\r\n            if (newEnd > smallestResizes.end) {\r\n                newEventDates.end = newEnd;\r\n            }\r\n            else {\r\n                newEventDates.end = smallestResizes.end;\r\n            }\r\n        }\r\n        if (typeof resizeEvent.edges.top !== 'undefined') {\r\n            const minutesMoved = getMinutesMoved(resizeEvent.edges.top, this.hourSegments, this.hourSegmentHeight, this.eventSnapSize, this.hourDuration);\r\n            const newStart = this.dateAdapter.addMinutes(newEventDates.start, minutesMoved);\r\n            if (newStart < smallestResizes.start) {\r\n                newEventDates.start = newStart;\r\n            }\r\n            else {\r\n                newEventDates.start = smallestResizes.start;\r\n            }\r\n        }\r\n        else if (typeof resizeEvent.edges.bottom !== 'undefined') {\r\n            const minutesMoved = getMinutesMoved(resizeEvent.edges.bottom, this.hourSegments, this.hourSegmentHeight, this.eventSnapSize, this.hourDuration);\r\n            const newEnd = this.dateAdapter.addMinutes(newEventDates.end, minutesMoved);\r\n            if (newEnd > smallestResizes.end) {\r\n                newEventDates.end = newEnd;\r\n            }\r\n            else {\r\n                newEventDates.end = smallestResizes.end;\r\n            }\r\n        }\r\n        return newEventDates;\r\n    }\r\n    resizeStarted(eventsContainer, event, dayWidth) {\r\n        this.dayColumnWidth = this.getDayColumnWidth(eventsContainer);\r\n        const resizeHelper = new CalendarResizeHelper(eventsContainer, dayWidth, this.rtl);\r\n        this.validateResize = ({ rectangle, edges }) => {\r\n            const isWithinBoundary = resizeHelper.validateResize({\r\n                rectangle: { ...rectangle },\r\n                edges,\r\n            });\r\n            if (isWithinBoundary && this.validateEventTimesChanged) {\r\n                let newEventDates;\r\n                if (!dayWidth) {\r\n                    newEventDates = this.getTimeEventResizedDates(event.event, {\r\n                        rectangle,\r\n                        edges,\r\n                    });\r\n                }\r\n                else {\r\n                    const modifier = this.rtl ? -1 : 1;\r\n                    if (typeof edges.left !== 'undefined') {\r\n                        const diff = Math.round(+edges.left / dayWidth) * modifier;\r\n                        newEventDates = this.getAllDayEventResizedDates(event.event, diff, !this.rtl);\r\n                    }\r\n                    else {\r\n                        const diff = Math.round(+edges.right / dayWidth) * modifier;\r\n                        newEventDates = this.getAllDayEventResizedDates(event.event, diff, this.rtl);\r\n                    }\r\n                }\r\n                return this.validateEventTimesChanged({\r\n                    type: CalendarEventTimesChangedEventType.Resize,\r\n                    event: event.event,\r\n                    newStart: newEventDates.start,\r\n                    newEnd: newEventDates.end,\r\n                });\r\n            }\r\n            return isWithinBoundary;\r\n        };\r\n        this.cdr.markForCheck();\r\n    }\r\n    /**\r\n     * @hidden\r\n     */\r\n    getAllDayEventResizedDates(event, daysDiff, beforeStart) {\r\n        let start = event.start;\r\n        let end = event.end || event.start;\r\n        if (beforeStart) {\r\n            start = addDaysWithExclusions(this.dateAdapter, start, daysDiff, this.excludeDays);\r\n        }\r\n        else {\r\n            end = addDaysWithExclusions(this.dateAdapter, end, daysDiff, this.excludeDays);\r\n        }\r\n        return { start, end };\r\n    }\r\n}\r\nCalendarWeekViewComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarWeekViewComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: CalendarUtils }, { token: LOCALE_ID }, { token: DateAdapter }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });\r\nCalendarWeekViewComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.0.4\", type: CalendarWeekViewComponent, selector: \"mwl-calendar-week-view\", inputs: { viewDate: \"viewDate\", events: \"events\", excludeDays: \"excludeDays\", refresh: \"refresh\", locale: \"locale\", tooltipPlacement: \"tooltipPlacement\", tooltipTemplate: \"tooltipTemplate\", tooltipAppendToBody: \"tooltipAppendToBody\", tooltipDelay: \"tooltipDelay\", weekStartsOn: \"weekStartsOn\", headerTemplate: \"headerTemplate\", eventTemplate: \"eventTemplate\", eventTitleTemplate: \"eventTitleTemplate\", eventActionsTemplate: \"eventActionsTemplate\", precision: \"precision\", weekendDays: \"weekendDays\", snapDraggedEvents: \"snapDraggedEvents\", hourSegments: \"hourSegments\", hourDuration: \"hourDuration\", hourSegmentHeight: \"hourSegmentHeight\", minimumEventHeight: \"minimumEventHeight\", dayStartHour: \"dayStartHour\", dayStartMinute: \"dayStartMinute\", dayEndHour: \"dayEndHour\", dayEndMinute: \"dayEndMinute\", hourSegmentTemplate: \"hourSegmentTemplate\", eventSnapSize: \"eventSnapSize\", allDayEventsLabelTemplate: \"allDayEventsLabelTemplate\", daysInWeek: \"daysInWeek\", currentTimeMarkerTemplate: \"currentTimeMarkerTemplate\", validateEventTimesChanged: \"validateEventTimesChanged\", resizeCursors: \"resizeCursors\" }, outputs: { dayHeaderClicked: \"dayHeaderClicked\", eventClicked: \"eventClicked\", eventTimesChanged: \"eventTimesChanged\", beforeViewRender: \"beforeViewRender\", hourSegmentClicked: \"hourSegmentClicked\" }, usesOnChanges: true, ngImport: i0, template: `\r\n    <div class=\"cal-week-view\" role=\"grid\">\r\n      <mwl-calendar-week-view-header\r\n        [days]=\"days\"\r\n        [locale]=\"locale\"\r\n        [customTemplate]=\"headerTemplate\"\r\n        (dayHeaderClicked)=\"dayHeaderClicked.emit($event)\"\r\n        (eventDropped)=\"\r\n          eventDropped({ dropData: $event }, $event.newStart, true)\r\n        \"\r\n        (dragEnter)=\"dateDragEnter($event.date)\"\r\n      >\r\n      </mwl-calendar-week-view-header>\r\n      <div\r\n        class=\"cal-all-day-events\"\r\n        #allDayEventsContainer\r\n        *ngIf=\"view.allDayEventRows.length > 0\"\r\n        mwlDroppable\r\n        (dragEnter)=\"dragEnter('allDay')\"\r\n        (dragLeave)=\"dragLeave('allDay')\"\r\n      >\r\n        <div class=\"cal-day-columns\">\r\n          <div\r\n            class=\"cal-time-label-column\"\r\n            [ngTemplateOutlet]=\"allDayEventsLabelTemplate\"\r\n          ></div>\r\n          <div\r\n            class=\"cal-day-column\"\r\n            *ngFor=\"let day of days; trackBy: trackByWeekDayHeaderDate\"\r\n            mwlDroppable\r\n            dragOverClass=\"cal-drag-over\"\r\n            (drop)=\"eventDropped($event, day.date, true)\"\r\n            (dragEnter)=\"dateDragEnter(day.date)\"\r\n          ></div>\r\n        </div>\r\n        <div\r\n          *ngFor=\"let eventRow of view.allDayEventRows; trackBy: trackById\"\r\n          #eventRowContainer\r\n          class=\"cal-events-row\"\r\n        >\r\n          <div\r\n            *ngFor=\"\r\n              let allDayEvent of eventRow.row;\r\n              trackBy: trackByWeekAllDayEvent\r\n            \"\r\n            #event\r\n            class=\"cal-event-container\"\r\n            [class.cal-draggable]=\"\r\n              allDayEvent.event.draggable && allDayEventResizes.size === 0\r\n            \"\r\n            [class.cal-starts-within-week]=\"!allDayEvent.startsBeforeWeek\"\r\n            [class.cal-ends-within-week]=\"!allDayEvent.endsAfterWeek\"\r\n            [ngClass]=\"allDayEvent.event?.cssClass\"\r\n            [style.width.%]=\"(100 / days.length) * allDayEvent.span\"\r\n            [style.marginLeft.%]=\"\r\n              rtl ? null : (100 / days.length) * allDayEvent.offset\r\n            \"\r\n            [style.marginRight.%]=\"\r\n              rtl ? (100 / days.length) * allDayEvent.offset : null\r\n            \"\r\n            mwlResizable\r\n            [resizeCursors]=\"resizeCursors\"\r\n            [resizeSnapGrid]=\"{ left: dayColumnWidth, right: dayColumnWidth }\"\r\n            [validateResize]=\"validateResize\"\r\n            (resizeStart)=\"\r\n              allDayEventResizeStarted(eventRowContainer, allDayEvent, $event)\r\n            \"\r\n            (resizing)=\"\r\n              allDayEventResizing(allDayEvent, $event, dayColumnWidth)\r\n            \"\r\n            (resizeEnd)=\"allDayEventResizeEnded(allDayEvent)\"\r\n            mwlDraggable\r\n            dragActiveClass=\"cal-drag-active\"\r\n            [dropData]=\"{ event: allDayEvent.event, calendarId: calendarId }\"\r\n            [dragAxis]=\"{\r\n              x: allDayEvent.event.draggable && allDayEventResizes.size === 0,\r\n              y:\r\n                !snapDraggedEvents &&\r\n                allDayEvent.event.draggable &&\r\n                allDayEventResizes.size === 0\r\n            }\"\r\n            [dragSnapGrid]=\"snapDraggedEvents ? { x: dayColumnWidth } : {}\"\r\n            [validateDrag]=\"validateDrag\"\r\n            [touchStartLongPress]=\"{ delay: 300, delta: 30 }\"\r\n            (dragStart)=\"\r\n              dragStarted(eventRowContainer, event, allDayEvent, false)\r\n            \"\r\n            (dragging)=\"allDayEventDragMove()\"\r\n            (dragEnd)=\"dragEnded(allDayEvent, $event, dayColumnWidth)\"\r\n          >\r\n            <div\r\n              class=\"cal-resize-handle cal-resize-handle-before-start\"\r\n              *ngIf=\"\r\n                allDayEvent.event?.resizable?.beforeStart &&\r\n                !allDayEvent.startsBeforeWeek\r\n              \"\r\n              mwlResizeHandle\r\n              [resizeEdges]=\"{ left: true }\"\r\n            ></div>\r\n            <mwl-calendar-week-view-event\r\n              [locale]=\"locale\"\r\n              [weekEvent]=\"allDayEvent\"\r\n              [tooltipPlacement]=\"tooltipPlacement\"\r\n              [tooltipTemplate]=\"tooltipTemplate\"\r\n              [tooltipAppendToBody]=\"tooltipAppendToBody\"\r\n              [tooltipDelay]=\"tooltipDelay\"\r\n              [customTemplate]=\"eventTemplate\"\r\n              [eventTitleTemplate]=\"eventTitleTemplate\"\r\n              [eventActionsTemplate]=\"eventActionsTemplate\"\r\n              [daysInWeek]=\"daysInWeek\"\r\n              (eventClicked)=\"\r\n                eventClicked.emit({\r\n                  event: allDayEvent.event,\r\n                  sourceEvent: $event.sourceEvent\r\n                })\r\n              \"\r\n            >\r\n            </mwl-calendar-week-view-event>\r\n            <div\r\n              class=\"cal-resize-handle cal-resize-handle-after-end\"\r\n              *ngIf=\"\r\n                allDayEvent.event?.resizable?.afterEnd &&\r\n                !allDayEvent.endsAfterWeek\r\n              \"\r\n              mwlResizeHandle\r\n              [resizeEdges]=\"{ right: true }\"\r\n            ></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div\r\n        class=\"cal-time-events\"\r\n        mwlDroppable\r\n        (dragEnter)=\"dragEnter('time')\"\r\n        (dragLeave)=\"dragLeave('time')\"\r\n      >\r\n        <div\r\n          class=\"cal-time-label-column\"\r\n          *ngIf=\"view.hourColumns.length > 0 && daysInWeek !== 1\"\r\n        >\r\n          <div\r\n            *ngFor=\"\r\n              let hour of view.hourColumns[0].hours;\r\n              trackBy: trackByHour;\r\n              let odd = odd\r\n            \"\r\n            class=\"cal-hour\"\r\n            [class.cal-hour-odd]=\"odd\"\r\n          >\r\n            <mwl-calendar-week-view-hour-segment\r\n              *ngFor=\"let segment of hour.segments; trackBy: trackByHourSegment\"\r\n              [style.height.px]=\"hourSegmentHeight\"\r\n              [segment]=\"segment\"\r\n              [segmentHeight]=\"hourSegmentHeight\"\r\n              [locale]=\"locale\"\r\n              [customTemplate]=\"hourSegmentTemplate\"\r\n              [isTimeLabel]=\"true\"\r\n              [daysInWeek]=\"daysInWeek\"\r\n            >\r\n            </mwl-calendar-week-view-hour-segment>\r\n          </div>\r\n        </div>\r\n        <div\r\n          class=\"cal-day-columns\"\r\n          [class.cal-resize-active]=\"timeEventResizes.size > 0\"\r\n          #dayColumns\r\n        >\r\n          <div\r\n            class=\"cal-day-column\"\r\n            *ngFor=\"let column of view.hourColumns; trackBy: trackByHourColumn\"\r\n          >\r\n            <mwl-calendar-week-view-current-time-marker\r\n              [columnDate]=\"column.date\"\r\n              [dayStartHour]=\"dayStartHour\"\r\n              [dayStartMinute]=\"dayStartMinute\"\r\n              [dayEndHour]=\"dayEndHour\"\r\n              [dayEndMinute]=\"dayEndMinute\"\r\n              [hourSegments]=\"hourSegments\"\r\n              [hourDuration]=\"hourDuration\"\r\n              [hourSegmentHeight]=\"hourSegmentHeight\"\r\n              [customTemplate]=\"currentTimeMarkerTemplate\"\r\n            ></mwl-calendar-week-view-current-time-marker>\r\n            <div class=\"cal-events-container\">\r\n              <div\r\n                *ngFor=\"\r\n                  let timeEvent of column.events;\r\n                  trackBy: trackByWeekTimeEvent\r\n                \"\r\n                #event\r\n                class=\"cal-event-container\"\r\n                [class.cal-draggable]=\"\r\n                  timeEvent.event.draggable && timeEventResizes.size === 0\r\n                \"\r\n                [class.cal-starts-within-day]=\"!timeEvent.startsBeforeDay\"\r\n                [class.cal-ends-within-day]=\"!timeEvent.endsAfterDay\"\r\n                [ngClass]=\"timeEvent.event.cssClass\"\r\n                [hidden]=\"timeEvent.height === 0 && timeEvent.width === 0\"\r\n                [style.top.px]=\"timeEvent.top\"\r\n                [style.height.px]=\"timeEvent.height\"\r\n                [style.left.%]=\"timeEvent.left\"\r\n                [style.width.%]=\"timeEvent.width\"\r\n                mwlResizable\r\n                [resizeCursors]=\"resizeCursors\"\r\n                [resizeSnapGrid]=\"{\r\n                  left: dayColumnWidth,\r\n                  right: dayColumnWidth,\r\n                  top: eventSnapSize || hourSegmentHeight,\r\n                  bottom: eventSnapSize || hourSegmentHeight\r\n                }\"\r\n                [validateResize]=\"validateResize\"\r\n                [allowNegativeResizes]=\"true\"\r\n                (resizeStart)=\"\r\n                  timeEventResizeStarted(dayColumns, timeEvent, $event)\r\n                \"\r\n                (resizing)=\"timeEventResizing(timeEvent, $event)\"\r\n                (resizeEnd)=\"timeEventResizeEnded(timeEvent)\"\r\n                mwlDraggable\r\n                dragActiveClass=\"cal-drag-active\"\r\n                [dropData]=\"{ event: timeEvent.event, calendarId: calendarId }\"\r\n                [dragAxis]=\"{\r\n                  x: timeEvent.event.draggable && timeEventResizes.size === 0,\r\n                  y: timeEvent.event.draggable && timeEventResizes.size === 0\r\n                }\"\r\n                [dragSnapGrid]=\"\r\n                  snapDraggedEvents\r\n                    ? {\r\n                        x: dayColumnWidth,\r\n                        y: eventSnapSize || hourSegmentHeight\r\n                      }\r\n                    : {}\r\n                \"\r\n                [touchStartLongPress]=\"{ delay: 300, delta: 30 }\"\r\n                [ghostDragEnabled]=\"!snapDraggedEvents\"\r\n                [ghostElementTemplate]=\"weekEventTemplate\"\r\n                [validateDrag]=\"validateDrag\"\r\n                (dragStart)=\"dragStarted(dayColumns, event, timeEvent, true)\"\r\n                (dragging)=\"dragMove(timeEvent, $event)\"\r\n                (dragEnd)=\"dragEnded(timeEvent, $event, dayColumnWidth, true)\"\r\n              >\r\n                <div\r\n                  class=\"cal-resize-handle cal-resize-handle-before-start\"\r\n                  *ngIf=\"\r\n                    timeEvent.event?.resizable?.beforeStart &&\r\n                    !timeEvent.startsBeforeDay\r\n                  \"\r\n                  mwlResizeHandle\r\n                  [resizeEdges]=\"{\r\n                    left: true,\r\n                    top: true\r\n                  }\"\r\n                ></div>\r\n                <ng-template\r\n                  [ngTemplateOutlet]=\"weekEventTemplate\"\r\n                ></ng-template>\r\n                <ng-template #weekEventTemplate>\r\n                  <mwl-calendar-week-view-event\r\n                    [locale]=\"locale\"\r\n                    [weekEvent]=\"timeEvent\"\r\n                    [tooltipPlacement]=\"tooltipPlacement\"\r\n                    [tooltipTemplate]=\"tooltipTemplate\"\r\n                    [tooltipAppendToBody]=\"tooltipAppendToBody\"\r\n                    [tooltipDisabled]=\"dragActive || timeEventResizes.size > 0\"\r\n                    [tooltipDelay]=\"tooltipDelay\"\r\n                    [customTemplate]=\"eventTemplate\"\r\n                    [eventTitleTemplate]=\"eventTitleTemplate\"\r\n                    [eventActionsTemplate]=\"eventActionsTemplate\"\r\n                    [column]=\"column\"\r\n                    [daysInWeek]=\"daysInWeek\"\r\n                    (eventClicked)=\"\r\n                      eventClicked.emit({\r\n                        event: timeEvent.event,\r\n                        sourceEvent: $event.sourceEvent\r\n                      })\r\n                    \"\r\n                  >\r\n                  </mwl-calendar-week-view-event>\r\n                </ng-template>\r\n                <div\r\n                  class=\"cal-resize-handle cal-resize-handle-after-end\"\r\n                  *ngIf=\"\r\n                    timeEvent.event?.resizable?.afterEnd &&\r\n                    !timeEvent.endsAfterDay\r\n                  \"\r\n                  mwlResizeHandle\r\n                  [resizeEdges]=\"{\r\n                    right: true,\r\n                    bottom: true\r\n                  }\"\r\n                ></div>\r\n              </div>\r\n            </div>\r\n\r\n            <div\r\n              *ngFor=\"\r\n                let hour of column.hours;\r\n                trackBy: trackByHour;\r\n                let odd = odd\r\n              \"\r\n              class=\"cal-hour\"\r\n              [class.cal-hour-odd]=\"odd\"\r\n            >\r\n              <mwl-calendar-week-view-hour-segment\r\n                *ngFor=\"\r\n                  let segment of hour.segments;\r\n                  trackBy: trackByHourSegment\r\n                \"\r\n                [style.height.px]=\"hourSegmentHeight\"\r\n                [segment]=\"segment\"\r\n                [segmentHeight]=\"hourSegmentHeight\"\r\n                [locale]=\"locale\"\r\n                [customTemplate]=\"hourSegmentTemplate\"\r\n                [daysInWeek]=\"daysInWeek\"\r\n                (mwlClick)=\"\r\n                  hourSegmentClicked.emit({\r\n                    date: segment.date,\r\n                    sourceEvent: $event\r\n                  })\r\n                \"\r\n                [clickListenerDisabled]=\"\r\n                  hourSegmentClicked.observers.length === 0\r\n                \"\r\n                mwlDroppable\r\n                [dragOverClass]=\"\r\n                  !dragActive || !snapDraggedEvents ? 'cal-drag-over' : null\r\n                \"\r\n                dragActiveClass=\"cal-drag-active\"\r\n                (drop)=\"eventDropped($event, segment.date, false)\"\r\n                (dragEnter)=\"dateDragEnter(segment.date)\"\r\n                [isTimeLabel]=\"daysInWeek === 1\"\r\n              >\r\n              </mwl-calendar-week-view-hour-segment>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  `, isInline: true, dependencies: [{ kind: \"directive\", type: i1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i1.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"directive\", type: i4.ResizableDirective, selector: \"[mwlResizable]\", inputs: [\"validateResize\", \"enableGhostResize\", \"resizeSnapGrid\", \"resizeCursors\", \"ghostElementPositioning\", \"allowNegativeResizes\", \"mouseMoveThrottleMS\"], outputs: [\"resizeStart\", \"resizing\", \"resizeEnd\"], exportAs: [\"mwlResizable\"] }, { kind: \"directive\", type: i4.ResizeHandleDirective, selector: \"[mwlResizeHandle]\", inputs: [\"resizeEdges\", \"resizableContainer\"] }, { kind: \"directive\", type: i2.DraggableDirective, selector: \"[mwlDraggable]\", inputs: [\"dropData\", \"dragAxis\", \"dragSnapGrid\", \"ghostDragEnabled\", \"showOriginalElementWhileDragging\", \"validateDrag\", \"dragCursor\", \"dragActiveClass\", \"ghostElementAppendTo\", \"ghostElementTemplate\", \"touchStartLongPress\", \"autoScroll\"], outputs: [\"dragPointerDown\", \"dragStart\", \"ghostElementCreated\", \"dragging\", \"dragEnd\"] }, { kind: \"directive\", type: i2.DroppableDirective, selector: \"[mwlDroppable]\", inputs: [\"dragOverClass\", \"dragActiveClass\", \"validateDrop\"], outputs: [\"dragEnter\", \"dragLeave\", \"dragOver\", \"drop\"] }, { kind: \"directive\", type: ClickDirective, selector: \"[mwlClick]\", inputs: [\"clickListenerDisabled\"], outputs: [\"mwlClick\"] }, { kind: \"component\", type: CalendarWeekViewHeaderComponent, selector: \"mwl-calendar-week-view-header\", inputs: [\"days\", \"locale\", \"customTemplate\"], outputs: [\"dayHeaderClicked\", \"eventDropped\", \"dragEnter\"] }, { kind: \"component\", type: CalendarWeekViewEventComponent, selector: \"mwl-calendar-week-view-event\", inputs: [\"locale\", \"weekEvent\", \"tooltipPlacement\", \"tooltipAppendToBody\", \"tooltipDisabled\", \"tooltipDelay\", \"customTemplate\", \"eventTitleTemplate\", \"eventActionsTemplate\", \"tooltipTemplate\", \"column\", \"daysInWeek\"], outputs: [\"eventClicked\"] }, { kind: \"component\", type: CalendarWeekViewHourSegmentComponent, selector: \"mwl-calendar-week-view-hour-segment\", inputs: [\"segment\", \"segmentHeight\", \"locale\", \"isTimeLabel\", \"daysInWeek\", \"customTemplate\"] }, { kind: \"component\", type: CalendarWeekViewCurrentTimeMarkerComponent, selector: \"mwl-calendar-week-view-current-time-marker\", inputs: [\"columnDate\", \"dayStartHour\", \"dayStartMinute\", \"dayEndHour\", \"dayEndMinute\", \"hourSegments\", \"hourDuration\", \"hourSegmentHeight\", \"customTemplate\"] }] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarWeekViewComponent, decorators: [{\r\n            type: Component,\r\n            args: [{\r\n                    selector: 'mwl-calendar-week-view',\r\n                    template: `\r\n    <div class=\"cal-week-view\" role=\"grid\">\r\n      <mwl-calendar-week-view-header\r\n        [days]=\"days\"\r\n        [locale]=\"locale\"\r\n        [customTemplate]=\"headerTemplate\"\r\n        (dayHeaderClicked)=\"dayHeaderClicked.emit($event)\"\r\n        (eventDropped)=\"\r\n          eventDropped({ dropData: $event }, $event.newStart, true)\r\n        \"\r\n        (dragEnter)=\"dateDragEnter($event.date)\"\r\n      >\r\n      </mwl-calendar-week-view-header>\r\n      <div\r\n        class=\"cal-all-day-events\"\r\n        #allDayEventsContainer\r\n        *ngIf=\"view.allDayEventRows.length > 0\"\r\n        mwlDroppable\r\n        (dragEnter)=\"dragEnter('allDay')\"\r\n        (dragLeave)=\"dragLeave('allDay')\"\r\n      >\r\n        <div class=\"cal-day-columns\">\r\n          <div\r\n            class=\"cal-time-label-column\"\r\n            [ngTemplateOutlet]=\"allDayEventsLabelTemplate\"\r\n          ></div>\r\n          <div\r\n            class=\"cal-day-column\"\r\n            *ngFor=\"let day of days; trackBy: trackByWeekDayHeaderDate\"\r\n            mwlDroppable\r\n            dragOverClass=\"cal-drag-over\"\r\n            (drop)=\"eventDropped($event, day.date, true)\"\r\n            (dragEnter)=\"dateDragEnter(day.date)\"\r\n          ></div>\r\n        </div>\r\n        <div\r\n          *ngFor=\"let eventRow of view.allDayEventRows; trackBy: trackById\"\r\n          #eventRowContainer\r\n          class=\"cal-events-row\"\r\n        >\r\n          <div\r\n            *ngFor=\"\r\n              let allDayEvent of eventRow.row;\r\n              trackBy: trackByWeekAllDayEvent\r\n            \"\r\n            #event\r\n            class=\"cal-event-container\"\r\n            [class.cal-draggable]=\"\r\n              allDayEvent.event.draggable && allDayEventResizes.size === 0\r\n            \"\r\n            [class.cal-starts-within-week]=\"!allDayEvent.startsBeforeWeek\"\r\n            [class.cal-ends-within-week]=\"!allDayEvent.endsAfterWeek\"\r\n            [ngClass]=\"allDayEvent.event?.cssClass\"\r\n            [style.width.%]=\"(100 / days.length) * allDayEvent.span\"\r\n            [style.marginLeft.%]=\"\r\n              rtl ? null : (100 / days.length) * allDayEvent.offset\r\n            \"\r\n            [style.marginRight.%]=\"\r\n              rtl ? (100 / days.length) * allDayEvent.offset : null\r\n            \"\r\n            mwlResizable\r\n            [resizeCursors]=\"resizeCursors\"\r\n            [resizeSnapGrid]=\"{ left: dayColumnWidth, right: dayColumnWidth }\"\r\n            [validateResize]=\"validateResize\"\r\n            (resizeStart)=\"\r\n              allDayEventResizeStarted(eventRowContainer, allDayEvent, $event)\r\n            \"\r\n            (resizing)=\"\r\n              allDayEventResizing(allDayEvent, $event, dayColumnWidth)\r\n            \"\r\n            (resizeEnd)=\"allDayEventResizeEnded(allDayEvent)\"\r\n            mwlDraggable\r\n            dragActiveClass=\"cal-drag-active\"\r\n            [dropData]=\"{ event: allDayEvent.event, calendarId: calendarId }\"\r\n            [dragAxis]=\"{\r\n              x: allDayEvent.event.draggable && allDayEventResizes.size === 0,\r\n              y:\r\n                !snapDraggedEvents &&\r\n                allDayEvent.event.draggable &&\r\n                allDayEventResizes.size === 0\r\n            }\"\r\n            [dragSnapGrid]=\"snapDraggedEvents ? { x: dayColumnWidth } : {}\"\r\n            [validateDrag]=\"validateDrag\"\r\n            [touchStartLongPress]=\"{ delay: 300, delta: 30 }\"\r\n            (dragStart)=\"\r\n              dragStarted(eventRowContainer, event, allDayEvent, false)\r\n            \"\r\n            (dragging)=\"allDayEventDragMove()\"\r\n            (dragEnd)=\"dragEnded(allDayEvent, $event, dayColumnWidth)\"\r\n          >\r\n            <div\r\n              class=\"cal-resize-handle cal-resize-handle-before-start\"\r\n              *ngIf=\"\r\n                allDayEvent.event?.resizable?.beforeStart &&\r\n                !allDayEvent.startsBeforeWeek\r\n              \"\r\n              mwlResizeHandle\r\n              [resizeEdges]=\"{ left: true }\"\r\n            ></div>\r\n            <mwl-calendar-week-view-event\r\n              [locale]=\"locale\"\r\n              [weekEvent]=\"allDayEvent\"\r\n              [tooltipPlacement]=\"tooltipPlacement\"\r\n              [tooltipTemplate]=\"tooltipTemplate\"\r\n              [tooltipAppendToBody]=\"tooltipAppendToBody\"\r\n              [tooltipDelay]=\"tooltipDelay\"\r\n              [customTemplate]=\"eventTemplate\"\r\n              [eventTitleTemplate]=\"eventTitleTemplate\"\r\n              [eventActionsTemplate]=\"eventActionsTemplate\"\r\n              [daysInWeek]=\"daysInWeek\"\r\n              (eventClicked)=\"\r\n                eventClicked.emit({\r\n                  event: allDayEvent.event,\r\n                  sourceEvent: $event.sourceEvent\r\n                })\r\n              \"\r\n            >\r\n            </mwl-calendar-week-view-event>\r\n            <div\r\n              class=\"cal-resize-handle cal-resize-handle-after-end\"\r\n              *ngIf=\"\r\n                allDayEvent.event?.resizable?.afterEnd &&\r\n                !allDayEvent.endsAfterWeek\r\n              \"\r\n              mwlResizeHandle\r\n              [resizeEdges]=\"{ right: true }\"\r\n            ></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div\r\n        class=\"cal-time-events\"\r\n        mwlDroppable\r\n        (dragEnter)=\"dragEnter('time')\"\r\n        (dragLeave)=\"dragLeave('time')\"\r\n      >\r\n        <div\r\n          class=\"cal-time-label-column\"\r\n          *ngIf=\"view.hourColumns.length > 0 && daysInWeek !== 1\"\r\n        >\r\n          <div\r\n            *ngFor=\"\r\n              let hour of view.hourColumns[0].hours;\r\n              trackBy: trackByHour;\r\n              let odd = odd\r\n            \"\r\n            class=\"cal-hour\"\r\n            [class.cal-hour-odd]=\"odd\"\r\n          >\r\n            <mwl-calendar-week-view-hour-segment\r\n              *ngFor=\"let segment of hour.segments; trackBy: trackByHourSegment\"\r\n              [style.height.px]=\"hourSegmentHeight\"\r\n              [segment]=\"segment\"\r\n              [segmentHeight]=\"hourSegmentHeight\"\r\n              [locale]=\"locale\"\r\n              [customTemplate]=\"hourSegmentTemplate\"\r\n              [isTimeLabel]=\"true\"\r\n              [daysInWeek]=\"daysInWeek\"\r\n            >\r\n            </mwl-calendar-week-view-hour-segment>\r\n          </div>\r\n        </div>\r\n        <div\r\n          class=\"cal-day-columns\"\r\n          [class.cal-resize-active]=\"timeEventResizes.size > 0\"\r\n          #dayColumns\r\n        >\r\n          <div\r\n            class=\"cal-day-column\"\r\n            *ngFor=\"let column of view.hourColumns; trackBy: trackByHourColumn\"\r\n          >\r\n            <mwl-calendar-week-view-current-time-marker\r\n              [columnDate]=\"column.date\"\r\n              [dayStartHour]=\"dayStartHour\"\r\n              [dayStartMinute]=\"dayStartMinute\"\r\n              [dayEndHour]=\"dayEndHour\"\r\n              [dayEndMinute]=\"dayEndMinute\"\r\n              [hourSegments]=\"hourSegments\"\r\n              [hourDuration]=\"hourDuration\"\r\n              [hourSegmentHeight]=\"hourSegmentHeight\"\r\n              [customTemplate]=\"currentTimeMarkerTemplate\"\r\n            ></mwl-calendar-week-view-current-time-marker>\r\n            <div class=\"cal-events-container\">\r\n              <div\r\n                *ngFor=\"\r\n                  let timeEvent of column.events;\r\n                  trackBy: trackByWeekTimeEvent\r\n                \"\r\n                #event\r\n                class=\"cal-event-container\"\r\n                [class.cal-draggable]=\"\r\n                  timeEvent.event.draggable && timeEventResizes.size === 0\r\n                \"\r\n                [class.cal-starts-within-day]=\"!timeEvent.startsBeforeDay\"\r\n                [class.cal-ends-within-day]=\"!timeEvent.endsAfterDay\"\r\n                [ngClass]=\"timeEvent.event.cssClass\"\r\n                [hidden]=\"timeEvent.height === 0 && timeEvent.width === 0\"\r\n                [style.top.px]=\"timeEvent.top\"\r\n                [style.height.px]=\"timeEvent.height\"\r\n                [style.left.%]=\"timeEvent.left\"\r\n                [style.width.%]=\"timeEvent.width\"\r\n                mwlResizable\r\n                [resizeCursors]=\"resizeCursors\"\r\n                [resizeSnapGrid]=\"{\r\n                  left: dayColumnWidth,\r\n                  right: dayColumnWidth,\r\n                  top: eventSnapSize || hourSegmentHeight,\r\n                  bottom: eventSnapSize || hourSegmentHeight\r\n                }\"\r\n                [validateResize]=\"validateResize\"\r\n                [allowNegativeResizes]=\"true\"\r\n                (resizeStart)=\"\r\n                  timeEventResizeStarted(dayColumns, timeEvent, $event)\r\n                \"\r\n                (resizing)=\"timeEventResizing(timeEvent, $event)\"\r\n                (resizeEnd)=\"timeEventResizeEnded(timeEvent)\"\r\n                mwlDraggable\r\n                dragActiveClass=\"cal-drag-active\"\r\n                [dropData]=\"{ event: timeEvent.event, calendarId: calendarId }\"\r\n                [dragAxis]=\"{\r\n                  x: timeEvent.event.draggable && timeEventResizes.size === 0,\r\n                  y: timeEvent.event.draggable && timeEventResizes.size === 0\r\n                }\"\r\n                [dragSnapGrid]=\"\r\n                  snapDraggedEvents\r\n                    ? {\r\n                        x: dayColumnWidth,\r\n                        y: eventSnapSize || hourSegmentHeight\r\n                      }\r\n                    : {}\r\n                \"\r\n                [touchStartLongPress]=\"{ delay: 300, delta: 30 }\"\r\n                [ghostDragEnabled]=\"!snapDraggedEvents\"\r\n                [ghostElementTemplate]=\"weekEventTemplate\"\r\n                [validateDrag]=\"validateDrag\"\r\n                (dragStart)=\"dragStarted(dayColumns, event, timeEvent, true)\"\r\n                (dragging)=\"dragMove(timeEvent, $event)\"\r\n                (dragEnd)=\"dragEnded(timeEvent, $event, dayColumnWidth, true)\"\r\n              >\r\n                <div\r\n                  class=\"cal-resize-handle cal-resize-handle-before-start\"\r\n                  *ngIf=\"\r\n                    timeEvent.event?.resizable?.beforeStart &&\r\n                    !timeEvent.startsBeforeDay\r\n                  \"\r\n                  mwlResizeHandle\r\n                  [resizeEdges]=\"{\r\n                    left: true,\r\n                    top: true\r\n                  }\"\r\n                ></div>\r\n                <ng-template\r\n                  [ngTemplateOutlet]=\"weekEventTemplate\"\r\n                ></ng-template>\r\n                <ng-template #weekEventTemplate>\r\n                  <mwl-calendar-week-view-event\r\n                    [locale]=\"locale\"\r\n                    [weekEvent]=\"timeEvent\"\r\n                    [tooltipPlacement]=\"tooltipPlacement\"\r\n                    [tooltipTemplate]=\"tooltipTemplate\"\r\n                    [tooltipAppendToBody]=\"tooltipAppendToBody\"\r\n                    [tooltipDisabled]=\"dragActive || timeEventResizes.size > 0\"\r\n                    [tooltipDelay]=\"tooltipDelay\"\r\n                    [customTemplate]=\"eventTemplate\"\r\n                    [eventTitleTemplate]=\"eventTitleTemplate\"\r\n                    [eventActionsTemplate]=\"eventActionsTemplate\"\r\n                    [column]=\"column\"\r\n                    [daysInWeek]=\"daysInWeek\"\r\n                    (eventClicked)=\"\r\n                      eventClicked.emit({\r\n                        event: timeEvent.event,\r\n                        sourceEvent: $event.sourceEvent\r\n                      })\r\n                    \"\r\n                  >\r\n                  </mwl-calendar-week-view-event>\r\n                </ng-template>\r\n                <div\r\n                  class=\"cal-resize-handle cal-resize-handle-after-end\"\r\n                  *ngIf=\"\r\n                    timeEvent.event?.resizable?.afterEnd &&\r\n                    !timeEvent.endsAfterDay\r\n                  \"\r\n                  mwlResizeHandle\r\n                  [resizeEdges]=\"{\r\n                    right: true,\r\n                    bottom: true\r\n                  }\"\r\n                ></div>\r\n              </div>\r\n            </div>\r\n\r\n            <div\r\n              *ngFor=\"\r\n                let hour of column.hours;\r\n                trackBy: trackByHour;\r\n                let odd = odd\r\n              \"\r\n              class=\"cal-hour\"\r\n              [class.cal-hour-odd]=\"odd\"\r\n            >\r\n              <mwl-calendar-week-view-hour-segment\r\n                *ngFor=\"\r\n                  let segment of hour.segments;\r\n                  trackBy: trackByHourSegment\r\n                \"\r\n                [style.height.px]=\"hourSegmentHeight\"\r\n                [segment]=\"segment\"\r\n                [segmentHeight]=\"hourSegmentHeight\"\r\n                [locale]=\"locale\"\r\n                [customTemplate]=\"hourSegmentTemplate\"\r\n                [daysInWeek]=\"daysInWeek\"\r\n                (mwlClick)=\"\r\n                  hourSegmentClicked.emit({\r\n                    date: segment.date,\r\n                    sourceEvent: $event\r\n                  })\r\n                \"\r\n                [clickListenerDisabled]=\"\r\n                  hourSegmentClicked.observers.length === 0\r\n                \"\r\n                mwlDroppable\r\n                [dragOverClass]=\"\r\n                  !dragActive || !snapDraggedEvents ? 'cal-drag-over' : null\r\n                \"\r\n                dragActiveClass=\"cal-drag-active\"\r\n                (drop)=\"eventDropped($event, segment.date, false)\"\r\n                (dragEnter)=\"dateDragEnter(segment.date)\"\r\n                [isTimeLabel]=\"daysInWeek === 1\"\r\n              >\r\n              </mwl-calendar-week-view-hour-segment>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  `,\r\n                }]\r\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: CalendarUtils }, { type: undefined, decorators: [{\r\n                    type: Inject,\r\n                    args: [LOCALE_ID]\r\n                }] }, { type: DateAdapter }, { type: i0.ElementRef }]; }, propDecorators: { viewDate: [{\r\n                type: Input\r\n            }], events: [{\r\n                type: Input\r\n            }], excludeDays: [{\r\n                type: Input\r\n            }], refresh: [{\r\n                type: Input\r\n            }], locale: [{\r\n                type: Input\r\n            }], tooltipPlacement: [{\r\n                type: Input\r\n            }], tooltipTemplate: [{\r\n                type: Input\r\n            }], tooltipAppendToBody: [{\r\n                type: Input\r\n            }], tooltipDelay: [{\r\n                type: Input\r\n            }], weekStartsOn: [{\r\n                type: Input\r\n            }], headerTemplate: [{\r\n                type: Input\r\n            }], eventTemplate: [{\r\n                type: Input\r\n            }], eventTitleTemplate: [{\r\n                type: Input\r\n            }], eventActionsTemplate: [{\r\n                type: Input\r\n            }], precision: [{\r\n                type: Input\r\n            }], weekendDays: [{\r\n                type: Input\r\n            }], snapDraggedEvents: [{\r\n                type: Input\r\n            }], hourSegments: [{\r\n                type: Input\r\n            }], hourDuration: [{\r\n                type: Input\r\n            }], hourSegmentHeight: [{\r\n                type: Input\r\n            }], minimumEventHeight: [{\r\n                type: Input\r\n            }], dayStartHour: [{\r\n                type: Input\r\n            }], dayStartMinute: [{\r\n                type: Input\r\n            }], dayEndHour: [{\r\n                type: Input\r\n            }], dayEndMinute: [{\r\n                type: Input\r\n            }], hourSegmentTemplate: [{\r\n                type: Input\r\n            }], eventSnapSize: [{\r\n                type: Input\r\n            }], allDayEventsLabelTemplate: [{\r\n                type: Input\r\n            }], daysInWeek: [{\r\n                type: Input\r\n            }], currentTimeMarkerTemplate: [{\r\n                type: Input\r\n            }], validateEventTimesChanged: [{\r\n                type: Input\r\n            }], resizeCursors: [{\r\n                type: Input\r\n            }], dayHeaderClicked: [{\r\n                type: Output\r\n            }], eventClicked: [{\r\n                type: Output\r\n            }], eventTimesChanged: [{\r\n                type: Output\r\n            }], beforeViewRender: [{\r\n                type: Output\r\n            }], hourSegmentClicked: [{\r\n                type: Output\r\n            }] } });\n\n/**\r\n * Shows all events on a given day. Example usage:\r\n *\r\n * ```typescript\r\n * <mwl-calendar-day-view\r\n *  [viewDate]=\"viewDate\"\r\n *  [events]=\"events\">\r\n * </mwl-calendar-day-view>\r\n * ```\r\n */\r\nclass CalendarDayViewComponent {\r\n    constructor() {\r\n        /**\r\n         * An array of events to display on view\r\n         * The schema is available here: https://github.com/mattlewis92/calendar-utils/blob/c51689985f59a271940e30bc4e2c4e1fee3fcb5c/src/calendarUtils.ts#L49-L63\r\n         */\r\n        this.events = [];\r\n        /**\r\n         * The number of segments in an hour. Must divide equally into 60.\r\n         */\r\n        this.hourSegments = 2;\r\n        /**\r\n         * The height in pixels of each hour segment\r\n         */\r\n        this.hourSegmentHeight = 30;\r\n        /**\r\n         * The minimum height in pixels of each event\r\n         */\r\n        this.minimumEventHeight = 30;\r\n        /**\r\n         * The day start hours in 24 hour time. Must be 0-23\r\n         */\r\n        this.dayStartHour = 0;\r\n        /**\r\n         * The day start minutes. Must be 0-59\r\n         */\r\n        this.dayStartMinute = 0;\r\n        /**\r\n         * The day end hours in 24 hour time. Must be 0-23\r\n         */\r\n        this.dayEndHour = 23;\r\n        /**\r\n         * The day end minutes. Must be 0-59\r\n         */\r\n        this.dayEndMinute = 59;\r\n        /**\r\n         * The placement of the event tooltip\r\n         */\r\n        this.tooltipPlacement = 'auto';\r\n        /**\r\n         * Whether to append tooltips to the body or next to the trigger element\r\n         */\r\n        this.tooltipAppendToBody = true;\r\n        /**\r\n         * The delay in milliseconds before the tooltip should be displayed. If not provided the tooltip\r\n         * will be displayed immediately.\r\n         */\r\n        this.tooltipDelay = null;\r\n        /**\r\n         * Whether to snap events to a grid when dragging\r\n         */\r\n        this.snapDraggedEvents = true;\r\n        /**\r\n         * Called when an event title is clicked\r\n         */\r\n        this.eventClicked = new EventEmitter();\r\n        /**\r\n         * Called when an hour segment is clicked\r\n         */\r\n        this.hourSegmentClicked = new EventEmitter();\r\n        /**\r\n         * Called when an event is resized or dragged and dropped\r\n         */\r\n        this.eventTimesChanged = new EventEmitter();\r\n        /**\r\n         * An output that will be called before the view is rendered for the current day.\r\n         * If you add the `cssClass` property to an hour grid segment it will add that class to the hour segment in the template\r\n         */\r\n        this.beforeViewRender = new EventEmitter();\r\n    }\r\n}\r\nCalendarDayViewComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarDayViewComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\r\nCalendarDayViewComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.0.4\", type: CalendarDayViewComponent, selector: \"mwl-calendar-day-view\", inputs: { viewDate: \"viewDate\", events: \"events\", hourSegments: \"hourSegments\", hourSegmentHeight: \"hourSegmentHeight\", hourDuration: \"hourDuration\", minimumEventHeight: \"minimumEventHeight\", dayStartHour: \"dayStartHour\", dayStartMinute: \"dayStartMinute\", dayEndHour: \"dayEndHour\", dayEndMinute: \"dayEndMinute\", refresh: \"refresh\", locale: \"locale\", eventSnapSize: \"eventSnapSize\", tooltipPlacement: \"tooltipPlacement\", tooltipTemplate: \"tooltipTemplate\", tooltipAppendToBody: \"tooltipAppendToBody\", tooltipDelay: \"tooltipDelay\", hourSegmentTemplate: \"hourSegmentTemplate\", eventTemplate: \"eventTemplate\", eventTitleTemplate: \"eventTitleTemplate\", eventActionsTemplate: \"eventActionsTemplate\", snapDraggedEvents: \"snapDraggedEvents\", allDayEventsLabelTemplate: \"allDayEventsLabelTemplate\", currentTimeMarkerTemplate: \"currentTimeMarkerTemplate\", validateEventTimesChanged: \"validateEventTimesChanged\", resizeCursors: \"resizeCursors\" }, outputs: { eventClicked: \"eventClicked\", hourSegmentClicked: \"hourSegmentClicked\", eventTimesChanged: \"eventTimesChanged\", beforeViewRender: \"beforeViewRender\" }, ngImport: i0, template: `\r\n    <mwl-calendar-week-view\r\n      class=\"cal-day-view\"\r\n      [daysInWeek]=\"1\"\r\n      [viewDate]=\"viewDate\"\r\n      [events]=\"events\"\r\n      [hourSegments]=\"hourSegments\"\r\n      [hourDuration]=\"hourDuration\"\r\n      [hourSegmentHeight]=\"hourSegmentHeight\"\r\n      [minimumEventHeight]=\"minimumEventHeight\"\r\n      [dayStartHour]=\"dayStartHour\"\r\n      [dayStartMinute]=\"dayStartMinute\"\r\n      [dayEndHour]=\"dayEndHour\"\r\n      [dayEndMinute]=\"dayEndMinute\"\r\n      [refresh]=\"refresh\"\r\n      [locale]=\"locale\"\r\n      [eventSnapSize]=\"eventSnapSize\"\r\n      [tooltipPlacement]=\"tooltipPlacement\"\r\n      [tooltipTemplate]=\"tooltipTemplate\"\r\n      [tooltipAppendToBody]=\"tooltipAppendToBody\"\r\n      [tooltipDelay]=\"tooltipDelay\"\r\n      [resizeCursors]=\"resizeCursors\"\r\n      [hourSegmentTemplate]=\"hourSegmentTemplate\"\r\n      [eventTemplate]=\"eventTemplate\"\r\n      [eventTitleTemplate]=\"eventTitleTemplate\"\r\n      [eventActionsTemplate]=\"eventActionsTemplate\"\r\n      [snapDraggedEvents]=\"snapDraggedEvents\"\r\n      [allDayEventsLabelTemplate]=\"allDayEventsLabelTemplate\"\r\n      [currentTimeMarkerTemplate]=\"currentTimeMarkerTemplate\"\r\n      [validateEventTimesChanged]=\"validateEventTimesChanged\"\r\n      (eventClicked)=\"eventClicked.emit($event)\"\r\n      (hourSegmentClicked)=\"hourSegmentClicked.emit($event)\"\r\n      (eventTimesChanged)=\"eventTimesChanged.emit($event)\"\r\n      (beforeViewRender)=\"beforeViewRender.emit($event)\"\r\n    ></mwl-calendar-week-view>\r\n  `, isInline: true, dependencies: [{ kind: \"component\", type: CalendarWeekViewComponent, selector: \"mwl-calendar-week-view\", inputs: [\"viewDate\", \"events\", \"excludeDays\", \"refresh\", \"locale\", \"tooltipPlacement\", \"tooltipTemplate\", \"tooltipAppendToBody\", \"tooltipDelay\", \"weekStartsOn\", \"headerTemplate\", \"eventTemplate\", \"eventTitleTemplate\", \"eventActionsTemplate\", \"precision\", \"weekendDays\", \"snapDraggedEvents\", \"hourSegments\", \"hourDuration\", \"hourSegmentHeight\", \"minimumEventHeight\", \"dayStartHour\", \"dayStartMinute\", \"dayEndHour\", \"dayEndMinute\", \"hourSegmentTemplate\", \"eventSnapSize\", \"allDayEventsLabelTemplate\", \"daysInWeek\", \"currentTimeMarkerTemplate\", \"validateEventTimesChanged\", \"resizeCursors\"], outputs: [\"dayHeaderClicked\", \"eventClicked\", \"eventTimesChanged\", \"beforeViewRender\", \"hourSegmentClicked\"] }] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarDayViewComponent, decorators: [{\r\n            type: Component,\r\n            args: [{\r\n                    selector: 'mwl-calendar-day-view',\r\n                    template: `\r\n    <mwl-calendar-week-view\r\n      class=\"cal-day-view\"\r\n      [daysInWeek]=\"1\"\r\n      [viewDate]=\"viewDate\"\r\n      [events]=\"events\"\r\n      [hourSegments]=\"hourSegments\"\r\n      [hourDuration]=\"hourDuration\"\r\n      [hourSegmentHeight]=\"hourSegmentHeight\"\r\n      [minimumEventHeight]=\"minimumEventHeight\"\r\n      [dayStartHour]=\"dayStartHour\"\r\n      [dayStartMinute]=\"dayStartMinute\"\r\n      [dayEndHour]=\"dayEndHour\"\r\n      [dayEndMinute]=\"dayEndMinute\"\r\n      [refresh]=\"refresh\"\r\n      [locale]=\"locale\"\r\n      [eventSnapSize]=\"eventSnapSize\"\r\n      [tooltipPlacement]=\"tooltipPlacement\"\r\n      [tooltipTemplate]=\"tooltipTemplate\"\r\n      [tooltipAppendToBody]=\"tooltipAppendToBody\"\r\n      [tooltipDelay]=\"tooltipDelay\"\r\n      [resizeCursors]=\"resizeCursors\"\r\n      [hourSegmentTemplate]=\"hourSegmentTemplate\"\r\n      [eventTemplate]=\"eventTemplate\"\r\n      [eventTitleTemplate]=\"eventTitleTemplate\"\r\n      [eventActionsTemplate]=\"eventActionsTemplate\"\r\n      [snapDraggedEvents]=\"snapDraggedEvents\"\r\n      [allDayEventsLabelTemplate]=\"allDayEventsLabelTemplate\"\r\n      [currentTimeMarkerTemplate]=\"currentTimeMarkerTemplate\"\r\n      [validateEventTimesChanged]=\"validateEventTimesChanged\"\r\n      (eventClicked)=\"eventClicked.emit($event)\"\r\n      (hourSegmentClicked)=\"hourSegmentClicked.emit($event)\"\r\n      (eventTimesChanged)=\"eventTimesChanged.emit($event)\"\r\n      (beforeViewRender)=\"beforeViewRender.emit($event)\"\r\n    ></mwl-calendar-week-view>\r\n  `,\r\n                }]\r\n        }], propDecorators: { viewDate: [{\r\n                type: Input\r\n            }], events: [{\r\n                type: Input\r\n            }], hourSegments: [{\r\n                type: Input\r\n            }], hourSegmentHeight: [{\r\n                type: Input\r\n            }], hourDuration: [{\r\n                type: Input\r\n            }], minimumEventHeight: [{\r\n                type: Input\r\n            }], dayStartHour: [{\r\n                type: Input\r\n            }], dayStartMinute: [{\r\n                type: Input\r\n            }], dayEndHour: [{\r\n                type: Input\r\n            }], dayEndMinute: [{\r\n                type: Input\r\n            }], refresh: [{\r\n                type: Input\r\n            }], locale: [{\r\n                type: Input\r\n            }], eventSnapSize: [{\r\n                type: Input\r\n            }], tooltipPlacement: [{\r\n                type: Input\r\n            }], tooltipTemplate: [{\r\n                type: Input\r\n            }], tooltipAppendToBody: [{\r\n                type: Input\r\n            }], tooltipDelay: [{\r\n                type: Input\r\n            }], hourSegmentTemplate: [{\r\n                type: Input\r\n            }], eventTemplate: [{\r\n                type: Input\r\n            }], eventTitleTemplate: [{\r\n                type: Input\r\n            }], eventActionsTemplate: [{\r\n                type: Input\r\n            }], snapDraggedEvents: [{\r\n                type: Input\r\n            }], allDayEventsLabelTemplate: [{\r\n                type: Input\r\n            }], currentTimeMarkerTemplate: [{\r\n                type: Input\r\n            }], validateEventTimesChanged: [{\r\n                type: Input\r\n            }], resizeCursors: [{\r\n                type: Input\r\n            }], eventClicked: [{\r\n                type: Output\r\n            }], hourSegmentClicked: [{\r\n                type: Output\r\n            }], eventTimesChanged: [{\r\n                type: Output\r\n            }], beforeViewRender: [{\r\n                type: Output\r\n            }] } });\n\nclass CalendarWeekModule {\r\n}\r\nCalendarWeekModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarWeekModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\r\nCalendarWeekModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarWeekModule, declarations: [CalendarWeekViewComponent,\r\n        CalendarWeekViewHeaderComponent,\r\n        CalendarWeekViewEventComponent,\r\n        CalendarWeekViewHourSegmentComponent,\r\n        CalendarWeekViewCurrentTimeMarkerComponent], imports: [CommonModule,\r\n        ResizableModule,\r\n        DragAndDropModule,\r\n        CalendarCommonModule], exports: [ResizableModule,\r\n        DragAndDropModule,\r\n        CalendarWeekViewComponent,\r\n        CalendarWeekViewHeaderComponent,\r\n        CalendarWeekViewEventComponent,\r\n        CalendarWeekViewHourSegmentComponent,\r\n        CalendarWeekViewCurrentTimeMarkerComponent] });\r\nCalendarWeekModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarWeekModule, imports: [CommonModule,\r\n        ResizableModule,\r\n        DragAndDropModule,\r\n        CalendarCommonModule, ResizableModule,\r\n        DragAndDropModule] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarWeekModule, decorators: [{\r\n            type: NgModule,\r\n            args: [{\r\n                    imports: [\r\n                        CommonModule,\r\n                        ResizableModule,\r\n                        DragAndDropModule,\r\n                        CalendarCommonModule,\r\n                    ],\r\n                    declarations: [\r\n                        CalendarWeekViewComponent,\r\n                        CalendarWeekViewHeaderComponent,\r\n                        CalendarWeekViewEventComponent,\r\n                        CalendarWeekViewHourSegmentComponent,\r\n                        CalendarWeekViewCurrentTimeMarkerComponent,\r\n                    ],\r\n                    exports: [\r\n                        ResizableModule,\r\n                        DragAndDropModule,\r\n                        CalendarWeekViewComponent,\r\n                        CalendarWeekViewHeaderComponent,\r\n                        CalendarWeekViewEventComponent,\r\n                        CalendarWeekViewHourSegmentComponent,\r\n                        CalendarWeekViewCurrentTimeMarkerComponent,\r\n                    ],\r\n                }]\r\n        }] });\n\nclass CalendarDayModule {\r\n}\r\nCalendarDayModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarDayModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\r\nCalendarDayModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarDayModule, declarations: [CalendarDayViewComponent], imports: [CommonModule, CalendarCommonModule, CalendarWeekModule], exports: [CalendarDayViewComponent] });\r\nCalendarDayModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarDayModule, imports: [CommonModule, CalendarCommonModule, CalendarWeekModule] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarDayModule, decorators: [{\r\n            type: NgModule,\r\n            args: [{\r\n                    imports: [CommonModule, CalendarCommonModule, CalendarWeekModule],\r\n                    declarations: [CalendarDayViewComponent],\r\n                    exports: [CalendarDayViewComponent],\r\n                }]\r\n        }] });\n\nclass CalendarMonthCellComponent {\r\n    constructor() {\r\n        this.highlightDay = new EventEmitter();\r\n        this.unhighlightDay = new EventEmitter();\r\n        this.eventClicked = new EventEmitter();\r\n        this.trackByEventId = trackByEventId;\r\n        this.validateDrag = isWithinThreshold;\r\n    }\r\n}\r\nCalendarMonthCellComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarMonthCellComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\r\nCalendarMonthCellComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.0.4\", type: CalendarMonthCellComponent, selector: \"mwl-calendar-month-cell\", inputs: { day: \"day\", openDay: \"openDay\", locale: \"locale\", tooltipPlacement: \"tooltipPlacement\", tooltipAppendToBody: \"tooltipAppendToBody\", customTemplate: \"customTemplate\", tooltipTemplate: \"tooltipTemplate\", tooltipDelay: \"tooltipDelay\" }, outputs: { highlightDay: \"highlightDay\", unhighlightDay: \"unhighlightDay\", eventClicked: \"eventClicked\" }, host: { properties: { \"class.cal-past\": \"day.isPast\", \"class.cal-today\": \"day.isToday\", \"class.cal-future\": \"day.isFuture\", \"class.cal-weekend\": \"day.isWeekend\", \"class.cal-in-month\": \"day.inMonth\", \"class.cal-out-month\": \"!day.inMonth\", \"class.cal-has-events\": \"day.events.length > 0\", \"class.cal-open\": \"day === openDay\", \"class.cal-event-highlight\": \"!!day.backgroundColor\" }, classAttribute: \"cal-cell cal-day-cell\" }, ngImport: i0, template: `\r\n    <ng-template\r\n      #defaultTemplate\r\n      let-day=\"day\"\r\n      let-openDay=\"openDay\"\r\n      let-locale=\"locale\"\r\n      let-tooltipPlacement=\"tooltipPlacement\"\r\n      let-highlightDay=\"highlightDay\"\r\n      let-unhighlightDay=\"unhighlightDay\"\r\n      let-eventClicked=\"eventClicked\"\r\n      let-tooltipTemplate=\"tooltipTemplate\"\r\n      let-tooltipAppendToBody=\"tooltipAppendToBody\"\r\n      let-tooltipDelay=\"tooltipDelay\"\r\n      let-trackByEventId=\"trackByEventId\"\r\n      let-validateDrag=\"validateDrag\"\r\n    >\r\n      <div\r\n        class=\"cal-cell-top\"\r\n        [attr.aria-label]=\"\r\n          { day: day, locale: locale } | calendarA11y : 'monthCell'\r\n        \"\r\n      >\r\n        <span aria-hidden=\"true\">\r\n          <span class=\"cal-day-badge\" *ngIf=\"day.badgeTotal > 0\">{{\r\n            day.badgeTotal\r\n          }}</span>\r\n          <span class=\"cal-day-number\">{{\r\n            day.date | calendarDate : 'monthViewDayNumber' : locale\r\n          }}</span>\r\n        </span>\r\n      </div>\r\n      <div class=\"cal-events\" *ngIf=\"day.events.length > 0\">\r\n        <div\r\n          class=\"cal-event\"\r\n          *ngFor=\"let event of day.events; trackBy: trackByEventId\"\r\n          [ngStyle]=\"{ backgroundColor: event.color?.primary }\"\r\n          [ngClass]=\"event?.cssClass\"\r\n          (mouseenter)=\"highlightDay.emit({ event: event })\"\r\n          (mouseleave)=\"unhighlightDay.emit({ event: event })\"\r\n          [mwlCalendarTooltip]=\"\r\n            event.title | calendarEventTitle : 'monthTooltip' : event\r\n          \"\r\n          [tooltipPlacement]=\"tooltipPlacement\"\r\n          [tooltipEvent]=\"event\"\r\n          [tooltipTemplate]=\"tooltipTemplate\"\r\n          [tooltipAppendToBody]=\"tooltipAppendToBody\"\r\n          [tooltipDelay]=\"tooltipDelay\"\r\n          mwlDraggable\r\n          [class.cal-draggable]=\"event.draggable\"\r\n          dragActiveClass=\"cal-drag-active\"\r\n          [dropData]=\"{ event: event, draggedFrom: day }\"\r\n          [dragAxis]=\"{ x: event.draggable, y: event.draggable }\"\r\n          [validateDrag]=\"validateDrag\"\r\n          [touchStartLongPress]=\"{ delay: 300, delta: 30 }\"\r\n          (mwlClick)=\"eventClicked.emit({ event: event, sourceEvent: $event })\"\r\n          [attr.aria-hidden]=\"{} | calendarA11y : 'hideMonthCellEvents'\"\r\n        ></div>\r\n      </div>\r\n    </ng-template>\r\n    <ng-template\r\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\r\n      [ngTemplateOutletContext]=\"{\r\n        day: day,\r\n        openDay: openDay,\r\n        locale: locale,\r\n        tooltipPlacement: tooltipPlacement,\r\n        highlightDay: highlightDay,\r\n        unhighlightDay: unhighlightDay,\r\n        eventClicked: eventClicked,\r\n        tooltipTemplate: tooltipTemplate,\r\n        tooltipAppendToBody: tooltipAppendToBody,\r\n        tooltipDelay: tooltipDelay,\r\n        trackByEventId: trackByEventId,\r\n        validateDrag: validateDrag\r\n      }\"\r\n    >\r\n    </ng-template>\r\n  `, isInline: true, dependencies: [{ kind: \"directive\", type: i1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i1.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"directive\", type: i1.NgStyle, selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }, { kind: \"directive\", type: i2.DraggableDirective, selector: \"[mwlDraggable]\", inputs: [\"dropData\", \"dragAxis\", \"dragSnapGrid\", \"ghostDragEnabled\", \"showOriginalElementWhileDragging\", \"validateDrag\", \"dragCursor\", \"dragActiveClass\", \"ghostElementAppendTo\", \"ghostElementTemplate\", \"touchStartLongPress\", \"autoScroll\"], outputs: [\"dragPointerDown\", \"dragStart\", \"ghostElementCreated\", \"dragging\", \"dragEnd\"] }, { kind: \"directive\", type: CalendarTooltipDirective, selector: \"[mwlCalendarTooltip]\", inputs: [\"mwlCalendarTooltip\", \"tooltipPlacement\", \"tooltipTemplate\", \"tooltipEvent\", \"tooltipAppendToBody\", \"tooltipDelay\"] }, { kind: \"directive\", type: ClickDirective, selector: \"[mwlClick]\", inputs: [\"clickListenerDisabled\"], outputs: [\"mwlClick\"] }, { kind: \"pipe\", type: CalendarDatePipe, name: \"calendarDate\" }, { kind: \"pipe\", type: CalendarEventTitlePipe, name: \"calendarEventTitle\" }, { kind: \"pipe\", type: CalendarA11yPipe, name: \"calendarA11y\" }] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarMonthCellComponent, decorators: [{\r\n            type: Component,\r\n            args: [{\r\n                    selector: 'mwl-calendar-month-cell',\r\n                    template: `\r\n    <ng-template\r\n      #defaultTemplate\r\n      let-day=\"day\"\r\n      let-openDay=\"openDay\"\r\n      let-locale=\"locale\"\r\n      let-tooltipPlacement=\"tooltipPlacement\"\r\n      let-highlightDay=\"highlightDay\"\r\n      let-unhighlightDay=\"unhighlightDay\"\r\n      let-eventClicked=\"eventClicked\"\r\n      let-tooltipTemplate=\"tooltipTemplate\"\r\n      let-tooltipAppendToBody=\"tooltipAppendToBody\"\r\n      let-tooltipDelay=\"tooltipDelay\"\r\n      let-trackByEventId=\"trackByEventId\"\r\n      let-validateDrag=\"validateDrag\"\r\n    >\r\n      <div\r\n        class=\"cal-cell-top\"\r\n        [attr.aria-label]=\"\r\n          { day: day, locale: locale } | calendarA11y : 'monthCell'\r\n        \"\r\n      >\r\n        <span aria-hidden=\"true\">\r\n          <span class=\"cal-day-badge\" *ngIf=\"day.badgeTotal > 0\">{{\r\n            day.badgeTotal\r\n          }}</span>\r\n          <span class=\"cal-day-number\">{{\r\n            day.date | calendarDate : 'monthViewDayNumber' : locale\r\n          }}</span>\r\n        </span>\r\n      </div>\r\n      <div class=\"cal-events\" *ngIf=\"day.events.length > 0\">\r\n        <div\r\n          class=\"cal-event\"\r\n          *ngFor=\"let event of day.events; trackBy: trackByEventId\"\r\n          [ngStyle]=\"{ backgroundColor: event.color?.primary }\"\r\n          [ngClass]=\"event?.cssClass\"\r\n          (mouseenter)=\"highlightDay.emit({ event: event })\"\r\n          (mouseleave)=\"unhighlightDay.emit({ event: event })\"\r\n          [mwlCalendarTooltip]=\"\r\n            event.title | calendarEventTitle : 'monthTooltip' : event\r\n          \"\r\n          [tooltipPlacement]=\"tooltipPlacement\"\r\n          [tooltipEvent]=\"event\"\r\n          [tooltipTemplate]=\"tooltipTemplate\"\r\n          [tooltipAppendToBody]=\"tooltipAppendToBody\"\r\n          [tooltipDelay]=\"tooltipDelay\"\r\n          mwlDraggable\r\n          [class.cal-draggable]=\"event.draggable\"\r\n          dragActiveClass=\"cal-drag-active\"\r\n          [dropData]=\"{ event: event, draggedFrom: day }\"\r\n          [dragAxis]=\"{ x: event.draggable, y: event.draggable }\"\r\n          [validateDrag]=\"validateDrag\"\r\n          [touchStartLongPress]=\"{ delay: 300, delta: 30 }\"\r\n          (mwlClick)=\"eventClicked.emit({ event: event, sourceEvent: $event })\"\r\n          [attr.aria-hidden]=\"{} | calendarA11y : 'hideMonthCellEvents'\"\r\n        ></div>\r\n      </div>\r\n    </ng-template>\r\n    <ng-template\r\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\r\n      [ngTemplateOutletContext]=\"{\r\n        day: day,\r\n        openDay: openDay,\r\n        locale: locale,\r\n        tooltipPlacement: tooltipPlacement,\r\n        highlightDay: highlightDay,\r\n        unhighlightDay: unhighlightDay,\r\n        eventClicked: eventClicked,\r\n        tooltipTemplate: tooltipTemplate,\r\n        tooltipAppendToBody: tooltipAppendToBody,\r\n        tooltipDelay: tooltipDelay,\r\n        trackByEventId: trackByEventId,\r\n        validateDrag: validateDrag\r\n      }\"\r\n    >\r\n    </ng-template>\r\n  `,\r\n                    // eslint-disable-next-line @angular-eslint/no-host-metadata-property\r\n                    host: {\r\n                        class: 'cal-cell cal-day-cell',\r\n                        '[class.cal-past]': 'day.isPast',\r\n                        '[class.cal-today]': 'day.isToday',\r\n                        '[class.cal-future]': 'day.isFuture',\r\n                        '[class.cal-weekend]': 'day.isWeekend',\r\n                        '[class.cal-in-month]': 'day.inMonth',\r\n                        '[class.cal-out-month]': '!day.inMonth',\r\n                        '[class.cal-has-events]': 'day.events.length > 0',\r\n                        '[class.cal-open]': 'day === openDay',\r\n                        '[class.cal-event-highlight]': '!!day.backgroundColor',\r\n                    },\r\n                }]\r\n        }], propDecorators: { day: [{\r\n                type: Input\r\n            }], openDay: [{\r\n                type: Input\r\n            }], locale: [{\r\n                type: Input\r\n            }], tooltipPlacement: [{\r\n                type: Input\r\n            }], tooltipAppendToBody: [{\r\n                type: Input\r\n            }], customTemplate: [{\r\n                type: Input\r\n            }], tooltipTemplate: [{\r\n                type: Input\r\n            }], tooltipDelay: [{\r\n                type: Input\r\n            }], highlightDay: [{\r\n                type: Output\r\n            }], unhighlightDay: [{\r\n                type: Output\r\n            }], eventClicked: [{\r\n                type: Output\r\n            }] } });\n\nconst collapseAnimation = trigger('collapse', [\r\n    state('void', style({\r\n        height: 0,\r\n        overflow: 'hidden',\r\n        'padding-top': 0,\r\n        'padding-bottom': 0,\r\n    })),\r\n    state('*', style({\r\n        height: '*',\r\n        overflow: 'hidden',\r\n        'padding-top': '*',\r\n        'padding-bottom': '*',\r\n    })),\r\n    transition('* => void', animate('150ms ease-out')),\r\n    transition('void => *', animate('150ms ease-in')),\r\n]);\r\nclass CalendarOpenDayEventsComponent {\r\n    constructor() {\r\n        this.isOpen = false;\r\n        this.eventClicked = new EventEmitter();\r\n        this.trackByEventId = trackByEventId;\r\n        this.validateDrag = isWithinThreshold;\r\n    }\r\n}\r\nCalendarOpenDayEventsComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarOpenDayEventsComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\r\nCalendarOpenDayEventsComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.0.4\", type: CalendarOpenDayEventsComponent, selector: \"mwl-calendar-open-day-events\", inputs: { locale: \"locale\", isOpen: \"isOpen\", events: \"events\", customTemplate: \"customTemplate\", eventTitleTemplate: \"eventTitleTemplate\", eventActionsTemplate: \"eventActionsTemplate\", date: \"date\" }, outputs: { eventClicked: \"eventClicked\" }, ngImport: i0, template: `\r\n    <ng-template\r\n      #defaultTemplate\r\n      let-events=\"events\"\r\n      let-eventClicked=\"eventClicked\"\r\n      let-isOpen=\"isOpen\"\r\n      let-trackByEventId=\"trackByEventId\"\r\n      let-validateDrag=\"validateDrag\"\r\n    >\r\n      <div\r\n        class=\"cal-open-day-events\"\r\n        [@collapse]\r\n        *ngIf=\"isOpen\"\r\n        role=\"application\"\r\n      >\r\n        <span\r\n          tabindex=\"-1\"\r\n          role=\"alert\"\r\n          [attr.aria-label]=\"\r\n            { date: date, locale: locale } | calendarA11y : 'openDayEventsAlert'\r\n          \"\r\n        ></span>\r\n        <span\r\n          tabindex=\"0\"\r\n          role=\"landmark\"\r\n          [attr.aria-label]=\"\r\n            { date: date, locale: locale }\r\n              | calendarA11y : 'openDayEventsLandmark'\r\n          \"\r\n        ></span>\r\n        <div\r\n          *ngFor=\"let event of events; trackBy: trackByEventId\"\r\n          [ngClass]=\"event?.cssClass\"\r\n          mwlDraggable\r\n          [class.cal-draggable]=\"event.draggable\"\r\n          dragActiveClass=\"cal-drag-active\"\r\n          [dropData]=\"{ event: event }\"\r\n          [dragAxis]=\"{ x: event.draggable, y: event.draggable }\"\r\n          [validateDrag]=\"validateDrag\"\r\n          [touchStartLongPress]=\"{ delay: 300, delta: 30 }\"\r\n        >\r\n          <span\r\n            class=\"cal-event\"\r\n            [ngStyle]=\"{ backgroundColor: event.color?.primary }\"\r\n          >\r\n          </span>\r\n          &ngsp;\r\n          <mwl-calendar-event-title\r\n            [event]=\"event\"\r\n            [customTemplate]=\"eventTitleTemplate\"\r\n            view=\"month\"\r\n            (mwlClick)=\"\r\n              eventClicked.emit({ event: event, sourceEvent: $event })\r\n            \"\r\n            (mwlKeydownEnter)=\"\r\n              eventClicked.emit({ event: event, sourceEvent: $event })\r\n            \"\r\n            tabindex=\"0\"\r\n            [attr.aria-label]=\"\r\n              { event: event, locale: locale }\r\n                | calendarA11y : 'eventDescription'\r\n            \"\r\n          >\r\n          </mwl-calendar-event-title>\r\n          &ngsp;\r\n          <mwl-calendar-event-actions\r\n            [event]=\"event\"\r\n            [customTemplate]=\"eventActionsTemplate\"\r\n          >\r\n          </mwl-calendar-event-actions>\r\n        </div>\r\n      </div>\r\n    </ng-template>\r\n    <ng-template\r\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\r\n      [ngTemplateOutletContext]=\"{\r\n        events: events,\r\n        eventClicked: eventClicked,\r\n        isOpen: isOpen,\r\n        trackByEventId: trackByEventId,\r\n        validateDrag: validateDrag\r\n      }\"\r\n    >\r\n    </ng-template>\r\n  `, isInline: true, dependencies: [{ kind: \"directive\", type: i1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i1.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"directive\", type: i1.NgStyle, selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }, { kind: \"directive\", type: i2.DraggableDirective, selector: \"[mwlDraggable]\", inputs: [\"dropData\", \"dragAxis\", \"dragSnapGrid\", \"ghostDragEnabled\", \"showOriginalElementWhileDragging\", \"validateDrag\", \"dragCursor\", \"dragActiveClass\", \"ghostElementAppendTo\", \"ghostElementTemplate\", \"touchStartLongPress\", \"autoScroll\"], outputs: [\"dragPointerDown\", \"dragStart\", \"ghostElementCreated\", \"dragging\", \"dragEnd\"] }, { kind: \"component\", type: CalendarEventActionsComponent, selector: \"mwl-calendar-event-actions\", inputs: [\"event\", \"customTemplate\"] }, { kind: \"component\", type: CalendarEventTitleComponent, selector: \"mwl-calendar-event-title\", inputs: [\"event\", \"customTemplate\", \"view\"] }, { kind: \"directive\", type: ClickDirective, selector: \"[mwlClick]\", inputs: [\"clickListenerDisabled\"], outputs: [\"mwlClick\"] }, { kind: \"directive\", type: KeydownEnterDirective, selector: \"[mwlKeydownEnter]\", outputs: [\"mwlKeydownEnter\"] }, { kind: \"pipe\", type: CalendarA11yPipe, name: \"calendarA11y\" }], animations: [collapseAnimation] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarOpenDayEventsComponent, decorators: [{\r\n            type: Component,\r\n            args: [{\r\n                    selector: 'mwl-calendar-open-day-events',\r\n                    template: `\r\n    <ng-template\r\n      #defaultTemplate\r\n      let-events=\"events\"\r\n      let-eventClicked=\"eventClicked\"\r\n      let-isOpen=\"isOpen\"\r\n      let-trackByEventId=\"trackByEventId\"\r\n      let-validateDrag=\"validateDrag\"\r\n    >\r\n      <div\r\n        class=\"cal-open-day-events\"\r\n        [@collapse]\r\n        *ngIf=\"isOpen\"\r\n        role=\"application\"\r\n      >\r\n        <span\r\n          tabindex=\"-1\"\r\n          role=\"alert\"\r\n          [attr.aria-label]=\"\r\n            { date: date, locale: locale } | calendarA11y : 'openDayEventsAlert'\r\n          \"\r\n        ></span>\r\n        <span\r\n          tabindex=\"0\"\r\n          role=\"landmark\"\r\n          [attr.aria-label]=\"\r\n            { date: date, locale: locale }\r\n              | calendarA11y : 'openDayEventsLandmark'\r\n          \"\r\n        ></span>\r\n        <div\r\n          *ngFor=\"let event of events; trackBy: trackByEventId\"\r\n          [ngClass]=\"event?.cssClass\"\r\n          mwlDraggable\r\n          [class.cal-draggable]=\"event.draggable\"\r\n          dragActiveClass=\"cal-drag-active\"\r\n          [dropData]=\"{ event: event }\"\r\n          [dragAxis]=\"{ x: event.draggable, y: event.draggable }\"\r\n          [validateDrag]=\"validateDrag\"\r\n          [touchStartLongPress]=\"{ delay: 300, delta: 30 }\"\r\n        >\r\n          <span\r\n            class=\"cal-event\"\r\n            [ngStyle]=\"{ backgroundColor: event.color?.primary }\"\r\n          >\r\n          </span>\r\n          &ngsp;\r\n          <mwl-calendar-event-title\r\n            [event]=\"event\"\r\n            [customTemplate]=\"eventTitleTemplate\"\r\n            view=\"month\"\r\n            (mwlClick)=\"\r\n              eventClicked.emit({ event: event, sourceEvent: $event })\r\n            \"\r\n            (mwlKeydownEnter)=\"\r\n              eventClicked.emit({ event: event, sourceEvent: $event })\r\n            \"\r\n            tabindex=\"0\"\r\n            [attr.aria-label]=\"\r\n              { event: event, locale: locale }\r\n                | calendarA11y : 'eventDescription'\r\n            \"\r\n          >\r\n          </mwl-calendar-event-title>\r\n          &ngsp;\r\n          <mwl-calendar-event-actions\r\n            [event]=\"event\"\r\n            [customTemplate]=\"eventActionsTemplate\"\r\n          >\r\n          </mwl-calendar-event-actions>\r\n        </div>\r\n      </div>\r\n    </ng-template>\r\n    <ng-template\r\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\r\n      [ngTemplateOutletContext]=\"{\r\n        events: events,\r\n        eventClicked: eventClicked,\r\n        isOpen: isOpen,\r\n        trackByEventId: trackByEventId,\r\n        validateDrag: validateDrag\r\n      }\"\r\n    >\r\n    </ng-template>\r\n  `,\r\n                    animations: [collapseAnimation],\r\n                }]\r\n        }], propDecorators: { locale: [{\r\n                type: Input\r\n            }], isOpen: [{\r\n                type: Input\r\n            }], events: [{\r\n                type: Input\r\n            }], customTemplate: [{\r\n                type: Input\r\n            }], eventTitleTemplate: [{\r\n                type: Input\r\n            }], eventActionsTemplate: [{\r\n                type: Input\r\n            }], date: [{\r\n                type: Input\r\n            }], eventClicked: [{\r\n                type: Output\r\n            }] } });\n\nclass CalendarMonthViewHeaderComponent {\r\n    constructor() {\r\n        this.columnHeaderClicked = new EventEmitter();\r\n        this.trackByWeekDayHeaderDate = trackByWeekDayHeaderDate;\r\n    }\r\n}\r\nCalendarMonthViewHeaderComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarMonthViewHeaderComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\r\nCalendarMonthViewHeaderComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.0.4\", type: CalendarMonthViewHeaderComponent, selector: \"mwl-calendar-month-view-header\", inputs: { days: \"days\", locale: \"locale\", customTemplate: \"customTemplate\" }, outputs: { columnHeaderClicked: \"columnHeaderClicked\" }, ngImport: i0, template: `\r\n    <ng-template\r\n      #defaultTemplate\r\n      let-days=\"days\"\r\n      let-locale=\"locale\"\r\n      let-trackByWeekDayHeaderDate=\"trackByWeekDayHeaderDate\"\r\n    >\r\n      <div class=\"cal-cell-row cal-header\" role=\"row\">\r\n        <div\r\n          class=\"cal-cell\"\r\n          *ngFor=\"let day of days; trackBy: trackByWeekDayHeaderDate\"\r\n          [class.cal-past]=\"day.isPast\"\r\n          [class.cal-today]=\"day.isToday\"\r\n          [class.cal-future]=\"day.isFuture\"\r\n          [class.cal-weekend]=\"day.isWeekend\"\r\n          (click)=\"\r\n            columnHeaderClicked.emit({\r\n              isoDayNumber: day.day,\r\n              sourceEvent: $event\r\n            })\r\n          \"\r\n          [ngClass]=\"day.cssClass\"\r\n          tabindex=\"0\"\r\n          role=\"columnheader\"\r\n        >\r\n          {{ day.date | calendarDate : 'monthViewColumnHeader' : locale }}\r\n        </div>\r\n      </div>\r\n    </ng-template>\r\n    <ng-template\r\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\r\n      [ngTemplateOutletContext]=\"{\r\n        days: days,\r\n        locale: locale,\r\n        trackByWeekDayHeaderDate: trackByWeekDayHeaderDate\r\n      }\"\r\n    >\r\n    </ng-template>\r\n  `, isInline: true, dependencies: [{ kind: \"directive\", type: i1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i1.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"pipe\", type: CalendarDatePipe, name: \"calendarDate\" }] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarMonthViewHeaderComponent, decorators: [{\r\n            type: Component,\r\n            args: [{\r\n                    selector: 'mwl-calendar-month-view-header',\r\n                    template: `\r\n    <ng-template\r\n      #defaultTemplate\r\n      let-days=\"days\"\r\n      let-locale=\"locale\"\r\n      let-trackByWeekDayHeaderDate=\"trackByWeekDayHeaderDate\"\r\n    >\r\n      <div class=\"cal-cell-row cal-header\" role=\"row\">\r\n        <div\r\n          class=\"cal-cell\"\r\n          *ngFor=\"let day of days; trackBy: trackByWeekDayHeaderDate\"\r\n          [class.cal-past]=\"day.isPast\"\r\n          [class.cal-today]=\"day.isToday\"\r\n          [class.cal-future]=\"day.isFuture\"\r\n          [class.cal-weekend]=\"day.isWeekend\"\r\n          (click)=\"\r\n            columnHeaderClicked.emit({\r\n              isoDayNumber: day.day,\r\n              sourceEvent: $event\r\n            })\r\n          \"\r\n          [ngClass]=\"day.cssClass\"\r\n          tabindex=\"0\"\r\n          role=\"columnheader\"\r\n        >\r\n          {{ day.date | calendarDate : 'monthViewColumnHeader' : locale }}\r\n        </div>\r\n      </div>\r\n    </ng-template>\r\n    <ng-template\r\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\r\n      [ngTemplateOutletContext]=\"{\r\n        days: days,\r\n        locale: locale,\r\n        trackByWeekDayHeaderDate: trackByWeekDayHeaderDate\r\n      }\"\r\n    >\r\n    </ng-template>\r\n  `,\r\n                }]\r\n        }], propDecorators: { days: [{\r\n                type: Input\r\n            }], locale: [{\r\n                type: Input\r\n            }], customTemplate: [{\r\n                type: Input\r\n            }], columnHeaderClicked: [{\r\n                type: Output\r\n            }] } });\n\n/**\r\n * Shows all events on a given month. Example usage:\r\n *\r\n * ```typescript\r\n * <mwl-calendar-month-view\r\n *  [viewDate]=\"viewDate\"\r\n *  [events]=\"events\">\r\n * </mwl-calendar-month-view>\r\n * ```\r\n */\r\nclass CalendarMonthViewComponent {\r\n    /**\r\n     * @hidden\r\n     */\r\n    constructor(cdr, utils, locale, dateAdapter) {\r\n        this.cdr = cdr;\r\n        this.utils = utils;\r\n        this.dateAdapter = dateAdapter;\r\n        /**\r\n         * An array of events to display on view.\r\n         * The schema is available here: https://github.com/mattlewis92/calendar-utils/blob/c51689985f59a271940e30bc4e2c4e1fee3fcb5c/src/calendarUtils.ts#L49-L63\r\n         */\r\n        this.events = [];\r\n        /**\r\n         * An array of day indexes (0 = sunday, 1 = monday etc) that will be hidden on the view\r\n         */\r\n        this.excludeDays = [];\r\n        /**\r\n         * Whether the events list for the day of the `viewDate` option is visible or not\r\n         */\r\n        this.activeDayIsOpen = false;\r\n        /**\r\n         * The placement of the event tooltip\r\n         */\r\n        this.tooltipPlacement = 'auto';\r\n        /**\r\n         * Whether to append tooltips to the body or next to the trigger element\r\n         */\r\n        this.tooltipAppendToBody = true;\r\n        /**\r\n         * The delay in milliseconds before the tooltip should be displayed. If not provided the tooltip\r\n         * will be displayed immediately.\r\n         */\r\n        this.tooltipDelay = null;\r\n        /**\r\n         * An output that will be called before the view is rendered for the current month.\r\n         * If you add the `cssClass` property to a day in the body it will add that class to the cell element in the template\r\n         */\r\n        this.beforeViewRender = new EventEmitter();\r\n        /**\r\n         * Called when the day cell is clicked\r\n         */\r\n        this.dayClicked = new EventEmitter();\r\n        /**\r\n         * Called when the event title is clicked\r\n         */\r\n        this.eventClicked = new EventEmitter();\r\n        /**\r\n         * Called when a header week day is clicked. Returns ISO day number.\r\n         */\r\n        this.columnHeaderClicked = new EventEmitter();\r\n        /**\r\n         * Called when an event is dragged and dropped\r\n         */\r\n        this.eventTimesChanged = new EventEmitter();\r\n        /**\r\n         * @hidden\r\n         */\r\n        this.trackByRowOffset = (index, offset) => this.view.days\r\n            .slice(offset, this.view.totalDaysVisibleInWeek)\r\n            .map((day) => day.date.toISOString())\r\n            .join('-');\r\n        /**\r\n         * @hidden\r\n         */\r\n        this.trackByDate = (index, day) => day.date.toISOString();\r\n        this.locale = locale;\r\n    }\r\n    /**\r\n     * @hidden\r\n     */\r\n    ngOnInit() {\r\n        if (this.refresh) {\r\n            this.refreshSubscription = this.refresh.subscribe(() => {\r\n                this.refreshAll();\r\n                this.cdr.markForCheck();\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * @hidden\r\n     */\r\n    ngOnChanges(changes) {\r\n        const refreshHeader = changes.viewDate || changes.excludeDays || changes.weekendDays;\r\n        const refreshBody = changes.viewDate ||\r\n            changes.events ||\r\n            changes.excludeDays ||\r\n            changes.weekendDays;\r\n        if (refreshHeader) {\r\n            this.refreshHeader();\r\n        }\r\n        if (changes.events) {\r\n            validateEvents(this.events);\r\n        }\r\n        if (refreshBody) {\r\n            this.refreshBody();\r\n        }\r\n        if (refreshHeader || refreshBody) {\r\n            this.emitBeforeViewRender();\r\n        }\r\n        if (changes.activeDayIsOpen ||\r\n            changes.viewDate ||\r\n            changes.events ||\r\n            changes.excludeDays ||\r\n            changes.activeDay) {\r\n            this.checkActiveDayIsOpen();\r\n        }\r\n    }\r\n    /**\r\n     * @hidden\r\n     */\r\n    ngOnDestroy() {\r\n        if (this.refreshSubscription) {\r\n            this.refreshSubscription.unsubscribe();\r\n        }\r\n    }\r\n    /**\r\n     * @hidden\r\n     */\r\n    toggleDayHighlight(event, isHighlighted) {\r\n        this.view.days.forEach((day) => {\r\n            if (isHighlighted && day.events.indexOf(event) > -1) {\r\n                day.backgroundColor =\r\n                    (event.color && event.color.secondary) || '#D1E8FF';\r\n            }\r\n            else {\r\n                delete day.backgroundColor;\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * @hidden\r\n     */\r\n    eventDropped(droppedOn, event, draggedFrom) {\r\n        if (droppedOn !== draggedFrom) {\r\n            const year = this.dateAdapter.getYear(droppedOn.date);\r\n            const month = this.dateAdapter.getMonth(droppedOn.date);\r\n            const date = this.dateAdapter.getDate(droppedOn.date);\r\n            const newStart = this.dateAdapter.setDate(this.dateAdapter.setMonth(this.dateAdapter.setYear(event.start, year), month), date);\r\n            let newEnd;\r\n            if (event.end) {\r\n                const secondsDiff = this.dateAdapter.differenceInSeconds(newStart, event.start);\r\n                newEnd = this.dateAdapter.addSeconds(event.end, secondsDiff);\r\n            }\r\n            this.eventTimesChanged.emit({\r\n                event,\r\n                newStart,\r\n                newEnd,\r\n                day: droppedOn,\r\n                type: CalendarEventTimesChangedEventType.Drop,\r\n            });\r\n        }\r\n    }\r\n    refreshHeader() {\r\n        this.columnHeaders = this.utils.getWeekViewHeader({\r\n            viewDate: this.viewDate,\r\n            weekStartsOn: this.weekStartsOn,\r\n            excluded: this.excludeDays,\r\n            weekendDays: this.weekendDays,\r\n        });\r\n    }\r\n    refreshBody() {\r\n        this.view = this.utils.getMonthView({\r\n            events: this.events,\r\n            viewDate: this.viewDate,\r\n            weekStartsOn: this.weekStartsOn,\r\n            excluded: this.excludeDays,\r\n            weekendDays: this.weekendDays,\r\n        });\r\n    }\r\n    checkActiveDayIsOpen() {\r\n        if (this.activeDayIsOpen === true) {\r\n            const activeDay = this.activeDay || this.viewDate;\r\n            this.openDay = this.view.days.find((day) => this.dateAdapter.isSameDay(day.date, activeDay));\r\n            const index = this.view.days.indexOf(this.openDay);\r\n            this.openRowIndex =\r\n                Math.floor(index / this.view.totalDaysVisibleInWeek) *\r\n                    this.view.totalDaysVisibleInWeek;\r\n        }\r\n        else {\r\n            this.openRowIndex = null;\r\n            this.openDay = null;\r\n        }\r\n    }\r\n    refreshAll() {\r\n        this.refreshHeader();\r\n        this.refreshBody();\r\n        this.emitBeforeViewRender();\r\n        this.checkActiveDayIsOpen();\r\n    }\r\n    emitBeforeViewRender() {\r\n        if (this.columnHeaders && this.view) {\r\n            this.beforeViewRender.emit({\r\n                header: this.columnHeaders,\r\n                body: this.view.days,\r\n                period: this.view.period,\r\n            });\r\n        }\r\n    }\r\n}\r\nCalendarMonthViewComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarMonthViewComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: CalendarUtils }, { token: LOCALE_ID }, { token: DateAdapter }], target: i0.ɵɵFactoryTarget.Component });\r\nCalendarMonthViewComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.0.4\", type: CalendarMonthViewComponent, selector: \"mwl-calendar-month-view\", inputs: { viewDate: \"viewDate\", events: \"events\", excludeDays: \"excludeDays\", activeDayIsOpen: \"activeDayIsOpen\", activeDay: \"activeDay\", refresh: \"refresh\", locale: \"locale\", tooltipPlacement: \"tooltipPlacement\", tooltipTemplate: \"tooltipTemplate\", tooltipAppendToBody: \"tooltipAppendToBody\", tooltipDelay: \"tooltipDelay\", weekStartsOn: \"weekStartsOn\", headerTemplate: \"headerTemplate\", cellTemplate: \"cellTemplate\", openDayEventsTemplate: \"openDayEventsTemplate\", eventTitleTemplate: \"eventTitleTemplate\", eventActionsTemplate: \"eventActionsTemplate\", weekendDays: \"weekendDays\" }, outputs: { beforeViewRender: \"beforeViewRender\", dayClicked: \"dayClicked\", eventClicked: \"eventClicked\", columnHeaderClicked: \"columnHeaderClicked\", eventTimesChanged: \"eventTimesChanged\" }, usesOnChanges: true, ngImport: i0, template: `\r\n    <div class=\"cal-month-view\" role=\"grid\">\r\n      <mwl-calendar-month-view-header\r\n        [days]=\"columnHeaders\"\r\n        [locale]=\"locale\"\r\n        (columnHeaderClicked)=\"columnHeaderClicked.emit($event)\"\r\n        [customTemplate]=\"headerTemplate\"\r\n      >\r\n      </mwl-calendar-month-view-header>\r\n      <div class=\"cal-days\">\r\n        <div\r\n          *ngFor=\"let rowIndex of view.rowOffsets; trackBy: trackByRowOffset\"\r\n        >\r\n          <div role=\"row\" class=\"cal-cell-row\">\r\n            <mwl-calendar-month-cell\r\n              role=\"gridcell\"\r\n              *ngFor=\"\r\n                let day of view.days\r\n                  | slice : rowIndex : rowIndex + view.totalDaysVisibleInWeek;\r\n                trackBy: trackByDate\r\n              \"\r\n              [ngClass]=\"day?.cssClass\"\r\n              [day]=\"day\"\r\n              [openDay]=\"openDay\"\r\n              [locale]=\"locale\"\r\n              [tooltipPlacement]=\"tooltipPlacement\"\r\n              [tooltipAppendToBody]=\"tooltipAppendToBody\"\r\n              [tooltipTemplate]=\"tooltipTemplate\"\r\n              [tooltipDelay]=\"tooltipDelay\"\r\n              [customTemplate]=\"cellTemplate\"\r\n              [ngStyle]=\"{ backgroundColor: day.backgroundColor }\"\r\n              (mwlClick)=\"dayClicked.emit({ day: day, sourceEvent: $event })\"\r\n              [clickListenerDisabled]=\"dayClicked.observers.length === 0\"\r\n              (mwlKeydownEnter)=\"\r\n                dayClicked.emit({ day: day, sourceEvent: $event })\r\n              \"\r\n              (highlightDay)=\"toggleDayHighlight($event.event, true)\"\r\n              (unhighlightDay)=\"toggleDayHighlight($event.event, false)\"\r\n              mwlDroppable\r\n              dragOverClass=\"cal-drag-over\"\r\n              (drop)=\"\r\n                eventDropped(\r\n                  day,\r\n                  $event.dropData.event,\r\n                  $event.dropData.draggedFrom\r\n                )\r\n              \"\r\n              (eventClicked)=\"\r\n                eventClicked.emit({\r\n                  event: $event.event,\r\n                  sourceEvent: $event.sourceEvent\r\n                })\r\n              \"\r\n              [attr.tabindex]=\"{} | calendarA11y : 'monthCellTabIndex'\"\r\n            >\r\n            </mwl-calendar-month-cell>\r\n          </div>\r\n          <mwl-calendar-open-day-events\r\n            [locale]=\"locale\"\r\n            [isOpen]=\"openRowIndex === rowIndex\"\r\n            [events]=\"openDay?.events\"\r\n            [date]=\"openDay?.date\"\r\n            [customTemplate]=\"openDayEventsTemplate\"\r\n            [eventTitleTemplate]=\"eventTitleTemplate\"\r\n            [eventActionsTemplate]=\"eventActionsTemplate\"\r\n            (eventClicked)=\"\r\n              eventClicked.emit({\r\n                event: $event.event,\r\n                sourceEvent: $event.sourceEvent\r\n              })\r\n            \"\r\n            mwlDroppable\r\n            dragOverClass=\"cal-drag-over\"\r\n            (drop)=\"\r\n              eventDropped(\r\n                openDay,\r\n                $event.dropData.event,\r\n                $event.dropData.draggedFrom\r\n              )\r\n            \"\r\n          >\r\n          </mwl-calendar-open-day-events>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  `, isInline: true, dependencies: [{ kind: \"directive\", type: i1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i1.NgStyle, selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }, { kind: \"directive\", type: i2.DroppableDirective, selector: \"[mwlDroppable]\", inputs: [\"dragOverClass\", \"dragActiveClass\", \"validateDrop\"], outputs: [\"dragEnter\", \"dragLeave\", \"dragOver\", \"drop\"] }, { kind: \"directive\", type: ClickDirective, selector: \"[mwlClick]\", inputs: [\"clickListenerDisabled\"], outputs: [\"mwlClick\"] }, { kind: \"directive\", type: KeydownEnterDirective, selector: \"[mwlKeydownEnter]\", outputs: [\"mwlKeydownEnter\"] }, { kind: \"component\", type: CalendarMonthCellComponent, selector: \"mwl-calendar-month-cell\", inputs: [\"day\", \"openDay\", \"locale\", \"tooltipPlacement\", \"tooltipAppendToBody\", \"customTemplate\", \"tooltipTemplate\", \"tooltipDelay\"], outputs: [\"highlightDay\", \"unhighlightDay\", \"eventClicked\"] }, { kind: \"component\", type: CalendarOpenDayEventsComponent, selector: \"mwl-calendar-open-day-events\", inputs: [\"locale\", \"isOpen\", \"events\", \"customTemplate\", \"eventTitleTemplate\", \"eventActionsTemplate\", \"date\"], outputs: [\"eventClicked\"] }, { kind: \"component\", type: CalendarMonthViewHeaderComponent, selector: \"mwl-calendar-month-view-header\", inputs: [\"days\", \"locale\", \"customTemplate\"], outputs: [\"columnHeaderClicked\"] }, { kind: \"pipe\", type: i1.SlicePipe, name: \"slice\" }, { kind: \"pipe\", type: CalendarA11yPipe, name: \"calendarA11y\" }] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarMonthViewComponent, decorators: [{\r\n            type: Component,\r\n            args: [{\r\n                    selector: 'mwl-calendar-month-view',\r\n                    template: `\r\n    <div class=\"cal-month-view\" role=\"grid\">\r\n      <mwl-calendar-month-view-header\r\n        [days]=\"columnHeaders\"\r\n        [locale]=\"locale\"\r\n        (columnHeaderClicked)=\"columnHeaderClicked.emit($event)\"\r\n        [customTemplate]=\"headerTemplate\"\r\n      >\r\n      </mwl-calendar-month-view-header>\r\n      <div class=\"cal-days\">\r\n        <div\r\n          *ngFor=\"let rowIndex of view.rowOffsets; trackBy: trackByRowOffset\"\r\n        >\r\n          <div role=\"row\" class=\"cal-cell-row\">\r\n            <mwl-calendar-month-cell\r\n              role=\"gridcell\"\r\n              *ngFor=\"\r\n                let day of view.days\r\n                  | slice : rowIndex : rowIndex + view.totalDaysVisibleInWeek;\r\n                trackBy: trackByDate\r\n              \"\r\n              [ngClass]=\"day?.cssClass\"\r\n              [day]=\"day\"\r\n              [openDay]=\"openDay\"\r\n              [locale]=\"locale\"\r\n              [tooltipPlacement]=\"tooltipPlacement\"\r\n              [tooltipAppendToBody]=\"tooltipAppendToBody\"\r\n              [tooltipTemplate]=\"tooltipTemplate\"\r\n              [tooltipDelay]=\"tooltipDelay\"\r\n              [customTemplate]=\"cellTemplate\"\r\n              [ngStyle]=\"{ backgroundColor: day.backgroundColor }\"\r\n              (mwlClick)=\"dayClicked.emit({ day: day, sourceEvent: $event })\"\r\n              [clickListenerDisabled]=\"dayClicked.observers.length === 0\"\r\n              (mwlKeydownEnter)=\"\r\n                dayClicked.emit({ day: day, sourceEvent: $event })\r\n              \"\r\n              (highlightDay)=\"toggleDayHighlight($event.event, true)\"\r\n              (unhighlightDay)=\"toggleDayHighlight($event.event, false)\"\r\n              mwlDroppable\r\n              dragOverClass=\"cal-drag-over\"\r\n              (drop)=\"\r\n                eventDropped(\r\n                  day,\r\n                  $event.dropData.event,\r\n                  $event.dropData.draggedFrom\r\n                )\r\n              \"\r\n              (eventClicked)=\"\r\n                eventClicked.emit({\r\n                  event: $event.event,\r\n                  sourceEvent: $event.sourceEvent\r\n                })\r\n              \"\r\n              [attr.tabindex]=\"{} | calendarA11y : 'monthCellTabIndex'\"\r\n            >\r\n            </mwl-calendar-month-cell>\r\n          </div>\r\n          <mwl-calendar-open-day-events\r\n            [locale]=\"locale\"\r\n            [isOpen]=\"openRowIndex === rowIndex\"\r\n            [events]=\"openDay?.events\"\r\n            [date]=\"openDay?.date\"\r\n            [customTemplate]=\"openDayEventsTemplate\"\r\n            [eventTitleTemplate]=\"eventTitleTemplate\"\r\n            [eventActionsTemplate]=\"eventActionsTemplate\"\r\n            (eventClicked)=\"\r\n              eventClicked.emit({\r\n                event: $event.event,\r\n                sourceEvent: $event.sourceEvent\r\n              })\r\n            \"\r\n            mwlDroppable\r\n            dragOverClass=\"cal-drag-over\"\r\n            (drop)=\"\r\n              eventDropped(\r\n                openDay,\r\n                $event.dropData.event,\r\n                $event.dropData.draggedFrom\r\n              )\r\n            \"\r\n          >\r\n          </mwl-calendar-open-day-events>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  `,\r\n                }]\r\n        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: CalendarUtils }, { type: undefined, decorators: [{\r\n                    type: Inject,\r\n                    args: [LOCALE_ID]\r\n                }] }, { type: DateAdapter }]; }, propDecorators: { viewDate: [{\r\n                type: Input\r\n            }], events: [{\r\n                type: Input\r\n            }], excludeDays: [{\r\n                type: Input\r\n            }], activeDayIsOpen: [{\r\n                type: Input\r\n            }], activeDay: [{\r\n                type: Input\r\n            }], refresh: [{\r\n                type: Input\r\n            }], locale: [{\r\n                type: Input\r\n            }], tooltipPlacement: [{\r\n                type: Input\r\n            }], tooltipTemplate: [{\r\n                type: Input\r\n            }], tooltipAppendToBody: [{\r\n                type: Input\r\n            }], tooltipDelay: [{\r\n                type: Input\r\n            }], weekStartsOn: [{\r\n                type: Input\r\n            }], headerTemplate: [{\r\n                type: Input\r\n            }], cellTemplate: [{\r\n                type: Input\r\n            }], openDayEventsTemplate: [{\r\n                type: Input\r\n            }], eventTitleTemplate: [{\r\n                type: Input\r\n            }], eventActionsTemplate: [{\r\n                type: Input\r\n            }], weekendDays: [{\r\n                type: Input\r\n            }], beforeViewRender: [{\r\n                type: Output\r\n            }], dayClicked: [{\r\n                type: Output\r\n            }], eventClicked: [{\r\n                type: Output\r\n            }], columnHeaderClicked: [{\r\n                type: Output\r\n            }], eventTimesChanged: [{\r\n                type: Output\r\n            }] } });\n\nclass CalendarMonthModule {\r\n}\r\nCalendarMonthModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarMonthModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\r\nCalendarMonthModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarMonthModule, declarations: [CalendarMonthViewComponent,\r\n        CalendarMonthCellComponent,\r\n        CalendarOpenDayEventsComponent,\r\n        CalendarMonthViewHeaderComponent], imports: [CommonModule, DragAndDropModule, CalendarCommonModule], exports: [DragAndDropModule,\r\n        CalendarMonthViewComponent,\r\n        CalendarMonthCellComponent,\r\n        CalendarOpenDayEventsComponent,\r\n        CalendarMonthViewHeaderComponent] });\r\nCalendarMonthModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarMonthModule, imports: [CommonModule, DragAndDropModule, CalendarCommonModule, DragAndDropModule] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarMonthModule, decorators: [{\r\n            type: NgModule,\r\n            args: [{\r\n                    imports: [CommonModule, DragAndDropModule, CalendarCommonModule],\r\n                    declarations: [\r\n                        CalendarMonthViewComponent,\r\n                        CalendarMonthCellComponent,\r\n                        CalendarOpenDayEventsComponent,\r\n                        CalendarMonthViewHeaderComponent,\r\n                    ],\r\n                    exports: [\r\n                        DragAndDropModule,\r\n                        CalendarMonthViewComponent,\r\n                        CalendarMonthCellComponent,\r\n                        CalendarOpenDayEventsComponent,\r\n                        CalendarMonthViewHeaderComponent,\r\n                    ],\r\n                }]\r\n        }] });\n\nclass CalendarComponent {\r\n    constructor() { }\r\n    ngOnInit() { }\r\n}\r\nCalendarComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\r\nCalendarComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.0.4\", type: CalendarComponent, selector: \"calendar-name\", ngImport: i0, template: \"\", styles: [\"@charset \\\"UTF-8\\\";.cal-month-view .cal-header{text-align:center;font-weight:bolder}.cal-month-view .cal-header .cal-cell{padding:5px 0;overflow:hidden;text-overflow:ellipsis;display:block;white-space:nowrap}.cal-month-view .cal-days{border:1px solid;border-bottom:0}.cal-month-view .cal-cell-top{min-height:78px;flex:1}.cal-month-view .cal-cell-row{display:flex}.cal-month-view .cal-cell{float:left;flex:1;display:flex;flex-direction:column;align-items:stretch}.cal-month-view .cal-cell .cal-event{pointer-events:all!important}.cal-month-view .cal-day-cell{min-height:100px}.cal-month-view .cal-day-cell:not(:last-child){border-right:1px solid}[dir=rtl] .cal-month-view .cal-day-cell:not(:last-child){border-right:initial;border-left:1px solid}.cal-month-view .cal-days .cal-cell-row{border-bottom:1px solid}.cal-month-view .cal-day-badge{margin-top:18px;margin-left:10px;display:inline-block;min-width:10px;padding:3px 7px;font-size:12px;font-weight:700;line-height:1;text-align:center;white-space:nowrap;vertical-align:middle;border-radius:10px;float:left}.cal-month-view .cal-day-number{font-size:1.2em;font-weight:400;opacity:.5;margin-top:15px;margin-right:15px;float:right;margin-bottom:10px}.cal-month-view .cal-events{flex:1;align-items:flex-end;margin:3px;line-height:10px;display:flex;flex-wrap:wrap}.cal-month-view .cal-event{width:10px;height:10px;border-radius:50%;display:inline-block;margin:2px}.cal-month-view .cal-day-cell.cal-in-month.cal-has-events{cursor:pointer}.cal-month-view .cal-day-cell.cal-out-month .cal-day-number{opacity:.1;cursor:default}.cal-month-view .cal-day-cell.cal-today .cal-day-number{font-size:1.9em}.cal-month-view .cal-open-day-events{padding:15px}.cal-month-view .cal-open-day-events .cal-event{position:relative;top:2px}.cal-month-view .cal-out-month .cal-day-badge,.cal-month-view .cal-out-month .cal-event{opacity:.3}.cal-month-view .cal-draggable{cursor:move}.cal-month-view .cal-drag-active *{pointer-events:none}.cal-month-view .cal-event-title{cursor:pointer}.cal-month-view .cal-event-title:hover{text-decoration:underline}.cal-month-view{background-color:#fff}.cal-month-view .cal-cell-row:hover{background-color:#fafafa}.cal-month-view .cal-cell-row .cal-cell:hover,.cal-month-view .cal-cell.cal-has-events.cal-open{background-color:#ededed}.cal-month-view .cal-days{border-color:#e1e1e1}.cal-month-view .cal-day-cell:not(:last-child){border-right-color:#e1e1e1}[dir=rtl] .cal-month-view .cal-day-cell:not(:last-child){border-right-color:initial;border-left-color:#e1e1e1}.cal-month-view .cal-days .cal-cell-row{border-bottom-color:#e1e1e1}.cal-month-view .cal-day-badge{background-color:#b94a48;color:#fff}.cal-month-view .cal-event{background-color:#1e90ff;border-color:#d1e8ff;color:#fff}.cal-month-view .cal-day-cell.cal-weekend .cal-day-number{color:#8b0000}.cal-month-view .cal-day-cell.cal-today{background-color:#e8fde7}.cal-month-view .cal-day-cell.cal-drag-over{background-color:#e0e0e0!important}.cal-month-view .cal-open-day-events{color:#fff;background-color:#555;box-shadow:inset 0 0 15px #00000080}.cal-week-view *{box-sizing:border-box}.cal-week-view .cal-day-headers{display:flex;padding-left:70px;border:1px solid}[dir=rtl] .cal-week-view .cal-day-headers{padding-left:initial;padding-right:70px}.cal-week-view .cal-day-headers .cal-header{flex:1;text-align:center;padding:5px}.cal-week-view .cal-day-headers .cal-header:not(:last-child){border-right:1px solid}[dir=rtl] .cal-week-view .cal-day-headers .cal-header:not(:last-child){border-right:initial;border-left:1px solid}.cal-week-view .cal-day-headers .cal-header:first-child{border-left:1px solid}[dir=rtl] .cal-week-view .cal-day-headers .cal-header:first-child{border-left:initial;border-right:1px solid}.cal-week-view .cal-day-headers span{font-weight:400;opacity:.5}.cal-week-view .cal-day-column{flex-grow:1;border-left:solid 1px}[dir=rtl] .cal-week-view .cal-day-column{border-left:initial;border-right:solid 1px}.cal-week-view .cal-event{font-size:12px;border:1px solid;direction:ltr}.cal-week-view .cal-time-label-column{width:70px;height:100%}.cal-week-view .cal-current-time-marker{position:absolute;width:100%;height:2px;z-index:2}.cal-week-view .cal-all-day-events{border:solid 1px;border-top:0;border-bottom-width:3px;padding-top:3px;position:relative}.cal-week-view .cal-all-day-events .cal-day-columns{height:100%;width:100%;display:flex;position:absolute;top:0;z-index:0}.cal-week-view .cal-all-day-events .cal-events-row{position:relative;height:31px;margin-left:70px}[dir=rtl] .cal-week-view .cal-all-day-events .cal-events-row{margin-left:initial;margin-right:70px}.cal-week-view .cal-all-day-events .cal-event-container{display:inline-block;position:absolute}.cal-week-view .cal-all-day-events .cal-event-container.resize-active{z-index:1;pointer-events:none}.cal-week-view .cal-all-day-events .cal-event{padding:0 5px;margin-left:2px;margin-right:2px;height:28px;line-height:28px}.cal-week-view .cal-all-day-events .cal-starts-within-week .cal-event{border-top-left-radius:5px;border-bottom-left-radius:5px}[dir=rtl] .cal-week-view .cal-all-day-events .cal-starts-within-week .cal-event{border-top-left-radius:initial;border-bottom-left-radius:initial;border-top-right-radius:5px!important;border-bottom-right-radius:5px!important}.cal-week-view .cal-all-day-events .cal-ends-within-week .cal-event{border-top-right-radius:5px;border-bottom-right-radius:5px}[dir=rtl] .cal-week-view .cal-all-day-events .cal-ends-within-week .cal-event{border-top-right-radius:initial;border-bottom-right-radius:initial;border-top-left-radius:5px;border-bottom-left-radius:5px}.cal-week-view .cal-all-day-events .cal-time-label-column{display:flex;align-items:center;justify-content:center;font-size:14px}.cal-week-view .cal-all-day-events .cal-resize-handle{width:6px;height:100%;cursor:col-resize;position:absolute;top:0}.cal-week-view .cal-all-day-events .cal-resize-handle.cal-resize-handle-after-end{right:0}[dir=rtl] .cal-week-view .cal-all-day-events .cal-resize-handle.cal-resize-handle-after-end{right:initial;left:0}.cal-week-view .cal-event,.cal-week-view .cal-header{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.cal-week-view .cal-drag-active{pointer-events:none;z-index:1}.cal-week-view .cal-drag-active *{pointer-events:none}.cal-week-view .cal-time-events{position:relative;border:solid 1px;border-top:0;display:flex}.cal-week-view .cal-time-events .cal-day-columns{display:flex;flex-grow:1}.cal-week-view .cal-time-events .cal-day-column,.cal-week-view .cal-time-events .cal-events-container{position:relative}.cal-week-view .cal-time-events .cal-event-container{position:absolute;z-index:1}.cal-week-view .cal-time-events .cal-event{width:calc(100% - 2px);height:calc(100% - 2px);margin:1px;padding:0 5px;line-height:25px}.cal-week-view .cal-time-events .cal-resize-handle{width:100%;height:4px;cursor:row-resize;position:absolute}.cal-week-view .cal-time-events .cal-resize-handle.cal-resize-handle-after-end{bottom:0}.cal-week-view .cal-hour-segment{position:relative}.cal-week-view .cal-hour-segment:after{content:\\\"\\\\a0\\\"}.cal-week-view .cal-event-container:not(.cal-draggable){cursor:pointer}.cal-week-view .cal-draggable{cursor:move}.cal-week-view mwl-calendar-week-view-hour-segment,.cal-week-view .cal-hour-segment{display:block}.cal-week-view .cal-hour:not(:last-child) .cal-hour-segment,.cal-week-view .cal-hour:last-child :not(:last-child) .cal-hour-segment{border-bottom:thin dashed}.cal-week-view .cal-time{font-weight:700;padding-top:5px;width:70px;text-align:center}.cal-week-view .cal-hour-segment.cal-after-hour-start .cal-time{display:none}.cal-week-view .cal-starts-within-day .cal-event{border-top-left-radius:5px;border-top-right-radius:5px}.cal-week-view .cal-ends-within-day .cal-event{border-bottom-left-radius:5px;border-bottom-right-radius:5px}.cal-week-view{background-color:#fff;border-top:solid 1px #e1e1e1}.cal-week-view .cal-day-headers{border-color:#e1e1e1;border-top:0}.cal-week-view .cal-day-headers .cal-header:not(:last-child){border-right-color:#e1e1e1}[dir=rtl] .cal-week-view .cal-day-headers .cal-header:not(:last-child){border-right-color:initial;border-left:solid 1px #e1e1e1!important}.cal-week-view .cal-day-headers .cal-header:first-child{border-left-color:#e1e1e1}[dir=rtl] .cal-week-view .cal-day-headers .cal-header:first-child{border-left-color:initial;border-right-color:#e1e1e1}.cal-week-view .cal-day-headers .cal-header:hover,.cal-week-view .cal-day-headers .cal-drag-over{background-color:#ededed}.cal-week-view .cal-day-column{border-left-color:#e1e1e1}[dir=rtl] .cal-week-view .cal-day-column{border-left-color:initial;border-right-color:#e1e1e1}.cal-week-view .cal-event{background-color:#d1e8ff;border-color:#1e90ff;color:#1e90ff}.cal-week-view .cal-all-day-events{border-color:#e1e1e1}.cal-week-view .cal-header.cal-today{background-color:#e8fde7}.cal-week-view .cal-header.cal-weekend span{color:#8b0000}.cal-week-view .cal-time-events{border-color:#e1e1e1}.cal-week-view .cal-time-events .cal-day-columns:not(.cal-resize-active) .cal-hour-segment:hover{background-color:#ededed}.cal-week-view .cal-hour-odd{background-color:#fafafa}.cal-week-view .cal-drag-over .cal-hour-segment{background-color:#ededed}.cal-week-view .cal-hour:not(:last-child) .cal-hour-segment,.cal-week-view .cal-hour:last-child :not(:last-child) .cal-hour-segment{border-bottom-color:#e1e1e1}.cal-week-view .cal-current-time-marker{background-color:#ea4334}.cal-day-view mwl-calendar-week-view-header{display:none}.cal-day-view .cal-events-container{margin-left:70px}[dir=rtl] .cal-day-view .cal-events-container{margin-left:initial;margin-right:70px}.cal-day-view .cal-day-column{border-left:0}.cal-day-view .cal-current-time-marker{margin-left:70px;width:calc(100% - 70px)}[dir=rtl] .cal-day-view .cal-current-time-marker{margin-left:initial;margin-right:70px}.cal-tooltip{position:absolute;z-index:1070;display:block;font-style:normal;font-weight:400;letter-spacing:normal;line-break:auto;line-height:1.5;text-align:start;text-decoration:none;text-shadow:none;text-transform:none;white-space:normal;word-break:normal;word-spacing:normal;font-size:11px;word-wrap:break-word;opacity:.9}.cal-tooltip.cal-tooltip-top{padding:5px 0;margin-top:-3px}.cal-tooltip.cal-tooltip-top .cal-tooltip-arrow{bottom:0;left:50%;margin-left:-5px;border-width:5px 5px 0}.cal-tooltip.cal-tooltip-right{padding:0 5px;margin-left:3px}.cal-tooltip.cal-tooltip-right .cal-tooltip-arrow{top:50%;left:0;margin-top:-5px;border-width:5px 5px 5px 0}.cal-tooltip.cal-tooltip-bottom{padding:5px 0;margin-top:3px}.cal-tooltip.cal-tooltip-bottom .cal-tooltip-arrow{top:0;left:50%;margin-left:-5px;border-width:0 5px 5px}.cal-tooltip.cal-tooltip-left{padding:0 5px;margin-left:-3px}.cal-tooltip.cal-tooltip-left .cal-tooltip-arrow{top:50%;right:0;margin-top:-5px;border-width:5px 0 5px 5px}.cal-tooltip-inner{max-width:200px;padding:3px 8px;text-align:center;border-radius:.25rem}.cal-tooltip-arrow{position:absolute;width:0;height:0;border-color:transparent;border-style:solid}.cal-tooltip.cal-tooltip-top .cal-tooltip-arrow{border-top-color:#000}.cal-tooltip.cal-tooltip-right .cal-tooltip-arrow{border-right-color:#000}.cal-tooltip.cal-tooltip-bottom .cal-tooltip-arrow{border-bottom-color:#000}.cal-tooltip.cal-tooltip-left .cal-tooltip-arrow{border-left-color:#000}.cal-tooltip-inner{color:#fff;background-color:#000}\\n\"] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarComponent, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'calendar-name', template: \"\", styles: [\"@charset \\\"UTF-8\\\";.cal-month-view .cal-header{text-align:center;font-weight:bolder}.cal-month-view .cal-header .cal-cell{padding:5px 0;overflow:hidden;text-overflow:ellipsis;display:block;white-space:nowrap}.cal-month-view .cal-days{border:1px solid;border-bottom:0}.cal-month-view .cal-cell-top{min-height:78px;flex:1}.cal-month-view .cal-cell-row{display:flex}.cal-month-view .cal-cell{float:left;flex:1;display:flex;flex-direction:column;align-items:stretch}.cal-month-view .cal-cell .cal-event{pointer-events:all!important}.cal-month-view .cal-day-cell{min-height:100px}.cal-month-view .cal-day-cell:not(:last-child){border-right:1px solid}[dir=rtl] .cal-month-view .cal-day-cell:not(:last-child){border-right:initial;border-left:1px solid}.cal-month-view .cal-days .cal-cell-row{border-bottom:1px solid}.cal-month-view .cal-day-badge{margin-top:18px;margin-left:10px;display:inline-block;min-width:10px;padding:3px 7px;font-size:12px;font-weight:700;line-height:1;text-align:center;white-space:nowrap;vertical-align:middle;border-radius:10px;float:left}.cal-month-view .cal-day-number{font-size:1.2em;font-weight:400;opacity:.5;margin-top:15px;margin-right:15px;float:right;margin-bottom:10px}.cal-month-view .cal-events{flex:1;align-items:flex-end;margin:3px;line-height:10px;display:flex;flex-wrap:wrap}.cal-month-view .cal-event{width:10px;height:10px;border-radius:50%;display:inline-block;margin:2px}.cal-month-view .cal-day-cell.cal-in-month.cal-has-events{cursor:pointer}.cal-month-view .cal-day-cell.cal-out-month .cal-day-number{opacity:.1;cursor:default}.cal-month-view .cal-day-cell.cal-today .cal-day-number{font-size:1.9em}.cal-month-view .cal-open-day-events{padding:15px}.cal-month-view .cal-open-day-events .cal-event{position:relative;top:2px}.cal-month-view .cal-out-month .cal-day-badge,.cal-month-view .cal-out-month .cal-event{opacity:.3}.cal-month-view .cal-draggable{cursor:move}.cal-month-view .cal-drag-active *{pointer-events:none}.cal-month-view .cal-event-title{cursor:pointer}.cal-month-view .cal-event-title:hover{text-decoration:underline}.cal-month-view{background-color:#fff}.cal-month-view .cal-cell-row:hover{background-color:#fafafa}.cal-month-view .cal-cell-row .cal-cell:hover,.cal-month-view .cal-cell.cal-has-events.cal-open{background-color:#ededed}.cal-month-view .cal-days{border-color:#e1e1e1}.cal-month-view .cal-day-cell:not(:last-child){border-right-color:#e1e1e1}[dir=rtl] .cal-month-view .cal-day-cell:not(:last-child){border-right-color:initial;border-left-color:#e1e1e1}.cal-month-view .cal-days .cal-cell-row{border-bottom-color:#e1e1e1}.cal-month-view .cal-day-badge{background-color:#b94a48;color:#fff}.cal-month-view .cal-event{background-color:#1e90ff;border-color:#d1e8ff;color:#fff}.cal-month-view .cal-day-cell.cal-weekend .cal-day-number{color:#8b0000}.cal-month-view .cal-day-cell.cal-today{background-color:#e8fde7}.cal-month-view .cal-day-cell.cal-drag-over{background-color:#e0e0e0!important}.cal-month-view .cal-open-day-events{color:#fff;background-color:#555;box-shadow:inset 0 0 15px #00000080}.cal-week-view *{box-sizing:border-box}.cal-week-view .cal-day-headers{display:flex;padding-left:70px;border:1px solid}[dir=rtl] .cal-week-view .cal-day-headers{padding-left:initial;padding-right:70px}.cal-week-view .cal-day-headers .cal-header{flex:1;text-align:center;padding:5px}.cal-week-view .cal-day-headers .cal-header:not(:last-child){border-right:1px solid}[dir=rtl] .cal-week-view .cal-day-headers .cal-header:not(:last-child){border-right:initial;border-left:1px solid}.cal-week-view .cal-day-headers .cal-header:first-child{border-left:1px solid}[dir=rtl] .cal-week-view .cal-day-headers .cal-header:first-child{border-left:initial;border-right:1px solid}.cal-week-view .cal-day-headers span{font-weight:400;opacity:.5}.cal-week-view .cal-day-column{flex-grow:1;border-left:solid 1px}[dir=rtl] .cal-week-view .cal-day-column{border-left:initial;border-right:solid 1px}.cal-week-view .cal-event{font-size:12px;border:1px solid;direction:ltr}.cal-week-view .cal-time-label-column{width:70px;height:100%}.cal-week-view .cal-current-time-marker{position:absolute;width:100%;height:2px;z-index:2}.cal-week-view .cal-all-day-events{border:solid 1px;border-top:0;border-bottom-width:3px;padding-top:3px;position:relative}.cal-week-view .cal-all-day-events .cal-day-columns{height:100%;width:100%;display:flex;position:absolute;top:0;z-index:0}.cal-week-view .cal-all-day-events .cal-events-row{position:relative;height:31px;margin-left:70px}[dir=rtl] .cal-week-view .cal-all-day-events .cal-events-row{margin-left:initial;margin-right:70px}.cal-week-view .cal-all-day-events .cal-event-container{display:inline-block;position:absolute}.cal-week-view .cal-all-day-events .cal-event-container.resize-active{z-index:1;pointer-events:none}.cal-week-view .cal-all-day-events .cal-event{padding:0 5px;margin-left:2px;margin-right:2px;height:28px;line-height:28px}.cal-week-view .cal-all-day-events .cal-starts-within-week .cal-event{border-top-left-radius:5px;border-bottom-left-radius:5px}[dir=rtl] .cal-week-view .cal-all-day-events .cal-starts-within-week .cal-event{border-top-left-radius:initial;border-bottom-left-radius:initial;border-top-right-radius:5px!important;border-bottom-right-radius:5px!important}.cal-week-view .cal-all-day-events .cal-ends-within-week .cal-event{border-top-right-radius:5px;border-bottom-right-radius:5px}[dir=rtl] .cal-week-view .cal-all-day-events .cal-ends-within-week .cal-event{border-top-right-radius:initial;border-bottom-right-radius:initial;border-top-left-radius:5px;border-bottom-left-radius:5px}.cal-week-view .cal-all-day-events .cal-time-label-column{display:flex;align-items:center;justify-content:center;font-size:14px}.cal-week-view .cal-all-day-events .cal-resize-handle{width:6px;height:100%;cursor:col-resize;position:absolute;top:0}.cal-week-view .cal-all-day-events .cal-resize-handle.cal-resize-handle-after-end{right:0}[dir=rtl] .cal-week-view .cal-all-day-events .cal-resize-handle.cal-resize-handle-after-end{right:initial;left:0}.cal-week-view .cal-event,.cal-week-view .cal-header{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.cal-week-view .cal-drag-active{pointer-events:none;z-index:1}.cal-week-view .cal-drag-active *{pointer-events:none}.cal-week-view .cal-time-events{position:relative;border:solid 1px;border-top:0;display:flex}.cal-week-view .cal-time-events .cal-day-columns{display:flex;flex-grow:1}.cal-week-view .cal-time-events .cal-day-column,.cal-week-view .cal-time-events .cal-events-container{position:relative}.cal-week-view .cal-time-events .cal-event-container{position:absolute;z-index:1}.cal-week-view .cal-time-events .cal-event{width:calc(100% - 2px);height:calc(100% - 2px);margin:1px;padding:0 5px;line-height:25px}.cal-week-view .cal-time-events .cal-resize-handle{width:100%;height:4px;cursor:row-resize;position:absolute}.cal-week-view .cal-time-events .cal-resize-handle.cal-resize-handle-after-end{bottom:0}.cal-week-view .cal-hour-segment{position:relative}.cal-week-view .cal-hour-segment:after{content:\\\"\\\\a0\\\"}.cal-week-view .cal-event-container:not(.cal-draggable){cursor:pointer}.cal-week-view .cal-draggable{cursor:move}.cal-week-view mwl-calendar-week-view-hour-segment,.cal-week-view .cal-hour-segment{display:block}.cal-week-view .cal-hour:not(:last-child) .cal-hour-segment,.cal-week-view .cal-hour:last-child :not(:last-child) .cal-hour-segment{border-bottom:thin dashed}.cal-week-view .cal-time{font-weight:700;padding-top:5px;width:70px;text-align:center}.cal-week-view .cal-hour-segment.cal-after-hour-start .cal-time{display:none}.cal-week-view .cal-starts-within-day .cal-event{border-top-left-radius:5px;border-top-right-radius:5px}.cal-week-view .cal-ends-within-day .cal-event{border-bottom-left-radius:5px;border-bottom-right-radius:5px}.cal-week-view{background-color:#fff;border-top:solid 1px #e1e1e1}.cal-week-view .cal-day-headers{border-color:#e1e1e1;border-top:0}.cal-week-view .cal-day-headers .cal-header:not(:last-child){border-right-color:#e1e1e1}[dir=rtl] .cal-week-view .cal-day-headers .cal-header:not(:last-child){border-right-color:initial;border-left:solid 1px #e1e1e1!important}.cal-week-view .cal-day-headers .cal-header:first-child{border-left-color:#e1e1e1}[dir=rtl] .cal-week-view .cal-day-headers .cal-header:first-child{border-left-color:initial;border-right-color:#e1e1e1}.cal-week-view .cal-day-headers .cal-header:hover,.cal-week-view .cal-day-headers .cal-drag-over{background-color:#ededed}.cal-week-view .cal-day-column{border-left-color:#e1e1e1}[dir=rtl] .cal-week-view .cal-day-column{border-left-color:initial;border-right-color:#e1e1e1}.cal-week-view .cal-event{background-color:#d1e8ff;border-color:#1e90ff;color:#1e90ff}.cal-week-view .cal-all-day-events{border-color:#e1e1e1}.cal-week-view .cal-header.cal-today{background-color:#e8fde7}.cal-week-view .cal-header.cal-weekend span{color:#8b0000}.cal-week-view .cal-time-events{border-color:#e1e1e1}.cal-week-view .cal-time-events .cal-day-columns:not(.cal-resize-active) .cal-hour-segment:hover{background-color:#ededed}.cal-week-view .cal-hour-odd{background-color:#fafafa}.cal-week-view .cal-drag-over .cal-hour-segment{background-color:#ededed}.cal-week-view .cal-hour:not(:last-child) .cal-hour-segment,.cal-week-view .cal-hour:last-child :not(:last-child) .cal-hour-segment{border-bottom-color:#e1e1e1}.cal-week-view .cal-current-time-marker{background-color:#ea4334}.cal-day-view mwl-calendar-week-view-header{display:none}.cal-day-view .cal-events-container{margin-left:70px}[dir=rtl] .cal-day-view .cal-events-container{margin-left:initial;margin-right:70px}.cal-day-view .cal-day-column{border-left:0}.cal-day-view .cal-current-time-marker{margin-left:70px;width:calc(100% - 70px)}[dir=rtl] .cal-day-view .cal-current-time-marker{margin-left:initial;margin-right:70px}.cal-tooltip{position:absolute;z-index:1070;display:block;font-style:normal;font-weight:400;letter-spacing:normal;line-break:auto;line-height:1.5;text-align:start;text-decoration:none;text-shadow:none;text-transform:none;white-space:normal;word-break:normal;word-spacing:normal;font-size:11px;word-wrap:break-word;opacity:.9}.cal-tooltip.cal-tooltip-top{padding:5px 0;margin-top:-3px}.cal-tooltip.cal-tooltip-top .cal-tooltip-arrow{bottom:0;left:50%;margin-left:-5px;border-width:5px 5px 0}.cal-tooltip.cal-tooltip-right{padding:0 5px;margin-left:3px}.cal-tooltip.cal-tooltip-right .cal-tooltip-arrow{top:50%;left:0;margin-top:-5px;border-width:5px 5px 5px 0}.cal-tooltip.cal-tooltip-bottom{padding:5px 0;margin-top:3px}.cal-tooltip.cal-tooltip-bottom .cal-tooltip-arrow{top:0;left:50%;margin-left:-5px;border-width:0 5px 5px}.cal-tooltip.cal-tooltip-left{padding:0 5px;margin-left:-3px}.cal-tooltip.cal-tooltip-left .cal-tooltip-arrow{top:50%;right:0;margin-top:-5px;border-width:5px 0 5px 5px}.cal-tooltip-inner{max-width:200px;padding:3px 8px;text-align:center;border-radius:.25rem}.cal-tooltip-arrow{position:absolute;width:0;height:0;border-color:transparent;border-style:solid}.cal-tooltip.cal-tooltip-top .cal-tooltip-arrow{border-top-color:#000}.cal-tooltip.cal-tooltip-right .cal-tooltip-arrow{border-right-color:#000}.cal-tooltip.cal-tooltip-bottom .cal-tooltip-arrow{border-bottom-color:#000}.cal-tooltip.cal-tooltip-left .cal-tooltip-arrow{border-left-color:#000}.cal-tooltip-inner{color:#fff;background-color:#000}\\n\"] }]\r\n        }], ctorParameters: function () { return []; } });\n\nclass CalendarModule {\r\n    static forRoot(dateAdapter, config = {}) {\r\n        return {\r\n            ngModule: CalendarModule,\r\n            providers: [\r\n                dateAdapter,\r\n                config.eventTitleFormatter || CalendarEventTitleFormatter,\r\n                config.dateFormatter || CalendarDateFormatter,\r\n                config.utils || CalendarUtils,\r\n                config.a11y || CalendarA11y,\r\n            ],\r\n        };\r\n    }\r\n}\r\nCalendarModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\r\nCalendarModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarModule, declarations: [CalendarComponent], imports: [CalendarMonthModule,\r\n        CalendarWeekModule,\r\n        CalendarDayModule,\r\n        CalendarCommonModule], exports: [CalendarComponent,\r\n        CalendarMonthModule,\r\n        CalendarWeekModule,\r\n        CalendarDayModule,\r\n        CalendarCommonModule] });\r\nCalendarModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarModule, imports: [CalendarMonthModule,\r\n        CalendarWeekModule,\r\n        CalendarDayModule,\r\n        CalendarCommonModule, CalendarMonthModule,\r\n        CalendarWeekModule,\r\n        CalendarDayModule,\r\n        CalendarCommonModule] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarModule, decorators: [{\r\n            type: NgModule,\r\n            args: [{\r\n                    declarations: [\r\n                        CalendarComponent\r\n                    ],\r\n                    imports: [\r\n                        CalendarMonthModule,\r\n                        CalendarWeekModule,\r\n                        CalendarDayModule,\r\n                        CalendarCommonModule\r\n                    ],\r\n                    exports: [\r\n                        CalendarComponent,\r\n                        CalendarMonthModule,\r\n                        CalendarWeekModule,\r\n                        CalendarDayModule,\r\n                        CalendarCommonModule\r\n                    ]\r\n                }]\r\n        }] });\n\n/*\r\n * Public API Surface of ng-calendar-schedule\r\n */\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { CalendarA11y, CalendarAngularDateFormatter, CalendarCommonModule, CalendarComponent, CalendarDateFormatter, CalendarDayModule, CalendarDayViewComponent, CalendarEventTimesChangedEventType, CalendarEventTitleFormatter, CalendarModule, CalendarMomentDateFormatter, CalendarMonthModule, CalendarMonthViewComponent, CalendarNativeDateFormatter, CalendarUtils, CalendarView, CalendarWeekModule, CalendarWeekViewComponent, DateAdapter, MOMENT, adapterFactory, collapseAnimation, getWeekViewPeriod, CalendarA11yPipe as ɵCalendarA11yPipe, CalendarDatePipe as ɵCalendarDatePipe, CalendarEventActionsComponent as ɵCalendarEventActionsComponent, CalendarEventTitleComponent as ɵCalendarEventTitleComponent, CalendarEventTitlePipe as ɵCalendarEventTitlePipe, CalendarMonthCellComponent as ɵCalendarMonthCellComponent, CalendarMonthViewHeaderComponent as ɵCalendarMonthViewHeaderComponent, CalendarNextViewDirective as ɵCalendarNextViewDirective, CalendarOpenDayEventsComponent as ɵCalendarOpenDayEventsComponent, CalendarPreviousViewDirective as ɵCalendarPreviousViewDirective, CalendarTodayDirective as ɵCalendarTodayDirective, CalendarTooltipDirective as ɵCalendarTooltipDirective, CalendarTooltipWindowComponent as ɵCalendarTooltipWindowComponent, CalendarWeekViewCurrentTimeMarkerComponent as ɵCalendarWeekViewCurrentTimeMarkerComponent, CalendarWeekViewEventComponent as ɵCalendarWeekViewEventComponent, CalendarWeekViewHeaderComponent as ɵCalendarWeekViewHeaderComponent, CalendarWeekViewHourSegmentComponent as ɵCalendarWeekViewHourSegmentComponent, ClickDirective as ɵClickDirective, KeydownEnterDirective as ɵKeydownEnterDirective };\n//# sourceMappingURL=ng-calendar-schedule.mjs.map\n","map":null},{"fileName":"ng-calendar-schedule.mjs.map","needsCodeReference":false,"source":"{\"version\":3,\"file\":\"ng-calendar-schedule.mjs\",\"sources\":[\"../../../projects/ng-calendar-schedule/src/lib/date-adapters/date-adapter.ts\",\"../../../projects/ng-calendar-schedule/src/lib/date-adapters/date-fns/index.ts\",\"../../../projects/ng-calendar-schedule/src/lib/common/click/click.directive.ts\",\"../../../projects/ng-calendar-schedule/src/lib/common/keydown-enter/keydown-enter.directive.ts\",\"../../../projects/ng-calendar-schedule/src/lib/common/calendar-a11y/calendar-a11y.provider.ts\",\"../../../projects/ng-calendar-schedule/src/lib/common/calendar-a11y/calendar-a11y.pipe.ts\",\"../../../projects/ng-calendar-schedule/src/lib/common/calendar-event-actions/calendar-event-actions.component.ts\",\"../../../projects/ng-calendar-schedule/src/lib/common/calendar-event-title-formatter/calendar-event-title-formatter.provider.ts\",\"../../../projects/ng-calendar-schedule/src/lib/common/calendar-event-title/calendar-event-title.pipe.ts\",\"../../../projects/ng-calendar-schedule/src/lib/common/calendar-event-title/calendar-event-title.component.ts\",\"../../../projects/ng-calendar-schedule/src/lib/common/calendar-tooltip/calendar-tooltip.directive.ts\",\"../../../projects/ng-calendar-schedule/src/lib/common/calendar-view/calendar-view.enum.ts\",\"../../../projects/ng-calendar-schedule/src/lib/common/util/util.ts\",\"../../../projects/ng-calendar-schedule/src/lib/common/calendar-previous-view/calendar-previous-view.directive.ts\",\"../../../projects/ng-calendar-schedule/src/lib/common/calendar-next-view/calendar-next-view.directive.ts\",\"../../../projects/ng-calendar-schedule/src/lib/common/calendar-today/calendar-today.directive.ts\",\"../../../projects/ng-calendar-schedule/src/lib/common/calendar-angular-date-formatter/calendar-angular-date-formatter.provider.ts\",\"../../../projects/ng-calendar-schedule/src/lib/common/calendar-date-formatter/calendar-date-formatter.provider.ts\",\"../../../projects/ng-calendar-schedule/src/lib/common/calendar-date/calendar-date.pipe.ts\",\"../../../projects/ng-calendar-schedule/src/lib/common/calendar-utils/calendar-utils.provider.ts\",\"../../../projects/ng-calendar-schedule/src/lib/common/calendar-moment-date-formatter/calendar-moment-date-formatter.provider.ts\",\"../../../projects/ng-calendar-schedule/src/lib/common/calendar-native-date-formatter/calendar-native-date-formatter.provider.ts\",\"../../../projects/ng-calendar-schedule/src/lib/common/calendar-event-times-changed-event/calendar-event-times-changed-event.interface.ts\",\"../../../projects/ng-calendar-schedule/src/lib/common/calendar-common.module.ts\",\"../../../projects/ng-calendar-schedule/src/lib/common/calendar-drag-helper/calendar-drag-helper.provider.ts\",\"../../../projects/ng-calendar-schedule/src/lib/common/calendar-resize-helper/calendar-resize-helper.provider.ts\",\"../../../projects/ng-calendar-schedule/src/lib/week/calendar-week-view/calendar-week-view-header/calendar-week-view-header.component.ts\",\"../../../projects/ng-calendar-schedule/src/lib/week/calendar-week-view/calendar-week-view-event/calendar-week-view-event.component.ts\",\"../../../projects/ng-calendar-schedule/src/lib/week/calendar-week-view/calendar-week-view-hour-segment/calendar-week-view-hour-segment.component.ts\",\"../../../projects/ng-calendar-schedule/src/lib/week/calendar-week-view/calendar-week-view-current-time-marker/calendar-week-view-current-time-marker.component.ts\",\"../../../projects/ng-calendar-schedule/src/lib/week/calendar-week-view/calendar-week-view.component.ts\",\"../../../projects/ng-calendar-schedule/src/lib/day/calendar-day-view/calendar-day-view.component.ts\",\"../../../projects/ng-calendar-schedule/src/lib/week/calendar-week.module.ts\",\"../../../projects/ng-calendar-schedule/src/lib/day/calendar-day.module.ts\",\"../../../projects/ng-calendar-schedule/src/lib/month/calendar-month-view/calendar-month-cell/calendar-month-cell.component.ts\",\"../../../projects/ng-calendar-schedule/src/lib/month/calendar-month-view/calendar-open-day-events/calendar-open-day-events.component.ts\",\"../../../projects/ng-calendar-schedule/src/lib/month/calendar-month-view/calendar-month-view-header/calendar-month-view-header.component.ts\",\"../../../projects/ng-calendar-schedule/src/lib/month/calendar-month-view/calendar-month-view.component.ts\",\"../../../projects/ng-calendar-schedule/src/lib/month/calendar-month.module.ts\",\"../../../projects/ng-calendar-schedule/src/lib/calendar.component.ts\",\"../../../projects/ng-calendar-schedule/src/lib/calendar.component.html\",\"../../../projects/ng-calendar-schedule/src/lib/calendar.module.ts\",\"../../../projects/ng-calendar-schedule/src/public-api.ts\",\"../../../projects/ng-calendar-schedule/src/ng-calendar-schedule.ts\"],\"sourcesContent\":[\"import { DateAdapter as BaseDateAdapter } from 'calendar-utils/date-adapters/date-adapter';\\r\\n\\r\\nexport abstract class DateAdapter implements BaseDateAdapter {\\r\\n  abstract addWeeks(date: Date | number, amount: number): Date;\\r\\n\\r\\n  abstract addMonths(date: Date | number, amount: number): Date;\\r\\n\\r\\n  abstract subDays(date: Date | number, amount: number): Date;\\r\\n\\r\\n  abstract subWeeks(date: Date | number, amount: number): Date;\\r\\n\\r\\n  abstract subMonths(date: Date | number, amount: number): Date;\\r\\n\\r\\n  abstract getISOWeek(date: Date | number): number;\\r\\n\\r\\n  abstract setDate(date: Date | number, dayOfMonth: number): Date;\\r\\n\\r\\n  abstract setMonth(date: Date | number, month: number): Date;\\r\\n\\r\\n  abstract setYear(date: Date | number, year: number): Date;\\r\\n\\r\\n  abstract getDate(date: Date | number): number;\\r\\n\\r\\n  abstract getMonth(date: Date | number): number;\\r\\n\\r\\n  abstract getYear(date: Date | number): number;\\r\\n\\r\\n  abstract addDays(date: Date | number, amount: number): Date;\\r\\n\\r\\n  abstract addHours(date: Date | number, amount: number): Date;\\r\\n\\r\\n  abstract addMinutes(date: Date | number, amount: number): Date;\\r\\n\\r\\n  abstract addSeconds(date: Date | number, amount: number): Date;\\r\\n\\r\\n  abstract differenceInDays(\\r\\n    dateLeft: Date | number,\\r\\n    dateRight: Date | number\\r\\n  ): number;\\r\\n\\r\\n  abstract differenceInMinutes(\\r\\n    dateLeft: Date | number,\\r\\n    dateRight: Date | number\\r\\n  ): number;\\r\\n\\r\\n  abstract differenceInSeconds(\\r\\n    dateLeft: Date | number,\\r\\n    dateRight: Date | number\\r\\n  ): number;\\r\\n\\r\\n  abstract endOfDay(date: Date | number): Date;\\r\\n\\r\\n  abstract endOfMonth(date: Date | number): Date;\\r\\n\\r\\n  abstract endOfWeek(\\r\\n    date: Date | number,\\r\\n    options?: { weekStartsOn?: number }\\r\\n  ): Date;\\r\\n\\r\\n  abstract getDay(date: Date | number): number;\\r\\n\\r\\n  abstract isSameDay(\\r\\n    dateLeft: Date | number,\\r\\n    dateRight: Date | number\\r\\n  ): boolean;\\r\\n\\r\\n  abstract isSameMonth(\\r\\n    dateLeft: Date | number,\\r\\n    dateRight: Date | number\\r\\n  ): boolean;\\r\\n\\r\\n  abstract isSameSecond(\\r\\n    dateLeft: Date | number,\\r\\n    dateRight: Date | number\\r\\n  ): boolean;\\r\\n\\r\\n  abstract max(dates: (Date | number)[]): Date;\\r\\n\\r\\n  abstract setHours(date: Date | number, hours: number): Date;\\r\\n\\r\\n  abstract setMinutes(date: Date | number, minutes: number): Date;\\r\\n\\r\\n  abstract startOfDay(date: Date | number): Date;\\r\\n\\r\\n  abstract startOfMinute(date: Date | number): Date;\\r\\n\\r\\n  abstract startOfMonth(date: Date | number): Date;\\r\\n\\r\\n  abstract startOfWeek(\\r\\n    date: Date | number,\\r\\n    options?: { weekStartsOn?: number }\\r\\n  ): Date;\\r\\n\\r\\n  abstract getHours(date: Date | number): number;\\r\\n\\r\\n  abstract getMinutes(date: Date | number): number;\\r\\n\\r\\n  abstract getTimezoneOffset(date: Date | number): number;\\r\\n}\\r\\n\",\"import { adapterFactory as baseAdapterFactory } from 'calendar-utils/date-adapters/date-fns';\\r\\nimport {\\r\\n  addWeeks,\\r\\n  addMonths,\\r\\n  subDays,\\r\\n  subWeeks,\\r\\n  subMonths,\\r\\n  getISOWeek,\\r\\n  setDate,\\r\\n  setMonth,\\r\\n  setYear,\\r\\n  getDate,\\r\\n  getYear,\\r\\n} from 'date-fns';\\r\\nimport { DateAdapter } from '../date-adapter';\\r\\n\\r\\nexport function adapterFactory(): DateAdapter {\\r\\n  return {\\r\\n    ...baseAdapterFactory(),\\r\\n    addWeeks,\\r\\n    addMonths,\\r\\n    subDays,\\r\\n    subWeeks,\\r\\n    subMonths,\\r\\n    getISOWeek,\\r\\n    setDate,\\r\\n    setMonth,\\r\\n    setYear,\\r\\n    getDate,\\r\\n    getYear,\\r\\n  };\\r\\n}\\r\\n\",\"import {\\r\\n  Directive,\\r\\n  Renderer2,\\r\\n  ElementRef,\\r\\n  OnInit,\\r\\n  OnDestroy,\\r\\n  Output,\\r\\n  EventEmitter,\\r\\n  Inject,\\r\\n  Input,\\r\\n  NgZone,\\r\\n} from '@angular/core';\\r\\nimport { DOCUMENT } from '@angular/common';\\r\\nimport { Observable, Subject } from 'rxjs';\\r\\nimport { takeUntil } from 'rxjs/operators';\\r\\n\\r\\n@Directive({\\r\\n  selector: '[mwlClick]',\\r\\n})\\r\\nexport class ClickDirective implements OnInit, OnDestroy {\\r\\n  @Input() clickListenerDisabled = false;\\r\\n\\r\\n  @Output('mwlClick') click = new EventEmitter<MouseEvent>(); // eslint-disable-line\\r\\n\\r\\n  private destroy$ = new Subject<void>();\\r\\n\\r\\n  constructor(\\r\\n    private renderer: Renderer2,\\r\\n    private elm: ElementRef<HTMLElement>,\\r\\n    @Inject(DOCUMENT) private document\\r\\n  ) {}\\r\\n\\r\\n  ngOnInit(): void {\\r\\n    if (!this.clickListenerDisabled) {\\r\\n      this.listen()\\r\\n        .pipe(takeUntil(this.destroy$))\\r\\n        .subscribe((event) => {\\r\\n          event.stopPropagation();\\r\\n          this.click.emit(event);\\r\\n        });\\r\\n    }\\r\\n  }\\r\\n\\r\\n  ngOnDestroy(): void {\\r\\n    this.destroy$.next();\\r\\n  }\\r\\n\\r\\n  private listen() {\\r\\n    return new Observable<MouseEvent>((observer) => {\\r\\n      return this.renderer.listen(this.elm.nativeElement, 'click', (event) => {\\r\\n        observer.next(event);\\r\\n      });\\r\\n    });\\r\\n  }\\r\\n}\\r\\n\",\"import {\\r\\n  Directive,\\r\\n  Output,\\r\\n  EventEmitter,\\r\\n  ElementRef,\\r\\n  NgZone,\\r\\n  Renderer2,\\r\\n  OnInit,\\r\\n  OnDestroy,\\r\\n} from '@angular/core';\\r\\n\\r\\n@Directive({\\r\\n  selector: '[mwlKeydownEnter]',\\r\\n})\\r\\nexport class KeydownEnterDirective implements OnInit, OnDestroy {\\r\\n  @Output('mwlKeydownEnter') keydown = new EventEmitter<KeyboardEvent>(); // eslint-disable-line\\r\\n\\r\\n  private keydownListener: VoidFunction | null = null;\\r\\n\\r\\n  constructor(\\r\\n    private host: ElementRef<HTMLElement>,\\r\\n    private ngZone: NgZone,\\r\\n    private renderer: Renderer2\\r\\n  ) {}\\r\\n\\r\\n  ngOnInit(): void {\\r\\n    this.ngZone.runOutsideAngular(() => {\\r\\n      this.keydownListener = this.renderer.listen(\\r\\n        this.host.nativeElement,\\r\\n        'keydown',\\r\\n        (event: KeyboardEvent) => {\\r\\n          if (\\r\\n            event.keyCode === 13 ||\\r\\n            event.which === 13 ||\\r\\n            event.key === 'Enter'\\r\\n          ) {\\r\\n            event.preventDefault();\\r\\n            event.stopPropagation();\\r\\n\\r\\n            this.ngZone.run(() => {\\r\\n              this.keydown.emit(event);\\r\\n            });\\r\\n          }\\r\\n        }\\r\\n      );\\r\\n    });\\r\\n  }\\r\\n\\r\\n  ngOnDestroy(): void {\\r\\n    if (this.keydownListener !== null) {\\r\\n      this.keydownListener();\\r\\n      this.keydownListener = null;\\r\\n    }\\r\\n  }\\r\\n}\\r\\n\",\"import { Injectable } from '@angular/core';\\r\\nimport { formatDate, I18nPluralPipe } from '@angular/common';\\r\\nimport { A11yParams } from './calendar-a11y.interface';\\r\\n\\r\\n/**\\r\\n * This class is responsible for adding accessibility to the calendar.\\r\\n * You may override any of its methods via angulars DI to suit your requirements.\\r\\n * For example:\\r\\n *\\r\\n * ```typescript\\r\\n * import { A11yParams, CalendarA11y } from 'angular-calendar';\\r\\n * import { formatDate, I18nPluralPipe } from '@angular/common';\\r\\n * import { Injectable } from '@angular/core';\\r\\n *\\r\\n * // adding your own a11y params\\r\\n * export interface CustomA11yParams extends A11yParams {\\r\\n *   isDrSuess?: boolean;\\r\\n * }\\r\\n *\\r\\n * @Injectable()\\r\\n * export class CustomCalendarA11y extends CalendarA11y {\\r\\n *   constructor(protected i18nPlural: I18nPluralPipe) {\\r\\n *     super(i18nPlural);\\r\\n *   }\\r\\n *\\r\\n *   // overriding a function\\r\\n *   public openDayEventsLandmark({ date, locale, isDrSuess }: CustomA11yParams): string {\\r\\n *     if (isDrSuess) {\\r\\n *       return `\\r\\n *         ${formatDate(date, 'EEEE MMMM d', locale)}\\r\\n *          Today you are you! That is truer than true! There is no one alive\\r\\n *          who is you-er than you!\\r\\n *       `;\\r\\n *     }\\r\\n *   }\\r\\n * }\\r\\n *\\r\\n * // in your component that uses the calendar\\r\\n * providers: [{\\r\\n *  provide: CalendarA11y,\\r\\n *  useClass: CustomCalendarA11y\\r\\n * }]\\r\\n * ```\\r\\n */\\r\\n@Injectable()\\r\\nexport class CalendarA11y {\\r\\n  constructor(protected i18nPlural: I18nPluralPipe) {}\\r\\n\\r\\n  /**\\r\\n   * Aria label for the badges/date of a cell\\r\\n   * @example: `Saturday October 19 1 event click to expand`\\r\\n   */\\r\\n  public monthCell({ day, locale }: A11yParams): string {\\r\\n    if (day.badgeTotal > 0) {\\r\\n      return `\\r\\n        ${formatDate(day.date, 'EEEE MMMM d', locale)},\\r\\n        ${this.i18nPlural.transform(day.badgeTotal, {\\r\\n          '=0': 'No events',\\r\\n          '=1': 'One event',\\r\\n          other: '# events',\\r\\n        })},\\r\\n         click to expand\\r\\n      `;\\r\\n    } else {\\r\\n      return `${formatDate(day.date, 'EEEE MMMM d', locale)}`;\\r\\n    }\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * Aria label for the open day events start landmark\\r\\n   * @example: `Saturday October 19 expanded view`\\r\\n   */\\r\\n  public openDayEventsLandmark({ date, locale }: A11yParams): string {\\r\\n    return `\\r\\n      Beginning of expanded view for ${formatDate(date, 'EEEE MMMM dd', locale)}\\r\\n    `;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * Aria label for alert that a day in the month view was expanded\\r\\n   * @example: `Saturday October 19 expanded`\\r\\n   */\\r\\n  public openDayEventsAlert({ date, locale }: A11yParams): string {\\r\\n    return `${formatDate(date, 'EEEE MMMM dd', locale)} expanded`;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * Descriptive aria label for an event\\r\\n   * @example: `Saturday October 19th, Scott's Pizza Party, from 11:00am to 5:00pm`\\r\\n   */\\r\\n  public eventDescription({ event, locale }: A11yParams): string {\\r\\n    if (event.allDay === true) {\\r\\n      return this.allDayEventDescription({ event, locale });\\r\\n    }\\r\\n\\r\\n    const aria = `\\r\\n      ${formatDate(event.start, 'EEEE MMMM dd', locale)},\\r\\n      ${event.title}, from ${formatDate(event.start, 'hh:mm a', locale)}\\r\\n    `;\\r\\n    if (event.end) {\\r\\n      return aria + ` to ${formatDate(event.end, 'hh:mm a', locale)}`;\\r\\n    }\\r\\n    return aria;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * Descriptive aria label for an all day event\\r\\n   * @example:\\r\\n   * `Scott's Party, event spans multiple days: start time October 19 5:00pm, no stop time`\\r\\n   */\\r\\n  public allDayEventDescription({ event, locale }: A11yParams): string {\\r\\n    const aria = `\\r\\n      ${event.title}, event spans multiple days:\\r\\n      start time ${formatDate(event.start, 'MMMM dd hh:mm a', locale)}\\r\\n    `;\\r\\n    if (event.end) {\\r\\n      return (\\r\\n        aria + `, stop time ${formatDate(event.end, 'MMMM d hh:mm a', locale)}`\\r\\n      );\\r\\n    }\\r\\n    return aria + `, no stop time`;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * Aria label for the calendar event actions icons\\r\\n   * @returns 'Edit' for fa-pencil icons, and 'Delete' for fa-times icons\\r\\n   */\\r\\n  public actionButtonLabel({ action }: A11yParams): string {\\r\\n    return action.a11yLabel;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @returns {number} Tab index to be given to month cells\\r\\n   */\\r\\n  public monthCellTabIndex(): number {\\r\\n    return 0;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @returns true if the events inside the month cell should be aria-hidden\\r\\n   */\\r\\n  public hideMonthCellEvents(): boolean {\\r\\n    return true;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @returns true if event titles should be aria-hidden (global)\\r\\n   */\\r\\n  public hideEventTitle(): boolean {\\r\\n    return true;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @returns true if hour segments in the week view should be aria-hidden\\r\\n   */\\r\\n  public hideWeekHourSegment(): boolean {\\r\\n    return true;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @returns true if hour segments in the day view should be aria-hidden\\r\\n   */\\r\\n  public hideDayHourSegment(): boolean {\\r\\n    return true;\\r\\n  }\\r\\n}\\r\\n\",\"import { Pipe, PipeTransform, LOCALE_ID, Inject } from '@angular/core';\\r\\nimport { CalendarA11y } from './calendar-a11y.provider';\\r\\nimport { A11yParams } from './calendar-a11y.interface';\\r\\n\\r\\n/**\\r\\n * This pipe is primarily for rendering aria labels. Example usage:\\r\\n * ```typescript\\r\\n * // where `myEvent` is a `CalendarEvent` and myLocale is a locale identifier\\r\\n * {{ { event: myEvent, locale: myLocale } | calendarA11y: 'eventDescription' }}\\r\\n * ```\\r\\n */\\r\\n@Pipe({\\r\\n  name: 'calendarA11y',\\r\\n})\\r\\nexport class CalendarA11yPipe implements PipeTransform {\\r\\n  constructor(\\r\\n    private calendarA11y: CalendarA11y,\\r\\n    @Inject(LOCALE_ID) private locale: string\\r\\n  ) {}\\r\\n\\r\\n  transform(a11yParams: A11yParams, method: string): string {\\r\\n    a11yParams.locale = a11yParams.locale || this.locale;\\r\\n    if (typeof this.calendarA11y[method] === 'undefined') {\\r\\n      const allowedMethods = Object.getOwnPropertyNames(\\r\\n        Object.getPrototypeOf(CalendarA11y.prototype)\\r\\n      ).filter((iMethod) => iMethod !== 'constructor');\\r\\n      throw new Error(\\r\\n        `${method} is not a valid a11y method. Can only be one of ${allowedMethods.join(\\r\\n          ', '\\r\\n        )}`\\r\\n      );\\r\\n    }\\r\\n    return this.calendarA11y[method](a11yParams);\\r\\n  }\\r\\n}\\r\\n\",\"import { Component, Input, TemplateRef } from '@angular/core';\\r\\nimport { CalendarEvent, EventAction } from 'calendar-utils';\\r\\n\\r\\n@Component({\\r\\n  selector: 'mwl-calendar-event-actions',\\r\\n  template: `\\r\\n    <ng-template\\r\\n      #defaultTemplate\\r\\n      let-event=\\\"event\\\"\\r\\n      let-trackByActionId=\\\"trackByActionId\\\"\\r\\n    >\\r\\n      <span *ngIf=\\\"event.actions\\\" class=\\\"cal-event-actions\\\">\\r\\n        <a\\r\\n          class=\\\"cal-event-action\\\"\\r\\n          href=\\\"javascript:;\\\"\\r\\n          *ngFor=\\\"let action of event.actions; trackBy: trackByActionId\\\"\\r\\n          (mwlClick)=\\\"action.onClick({ event: event, sourceEvent: $event })\\\"\\r\\n          (mwlKeydownEnter)=\\\"\\r\\n            action.onClick({ event: event, sourceEvent: $event })\\r\\n          \\\"\\r\\n          [ngClass]=\\\"action.cssClass\\\"\\r\\n          [innerHtml]=\\\"action.label\\\"\\r\\n          tabindex=\\\"0\\\"\\r\\n          role=\\\"button\\\"\\r\\n          [attr.aria-label]=\\\"\\r\\n            { action: action } | calendarA11y : 'actionButtonLabel'\\r\\n          \\\"\\r\\n        >\\r\\n        </a>\\r\\n      </span>\\r\\n    </ng-template>\\r\\n    <ng-template\\r\\n      [ngTemplateOutlet]=\\\"customTemplate || defaultTemplate\\\"\\r\\n      [ngTemplateOutletContext]=\\\"{\\r\\n        event: event,\\r\\n        trackByActionId: trackByActionId\\r\\n      }\\\"\\r\\n    >\\r\\n    </ng-template>\\r\\n  `,\\r\\n})\\r\\nexport class CalendarEventActionsComponent {\\r\\n  @Input() event: CalendarEvent;\\r\\n\\r\\n  @Input() customTemplate: TemplateRef<any>;\\r\\n\\r\\n  trackByActionId = (index: number, action: EventAction) =>\\r\\n    action.id ? action.id : action;\\r\\n}\\r\\n\",\"import { CalendarEvent } from 'calendar-utils';\\r\\n\\r\\n/**\\r\\n * This class is responsible for displaying all event titles within the calendar. You may override any of its methods via angulars DI to suit your requirements. For example:\\r\\n *\\r\\n * ```typescript\\r\\n * import { Injectable } from '@angular/core';\\r\\n * import { CalendarEventTitleFormatter, CalendarEvent } from 'angular-calendar';\\r\\n *\\r\\n * @Injectable()\\r\\n * class CustomEventTitleFormatter extends CalendarEventTitleFormatter {\\r\\n *\\r\\n *   month(event: CalendarEvent): string {\\r\\n *     return `Custom prefix: ${event.title}`;\\r\\n *   }\\r\\n *\\r\\n * }\\r\\n *\\r\\n * // in your component\\r\\n * providers: [{\\r\\n *  provide: CalendarEventTitleFormatter,\\r\\n *  useClass: CustomEventTitleFormatter\\r\\n * }]\\r\\n * ```\\r\\n */\\r\\nexport class CalendarEventTitleFormatter {\\r\\n  /**\\r\\n   * The month view event title.\\r\\n   */\\r\\n  month(event: CalendarEvent, title: string): string {\\r\\n    return event.title;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * The month view event tooltip. Return a falsey value from this to disable the tooltip.\\r\\n   */\\r\\n  monthTooltip(event: CalendarEvent, title: string): string {\\r\\n    return event.title;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * The week view event title.\\r\\n   */\\r\\n  week(event: CalendarEvent, title: string): string {\\r\\n    return event.title;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * The week view event tooltip. Return a falsey value from this to disable the tooltip.\\r\\n   */\\r\\n  weekTooltip(event: CalendarEvent, title: string): string {\\r\\n    return event.title;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * The day view event title.\\r\\n   */\\r\\n  day(event: CalendarEvent, title: string): string {\\r\\n    return event.title;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * The day view event tooltip. Return a falsey value from this to disable the tooltip.\\r\\n   */\\r\\n  dayTooltip(event: CalendarEvent, title: string): string {\\r\\n    return event.title;\\r\\n  }\\r\\n}\\r\\n\",\"import { Pipe, PipeTransform } from '@angular/core';\\r\\nimport { CalendarEvent } from 'calendar-utils';\\r\\nimport { CalendarEventTitleFormatter } from '../calendar-event-title-formatter/calendar-event-title-formatter.provider';\\r\\n\\r\\n@Pipe({\\r\\n  name: 'calendarEventTitle',\\r\\n})\\r\\nexport class CalendarEventTitlePipe implements PipeTransform {\\r\\n  constructor(private calendarEventTitle: CalendarEventTitleFormatter) {}\\r\\n\\r\\n  transform(title: string, titleType: string, event: CalendarEvent): string {\\r\\n    return this.calendarEventTitle[titleType](event, title);\\r\\n  }\\r\\n}\\r\\n\",\"import { Component, Input, TemplateRef } from '@angular/core';\\r\\nimport { CalendarEvent } from 'calendar-utils';\\r\\n\\r\\n@Component({\\r\\n  selector: 'mwl-calendar-event-title',\\r\\n  template: `\\r\\n    <ng-template #defaultTemplate let-event=\\\"event\\\" let-view=\\\"view\\\">\\r\\n      <span\\r\\n        class=\\\"cal-event-title\\\"\\r\\n        [innerHTML]=\\\"event.title | calendarEventTitle : view : event\\\"\\r\\n        [attr.aria-hidden]=\\\"{} | calendarA11y : 'hideEventTitle'\\\"\\r\\n      >\\r\\n      </span>\\r\\n    </ng-template>\\r\\n    <ng-template\\r\\n      [ngTemplateOutlet]=\\\"customTemplate || defaultTemplate\\\"\\r\\n      [ngTemplateOutletContext]=\\\"{\\r\\n        event: event,\\r\\n        view: view\\r\\n      }\\\"\\r\\n    >\\r\\n    </ng-template>\\r\\n  `,\\r\\n})\\r\\nexport class CalendarEventTitleComponent {\\r\\n  @Input() event: CalendarEvent;\\r\\n\\r\\n  @Input() customTemplate: TemplateRef<any>;\\r\\n\\r\\n  @Input() view: string;\\r\\n}\\r\\n\",\"import {\\r\\n  Directive,\\r\\n  Component,\\r\\n  HostListener,\\r\\n  OnDestroy,\\r\\n  Input,\\r\\n  ComponentRef,\\r\\n  Injector,\\r\\n  ComponentFactoryResolver,\\r\\n  ViewContainerRef,\\r\\n  ElementRef,\\r\\n  ComponentFactory,\\r\\n  Inject,\\r\\n  Renderer2,\\r\\n  TemplateRef,\\r\\n  OnChanges,\\r\\n  SimpleChanges,\\r\\n} from '@angular/core';\\r\\nimport { DOCUMENT } from '@angular/common';\\r\\nimport { PlacementArray, positionElements } from 'positioning';\\r\\nimport { CalendarEvent } from 'calendar-utils';\\r\\nimport { Observable, of, Subject, timer } from 'rxjs';\\r\\nimport { takeUntil } from 'rxjs/operators';\\r\\n\\r\\n@Component({\\r\\n  selector: 'mwl-calendar-tooltip-window',\\r\\n  template: `\\r\\n    <ng-template\\r\\n      #defaultTemplate\\r\\n      let-contents=\\\"contents\\\"\\r\\n      let-placement=\\\"placement\\\"\\r\\n      let-event=\\\"event\\\"\\r\\n    >\\r\\n      <div class=\\\"cal-tooltip\\\" [ngClass]=\\\"'cal-tooltip-' + placement\\\">\\r\\n        <div class=\\\"cal-tooltip-arrow\\\"></div>\\r\\n        <div class=\\\"cal-tooltip-inner\\\" [innerHtml]=\\\"contents\\\"></div>\\r\\n      </div>\\r\\n    </ng-template>\\r\\n    <ng-template\\r\\n      [ngTemplateOutlet]=\\\"customTemplate || defaultTemplate\\\"\\r\\n      [ngTemplateOutletContext]=\\\"{\\r\\n        contents: contents,\\r\\n        placement: placement,\\r\\n        event: event\\r\\n      }\\\"\\r\\n    >\\r\\n    </ng-template>\\r\\n  `,\\r\\n})\\r\\nexport class CalendarTooltipWindowComponent {\\r\\n  @Input() contents: string;\\r\\n\\r\\n  @Input() placement: string;\\r\\n\\r\\n  @Input() event: CalendarEvent;\\r\\n\\r\\n  @Input() customTemplate: TemplateRef<any>;\\r\\n}\\r\\n\\r\\n@Directive({\\r\\n  selector: '[mwlCalendarTooltip]',\\r\\n})\\r\\nexport class CalendarTooltipDirective implements OnDestroy, OnChanges {\\r\\n  @Input('mwlCalendarTooltip') contents: string; // eslint-disable-line  @angular-eslint/no-input-rename\\r\\n\\r\\n  @Input('tooltipPlacement') placement: PlacementArray = 'auto'; // eslint-disable-line  @angular-eslint/no-input-rename\\r\\n\\r\\n  @Input('tooltipTemplate') customTemplate: TemplateRef<any>; // eslint-disable-line  @angular-eslint/no-input-rename\\r\\n\\r\\n  @Input('tooltipEvent') event: CalendarEvent; // eslint-disable-line  @angular-eslint/no-input-rename\\r\\n\\r\\n  @Input('tooltipAppendToBody') appendToBody: boolean; // eslint-disable-line  @angular-eslint/no-input-rename\\r\\n\\r\\n  @Input('tooltipDelay') delay: number | null = null; // eslint-disable-line  @angular-eslint/no-input-rename\\r\\n\\r\\n  private tooltipFactory: ComponentFactory<CalendarTooltipWindowComponent>;\\r\\n  private tooltipRef: ComponentRef<CalendarTooltipWindowComponent>;\\r\\n  private cancelTooltipDelay$ = new Subject<void>();\\r\\n\\r\\n  constructor(\\r\\n    private elementRef: ElementRef,\\r\\n    private injector: Injector,\\r\\n    private renderer: Renderer2,\\r\\n    componentFactoryResolver: ComponentFactoryResolver,\\r\\n    private viewContainerRef: ViewContainerRef,\\r\\n    @Inject(DOCUMENT) private document // eslint-disable-line\\r\\n  ) {\\r\\n    this.tooltipFactory = componentFactoryResolver.resolveComponentFactory(\\r\\n      CalendarTooltipWindowComponent\\r\\n    );\\r\\n  }\\r\\n\\r\\n  ngOnChanges(changes: SimpleChanges): void {\\r\\n    if (\\r\\n      this.tooltipRef &&\\r\\n      (changes.contents || changes.customTemplate || changes.event)\\r\\n    ) {\\r\\n      this.tooltipRef.instance.contents = this.contents;\\r\\n      this.tooltipRef.instance.customTemplate = this.customTemplate;\\r\\n      this.tooltipRef.instance.event = this.event;\\r\\n      this.tooltipRef.changeDetectorRef.markForCheck();\\r\\n\\r\\n      if (!this.contents) {\\r\\n        this.hide();\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n\\r\\n  ngOnDestroy(): void {\\r\\n    this.hide();\\r\\n  }\\r\\n\\r\\n  @HostListener('mouseenter')\\r\\n  onMouseOver(): void {\\r\\n    const delay$: Observable<any> =\\r\\n      this.delay === null ? of('now') : timer(this.delay);\\r\\n    delay$.pipe(takeUntil(this.cancelTooltipDelay$)).subscribe(() => {\\r\\n      this.show();\\r\\n    });\\r\\n  }\\r\\n\\r\\n  @HostListener('mouseleave')\\r\\n  onMouseOut(): void {\\r\\n    this.hide();\\r\\n  }\\r\\n\\r\\n  private show(): void {\\r\\n    if (!this.tooltipRef && this.contents) {\\r\\n      this.tooltipRef = this.viewContainerRef.createComponent(\\r\\n        this.tooltipFactory,\\r\\n        0,\\r\\n        this.injector,\\r\\n        []\\r\\n      );\\r\\n      this.tooltipRef.instance.contents = this.contents;\\r\\n      this.tooltipRef.instance.customTemplate = this.customTemplate;\\r\\n      this.tooltipRef.instance.event = this.event;\\r\\n      if (this.appendToBody) {\\r\\n        this.document.body.appendChild(this.tooltipRef.location.nativeElement);\\r\\n      }\\r\\n      requestAnimationFrame(() => {\\r\\n        this.positionTooltip();\\r\\n      });\\r\\n    }\\r\\n  }\\r\\n\\r\\n  private hide(): void {\\r\\n    if (this.tooltipRef) {\\r\\n      this.viewContainerRef.remove(\\r\\n        this.viewContainerRef.indexOf(this.tooltipRef.hostView)\\r\\n      );\\r\\n      this.tooltipRef = null;\\r\\n    }\\r\\n    this.cancelTooltipDelay$.next();\\r\\n  }\\r\\n\\r\\n  private positionTooltip(previousPositions: string[] = []): void {\\r\\n    if (this.tooltipRef) {\\r\\n      this.tooltipRef.changeDetectorRef.detectChanges();\\r\\n      this.tooltipRef.instance.placement = positionElements(\\r\\n        this.elementRef.nativeElement,\\r\\n        this.tooltipRef.location.nativeElement.children[0],\\r\\n        this.placement,\\r\\n        this.appendToBody\\r\\n      );\\r\\n      // keep re-positioning the tooltip until the arrow position doesn't make a difference\\r\\n      if (\\r\\n        previousPositions.indexOf(this.tooltipRef.instance.placement) === -1\\r\\n      ) {\\r\\n        this.positionTooltip([\\r\\n          ...previousPositions,\\r\\n          this.tooltipRef.instance.placement,\\r\\n        ]);\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n}\\r\\n\",\"export enum CalendarView {\\r\\n  Month = 'month',\\r\\n  Week = 'week',\\r\\n  Day = 'day',\\r\\n}\\r\\n\",\"import {\\r\\n  CalendarEvent,\\r\\n  WeekViewTimeEvent,\\r\\n  WeekViewHour,\\r\\n  WeekViewHourSegment,\\r\\n  validateEvents as validateEventsWithoutLog,\\r\\n  ViewPeriod,\\r\\n  WeekDay,\\r\\n  WeekViewAllDayEvent,\\r\\n} from 'calendar-utils';\\r\\nimport { DateAdapter } from '../../date-adapters/date-adapter';\\r\\n\\r\\nexport const validateEvents = (events: CalendarEvent[]) => {\\r\\n  const warn = (...args) => console.warn('angular-calendar', ...args);\\r\\n  return validateEventsWithoutLog(events, warn);\\r\\n};\\r\\n\\r\\nexport function isInsideLeftAndRight(\\r\\n  outer: ClientRect,\\r\\n  inner: ClientRect\\r\\n): boolean {\\r\\n  return (\\r\\n    Math.floor(outer.left) <= Math.ceil(inner.left) &&\\r\\n    Math.floor(inner.left) <= Math.ceil(outer.right) &&\\r\\n    Math.floor(outer.left) <= Math.ceil(inner.right) &&\\r\\n    Math.floor(inner.right) <= Math.ceil(outer.right)\\r\\n  );\\r\\n}\\r\\n\\r\\nfunction isInsideTopAndBottom(outer: ClientRect, inner: ClientRect): boolean {\\r\\n  return (\\r\\n    Math.floor(outer.top) <= Math.ceil(inner.top) &&\\r\\n    Math.floor(inner.top) <= Math.ceil(outer.bottom) &&\\r\\n    Math.floor(outer.top) <= Math.ceil(inner.bottom) &&\\r\\n    Math.floor(inner.bottom) <= Math.ceil(outer.bottom)\\r\\n  );\\r\\n}\\r\\n\\r\\nexport function isInside(outer: ClientRect, inner: ClientRect): boolean {\\r\\n  return (\\r\\n    isInsideLeftAndRight(outer, inner) && isInsideTopAndBottom(outer, inner)\\r\\n  );\\r\\n}\\r\\n\\r\\nexport function roundToNearest(amount: number, precision: number) {\\r\\n  return Math.round(amount / precision) * precision;\\r\\n}\\r\\n\\r\\nexport const trackByEventId = (index: number, event: CalendarEvent) =>\\r\\n  event.id ? event.id : event;\\r\\n\\r\\nexport const trackByWeekDayHeaderDate = (index: number, day: WeekDay) =>\\r\\n  day.date.toISOString();\\r\\n\\r\\nexport const trackByHourSegment = (\\r\\n  index: number,\\r\\n  segment: WeekViewHourSegment\\r\\n) => segment.date.toISOString();\\r\\n\\r\\nexport const trackByHour = (index: number, hour: WeekViewHour) =>\\r\\n  hour.segments[0].date.toISOString();\\r\\n\\r\\nexport const trackByWeekAllDayEvent = (\\r\\n  index: number,\\r\\n  weekEvent: WeekViewAllDayEvent\\r\\n) => (weekEvent.event.id ? weekEvent.event.id : weekEvent.event);\\r\\n\\r\\nexport const trackByWeekTimeEvent = (\\r\\n  index: number,\\r\\n  weekEvent: WeekViewTimeEvent\\r\\n) => (weekEvent.event.id ? weekEvent.event.id : weekEvent.event);\\r\\n\\r\\nconst MINUTES_IN_HOUR = 60;\\r\\n\\r\\nfunction getPixelAmountInMinutes(\\r\\n  hourSegments: number,\\r\\n  hourSegmentHeight: number,\\r\\n  hourDuration?: number\\r\\n) {\\r\\n  return (hourDuration || MINUTES_IN_HOUR) / (hourSegments * hourSegmentHeight);\\r\\n}\\r\\n\\r\\nexport function getMinutesMoved(\\r\\n  movedY: number,\\r\\n  hourSegments: number,\\r\\n  hourSegmentHeight: number,\\r\\n  eventSnapSize: number,\\r\\n  hourDuration?: number\\r\\n): number {\\r\\n  const draggedInPixelsSnapSize = roundToNearest(\\r\\n    movedY,\\r\\n    eventSnapSize || hourSegmentHeight\\r\\n  );\\r\\n  const pixelAmountInMinutes = getPixelAmountInMinutes(\\r\\n    hourSegments,\\r\\n    hourSegmentHeight,\\r\\n    hourDuration\\r\\n  );\\r\\n  return draggedInPixelsSnapSize * pixelAmountInMinutes;\\r\\n}\\r\\n\\r\\nexport function getDefaultEventEnd(\\r\\n  dateAdapter: DateAdapter,\\r\\n  event: CalendarEvent,\\r\\n  minimumMinutes: number\\r\\n): Date {\\r\\n  if (event.end) {\\r\\n    return event.end;\\r\\n  } else {\\r\\n    return dateAdapter.addMinutes(event.start, minimumMinutes);\\r\\n  }\\r\\n}\\r\\n\\r\\nexport function addDaysWithExclusions(\\r\\n  dateAdapter: DateAdapter,\\r\\n  date: Date,\\r\\n  days: number,\\r\\n  excluded: number[]\\r\\n): Date {\\r\\n  let daysCounter = 0;\\r\\n  let daysToAdd = 0;\\r\\n  const changeDays = days < 0 ? dateAdapter.subDays : dateAdapter.addDays;\\r\\n  let result = date;\\r\\n  while (daysToAdd <= Math.abs(days)) {\\r\\n    result = changeDays(date, daysCounter);\\r\\n    const day = dateAdapter.getDay(result);\\r\\n    if (excluded.indexOf(day) === -1) {\\r\\n      daysToAdd++;\\r\\n    }\\r\\n    daysCounter++;\\r\\n  }\\r\\n  return result;\\r\\n}\\r\\n\\r\\nexport function isDraggedWithinPeriod(\\r\\n  newStart: Date,\\r\\n  newEnd: Date,\\r\\n  period: ViewPeriod\\r\\n): boolean {\\r\\n  const end = newEnd || newStart;\\r\\n  return (\\r\\n    (period.start <= newStart && newStart <= period.end) ||\\r\\n    (period.start <= end && end <= period.end)\\r\\n  );\\r\\n}\\r\\n\\r\\nexport function shouldFireDroppedEvent(\\r\\n  dropEvent: { dropData?: { event?: CalendarEvent; calendarId?: symbol } },\\r\\n  date: Date,\\r\\n  allDay: boolean,\\r\\n  calendarId: symbol\\r\\n) {\\r\\n  return (\\r\\n    dropEvent.dropData &&\\r\\n    dropEvent.dropData.event &&\\r\\n    (dropEvent.dropData.calendarId !== calendarId ||\\r\\n      (dropEvent.dropData.event.allDay && !allDay) ||\\r\\n      (!dropEvent.dropData.event.allDay && allDay))\\r\\n  );\\r\\n}\\r\\n\\r\\nexport function getWeekViewPeriod(\\r\\n  dateAdapter: DateAdapter,\\r\\n  viewDate: Date,\\r\\n  weekStartsOn: number,\\r\\n  excluded: number[] = [],\\r\\n  daysInWeek?: number\\r\\n): { viewStart: Date; viewEnd: Date } {\\r\\n  let viewStart = daysInWeek\\r\\n    ? dateAdapter.startOfDay(viewDate)\\r\\n    : dateAdapter.startOfWeek(viewDate, { weekStartsOn });\\r\\n  const endOfWeek = dateAdapter.endOfWeek(viewDate, { weekStartsOn });\\r\\n  while (\\r\\n    excluded.indexOf(dateAdapter.getDay(viewStart)) > -1 &&\\r\\n    viewStart < endOfWeek\\r\\n  ) {\\r\\n    viewStart = dateAdapter.addDays(viewStart, 1);\\r\\n  }\\r\\n  if (daysInWeek) {\\r\\n    const viewEnd = dateAdapter.endOfDay(\\r\\n      addDaysWithExclusions(dateAdapter, viewStart, daysInWeek - 1, excluded)\\r\\n    );\\r\\n    return { viewStart, viewEnd };\\r\\n  } else {\\r\\n    let viewEnd = endOfWeek;\\r\\n    while (\\r\\n      excluded.indexOf(dateAdapter.getDay(viewEnd)) > -1 &&\\r\\n      viewEnd > viewStart\\r\\n    ) {\\r\\n      viewEnd = dateAdapter.subDays(viewEnd, 1);\\r\\n    }\\r\\n    return { viewStart, viewEnd };\\r\\n  }\\r\\n}\\r\\n\\r\\nexport function isWithinThreshold({ x, y }: { x: number; y: number }) {\\r\\n  const DRAG_THRESHOLD = 1;\\r\\n  return Math.abs(x) > DRAG_THRESHOLD || Math.abs(y) > DRAG_THRESHOLD;\\r\\n}\\r\\n\",\"import {\\r\\n  Directive,\\r\\n  HostListener,\\r\\n  Input,\\r\\n  Output,\\r\\n  EventEmitter,\\r\\n} from '@angular/core';\\r\\nimport { DateAdapter } from '../../date-adapters/date-adapter';\\r\\nimport { CalendarView } from '../calendar-view/calendar-view.enum';\\r\\nimport { addDaysWithExclusions } from '../util/util';\\r\\n\\r\\n/**\\r\\n * Change the view date to the previous view. For example:\\r\\n *\\r\\n * ```typescript\\r\\n * <button\\r\\n *  mwlCalendarPreviousView\\r\\n *  [(viewDate)]=\\\"viewDate\\\"\\r\\n *  [view]=\\\"view\\\">\\r\\n *  Previous\\r\\n * </button>\\r\\n * ```\\r\\n */\\r\\n@Directive({\\r\\n  selector: '[mwlCalendarPreviousView]',\\r\\n})\\r\\nexport class CalendarPreviousViewDirective {\\r\\n  /**\\r\\n   * The current view\\r\\n   */\\r\\n  @Input() view: CalendarView | 'month' | 'week' | 'day';\\r\\n\\r\\n  /**\\r\\n   * The current view date\\r\\n   */\\r\\n  @Input() viewDate: Date;\\r\\n\\r\\n  /**\\r\\n   * Days to skip when going back by 1 day\\r\\n   */\\r\\n  @Input() excludeDays: number[] = [];\\r\\n\\r\\n  /**\\r\\n   * The number of days in a week. If set will subtract this amount of days instead of 1 week\\r\\n   */\\r\\n  @Input() daysInWeek: number;\\r\\n\\r\\n  /**\\r\\n   * Called when the view date is changed\\r\\n   */\\r\\n  @Output() viewDateChange: EventEmitter<Date> = new EventEmitter();\\r\\n\\r\\n  constructor(private dateAdapter: DateAdapter) {}\\r\\n\\r\\n  /**\\r\\n   * @hidden\\r\\n   */\\r\\n  @HostListener('click')\\r\\n  onClick(): void {\\r\\n    const subFn: any = {\\r\\n      day: this.dateAdapter.subDays,\\r\\n      week: this.dateAdapter.subWeeks,\\r\\n      month: this.dateAdapter.subMonths,\\r\\n    }[this.view];\\r\\n\\r\\n    if (this.view === CalendarView.Day) {\\r\\n      this.viewDateChange.emit(\\r\\n        addDaysWithExclusions(\\r\\n          this.dateAdapter,\\r\\n          this.viewDate,\\r\\n          -1,\\r\\n          this.excludeDays\\r\\n        )\\r\\n      );\\r\\n    } else if (this.view === CalendarView.Week && this.daysInWeek) {\\r\\n      this.viewDateChange.emit(\\r\\n        addDaysWithExclusions(\\r\\n          this.dateAdapter,\\r\\n          this.viewDate,\\r\\n          -this.daysInWeek,\\r\\n          this.excludeDays\\r\\n        )\\r\\n      );\\r\\n    } else {\\r\\n      this.viewDateChange.emit(subFn(this.viewDate, 1));\\r\\n    }\\r\\n  }\\r\\n}\\r\\n\",\"import {\\r\\n  Directive,\\r\\n  EventEmitter,\\r\\n  HostListener,\\r\\n  Input,\\r\\n  Output,\\r\\n} from '@angular/core';\\r\\nimport { DateAdapter } from '../../date-adapters/date-adapter';\\r\\nimport { CalendarView } from '../calendar-view/calendar-view.enum';\\r\\nimport { addDaysWithExclusions } from '../util/util';\\r\\n\\r\\n/**\\r\\n * Change the view date to the next view. For example:\\r\\n *\\r\\n * ```typescript\\r\\n * <button\\r\\n *  mwlCalendarNextView\\r\\n *  [(viewDate)]=\\\"viewDate\\\"\\r\\n *  [view]=\\\"view\\\">\\r\\n *  Next\\r\\n * </button>\\r\\n * ```\\r\\n */\\r\\n@Directive({\\r\\n  selector: '[mwlCalendarNextView]',\\r\\n})\\r\\nexport class CalendarNextViewDirective {\\r\\n  /**\\r\\n   * The current view\\r\\n   */\\r\\n  @Input() view: CalendarView | 'month' | 'week' | 'day';\\r\\n\\r\\n  /**\\r\\n   * The current view date\\r\\n   */\\r\\n  @Input() viewDate: Date;\\r\\n\\r\\n  /**\\r\\n   * Days to skip when going forward by 1 day\\r\\n   */\\r\\n  @Input() excludeDays: number[] = [];\\r\\n\\r\\n  /**\\r\\n   * The number of days in a week. If set will add this amount of days instead of 1 week\\r\\n   */\\r\\n  @Input() daysInWeek: number;\\r\\n\\r\\n  /**\\r\\n   * Called when the view date is changed\\r\\n   */\\r\\n  @Output() viewDateChange: EventEmitter<Date> = new EventEmitter();\\r\\n\\r\\n  constructor(private dateAdapter: DateAdapter) {}\\r\\n\\r\\n  /**\\r\\n   * @hidden\\r\\n   */\\r\\n  @HostListener('click')\\r\\n  onClick(): void {\\r\\n    const addFn: any = {\\r\\n      day: this.dateAdapter.addDays,\\r\\n      week: this.dateAdapter.addWeeks,\\r\\n      month: this.dateAdapter.addMonths,\\r\\n    }[this.view];\\r\\n\\r\\n    if (this.view === CalendarView.Day) {\\r\\n      this.viewDateChange.emit(\\r\\n        addDaysWithExclusions(\\r\\n          this.dateAdapter,\\r\\n          this.viewDate,\\r\\n          1,\\r\\n          this.excludeDays\\r\\n        )\\r\\n      );\\r\\n    } else if (this.view === CalendarView.Week && this.daysInWeek) {\\r\\n      this.viewDateChange.emit(\\r\\n        addDaysWithExclusions(\\r\\n          this.dateAdapter,\\r\\n          this.viewDate,\\r\\n          this.daysInWeek,\\r\\n          this.excludeDays\\r\\n        )\\r\\n      );\\r\\n    } else {\\r\\n      this.viewDateChange.emit(addFn(this.viewDate, 1));\\r\\n    }\\r\\n  }\\r\\n}\\r\\n\",\"import {\\r\\n  Directive,\\r\\n  HostListener,\\r\\n  Input,\\r\\n  Output,\\r\\n  EventEmitter,\\r\\n} from '@angular/core';\\r\\nimport { DateAdapter } from '../../date-adapters/date-adapter';\\r\\n\\r\\n/**\\r\\n * Change the view date to the current day. For example:\\r\\n *\\r\\n * ```typescript\\r\\n * <button\\r\\n *  mwlCalendarToday\\r\\n *  [(viewDate)]=\\\"viewDate\\\">\\r\\n *  Today\\r\\n * </button>\\r\\n * ```\\r\\n */\\r\\n@Directive({\\r\\n  selector: '[mwlCalendarToday]',\\r\\n})\\r\\nexport class CalendarTodayDirective {\\r\\n  /**\\r\\n   * The current view date\\r\\n   */\\r\\n  @Input() viewDate: Date;\\r\\n\\r\\n  /**\\r\\n   * Called when the view date is changed\\r\\n   */\\r\\n  @Output() viewDateChange: EventEmitter<Date> = new EventEmitter();\\r\\n\\r\\n  constructor(private dateAdapter: DateAdapter) {}\\r\\n\\r\\n  /**\\r\\n   * @hidden\\r\\n   */\\r\\n  @HostListener('click')\\r\\n  onClick(): void {\\r\\n    this.viewDateChange.emit(this.dateAdapter.startOfDay(new Date()));\\r\\n  }\\r\\n}\\r\\n\",\"import {\\r\\n  CalendarDateFormatterInterface,\\r\\n  DateFormatterParams,\\r\\n} from '../calendar-date-formatter/calendar-date-formatter.interface';\\r\\nimport { formatDate } from '@angular/common';\\r\\nimport { Injectable } from '@angular/core';\\r\\nimport { DateAdapter } from '../../date-adapters/date-adapter';\\r\\nimport { getWeekViewPeriod } from '../util/util';\\r\\n\\r\\n/**\\r\\n * This will use the angular date pipe to do all date formatting. It is the default date formatter used by the calendar.\\r\\n */\\r\\n@Injectable()\\r\\nexport class CalendarAngularDateFormatter\\r\\n  implements CalendarDateFormatterInterface\\r\\n{\\r\\n  constructor(protected dateAdapter: DateAdapter) {}\\r\\n\\r\\n  /**\\r\\n   * The month view header week day labels\\r\\n   */\\r\\n  public monthViewColumnHeader({ date, locale }: DateFormatterParams): string {\\r\\n    return formatDate(date, 'EEEE', locale);\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * The month view cell day number\\r\\n   */\\r\\n  public monthViewDayNumber({ date, locale }: DateFormatterParams): string {\\r\\n    return formatDate(date, 'd', locale);\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * The month view title\\r\\n   */\\r\\n  public monthViewTitle({ date, locale }: DateFormatterParams): string {\\r\\n    return formatDate(date, 'LLLL y', locale);\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * The week view header week day labels\\r\\n   */\\r\\n  public weekViewColumnHeader({ date, locale }: DateFormatterParams): string {\\r\\n    return formatDate(date, 'EEEE', locale);\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * The week view sub header day and month labels\\r\\n   */\\r\\n  public weekViewColumnSubHeader({\\r\\n    date,\\r\\n    locale,\\r\\n  }: DateFormatterParams): string {\\r\\n    return formatDate(date, 'MMM d', locale);\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * The week view title\\r\\n   */\\r\\n  public weekViewTitle({\\r\\n    date,\\r\\n    locale,\\r\\n    weekStartsOn,\\r\\n    excludeDays,\\r\\n    daysInWeek,\\r\\n  }: DateFormatterParams): string {\\r\\n    const { viewStart, viewEnd } = getWeekViewPeriod(\\r\\n      this.dateAdapter,\\r\\n      date,\\r\\n      weekStartsOn,\\r\\n      excludeDays,\\r\\n      daysInWeek\\r\\n    );\\r\\n    const format = (dateToFormat: Date, showYear: boolean) =>\\r\\n      formatDate(dateToFormat, 'MMM d' + (showYear ? ', yyyy' : ''), locale);\\r\\n    return `${format(\\r\\n      viewStart,\\r\\n      viewStart.getUTCFullYear() !== viewEnd.getUTCFullYear()\\r\\n    )} - ${format(viewEnd, true)}`;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * The time formatting down the left hand side of the week view\\r\\n   */\\r\\n  public weekViewHour({ date, locale }: DateFormatterParams): string {\\r\\n    return formatDate(date, 'h a', locale);\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * The time formatting down the left hand side of the day view\\r\\n   */\\r\\n  public dayViewHour({ date, locale }: DateFormatterParams): string {\\r\\n    return formatDate(date, 'h a', locale);\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * The day view title\\r\\n   */\\r\\n  public dayViewTitle({ date, locale }: DateFormatterParams): string {\\r\\n    return formatDate(date, 'EEEE, MMMM d, y', locale);\\r\\n  }\\r\\n}\\r\\n\",\"import { CalendarAngularDateFormatter } from '../calendar-angular-date-formatter/calendar-angular-date-formatter.provider';\\r\\nimport { Injectable } from '@angular/core';\\r\\n\\r\\n/**\\r\\n * This class is responsible for all formatting of dates. There are 3 implementations available, the `CalendarAngularDateFormatter` (default) which uses the angular date pipe to format dates, the `CalendarNativeDateFormatter` which will use the <a href=\\\"https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Intl\\\" target=\\\"_blank\\\">Intl</a> API to format dates, or there is the `CalendarMomentDateFormatter` which uses <a href=\\\"http://momentjs.com/\\\" target=\\\"_blank\\\">moment</a>.\\r\\n *\\r\\n * If you wish, you may override any of the defaults via angulars DI. For example:\\r\\n *\\r\\n * ```typescript\\r\\n * import { CalendarDateFormatter, DateFormatterParams } from 'angular-calendar';\\r\\n * import { formatDate } from '@angular/common';\\r\\n * import { Injectable } from '@angular/core';\\r\\n *\\r\\n * @Injectable()\\r\\n * class CustomDateFormatter extends CalendarDateFormatter {\\r\\n *\\r\\n *   public monthViewColumnHeader({date, locale}: DateFormatterParams): string {\\r\\n *     return formatDate(date, 'EEE', locale); // use short week days\\r\\n *   }\\r\\n *\\r\\n * }\\r\\n *\\r\\n * // in your component that uses the calendar\\r\\n * providers: [{\\r\\n *   provide: CalendarDateFormatter,\\r\\n *   useClass: CustomDateFormatter\\r\\n * }]\\r\\n * ```\\r\\n */\\r\\n@Injectable()\\r\\nexport class CalendarDateFormatter extends CalendarAngularDateFormatter {}\\r\\n\",\"import { Pipe, PipeTransform, LOCALE_ID, Inject } from '@angular/core';\\r\\nimport { CalendarDateFormatter } from '../calendar-date-formatter/calendar-date-formatter.provider';\\r\\n\\r\\n/**\\r\\n * This pipe is primarily for rendering the current view title. Example usage:\\r\\n * ```typescript\\r\\n * // where `viewDate` is a `Date` and view is `'month' | 'week' | 'day'`\\r\\n * {{ viewDate | calendarDate:(view + 'ViewTitle'):'en' }}\\r\\n * ```\\r\\n */\\r\\n@Pipe({\\r\\n  name: 'calendarDate',\\r\\n})\\r\\nexport class CalendarDatePipe implements PipeTransform {\\r\\n  constructor(\\r\\n    private dateFormatter: CalendarDateFormatter,\\r\\n    @Inject(LOCALE_ID) private locale: string\\r\\n  ) {}\\r\\n\\r\\n  transform(\\r\\n    date: Date,\\r\\n    method: string,\\r\\n    locale: string = this.locale,\\r\\n    weekStartsOn: number = 0,\\r\\n    excludeDays: number[] = [],\\r\\n    daysInWeek?: number\\r\\n  ): string {\\r\\n    if (typeof this.dateFormatter[method] === 'undefined') {\\r\\n      const allowedMethods = Object.getOwnPropertyNames(\\r\\n        Object.getPrototypeOf(CalendarDateFormatter.prototype)\\r\\n      ).filter((iMethod) => iMethod !== 'constructor');\\r\\n      throw new Error(\\r\\n        `${method} is not a valid date formatter. Can only be one of ${allowedMethods.join(\\r\\n          ', '\\r\\n        )}`\\r\\n      );\\r\\n    }\\r\\n    return this.dateFormatter[method]({\\r\\n      date,\\r\\n      locale,\\r\\n      weekStartsOn,\\r\\n      excludeDays,\\r\\n      daysInWeek,\\r\\n    });\\r\\n  }\\r\\n}\\r\\n\",\"import { Injectable } from '@angular/core';\\r\\nimport {\\r\\n  GetMonthViewArgs,\\r\\n  MonthView,\\r\\n  GetWeekViewHeaderArgs,\\r\\n  WeekDay,\\r\\n  GetWeekViewArgs,\\r\\n  WeekView,\\r\\n  getMonthView,\\r\\n  getWeekViewHeader,\\r\\n  getWeekView,\\r\\n} from 'calendar-utils';\\r\\nimport { DateAdapter } from '../../date-adapters/date-adapter';\\r\\n\\r\\n@Injectable()\\r\\nexport class CalendarUtils {\\r\\n  constructor(protected dateAdapter: DateAdapter) {}\\r\\n\\r\\n  getMonthView(args: GetMonthViewArgs): MonthView {\\r\\n    return getMonthView(this.dateAdapter, args);\\r\\n  }\\r\\n\\r\\n  getWeekViewHeader(args: GetWeekViewHeaderArgs): WeekDay[] {\\r\\n    return getWeekViewHeader(this.dateAdapter, args);\\r\\n  }\\r\\n\\r\\n  getWeekView(args: GetWeekViewArgs): WeekView {\\r\\n    return getWeekView(this.dateAdapter, args);\\r\\n  }\\r\\n}\\r\\n\",\"import { InjectionToken, Inject, Injectable } from '@angular/core';\\r\\nimport {\\r\\n  CalendarDateFormatterInterface,\\r\\n  DateFormatterParams,\\r\\n} from '../calendar-date-formatter/calendar-date-formatter.interface';\\r\\nimport { getWeekViewPeriod } from '../util/util';\\r\\nimport { DateAdapter } from '../../date-adapters/date-adapter';\\r\\n\\r\\nexport const MOMENT: InjectionToken<string> = new InjectionToken('Moment');\\r\\n\\r\\n/**\\r\\n * This will use <a href=\\\"http://momentjs.com/\\\" target=\\\"_blank\\\">moment</a> to do all date formatting. To use this class:\\r\\n *\\r\\n * ```typescript\\r\\n * import { CalendarDateFormatter, CalendarMomentDateFormatter, MOMENT } from 'angular-calendar';\\r\\n * import moment from 'moment';\\r\\n *\\r\\n * // in your component\\r\\n * provide: [{\\r\\n *   provide: MOMENT, useValue: moment\\r\\n * }, {\\r\\n *   provide: CalendarDateFormatter, useClass: CalendarMomentDateFormatter\\r\\n * }]\\r\\n *\\r\\n * ```\\r\\n */\\r\\n@Injectable()\\r\\nexport class CalendarMomentDateFormatter\\r\\n  implements CalendarDateFormatterInterface\\r\\n{\\r\\n  /**\\r\\n   * @hidden\\r\\n   */\\r\\n  constructor(\\r\\n    @Inject(MOMENT) protected moment: any,\\r\\n    protected dateAdapter: DateAdapter\\r\\n  ) {}\\r\\n\\r\\n  /**\\r\\n   * The month view header week day labels\\r\\n   */\\r\\n  public monthViewColumnHeader({ date, locale }: DateFormatterParams): string {\\r\\n    return this.moment(date).locale(locale).format('dddd');\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * The month view cell day number\\r\\n   */\\r\\n  public monthViewDayNumber({ date, locale }: DateFormatterParams): string {\\r\\n    return this.moment(date).locale(locale).format('D');\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * The month view title\\r\\n   */\\r\\n  public monthViewTitle({ date, locale }: DateFormatterParams): string {\\r\\n    return this.moment(date).locale(locale).format('MMMM YYYY');\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * The week view header week day labels\\r\\n   */\\r\\n  public weekViewColumnHeader({ date, locale }: DateFormatterParams): string {\\r\\n    return this.moment(date).locale(locale).format('dddd');\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * The week view sub header day and month labels\\r\\n   */\\r\\n  public weekViewColumnSubHeader({\\r\\n    date,\\r\\n    locale,\\r\\n  }: DateFormatterParams): string {\\r\\n    return this.moment(date).locale(locale).format('MMM D');\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * The week view title\\r\\n   */\\r\\n  public weekViewTitle({\\r\\n    date,\\r\\n    locale,\\r\\n    weekStartsOn,\\r\\n    excludeDays,\\r\\n    daysInWeek,\\r\\n  }: DateFormatterParams): string {\\r\\n    const { viewStart, viewEnd } = getWeekViewPeriod(\\r\\n      this.dateAdapter,\\r\\n      date,\\r\\n      weekStartsOn,\\r\\n      excludeDays,\\r\\n      daysInWeek\\r\\n    );\\r\\n    const format = (dateToFormat: Date, showYear: boolean) =>\\r\\n      this.moment(dateToFormat)\\r\\n        .locale(locale)\\r\\n        .format('MMM D' + (showYear ? ', YYYY' : ''));\\r\\n    return `${format(\\r\\n      viewStart,\\r\\n      viewStart.getUTCFullYear() !== viewEnd.getUTCFullYear()\\r\\n    )} - ${format(viewEnd, true)}`;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * The time formatting down the left hand side of the week view\\r\\n   */\\r\\n  public weekViewHour({ date, locale }: DateFormatterParams): string {\\r\\n    return this.moment(date).locale(locale).format('ha');\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * The time formatting down the left hand side of the day view\\r\\n   */\\r\\n  public dayViewHour({ date, locale }: DateFormatterParams): string {\\r\\n    return this.moment(date).locale(locale).format('ha');\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * The day view title\\r\\n   */\\r\\n  public dayViewTitle({ date, locale }: DateFormatterParams): string {\\r\\n    return this.moment(date).locale(locale).format('dddd, LL'); // dddd = Thursday\\r\\n  } // LL = locale-dependent Month Day, Year\\r\\n}\\r\\n\",\"import {\\r\\n  CalendarDateFormatterInterface,\\r\\n  DateFormatterParams,\\r\\n} from '../calendar-date-formatter/calendar-date-formatter.interface';\\r\\nimport { Injectable } from '@angular/core';\\r\\nimport { DateAdapter } from '../../date-adapters/date-adapter';\\r\\nimport { getWeekViewPeriod } from '../util/util';\\r\\n\\r\\n/**\\r\\n * This will use <a href=\\\"https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Intl\\\" target=\\\"_blank\\\">Intl</a> API to do all date formatting.\\r\\n *\\r\\n * You will need to include a <a href=\\\"https://github.com/andyearnshaw/Intl.js/\\\">polyfill</a> for older browsers.\\r\\n */\\r\\n@Injectable()\\r\\nexport class CalendarNativeDateFormatter\\r\\n  implements CalendarDateFormatterInterface\\r\\n{\\r\\n  constructor(protected dateAdapter: DateAdapter) {}\\r\\n\\r\\n  /**\\r\\n   * The month view header week day labels\\r\\n   */\\r\\n  public monthViewColumnHeader({ date, locale }: DateFormatterParams): string {\\r\\n    return new Intl.DateTimeFormat(locale, { weekday: 'long' }).format(date);\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * The month view cell day number\\r\\n   */\\r\\n  public monthViewDayNumber({ date, locale }: DateFormatterParams): string {\\r\\n    return new Intl.DateTimeFormat(locale, { day: 'numeric' }).format(date);\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * The month view title\\r\\n   */\\r\\n  public monthViewTitle({ date, locale }: DateFormatterParams): string {\\r\\n    return new Intl.DateTimeFormat(locale, {\\r\\n      year: 'numeric',\\r\\n      month: 'long',\\r\\n    }).format(date);\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * The week view header week day labels\\r\\n   */\\r\\n  public weekViewColumnHeader({ date, locale }: DateFormatterParams): string {\\r\\n    return new Intl.DateTimeFormat(locale, { weekday: 'long' }).format(date);\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * The week view sub header day and month labels\\r\\n   */\\r\\n  public weekViewColumnSubHeader({\\r\\n    date,\\r\\n    locale,\\r\\n  }: DateFormatterParams): string {\\r\\n    return new Intl.DateTimeFormat(locale, {\\r\\n      day: 'numeric',\\r\\n      month: 'short',\\r\\n    }).format(date);\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * The week view title\\r\\n   */\\r\\n  public weekViewTitle({\\r\\n    date,\\r\\n    locale,\\r\\n    weekStartsOn,\\r\\n    excludeDays,\\r\\n    daysInWeek,\\r\\n  }: DateFormatterParams): string {\\r\\n    const { viewStart, viewEnd } = getWeekViewPeriod(\\r\\n      this.dateAdapter,\\r\\n      date,\\r\\n      weekStartsOn,\\r\\n      excludeDays,\\r\\n      daysInWeek\\r\\n    );\\r\\n\\r\\n    const format = (dateToFormat: Date, showYear: boolean) =>\\r\\n      new Intl.DateTimeFormat(locale, {\\r\\n        day: 'numeric',\\r\\n        month: 'short',\\r\\n        year: showYear ? 'numeric' : undefined,\\r\\n      }).format(dateToFormat);\\r\\n\\r\\n    return `${format(\\r\\n      viewStart,\\r\\n      viewStart.getUTCFullYear() !== viewEnd.getUTCFullYear()\\r\\n    )} - ${format(viewEnd, true)}`;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * The time formatting down the left hand side of the week view\\r\\n   */\\r\\n  public weekViewHour({ date, locale }: DateFormatterParams): string {\\r\\n    return new Intl.DateTimeFormat(locale, { hour: 'numeric' }).format(date);\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * The time formatting down the left hand side of the day view\\r\\n   */\\r\\n  public dayViewHour({ date, locale }: DateFormatterParams): string {\\r\\n    return new Intl.DateTimeFormat(locale, { hour: 'numeric' }).format(date);\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * The day view title\\r\\n   */\\r\\n  public dayViewTitle({ date, locale }: DateFormatterParams): string {\\r\\n    return new Intl.DateTimeFormat(locale, {\\r\\n      day: 'numeric',\\r\\n      month: 'long',\\r\\n      year: 'numeric',\\r\\n      weekday: 'long',\\r\\n    }).format(date);\\r\\n  }\\r\\n}\\r\\n\",\"import { CalendarEvent } from 'calendar-utils';\\r\\n\\r\\nexport enum CalendarEventTimesChangedEventType {\\r\\n  Drag = 'drag',\\r\\n  Drop = 'drop',\\r\\n  Resize = 'resize',\\r\\n}\\r\\n\\r\\n/**\\r\\n * The output `$event` type when an event is resized or dragged and dropped.\\r\\n */\\r\\nexport interface CalendarEventTimesChangedEvent<MetaType = any> {\\r\\n  type: CalendarEventTimesChangedEventType;\\r\\n  event: CalendarEvent<MetaType>;\\r\\n  newStart: Date;\\r\\n  newEnd?: Date;\\r\\n  allDay?: boolean;\\r\\n}\\r\\n\",\"import { ModuleWithProviders, NgModule, Provider } from '@angular/core';\\r\\nimport { CommonModule, I18nPluralPipe } from '@angular/common';\\r\\nimport { CalendarEventActionsComponent } from './calendar-event-actions/calendar-event-actions.component';\\r\\nimport { CalendarEventTitleComponent } from './calendar-event-title/calendar-event-title.component';\\r\\nimport {\\r\\n  CalendarTooltipDirective,\\r\\n  CalendarTooltipWindowComponent,\\r\\n} from './calendar-tooltip/calendar-tooltip.directive';\\r\\nimport { CalendarPreviousViewDirective } from './calendar-previous-view/calendar-previous-view.directive';\\r\\nimport { CalendarNextViewDirective } from './calendar-next-view/calendar-next-view.directive';\\r\\nimport { CalendarTodayDirective } from './calendar-today/calendar-today.directive';\\r\\nimport { CalendarDatePipe } from './calendar-date/calendar-date.pipe';\\r\\nimport { CalendarEventTitlePipe } from './calendar-event-title/calendar-event-title.pipe';\\r\\nimport { ClickDirective } from './click/click.directive';\\r\\nimport { KeydownEnterDirective } from './keydown-enter/keydown-enter.directive';\\r\\nimport { CalendarEventTitleFormatter } from './calendar-event-title-formatter/calendar-event-title-formatter.provider';\\r\\nimport { CalendarDateFormatter } from './calendar-date-formatter/calendar-date-formatter.provider';\\r\\nimport { CalendarUtils } from './calendar-utils/calendar-utils.provider';\\r\\nimport { CalendarA11y } from './calendar-a11y/calendar-a11y.provider';\\r\\nimport { CalendarA11yPipe } from './calendar-a11y/calendar-a11y.pipe';\\r\\n\\r\\nexport interface CalendarModuleConfig {\\r\\n  eventTitleFormatter?: Provider;\\r\\n  dateFormatter?: Provider;\\r\\n  utils?: Provider;\\r\\n  a11y?: Provider;\\r\\n}\\r\\n\\r\\nexport * from './calendar-event-title-formatter/calendar-event-title-formatter.provider';\\r\\nexport * from './calendar-moment-date-formatter/calendar-moment-date-formatter.provider';\\r\\nexport * from './calendar-native-date-formatter/calendar-native-date-formatter.provider';\\r\\nexport * from './calendar-angular-date-formatter/calendar-angular-date-formatter.provider';\\r\\nexport * from './calendar-date-formatter/calendar-date-formatter.provider';\\r\\nexport * from './calendar-utils/calendar-utils.provider';\\r\\nexport * from './calendar-a11y/calendar-a11y.provider';\\r\\nexport * from './calendar-a11y/calendar-a11y.interface';\\r\\nexport * from './calendar-date-formatter/calendar-date-formatter.interface';\\r\\nexport * from './calendar-event-times-changed-event/calendar-event-times-changed-event.interface';\\r\\nexport * from '../date-adapters/date-adapter';\\r\\nexport * from './calendar-view/calendar-view.enum';\\r\\n\\r\\n// needed for ivy, not part of the public api\\r\\nexport { CalendarEventActionsComponent as ɵCalendarEventActionsComponent } from './calendar-event-actions/calendar-event-actions.component';\\r\\nexport { CalendarEventTitleComponent as ɵCalendarEventTitleComponent } from './calendar-event-title/calendar-event-title.component';\\r\\nexport {\\r\\n  CalendarTooltipDirective as ɵCalendarTooltipDirective,\\r\\n  CalendarTooltipWindowComponent as ɵCalendarTooltipWindowComponent,\\r\\n} from './calendar-tooltip/calendar-tooltip.directive';\\r\\nexport { CalendarPreviousViewDirective as ɵCalendarPreviousViewDirective } from './calendar-previous-view/calendar-previous-view.directive';\\r\\nexport { CalendarNextViewDirective as ɵCalendarNextViewDirective } from './calendar-next-view/calendar-next-view.directive';\\r\\nexport { CalendarTodayDirective as ɵCalendarTodayDirective } from './calendar-today/calendar-today.directive';\\r\\nexport { CalendarDatePipe as ɵCalendarDatePipe } from './calendar-date/calendar-date.pipe';\\r\\nexport { CalendarEventTitlePipe as ɵCalendarEventTitlePipe } from './calendar-event-title/calendar-event-title.pipe';\\r\\nexport { ClickDirective as ɵClickDirective } from './click/click.directive';\\r\\nexport { KeydownEnterDirective as ɵKeydownEnterDirective } from './keydown-enter/keydown-enter.directive';\\r\\nexport { CalendarA11yPipe as ɵCalendarA11yPipe } from './calendar-a11y/calendar-a11y.pipe';\\r\\n\\r\\nexport {\\r\\n  CalendarEvent,\\r\\n  EventAction as CalendarEventAction,\\r\\n  DAYS_OF_WEEK,\\r\\n  ViewPeriod as CalendarViewPeriod,\\r\\n} from 'calendar-utils';\\r\\n\\r\\n/**\\r\\n * Import this module to if you're just using a singular view and want to save on bundle size. Example usage:\\r\\n *\\r\\n * ```typescript\\r\\n * import { CalendarCommonModule, CalendarMonthModule } from 'angular-calendar';\\r\\n *\\r\\n * @NgModule({\\r\\n *   imports: [\\r\\n *     CalendarCommonModule.forRoot(),\\r\\n *     CalendarMonthModule\\r\\n *   ]\\r\\n * })\\r\\n * class MyModule {}\\r\\n * ```\\r\\n *\\r\\n */\\r\\n@NgModule({\\r\\n  declarations: [\\r\\n    CalendarEventActionsComponent,\\r\\n    CalendarEventTitleComponent,\\r\\n    CalendarTooltipWindowComponent,\\r\\n    CalendarTooltipDirective,\\r\\n    CalendarPreviousViewDirective,\\r\\n    CalendarNextViewDirective,\\r\\n    CalendarTodayDirective,\\r\\n    CalendarDatePipe,\\r\\n    CalendarEventTitlePipe,\\r\\n    CalendarA11yPipe,\\r\\n    ClickDirective,\\r\\n    KeydownEnterDirective,\\r\\n  ],\\r\\n  imports: [CommonModule],\\r\\n  exports: [\\r\\n    CalendarEventActionsComponent,\\r\\n    CalendarEventTitleComponent,\\r\\n    CalendarTooltipWindowComponent,\\r\\n    CalendarTooltipDirective,\\r\\n    CalendarPreviousViewDirective,\\r\\n    CalendarNextViewDirective,\\r\\n    CalendarTodayDirective,\\r\\n    CalendarDatePipe,\\r\\n    CalendarEventTitlePipe,\\r\\n    CalendarA11yPipe,\\r\\n    ClickDirective,\\r\\n    KeydownEnterDirective,\\r\\n  ],\\r\\n  providers: [I18nPluralPipe],\\r\\n})\\r\\nexport class CalendarCommonModule {\\r\\n  static forRoot(\\r\\n    dateAdapter: Provider,\\r\\n    config: CalendarModuleConfig = {}\\r\\n  ): ModuleWithProviders<CalendarCommonModule> {\\r\\n    return {\\r\\n      ngModule: CalendarCommonModule,\\r\\n      providers: [\\r\\n        dateAdapter,\\r\\n        config.eventTitleFormatter || CalendarEventTitleFormatter,\\r\\n        config.dateFormatter || CalendarDateFormatter,\\r\\n        config.utils || CalendarUtils,\\r\\n        config.a11y || CalendarA11y,\\r\\n      ],\\r\\n    };\\r\\n  }\\r\\n}\\r\\n\",\"import { isInsideLeftAndRight, isWithinThreshold } from '../util/util';\\r\\nimport { ValidateDragParams } from 'angular-draggable-droppable';\\r\\n\\r\\nexport class CalendarDragHelper {\\r\\n  private readonly startPosition: ClientRect;\\r\\n\\r\\n  constructor(\\r\\n    private dragContainerElement: HTMLElement,\\r\\n    draggableElement: HTMLElement\\r\\n  ) {\\r\\n    this.startPosition = draggableElement.getBoundingClientRect();\\r\\n  }\\r\\n\\r\\n  validateDrag({\\r\\n    x,\\r\\n    y,\\r\\n    snapDraggedEvents,\\r\\n    dragAlreadyMoved,\\r\\n    transform,\\r\\n  }: {\\r\\n    x: number;\\r\\n    y: number;\\r\\n    snapDraggedEvents: boolean;\\r\\n    dragAlreadyMoved: boolean;\\r\\n    transform: ValidateDragParams['transform'];\\r\\n  }): boolean {\\r\\n    const isDraggedWithinThreshold =\\r\\n      isWithinThreshold({ x, y }) || dragAlreadyMoved;\\r\\n\\r\\n    if (snapDraggedEvents) {\\r\\n      const inner: ClientRect = Object.assign({}, this.startPosition, {\\r\\n        left: this.startPosition.left + transform.x,\\r\\n        right: this.startPosition.right + transform.x,\\r\\n        top: this.startPosition.top + transform.y,\\r\\n        bottom: this.startPosition.bottom + transform.y,\\r\\n      });\\r\\n\\r\\n      if (isDraggedWithinThreshold) {\\r\\n        const outer = this.dragContainerElement.getBoundingClientRect();\\r\\n\\r\\n        const isTopInside = outer.top < inner.top && inner.top < outer.bottom;\\r\\n\\r\\n        const isBottomInside =\\r\\n          outer.top < inner.bottom && inner.bottom < outer.bottom;\\r\\n\\r\\n        return (\\r\\n          isInsideLeftAndRight(outer, inner) && (isTopInside || isBottomInside)\\r\\n        );\\r\\n      }\\r\\n\\r\\n      /* istanbul ignore next */\\r\\n      return false;\\r\\n    } else {\\r\\n      return isDraggedWithinThreshold;\\r\\n    }\\r\\n  }\\r\\n}\\r\\n\",\"import { isInside } from '../util/util';\\r\\n\\r\\nexport class CalendarResizeHelper {\\r\\n  constructor(\\r\\n    private resizeContainerElement: HTMLElement,\\r\\n    private minWidth: number,\\r\\n    private rtl: boolean\\r\\n  ) {}\\r\\n\\r\\n  validateResize({ rectangle, edges }): boolean {\\r\\n    if (this.rtl) {\\r\\n      // TODO - find a way of testing this, for some reason the tests always fail but it does actually work\\r\\n      /* istanbul ignore next */\\r\\n      if (typeof edges.left !== 'undefined') {\\r\\n        rectangle.left -= edges.left;\\r\\n        rectangle.right += edges.left;\\r\\n      } else if (typeof edges.right !== 'undefined') {\\r\\n        rectangle.left += edges.right;\\r\\n        rectangle.right -= edges.right;\\r\\n      }\\r\\n      rectangle.width = rectangle.right - rectangle.left;\\r\\n    }\\r\\n\\r\\n    if (\\r\\n      this.minWidth &&\\r\\n      Math.ceil(rectangle.width) < Math.ceil(this.minWidth)\\r\\n    ) {\\r\\n      return false;\\r\\n    }\\r\\n\\r\\n    return isInside(\\r\\n      this.resizeContainerElement.getBoundingClientRect(),\\r\\n      rectangle\\r\\n    );\\r\\n  }\\r\\n}\\r\\n\",\"import {\\r\\n  Component,\\r\\n  Input,\\r\\n  Output,\\r\\n  EventEmitter,\\r\\n  TemplateRef,\\r\\n} from '@angular/core';\\r\\nimport { CalendarEvent, WeekDay } from 'calendar-utils';\\r\\nimport { trackByWeekDayHeaderDate } from '../../../common/util/util';\\r\\n\\r\\n@Component({\\r\\n  selector: 'mwl-calendar-week-view-header',\\r\\n  template: `\\r\\n    <ng-template\\r\\n      #defaultTemplate\\r\\n      let-days=\\\"days\\\"\\r\\n      let-locale=\\\"locale\\\"\\r\\n      let-dayHeaderClicked=\\\"dayHeaderClicked\\\"\\r\\n      let-eventDropped=\\\"eventDropped\\\"\\r\\n      let-trackByWeekDayHeaderDate=\\\"trackByWeekDayHeaderDate\\\"\\r\\n      let-dragEnter=\\\"dragEnter\\\"\\r\\n    >\\r\\n      <div class=\\\"cal-day-headers\\\" role=\\\"row\\\">\\r\\n        <div\\r\\n          class=\\\"cal-header\\\"\\r\\n          *ngFor=\\\"let day of days; trackBy: trackByWeekDayHeaderDate\\\"\\r\\n          [class.cal-past]=\\\"day.isPast\\\"\\r\\n          [class.cal-today]=\\\"day.isToday\\\"\\r\\n          [class.cal-future]=\\\"day.isFuture\\\"\\r\\n          [class.cal-weekend]=\\\"day.isWeekend\\\"\\r\\n          [ngClass]=\\\"day.cssClass\\\"\\r\\n          (mwlClick)=\\\"dayHeaderClicked.emit({ day: day, sourceEvent: $event })\\\"\\r\\n          mwlDroppable\\r\\n          dragOverClass=\\\"cal-drag-over\\\"\\r\\n          (drop)=\\\"\\r\\n            eventDropped.emit({\\r\\n              event: $event.dropData.event,\\r\\n              newStart: day.date\\r\\n            })\\r\\n          \\\"\\r\\n          (dragEnter)=\\\"dragEnter.emit({ date: day.date })\\\"\\r\\n          tabindex=\\\"0\\\"\\r\\n          role=\\\"columnheader\\\"\\r\\n        >\\r\\n          <b>{{ day.date | calendarDate : 'weekViewColumnHeader' : locale }}</b\\r\\n          ><br />\\r\\n          <span>{{\\r\\n            day.date | calendarDate : 'weekViewColumnSubHeader' : locale\\r\\n          }}</span>\\r\\n        </div>\\r\\n      </div>\\r\\n    </ng-template>\\r\\n    <ng-template\\r\\n      [ngTemplateOutlet]=\\\"customTemplate || defaultTemplate\\\"\\r\\n      [ngTemplateOutletContext]=\\\"{\\r\\n        days: days,\\r\\n        locale: locale,\\r\\n        dayHeaderClicked: dayHeaderClicked,\\r\\n        eventDropped: eventDropped,\\r\\n        dragEnter: dragEnter,\\r\\n        trackByWeekDayHeaderDate: trackByWeekDayHeaderDate\\r\\n      }\\\"\\r\\n    >\\r\\n    </ng-template>\\r\\n  `,\\r\\n})\\r\\nexport class CalendarWeekViewHeaderComponent {\\r\\n  @Input() days: WeekDay[];\\r\\n\\r\\n  @Input() locale: string;\\r\\n\\r\\n  @Input() customTemplate: TemplateRef<any>;\\r\\n\\r\\n  @Output() dayHeaderClicked = new EventEmitter<{\\r\\n    day: WeekDay;\\r\\n    sourceEvent: MouseEvent;\\r\\n  }>();\\r\\n\\r\\n  @Output() eventDropped = new EventEmitter<{\\r\\n    event: CalendarEvent;\\r\\n    newStart: Date;\\r\\n  }>();\\r\\n\\r\\n  @Output() dragEnter = new EventEmitter<{ date: Date }>();\\r\\n\\r\\n  trackByWeekDayHeaderDate = trackByWeekDayHeaderDate;\\r\\n}\\r\\n\",\"import {\\r\\n  Component,\\r\\n  Input,\\r\\n  Output,\\r\\n  EventEmitter,\\r\\n  TemplateRef,\\r\\n} from '@angular/core';\\r\\nimport {\\r\\n  WeekViewAllDayEvent,\\r\\n  WeekViewTimeEvent,\\r\\n  WeekViewHourColumn,\\r\\n} from 'calendar-utils';\\r\\nimport { PlacementArray } from 'positioning';\\r\\n\\r\\n@Component({\\r\\n  selector: 'mwl-calendar-week-view-event',\\r\\n  template: `\\r\\n    <ng-template\\r\\n      #defaultTemplate\\r\\n      let-weekEvent=\\\"weekEvent\\\"\\r\\n      let-tooltipPlacement=\\\"tooltipPlacement\\\"\\r\\n      let-eventClicked=\\\"eventClicked\\\"\\r\\n      let-tooltipTemplate=\\\"tooltipTemplate\\\"\\r\\n      let-tooltipAppendToBody=\\\"tooltipAppendToBody\\\"\\r\\n      let-tooltipDisabled=\\\"tooltipDisabled\\\"\\r\\n      let-tooltipDelay=\\\"tooltipDelay\\\"\\r\\n      let-column=\\\"column\\\"\\r\\n      let-daysInWeek=\\\"daysInWeek\\\"\\r\\n    >\\r\\n      <div\\r\\n        class=\\\"cal-event\\\"\\r\\n        [ngStyle]=\\\"{\\r\\n          color: weekEvent.event.color?.secondaryText,\\r\\n          backgroundColor: weekEvent.event.color?.secondary,\\r\\n          borderColor: weekEvent.event.color?.primary\\r\\n        }\\\"\\r\\n        [mwlCalendarTooltip]=\\\"\\r\\n          !tooltipDisabled\\r\\n            ? (weekEvent.event.title\\r\\n              | calendarEventTitle\\r\\n                : (daysInWeek === 1 ? 'dayTooltip' : 'weekTooltip')\\r\\n                : weekEvent.tempEvent || weekEvent.event)\\r\\n            : ''\\r\\n        \\\"\\r\\n        [tooltipPlacement]=\\\"tooltipPlacement\\\"\\r\\n        [tooltipEvent]=\\\"weekEvent.tempEvent || weekEvent.event\\\"\\r\\n        [tooltipTemplate]=\\\"tooltipTemplate\\\"\\r\\n        [tooltipAppendToBody]=\\\"tooltipAppendToBody\\\"\\r\\n        [tooltipDelay]=\\\"tooltipDelay\\\"\\r\\n        (mwlClick)=\\\"eventClicked.emit({ sourceEvent: $event })\\\"\\r\\n        (mwlKeydownEnter)=\\\"eventClicked.emit({ sourceEvent: $event })\\\"\\r\\n        tabindex=\\\"0\\\"\\r\\n        role=\\\"application\\\"\\r\\n        [attr.aria-label]=\\\"\\r\\n          { event: weekEvent.tempEvent || weekEvent.event, locale: locale }\\r\\n            | calendarA11y : 'eventDescription'\\r\\n        \\\"\\r\\n      >\\r\\n        <mwl-calendar-event-actions\\r\\n          [event]=\\\"weekEvent.tempEvent || weekEvent.event\\\"\\r\\n          [customTemplate]=\\\"eventActionsTemplate\\\"\\r\\n        >\\r\\n        </mwl-calendar-event-actions>\\r\\n        &ngsp;\\r\\n        <mwl-calendar-event-title\\r\\n          [event]=\\\"weekEvent.tempEvent || weekEvent.event\\\"\\r\\n          [customTemplate]=\\\"eventTitleTemplate\\\"\\r\\n          [view]=\\\"daysInWeek === 1 ? 'day' : 'week'\\\"\\r\\n        >\\r\\n        </mwl-calendar-event-title>\\r\\n      </div>\\r\\n    </ng-template>\\r\\n    <ng-template\\r\\n      [ngTemplateOutlet]=\\\"customTemplate || defaultTemplate\\\"\\r\\n      [ngTemplateOutletContext]=\\\"{\\r\\n        weekEvent: weekEvent,\\r\\n        tooltipPlacement: tooltipPlacement,\\r\\n        eventClicked: eventClicked,\\r\\n        tooltipTemplate: tooltipTemplate,\\r\\n        tooltipAppendToBody: tooltipAppendToBody,\\r\\n        tooltipDisabled: tooltipDisabled,\\r\\n        tooltipDelay: tooltipDelay,\\r\\n        column: column,\\r\\n        daysInWeek: daysInWeek\\r\\n      }\\\"\\r\\n    >\\r\\n    </ng-template>\\r\\n  `,\\r\\n})\\r\\nexport class CalendarWeekViewEventComponent {\\r\\n  @Input() locale: string;\\r\\n\\r\\n  @Input() weekEvent: WeekViewAllDayEvent | WeekViewTimeEvent;\\r\\n\\r\\n  @Input() tooltipPlacement: PlacementArray;\\r\\n\\r\\n  @Input() tooltipAppendToBody: boolean;\\r\\n\\r\\n  @Input() tooltipDisabled: boolean;\\r\\n\\r\\n  @Input() tooltipDelay: number | null;\\r\\n\\r\\n  @Input() customTemplate: TemplateRef<any>;\\r\\n\\r\\n  @Input() eventTitleTemplate: TemplateRef<any>;\\r\\n\\r\\n  @Input() eventActionsTemplate: TemplateRef<any>;\\r\\n\\r\\n  @Input() tooltipTemplate: TemplateRef<any>;\\r\\n\\r\\n  @Input() column: WeekViewHourColumn;\\r\\n\\r\\n  @Input() daysInWeek: number;\\r\\n\\r\\n  @Output() eventClicked = new EventEmitter<{\\r\\n    sourceEvent: MouseEvent | KeyboardEvent;\\r\\n  }>();\\r\\n}\\r\\n\",\"import { Component, Input, TemplateRef } from '@angular/core';\\r\\nimport { WeekViewHourSegment } from 'calendar-utils';\\r\\n\\r\\n@Component({\\r\\n  selector: 'mwl-calendar-week-view-hour-segment',\\r\\n  template: `\\r\\n    <ng-template\\r\\n      #defaultTemplate\\r\\n      let-segment=\\\"segment\\\"\\r\\n      let-locale=\\\"locale\\\"\\r\\n      let-segmentHeight=\\\"segmentHeight\\\"\\r\\n      let-isTimeLabel=\\\"isTimeLabel\\\"\\r\\n      let-daysInWeek=\\\"daysInWeek\\\"\\r\\n    >\\r\\n      <div\\r\\n        [attr.aria-hidden]=\\\"\\r\\n          {}\\r\\n            | calendarA11y\\r\\n              : (daysInWeek === 1\\r\\n                  ? 'hideDayHourSegment'\\r\\n                  : 'hideWeekHourSegment')\\r\\n        \\\"\\r\\n        class=\\\"cal-hour-segment\\\"\\r\\n        [style.height.px]=\\\"segmentHeight\\\"\\r\\n        [class.cal-hour-start]=\\\"segment.isStart\\\"\\r\\n        [class.cal-after-hour-start]=\\\"!segment.isStart\\\"\\r\\n        [ngClass]=\\\"segment.cssClass\\\"\\r\\n      >\\r\\n        <div class=\\\"cal-time\\\" *ngIf=\\\"isTimeLabel\\\">\\r\\n          {{\\r\\n            segment.displayDate\\r\\n              | calendarDate\\r\\n                : (daysInWeek === 1 ? 'dayViewHour' : 'weekViewHour')\\r\\n                : locale\\r\\n          }}\\r\\n        </div>\\r\\n      </div>\\r\\n    </ng-template>\\r\\n    <ng-template\\r\\n      [ngTemplateOutlet]=\\\"customTemplate || defaultTemplate\\\"\\r\\n      [ngTemplateOutletContext]=\\\"{\\r\\n        segment: segment,\\r\\n        locale: locale,\\r\\n        segmentHeight: segmentHeight,\\r\\n        isTimeLabel: isTimeLabel,\\r\\n        daysInWeek: daysInWeek\\r\\n      }\\\"\\r\\n    >\\r\\n    </ng-template>\\r\\n  `,\\r\\n})\\r\\nexport class CalendarWeekViewHourSegmentComponent {\\r\\n  @Input() segment: WeekViewHourSegment;\\r\\n\\r\\n  @Input() segmentHeight: number;\\r\\n\\r\\n  @Input() locale: string;\\r\\n\\r\\n  @Input() isTimeLabel: boolean;\\r\\n\\r\\n  @Input() daysInWeek: number;\\r\\n\\r\\n  @Input() customTemplate: TemplateRef<any>;\\r\\n}\\r\\n\",\"import {\\r\\n  Component,\\r\\n  Input,\\r\\n  NgZone,\\r\\n  OnChanges,\\r\\n  SimpleChanges,\\r\\n  TemplateRef,\\r\\n} from '@angular/core';\\r\\nimport { BehaviorSubject, interval, Observable } from 'rxjs';\\r\\nimport { switchMapTo, startWith, map, switchMap } from 'rxjs/operators';\\r\\nimport { DateAdapter } from '../../../date-adapters/date-adapter';\\r\\n\\r\\n@Component({\\r\\n  selector: 'mwl-calendar-week-view-current-time-marker',\\r\\n  template: `\\r\\n    <ng-template\\r\\n      #defaultTemplate\\r\\n      let-columnDate=\\\"columnDate\\\"\\r\\n      let-dayStartHour=\\\"dayStartHour\\\"\\r\\n      let-dayStartMinute=\\\"dayStartMinute\\\"\\r\\n      let-dayEndHour=\\\"dayEndHour\\\"\\r\\n      let-dayEndMinute=\\\"dayEndMinute\\\"\\r\\n      let-isVisible=\\\"isVisible\\\"\\r\\n      let-topPx=\\\"topPx\\\"\\r\\n    >\\r\\n      <div\\r\\n        class=\\\"cal-current-time-marker\\\"\\r\\n        *ngIf=\\\"isVisible\\\"\\r\\n        [style.top.px]=\\\"topPx\\\"\\r\\n      ></div>\\r\\n    </ng-template>\\r\\n    <ng-template\\r\\n      [ngTemplateOutlet]=\\\"customTemplate || defaultTemplate\\\"\\r\\n      [ngTemplateOutletContext]=\\\"{\\r\\n        columnDate: columnDate,\\r\\n        dayStartHour: dayStartHour,\\r\\n        dayStartMinute: dayStartMinute,\\r\\n        dayEndHour: dayEndHour,\\r\\n        dayEndMinute: dayEndMinute,\\r\\n        isVisible: (marker$ | async)?.isVisible,\\r\\n        topPx: (marker$ | async)?.top\\r\\n      }\\\"\\r\\n    >\\r\\n    </ng-template>\\r\\n  `,\\r\\n})\\r\\nexport class CalendarWeekViewCurrentTimeMarkerComponent implements OnChanges {\\r\\n  @Input() columnDate: Date;\\r\\n\\r\\n  @Input() dayStartHour: number;\\r\\n\\r\\n  @Input() dayStartMinute: number;\\r\\n\\r\\n  @Input() dayEndHour: number;\\r\\n\\r\\n  @Input() dayEndMinute: number;\\r\\n\\r\\n  @Input() hourSegments: number;\\r\\n\\r\\n  @Input() hourDuration: number;\\r\\n\\r\\n  @Input() hourSegmentHeight: number;\\r\\n\\r\\n  @Input() customTemplate: TemplateRef<any>;\\r\\n\\r\\n  columnDate$ = new BehaviorSubject<Date>(undefined);\\r\\n\\r\\n  marker$: Observable<{\\r\\n    isVisible: boolean;\\r\\n    top: number;\\r\\n  }> = this.zone.onStable.pipe(\\r\\n    switchMap(() => interval(60 * 1000)),\\r\\n    startWith(0),\\r\\n    switchMapTo(this.columnDate$),\\r\\n    map((columnDate) => {\\r\\n      const startOfDay = this.dateAdapter.setMinutes(\\r\\n        this.dateAdapter.setHours(columnDate, this.dayStartHour),\\r\\n        this.dayStartMinute\\r\\n      );\\r\\n      const endOfDay = this.dateAdapter.setMinutes(\\r\\n        this.dateAdapter.setHours(columnDate, this.dayEndHour),\\r\\n        this.dayEndMinute\\r\\n      );\\r\\n      const hourHeightModifier =\\r\\n        (this.hourSegments * this.hourSegmentHeight) /\\r\\n        (this.hourDuration || 60);\\r\\n      const now = new Date();\\r\\n      return {\\r\\n        isVisible:\\r\\n          this.dateAdapter.isSameDay(columnDate, now) &&\\r\\n          now >= startOfDay &&\\r\\n          now <= endOfDay,\\r\\n        top:\\r\\n          this.dateAdapter.differenceInMinutes(now, startOfDay) *\\r\\n          hourHeightModifier,\\r\\n      };\\r\\n    })\\r\\n  );\\r\\n\\r\\n  constructor(private dateAdapter: DateAdapter, private zone: NgZone) {}\\r\\n\\r\\n  ngOnChanges(changes: SimpleChanges) {\\r\\n    if (changes.columnDate) {\\r\\n      this.columnDate$.next(changes.columnDate.currentValue);\\r\\n    }\\r\\n  }\\r\\n}\\r\\n\",\"import {\\r\\n  Component,\\r\\n  Input,\\r\\n  Output,\\r\\n  EventEmitter,\\r\\n  ChangeDetectorRef,\\r\\n  OnChanges,\\r\\n  OnInit,\\r\\n  OnDestroy,\\r\\n  LOCALE_ID,\\r\\n  Inject,\\r\\n  TemplateRef,\\r\\n  ElementRef,\\r\\n  AfterViewInit,\\r\\n} from '@angular/core';\\r\\nimport { Subject, Subscription } from 'rxjs';\\r\\nimport {\\r\\n  WeekDay,\\r\\n  CalendarEvent,\\r\\n  WeekViewAllDayEvent,\\r\\n  WeekView,\\r\\n  ViewPeriod,\\r\\n  WeekViewHourColumn,\\r\\n  WeekViewTimeEvent,\\r\\n  WeekViewHourSegment,\\r\\n  WeekViewHour,\\r\\n  WeekViewAllDayEventRow,\\r\\n} from 'calendar-utils';\\r\\nimport { ResizeEvent } from 'angular-resizable-element';\\r\\nimport { ResizeCursors } from 'angular-resizable-element';\\r\\nimport { CalendarDragHelper } from '../../common/calendar-drag-helper/calendar-drag-helper.provider';\\r\\nimport { CalendarResizeHelper } from '../../common/calendar-resize-helper/calendar-resize-helper.provider';\\r\\nimport {\\r\\n  CalendarEventTimesChangedEvent,\\r\\n  CalendarEventTimesChangedEventType,\\r\\n} from '../../common/calendar-event-times-changed-event/calendar-event-times-changed-event.interface';\\r\\nimport { CalendarUtils } from '../../common/calendar-utils/calendar-utils.provider';\\r\\nimport {\\r\\n  validateEvents,\\r\\n  roundToNearest,\\r\\n  trackByWeekDayHeaderDate,\\r\\n  trackByHourSegment,\\r\\n  trackByHour,\\r\\n  getMinutesMoved,\\r\\n  getDefaultEventEnd,\\r\\n  addDaysWithExclusions,\\r\\n  isDraggedWithinPeriod,\\r\\n  shouldFireDroppedEvent,\\r\\n  getWeekViewPeriod,\\r\\n  trackByWeekAllDayEvent,\\r\\n  trackByWeekTimeEvent,\\r\\n} from '../../common/util/util';\\r\\nimport { DateAdapter } from '../../date-adapters/date-adapter';\\r\\nimport {\\r\\n  DragEndEvent,\\r\\n  DropEvent,\\r\\n  DragMoveEvent,\\r\\n  ValidateDrag,\\r\\n} from 'angular-draggable-droppable';\\r\\nimport { PlacementArray } from 'positioning';\\r\\n\\r\\nexport interface WeekViewAllDayEventResize {\\r\\n  originalOffset: number;\\r\\n  originalSpan: number;\\r\\n  edge: string;\\r\\n}\\r\\n\\r\\nexport interface CalendarWeekViewBeforeRenderEvent extends WeekView {\\r\\n  header: WeekDay[];\\r\\n}\\r\\n\\r\\n/**\\r\\n * Shows all events on a given week. Example usage:\\r\\n *\\r\\n * ```typescript\\r\\n * <mwl-calendar-week-view\\r\\n *  [viewDate]=\\\"viewDate\\\"\\r\\n *  [events]=\\\"events\\\">\\r\\n * </mwl-calendar-week-view>\\r\\n * ```\\r\\n */\\r\\n@Component({\\r\\n  selector: 'mwl-calendar-week-view',\\r\\n  template: `\\r\\n    <div class=\\\"cal-week-view\\\" role=\\\"grid\\\">\\r\\n      <mwl-calendar-week-view-header\\r\\n        [days]=\\\"days\\\"\\r\\n        [locale]=\\\"locale\\\"\\r\\n        [customTemplate]=\\\"headerTemplate\\\"\\r\\n        (dayHeaderClicked)=\\\"dayHeaderClicked.emit($event)\\\"\\r\\n        (eventDropped)=\\\"\\r\\n          eventDropped({ dropData: $event }, $event.newStart, true)\\r\\n        \\\"\\r\\n        (dragEnter)=\\\"dateDragEnter($event.date)\\\"\\r\\n      >\\r\\n      </mwl-calendar-week-view-header>\\r\\n      <div\\r\\n        class=\\\"cal-all-day-events\\\"\\r\\n        #allDayEventsContainer\\r\\n        *ngIf=\\\"view.allDayEventRows.length > 0\\\"\\r\\n        mwlDroppable\\r\\n        (dragEnter)=\\\"dragEnter('allDay')\\\"\\r\\n        (dragLeave)=\\\"dragLeave('allDay')\\\"\\r\\n      >\\r\\n        <div class=\\\"cal-day-columns\\\">\\r\\n          <div\\r\\n            class=\\\"cal-time-label-column\\\"\\r\\n            [ngTemplateOutlet]=\\\"allDayEventsLabelTemplate\\\"\\r\\n          ></div>\\r\\n          <div\\r\\n            class=\\\"cal-day-column\\\"\\r\\n            *ngFor=\\\"let day of days; trackBy: trackByWeekDayHeaderDate\\\"\\r\\n            mwlDroppable\\r\\n            dragOverClass=\\\"cal-drag-over\\\"\\r\\n            (drop)=\\\"eventDropped($event, day.date, true)\\\"\\r\\n            (dragEnter)=\\\"dateDragEnter(day.date)\\\"\\r\\n          ></div>\\r\\n        </div>\\r\\n        <div\\r\\n          *ngFor=\\\"let eventRow of view.allDayEventRows; trackBy: trackById\\\"\\r\\n          #eventRowContainer\\r\\n          class=\\\"cal-events-row\\\"\\r\\n        >\\r\\n          <div\\r\\n            *ngFor=\\\"\\r\\n              let allDayEvent of eventRow.row;\\r\\n              trackBy: trackByWeekAllDayEvent\\r\\n            \\\"\\r\\n            #event\\r\\n            class=\\\"cal-event-container\\\"\\r\\n            [class.cal-draggable]=\\\"\\r\\n              allDayEvent.event.draggable && allDayEventResizes.size === 0\\r\\n            \\\"\\r\\n            [class.cal-starts-within-week]=\\\"!allDayEvent.startsBeforeWeek\\\"\\r\\n            [class.cal-ends-within-week]=\\\"!allDayEvent.endsAfterWeek\\\"\\r\\n            [ngClass]=\\\"allDayEvent.event?.cssClass\\\"\\r\\n            [style.width.%]=\\\"(100 / days.length) * allDayEvent.span\\\"\\r\\n            [style.marginLeft.%]=\\\"\\r\\n              rtl ? null : (100 / days.length) * allDayEvent.offset\\r\\n            \\\"\\r\\n            [style.marginRight.%]=\\\"\\r\\n              rtl ? (100 / days.length) * allDayEvent.offset : null\\r\\n            \\\"\\r\\n            mwlResizable\\r\\n            [resizeCursors]=\\\"resizeCursors\\\"\\r\\n            [resizeSnapGrid]=\\\"{ left: dayColumnWidth, right: dayColumnWidth }\\\"\\r\\n            [validateResize]=\\\"validateResize\\\"\\r\\n            (resizeStart)=\\\"\\r\\n              allDayEventResizeStarted(eventRowContainer, allDayEvent, $event)\\r\\n            \\\"\\r\\n            (resizing)=\\\"\\r\\n              allDayEventResizing(allDayEvent, $event, dayColumnWidth)\\r\\n            \\\"\\r\\n            (resizeEnd)=\\\"allDayEventResizeEnded(allDayEvent)\\\"\\r\\n            mwlDraggable\\r\\n            dragActiveClass=\\\"cal-drag-active\\\"\\r\\n            [dropData]=\\\"{ event: allDayEvent.event, calendarId: calendarId }\\\"\\r\\n            [dragAxis]=\\\"{\\r\\n              x: allDayEvent.event.draggable && allDayEventResizes.size === 0,\\r\\n              y:\\r\\n                !snapDraggedEvents &&\\r\\n                allDayEvent.event.draggable &&\\r\\n                allDayEventResizes.size === 0\\r\\n            }\\\"\\r\\n            [dragSnapGrid]=\\\"snapDraggedEvents ? { x: dayColumnWidth } : {}\\\"\\r\\n            [validateDrag]=\\\"validateDrag\\\"\\r\\n            [touchStartLongPress]=\\\"{ delay: 300, delta: 30 }\\\"\\r\\n            (dragStart)=\\\"\\r\\n              dragStarted(eventRowContainer, event, allDayEvent, false)\\r\\n            \\\"\\r\\n            (dragging)=\\\"allDayEventDragMove()\\\"\\r\\n            (dragEnd)=\\\"dragEnded(allDayEvent, $event, dayColumnWidth)\\\"\\r\\n          >\\r\\n            <div\\r\\n              class=\\\"cal-resize-handle cal-resize-handle-before-start\\\"\\r\\n              *ngIf=\\\"\\r\\n                allDayEvent.event?.resizable?.beforeStart &&\\r\\n                !allDayEvent.startsBeforeWeek\\r\\n              \\\"\\r\\n              mwlResizeHandle\\r\\n              [resizeEdges]=\\\"{ left: true }\\\"\\r\\n            ></div>\\r\\n            <mwl-calendar-week-view-event\\r\\n              [locale]=\\\"locale\\\"\\r\\n              [weekEvent]=\\\"allDayEvent\\\"\\r\\n              [tooltipPlacement]=\\\"tooltipPlacement\\\"\\r\\n              [tooltipTemplate]=\\\"tooltipTemplate\\\"\\r\\n              [tooltipAppendToBody]=\\\"tooltipAppendToBody\\\"\\r\\n              [tooltipDelay]=\\\"tooltipDelay\\\"\\r\\n              [customTemplate]=\\\"eventTemplate\\\"\\r\\n              [eventTitleTemplate]=\\\"eventTitleTemplate\\\"\\r\\n              [eventActionsTemplate]=\\\"eventActionsTemplate\\\"\\r\\n              [daysInWeek]=\\\"daysInWeek\\\"\\r\\n              (eventClicked)=\\\"\\r\\n                eventClicked.emit({\\r\\n                  event: allDayEvent.event,\\r\\n                  sourceEvent: $event.sourceEvent\\r\\n                })\\r\\n              \\\"\\r\\n            >\\r\\n            </mwl-calendar-week-view-event>\\r\\n            <div\\r\\n              class=\\\"cal-resize-handle cal-resize-handle-after-end\\\"\\r\\n              *ngIf=\\\"\\r\\n                allDayEvent.event?.resizable?.afterEnd &&\\r\\n                !allDayEvent.endsAfterWeek\\r\\n              \\\"\\r\\n              mwlResizeHandle\\r\\n              [resizeEdges]=\\\"{ right: true }\\\"\\r\\n            ></div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div\\r\\n        class=\\\"cal-time-events\\\"\\r\\n        mwlDroppable\\r\\n        (dragEnter)=\\\"dragEnter('time')\\\"\\r\\n        (dragLeave)=\\\"dragLeave('time')\\\"\\r\\n      >\\r\\n        <div\\r\\n          class=\\\"cal-time-label-column\\\"\\r\\n          *ngIf=\\\"view.hourColumns.length > 0 && daysInWeek !== 1\\\"\\r\\n        >\\r\\n          <div\\r\\n            *ngFor=\\\"\\r\\n              let hour of view.hourColumns[0].hours;\\r\\n              trackBy: trackByHour;\\r\\n              let odd = odd\\r\\n            \\\"\\r\\n            class=\\\"cal-hour\\\"\\r\\n            [class.cal-hour-odd]=\\\"odd\\\"\\r\\n          >\\r\\n            <mwl-calendar-week-view-hour-segment\\r\\n              *ngFor=\\\"let segment of hour.segments; trackBy: trackByHourSegment\\\"\\r\\n              [style.height.px]=\\\"hourSegmentHeight\\\"\\r\\n              [segment]=\\\"segment\\\"\\r\\n              [segmentHeight]=\\\"hourSegmentHeight\\\"\\r\\n              [locale]=\\\"locale\\\"\\r\\n              [customTemplate]=\\\"hourSegmentTemplate\\\"\\r\\n              [isTimeLabel]=\\\"true\\\"\\r\\n              [daysInWeek]=\\\"daysInWeek\\\"\\r\\n            >\\r\\n            </mwl-calendar-week-view-hour-segment>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div\\r\\n          class=\\\"cal-day-columns\\\"\\r\\n          [class.cal-resize-active]=\\\"timeEventResizes.size > 0\\\"\\r\\n          #dayColumns\\r\\n        >\\r\\n          <div\\r\\n            class=\\\"cal-day-column\\\"\\r\\n            *ngFor=\\\"let column of view.hourColumns; trackBy: trackByHourColumn\\\"\\r\\n          >\\r\\n            <mwl-calendar-week-view-current-time-marker\\r\\n              [columnDate]=\\\"column.date\\\"\\r\\n              [dayStartHour]=\\\"dayStartHour\\\"\\r\\n              [dayStartMinute]=\\\"dayStartMinute\\\"\\r\\n              [dayEndHour]=\\\"dayEndHour\\\"\\r\\n              [dayEndMinute]=\\\"dayEndMinute\\\"\\r\\n              [hourSegments]=\\\"hourSegments\\\"\\r\\n              [hourDuration]=\\\"hourDuration\\\"\\r\\n              [hourSegmentHeight]=\\\"hourSegmentHeight\\\"\\r\\n              [customTemplate]=\\\"currentTimeMarkerTemplate\\\"\\r\\n            ></mwl-calendar-week-view-current-time-marker>\\r\\n            <div class=\\\"cal-events-container\\\">\\r\\n              <div\\r\\n                *ngFor=\\\"\\r\\n                  let timeEvent of column.events;\\r\\n                  trackBy: trackByWeekTimeEvent\\r\\n                \\\"\\r\\n                #event\\r\\n                class=\\\"cal-event-container\\\"\\r\\n                [class.cal-draggable]=\\\"\\r\\n                  timeEvent.event.draggable && timeEventResizes.size === 0\\r\\n                \\\"\\r\\n                [class.cal-starts-within-day]=\\\"!timeEvent.startsBeforeDay\\\"\\r\\n                [class.cal-ends-within-day]=\\\"!timeEvent.endsAfterDay\\\"\\r\\n                [ngClass]=\\\"timeEvent.event.cssClass\\\"\\r\\n                [hidden]=\\\"timeEvent.height === 0 && timeEvent.width === 0\\\"\\r\\n                [style.top.px]=\\\"timeEvent.top\\\"\\r\\n                [style.height.px]=\\\"timeEvent.height\\\"\\r\\n                [style.left.%]=\\\"timeEvent.left\\\"\\r\\n                [style.width.%]=\\\"timeEvent.width\\\"\\r\\n                mwlResizable\\r\\n                [resizeCursors]=\\\"resizeCursors\\\"\\r\\n                [resizeSnapGrid]=\\\"{\\r\\n                  left: dayColumnWidth,\\r\\n                  right: dayColumnWidth,\\r\\n                  top: eventSnapSize || hourSegmentHeight,\\r\\n                  bottom: eventSnapSize || hourSegmentHeight\\r\\n                }\\\"\\r\\n                [validateResize]=\\\"validateResize\\\"\\r\\n                [allowNegativeResizes]=\\\"true\\\"\\r\\n                (resizeStart)=\\\"\\r\\n                  timeEventResizeStarted(dayColumns, timeEvent, $event)\\r\\n                \\\"\\r\\n                (resizing)=\\\"timeEventResizing(timeEvent, $event)\\\"\\r\\n                (resizeEnd)=\\\"timeEventResizeEnded(timeEvent)\\\"\\r\\n                mwlDraggable\\r\\n                dragActiveClass=\\\"cal-drag-active\\\"\\r\\n                [dropData]=\\\"{ event: timeEvent.event, calendarId: calendarId }\\\"\\r\\n                [dragAxis]=\\\"{\\r\\n                  x: timeEvent.event.draggable && timeEventResizes.size === 0,\\r\\n                  y: timeEvent.event.draggable && timeEventResizes.size === 0\\r\\n                }\\\"\\r\\n                [dragSnapGrid]=\\\"\\r\\n                  snapDraggedEvents\\r\\n                    ? {\\r\\n                        x: dayColumnWidth,\\r\\n                        y: eventSnapSize || hourSegmentHeight\\r\\n                      }\\r\\n                    : {}\\r\\n                \\\"\\r\\n                [touchStartLongPress]=\\\"{ delay: 300, delta: 30 }\\\"\\r\\n                [ghostDragEnabled]=\\\"!snapDraggedEvents\\\"\\r\\n                [ghostElementTemplate]=\\\"weekEventTemplate\\\"\\r\\n                [validateDrag]=\\\"validateDrag\\\"\\r\\n                (dragStart)=\\\"dragStarted(dayColumns, event, timeEvent, true)\\\"\\r\\n                (dragging)=\\\"dragMove(timeEvent, $event)\\\"\\r\\n                (dragEnd)=\\\"dragEnded(timeEvent, $event, dayColumnWidth, true)\\\"\\r\\n              >\\r\\n                <div\\r\\n                  class=\\\"cal-resize-handle cal-resize-handle-before-start\\\"\\r\\n                  *ngIf=\\\"\\r\\n                    timeEvent.event?.resizable?.beforeStart &&\\r\\n                    !timeEvent.startsBeforeDay\\r\\n                  \\\"\\r\\n                  mwlResizeHandle\\r\\n                  [resizeEdges]=\\\"{\\r\\n                    left: true,\\r\\n                    top: true\\r\\n                  }\\\"\\r\\n                ></div>\\r\\n                <ng-template\\r\\n                  [ngTemplateOutlet]=\\\"weekEventTemplate\\\"\\r\\n                ></ng-template>\\r\\n                <ng-template #weekEventTemplate>\\r\\n                  <mwl-calendar-week-view-event\\r\\n                    [locale]=\\\"locale\\\"\\r\\n                    [weekEvent]=\\\"timeEvent\\\"\\r\\n                    [tooltipPlacement]=\\\"tooltipPlacement\\\"\\r\\n                    [tooltipTemplate]=\\\"tooltipTemplate\\\"\\r\\n                    [tooltipAppendToBody]=\\\"tooltipAppendToBody\\\"\\r\\n                    [tooltipDisabled]=\\\"dragActive || timeEventResizes.size > 0\\\"\\r\\n                    [tooltipDelay]=\\\"tooltipDelay\\\"\\r\\n                    [customTemplate]=\\\"eventTemplate\\\"\\r\\n                    [eventTitleTemplate]=\\\"eventTitleTemplate\\\"\\r\\n                    [eventActionsTemplate]=\\\"eventActionsTemplate\\\"\\r\\n                    [column]=\\\"column\\\"\\r\\n                    [daysInWeek]=\\\"daysInWeek\\\"\\r\\n                    (eventClicked)=\\\"\\r\\n                      eventClicked.emit({\\r\\n                        event: timeEvent.event,\\r\\n                        sourceEvent: $event.sourceEvent\\r\\n                      })\\r\\n                    \\\"\\r\\n                  >\\r\\n                  </mwl-calendar-week-view-event>\\r\\n                </ng-template>\\r\\n                <div\\r\\n                  class=\\\"cal-resize-handle cal-resize-handle-after-end\\\"\\r\\n                  *ngIf=\\\"\\r\\n                    timeEvent.event?.resizable?.afterEnd &&\\r\\n                    !timeEvent.endsAfterDay\\r\\n                  \\\"\\r\\n                  mwlResizeHandle\\r\\n                  [resizeEdges]=\\\"{\\r\\n                    right: true,\\r\\n                    bottom: true\\r\\n                  }\\\"\\r\\n                ></div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div\\r\\n              *ngFor=\\\"\\r\\n                let hour of column.hours;\\r\\n                trackBy: trackByHour;\\r\\n                let odd = odd\\r\\n              \\\"\\r\\n              class=\\\"cal-hour\\\"\\r\\n              [class.cal-hour-odd]=\\\"odd\\\"\\r\\n            >\\r\\n              <mwl-calendar-week-view-hour-segment\\r\\n                *ngFor=\\\"\\r\\n                  let segment of hour.segments;\\r\\n                  trackBy: trackByHourSegment\\r\\n                \\\"\\r\\n                [style.height.px]=\\\"hourSegmentHeight\\\"\\r\\n                [segment]=\\\"segment\\\"\\r\\n                [segmentHeight]=\\\"hourSegmentHeight\\\"\\r\\n                [locale]=\\\"locale\\\"\\r\\n                [customTemplate]=\\\"hourSegmentTemplate\\\"\\r\\n                [daysInWeek]=\\\"daysInWeek\\\"\\r\\n                (mwlClick)=\\\"\\r\\n                  hourSegmentClicked.emit({\\r\\n                    date: segment.date,\\r\\n                    sourceEvent: $event\\r\\n                  })\\r\\n                \\\"\\r\\n                [clickListenerDisabled]=\\\"\\r\\n                  hourSegmentClicked.observers.length === 0\\r\\n                \\\"\\r\\n                mwlDroppable\\r\\n                [dragOverClass]=\\\"\\r\\n                  !dragActive || !snapDraggedEvents ? 'cal-drag-over' : null\\r\\n                \\\"\\r\\n                dragActiveClass=\\\"cal-drag-active\\\"\\r\\n                (drop)=\\\"eventDropped($event, segment.date, false)\\\"\\r\\n                (dragEnter)=\\\"dateDragEnter(segment.date)\\\"\\r\\n                [isTimeLabel]=\\\"daysInWeek === 1\\\"\\r\\n              >\\r\\n              </mwl-calendar-week-view-hour-segment>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  `,\\r\\n})\\r\\nexport class CalendarWeekViewComponent\\r\\n  implements OnChanges, OnInit, OnDestroy, AfterViewInit\\r\\n{\\r\\n  /**\\r\\n   * The current view date\\r\\n   */\\r\\n  @Input() viewDate: Date;\\r\\n\\r\\n  /**\\r\\n   * An array of events to display on view\\r\\n   * The schema is available here: https://github.com/mattlewis92/calendar-utils/blob/c51689985f59a271940e30bc4e2c4e1fee3fcb5c/src/calendarUtils.ts#L49-L63\\r\\n   */\\r\\n  @Input() events: CalendarEvent[] = [];\\r\\n\\r\\n  /**\\r\\n   * An array of day indexes (0 = sunday, 1 = monday etc) that will be hidden on the view\\r\\n   */\\r\\n  @Input() excludeDays: number[] = [];\\r\\n\\r\\n  /**\\r\\n   * An observable that when emitted on will re-render the current view\\r\\n   */\\r\\n  @Input() refresh: Subject<any>;\\r\\n\\r\\n  /**\\r\\n   * The locale used to format dates\\r\\n   */\\r\\n  @Input() locale: string;\\r\\n\\r\\n  /**\\r\\n   * The placement of the event tooltip\\r\\n   */\\r\\n  @Input() tooltipPlacement: PlacementArray = 'auto';\\r\\n\\r\\n  /**\\r\\n   * A custom template to use for the event tooltips\\r\\n   */\\r\\n  @Input() tooltipTemplate: TemplateRef<any>;\\r\\n\\r\\n  /**\\r\\n   * Whether to append tooltips to the body or next to the trigger element\\r\\n   */\\r\\n  @Input() tooltipAppendToBody: boolean = true;\\r\\n\\r\\n  /**\\r\\n   * The delay in milliseconds before the tooltip should be displayed. If not provided the tooltip\\r\\n   * will be displayed immediately.\\r\\n   */\\r\\n  @Input() tooltipDelay: number | null = null;\\r\\n\\r\\n  /**\\r\\n   * The start number of the week.\\r\\n   * This is ignored when the `daysInWeek` input is also set as the `viewDate` will be used as the start of the week instead.\\r\\n   * Note, you should also pass this to the calendar title pipe so it shows the same days: {{ viewDate | calendarDate:(view + 'ViewTitle'):locale:weekStartsOn }}\\r\\n   * If using the moment date adapter this option won't do anything and you'll need to set it globally like so:\\r\\n   * ```\\r\\n   * moment.updateLocale('en', {\\r\\n   *   week: {\\r\\n   *     dow: 1, // set start of week to monday instead\\r\\n   *     doy: 0,\\r\\n   *   },\\r\\n   * });\\r\\n   * ```\\r\\n   */\\r\\n  @Input() weekStartsOn: number;\\r\\n\\r\\n  /**\\r\\n   * A custom template to use to replace the header\\r\\n   */\\r\\n  @Input() headerTemplate: TemplateRef<any>;\\r\\n\\r\\n  /**\\r\\n   * A custom template to use for week view events\\r\\n   */\\r\\n  @Input() eventTemplate: TemplateRef<any>;\\r\\n\\r\\n  /**\\r\\n   * A custom template to use for event titles\\r\\n   */\\r\\n  @Input() eventTitleTemplate: TemplateRef<any>;\\r\\n\\r\\n  /**\\r\\n   * A custom template to use for event actions\\r\\n   */\\r\\n  @Input() eventActionsTemplate: TemplateRef<any>;\\r\\n\\r\\n  /**\\r\\n   * The precision to display events.\\r\\n   * `days` will round event start and end dates to the nearest day and `minutes` will not do this rounding\\r\\n   */\\r\\n  @Input() precision: 'days' | 'minutes' = 'days';\\r\\n\\r\\n  /**\\r\\n   * An array of day indexes (0 = sunday, 1 = monday etc) that indicate which days are weekends\\r\\n   */\\r\\n  @Input() weekendDays: number[];\\r\\n\\r\\n  /**\\r\\n   * Whether to snap events to a grid when dragging\\r\\n   */\\r\\n  @Input() snapDraggedEvents: boolean = true;\\r\\n\\r\\n  /**\\r\\n   * The number of segments in an hour. Must divide equally into 60.\\r\\n   */\\r\\n  @Input() hourSegments: number = 2;\\r\\n\\r\\n  /**\\r\\n   * The duration of each segment group in minutes\\r\\n   */\\r\\n  @Input() hourDuration: number;\\r\\n\\r\\n  /**\\r\\n   * The height in pixels of each hour segment\\r\\n   */\\r\\n  @Input() hourSegmentHeight: number = 30;\\r\\n\\r\\n  /**\\r\\n   * The minimum height in pixels of each event\\r\\n   */\\r\\n  @Input() minimumEventHeight: number = 30;\\r\\n\\r\\n  /**\\r\\n   * The day start hours in 24 hour time. Must be 0-23\\r\\n   */\\r\\n  @Input() dayStartHour: number = 0;\\r\\n\\r\\n  /**\\r\\n   * The day start minutes. Must be 0-59\\r\\n   */\\r\\n  @Input() dayStartMinute: number = 0;\\r\\n\\r\\n  /**\\r\\n   * The day end hours in 24 hour time. Must be 0-23\\r\\n   */\\r\\n  @Input() dayEndHour: number = 23;\\r\\n\\r\\n  /**\\r\\n   * The day end minutes. Must be 0-59\\r\\n   */\\r\\n  @Input() dayEndMinute: number = 59;\\r\\n\\r\\n  /**\\r\\n   * A custom template to use to replace the hour segment\\r\\n   */\\r\\n  @Input() hourSegmentTemplate: TemplateRef<any>;\\r\\n\\r\\n  /**\\r\\n   * The grid size to snap resizing and dragging of hourly events to\\r\\n   */\\r\\n  @Input() eventSnapSize: number;\\r\\n\\r\\n  /**\\r\\n   * A custom template to use for the all day events label text\\r\\n   */\\r\\n  @Input() allDayEventsLabelTemplate: TemplateRef<any>;\\r\\n\\r\\n  /**\\r\\n   * The number of days in a week. Can be used to create a shorter or longer week view.\\r\\n   * The first day of the week will always be the `viewDate` and `weekStartsOn` if set will be ignored\\r\\n   */\\r\\n  @Input() daysInWeek: number;\\r\\n\\r\\n  /**\\r\\n   * A custom template to use for the current time marker\\r\\n   */\\r\\n  @Input() currentTimeMarkerTemplate: TemplateRef<any>;\\r\\n\\r\\n  /**\\r\\n   * Allow you to customise where events can be dragged and resized to.\\r\\n   * Return true to allow dragging and resizing to the new location, or false to prevent it\\r\\n   */\\r\\n  @Input() validateEventTimesChanged: (\\r\\n    event: CalendarEventTimesChangedEvent\\r\\n  ) => boolean;\\r\\n\\r\\n  /**\\r\\n   * Customise the document cursor when dragging to resize an event\\r\\n   */\\r\\n  @Input() resizeCursors: Partial<\\r\\n    Pick<any, 'leftOrRight' | 'topOrBottom'>\\r\\n  >;\\r\\n\\r\\n  /**\\r\\n   * Called when a header week day is clicked. Adding a `cssClass` property on `$event.day` will add that class to the header element\\r\\n   */\\r\\n  @Output() dayHeaderClicked = new EventEmitter<{\\r\\n    day: WeekDay;\\r\\n    sourceEvent: MouseEvent;\\r\\n  }>();\\r\\n\\r\\n  /**\\r\\n   * Called when an event title is clicked\\r\\n   */\\r\\n  @Output() eventClicked = new EventEmitter<{\\r\\n    event: CalendarEvent;\\r\\n    sourceEvent: MouseEvent | KeyboardEvent;\\r\\n  }>();\\r\\n\\r\\n  /**\\r\\n   * Called when an event is resized or dragged and dropped\\r\\n   */\\r\\n  @Output() eventTimesChanged =\\r\\n    new EventEmitter<CalendarEventTimesChangedEvent>();\\r\\n\\r\\n  /**\\r\\n   * An output that will be called before the view is rendered for the current week.\\r\\n   * If you add the `cssClass` property to a day in the header it will add that class to the cell element in the template\\r\\n   */\\r\\n  @Output() beforeViewRender =\\r\\n    new EventEmitter<CalendarWeekViewBeforeRenderEvent>();\\r\\n\\r\\n  /**\\r\\n   * Called when an hour segment is clicked\\r\\n   */\\r\\n  @Output() hourSegmentClicked = new EventEmitter<{\\r\\n    date: Date;\\r\\n    sourceEvent: MouseEvent;\\r\\n  }>();\\r\\n\\r\\n  /**\\r\\n   * @hidden\\r\\n   */\\r\\n  days: WeekDay[];\\r\\n\\r\\n  /**\\r\\n   * @hidden\\r\\n   */\\r\\n  view: WeekView;\\r\\n\\r\\n  /**\\r\\n   * @hidden\\r\\n   */\\r\\n  refreshSubscription: Subscription;\\r\\n\\r\\n  /**\\r\\n   * @hidden\\r\\n   */\\r\\n  allDayEventResizes: Map<WeekViewAllDayEvent, WeekViewAllDayEventResize> =\\r\\n    new Map();\\r\\n\\r\\n  /**\\r\\n   * @hidden\\r\\n   */\\r\\n  timeEventResizes: Map<CalendarEvent, ResizeEvent> = new Map();\\r\\n\\r\\n  /**\\r\\n   * @hidden\\r\\n   */\\r\\n  eventDragEnterByType = {\\r\\n    allDay: 0,\\r\\n    time: 0,\\r\\n  };\\r\\n\\r\\n  /**\\r\\n   * @hidden\\r\\n   */\\r\\n  dragActive = false;\\r\\n\\r\\n  /**\\r\\n   * @hidden\\r\\n   */\\r\\n  dragAlreadyMoved = false;\\r\\n\\r\\n  /**\\r\\n   * @hidden\\r\\n   */\\r\\n  validateDrag: ValidateDrag;\\r\\n\\r\\n  /**\\r\\n   * @hidden\\r\\n   */\\r\\n  validateResize: (args: any) => boolean;\\r\\n\\r\\n  /**\\r\\n   * @hidden\\r\\n   */\\r\\n  dayColumnWidth: number;\\r\\n\\r\\n  /**\\r\\n   * @hidden\\r\\n   */\\r\\n  calendarId = Symbol('angular calendar week view id');\\r\\n\\r\\n  /**\\r\\n   * @hidden\\r\\n   */\\r\\n  lastDraggedEvent: CalendarEvent;\\r\\n\\r\\n  /**\\r\\n   * @hidden\\r\\n   */\\r\\n  rtl = false;\\r\\n\\r\\n  /**\\r\\n   * @hidden\\r\\n   */\\r\\n  trackByWeekDayHeaderDate = trackByWeekDayHeaderDate;\\r\\n\\r\\n  /**\\r\\n   * @hidden\\r\\n   */\\r\\n  trackByHourSegment = trackByHourSegment;\\r\\n\\r\\n  /**\\r\\n   * @hidden\\r\\n   */\\r\\n  trackByHour = trackByHour;\\r\\n\\r\\n  /**\\r\\n   * @hidden\\r\\n   */\\r\\n  trackByWeekAllDayEvent = trackByWeekAllDayEvent;\\r\\n\\r\\n  /**\\r\\n   * @hidden\\r\\n   */\\r\\n  trackByWeekTimeEvent = trackByWeekTimeEvent;\\r\\n\\r\\n  /**\\r\\n   * @hidden\\r\\n   */\\r\\n  private lastDragEnterDate: Date;\\r\\n\\r\\n  /**\\r\\n   * @hidden\\r\\n   */\\r\\n  constructor(\\r\\n    protected cdr: ChangeDetectorRef,\\r\\n    protected utils: CalendarUtils,\\r\\n    @Inject(LOCALE_ID) locale: string,\\r\\n    protected dateAdapter: DateAdapter,\\r\\n    protected element: ElementRef<HTMLElement>\\r\\n  ) {\\r\\n    this.locale = locale;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @hidden\\r\\n   */\\r\\n  trackByHourColumn = (index: number, column: WeekViewHourColumn) =>\\r\\n    column.hours[0] ? column.hours[0].segments[0].date.toISOString() : column;\\r\\n\\r\\n  /**\\r\\n   * @hidden\\r\\n   */\\r\\n  trackById = (index: number, row: WeekViewAllDayEventRow) => row.id;\\r\\n\\r\\n  /**\\r\\n   * @hidden\\r\\n   */\\r\\n  ngOnInit(): void {\\r\\n    if (this.refresh) {\\r\\n      this.refreshSubscription = this.refresh.subscribe(() => {\\r\\n        this.refreshAll();\\r\\n        this.cdr.markForCheck();\\r\\n      });\\r\\n    }\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @hidden\\r\\n   */\\r\\n  ngOnChanges(changes: any): void {\\r\\n    const refreshHeader =\\r\\n      changes.viewDate ||\\r\\n      changes.excludeDays ||\\r\\n      changes.weekendDays ||\\r\\n      changes.daysInWeek ||\\r\\n      changes.weekStartsOn;\\r\\n\\r\\n    const refreshBody =\\r\\n      changes.viewDate ||\\r\\n      changes.dayStartHour ||\\r\\n      changes.dayStartMinute ||\\r\\n      changes.dayEndHour ||\\r\\n      changes.dayEndMinute ||\\r\\n      changes.hourSegments ||\\r\\n      changes.hourDuration ||\\r\\n      changes.weekStartsOn ||\\r\\n      changes.weekendDays ||\\r\\n      changes.excludeDays ||\\r\\n      changes.hourSegmentHeight ||\\r\\n      changes.events ||\\r\\n      changes.daysInWeek ||\\r\\n      changes.minimumEventHeight;\\r\\n\\r\\n    if (refreshHeader) {\\r\\n      this.refreshHeader();\\r\\n    }\\r\\n\\r\\n    if (changes.events) {\\r\\n      validateEvents(this.events);\\r\\n    }\\r\\n\\r\\n    if (refreshBody) {\\r\\n      this.refreshBody();\\r\\n    }\\r\\n\\r\\n    if (refreshHeader || refreshBody) {\\r\\n      this.emitBeforeViewRender();\\r\\n    }\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @hidden\\r\\n   */\\r\\n  ngOnDestroy(): void {\\r\\n    if (this.refreshSubscription) {\\r\\n      this.refreshSubscription.unsubscribe();\\r\\n    }\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @hidden\\r\\n   */\\r\\n  ngAfterViewInit() {\\r\\n    this.rtl =\\r\\n      typeof window !== 'undefined' &&\\r\\n      getComputedStyle(this.element.nativeElement).direction === 'rtl';\\r\\n    this.cdr.detectChanges();\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @hidden\\r\\n   */\\r\\n  timeEventResizeStarted(\\r\\n    eventsContainer: HTMLElement,\\r\\n    timeEvent: WeekViewTimeEvent,\\r\\n    resizeEvent: ResizeEvent\\r\\n  ): void {\\r\\n    this.timeEventResizes.set(timeEvent.event, resizeEvent);\\r\\n    this.resizeStarted(eventsContainer, timeEvent);\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @hidden\\r\\n   */\\r\\n  timeEventResizing(timeEvent: WeekViewTimeEvent, resizeEvent: ResizeEvent) {\\r\\n    this.timeEventResizes.set(timeEvent.event, resizeEvent);\\r\\n    const adjustedEvents = new Map<CalendarEvent, CalendarEvent>();\\r\\n\\r\\n    const tempEvents = [...this.events];\\r\\n\\r\\n    this.timeEventResizes.forEach((lastResizeEvent, event) => {\\r\\n      const newEventDates = this.getTimeEventResizedDates(\\r\\n        event,\\r\\n        lastResizeEvent\\r\\n      );\\r\\n      const adjustedEvent = { ...event, ...newEventDates };\\r\\n      adjustedEvents.set(adjustedEvent, event);\\r\\n      const eventIndex = tempEvents.indexOf(event);\\r\\n      tempEvents[eventIndex] = adjustedEvent;\\r\\n    });\\r\\n\\r\\n    this.restoreOriginalEvents(tempEvents, adjustedEvents, true);\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @hidden\\r\\n   */\\r\\n  timeEventResizeEnded(timeEvent: WeekViewTimeEvent) {\\r\\n    this.view = this.getWeekView(this.events);\\r\\n    const lastResizeEvent = this.timeEventResizes.get(timeEvent.event);\\r\\n    if (lastResizeEvent) {\\r\\n      this.timeEventResizes.delete(timeEvent.event);\\r\\n      const newEventDates = this.getTimeEventResizedDates(\\r\\n        timeEvent.event,\\r\\n        lastResizeEvent\\r\\n      );\\r\\n      this.eventTimesChanged.emit({\\r\\n        newStart: newEventDates.start,\\r\\n        newEnd: newEventDates.end,\\r\\n        event: timeEvent.event,\\r\\n        type: CalendarEventTimesChangedEventType.Resize,\\r\\n      });\\r\\n    }\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @hidden\\r\\n   */\\r\\n  allDayEventResizeStarted(\\r\\n    allDayEventsContainer: HTMLElement,\\r\\n    allDayEvent: WeekViewAllDayEvent,\\r\\n    resizeEvent: ResizeEvent\\r\\n  ): void {\\r\\n    this.allDayEventResizes.set(allDayEvent, {\\r\\n      originalOffset: allDayEvent.offset,\\r\\n      originalSpan: allDayEvent.span,\\r\\n      edge: typeof resizeEvent.edges.left !== 'undefined' ? 'left' : 'right',\\r\\n    });\\r\\n    this.resizeStarted(\\r\\n      allDayEventsContainer,\\r\\n      allDayEvent,\\r\\n      this.getDayColumnWidth(allDayEventsContainer)\\r\\n    );\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @hidden\\r\\n   */\\r\\n  allDayEventResizing(\\r\\n    allDayEvent: WeekViewAllDayEvent,\\r\\n    resizeEvent: ResizeEvent,\\r\\n    dayWidth: number\\r\\n  ): void {\\r\\n    const currentResize: WeekViewAllDayEventResize =\\r\\n      this.allDayEventResizes.get(allDayEvent);\\r\\n\\r\\n    const modifier = this.rtl ? -1 : 1;\\r\\n    if (typeof resizeEvent.edges.left !== 'undefined') {\\r\\n      const diff: number =\\r\\n        Math.round(+resizeEvent.edges.left / dayWidth) * modifier;\\r\\n      allDayEvent.offset = currentResize.originalOffset + diff;\\r\\n      allDayEvent.span = currentResize.originalSpan - diff;\\r\\n    } else if (typeof resizeEvent.edges.right !== 'undefined') {\\r\\n      const diff: number =\\r\\n        Math.round(+resizeEvent.edges.right / dayWidth) * modifier;\\r\\n      allDayEvent.span = currentResize.originalSpan + diff;\\r\\n    }\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @hidden\\r\\n   */\\r\\n  allDayEventResizeEnded(allDayEvent: WeekViewAllDayEvent): void {\\r\\n    const currentResize: WeekViewAllDayEventResize =\\r\\n      this.allDayEventResizes.get(allDayEvent);\\r\\n\\r\\n    if (currentResize) {\\r\\n      const allDayEventResizingBeforeStart = currentResize.edge === 'left';\\r\\n      let daysDiff: number;\\r\\n      if (allDayEventResizingBeforeStart) {\\r\\n        daysDiff = allDayEvent.offset - currentResize.originalOffset;\\r\\n      } else {\\r\\n        daysDiff = allDayEvent.span - currentResize.originalSpan;\\r\\n      }\\r\\n\\r\\n      allDayEvent.offset = currentResize.originalOffset;\\r\\n      allDayEvent.span = currentResize.originalSpan;\\r\\n\\r\\n      const newDates = this.getAllDayEventResizedDates(\\r\\n        allDayEvent.event,\\r\\n        daysDiff,\\r\\n        allDayEventResizingBeforeStart\\r\\n      );\\r\\n\\r\\n      this.eventTimesChanged.emit({\\r\\n        newStart: newDates.start,\\r\\n        newEnd: newDates.end,\\r\\n        event: allDayEvent.event,\\r\\n        type: CalendarEventTimesChangedEventType.Resize,\\r\\n      });\\r\\n      this.allDayEventResizes.delete(allDayEvent);\\r\\n    }\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @hidden\\r\\n   */\\r\\n  getDayColumnWidth(eventRowContainer: HTMLElement): number {\\r\\n    return Math.floor(eventRowContainer.offsetWidth / this.days.length);\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @hidden\\r\\n   */\\r\\n  dateDragEnter(date: Date) {\\r\\n    this.lastDragEnterDate = date;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @hidden\\r\\n   */\\r\\n  eventDropped(\\r\\n    dropEvent: Pick<\\r\\n      DropEvent<{ event?: CalendarEvent; calendarId?: symbol }>,\\r\\n      'dropData'\\r\\n    >,\\r\\n    date: Date,\\r\\n    allDay: boolean\\r\\n  ): void {\\r\\n    if (\\r\\n      shouldFireDroppedEvent(dropEvent, date, allDay, this.calendarId) &&\\r\\n      this.lastDragEnterDate.getTime() === date.getTime() &&\\r\\n      (!this.snapDraggedEvents ||\\r\\n        dropEvent.dropData.event !== this.lastDraggedEvent)\\r\\n    ) {\\r\\n      this.eventTimesChanged.emit({\\r\\n        type: CalendarEventTimesChangedEventType.Drop,\\r\\n        event: dropEvent.dropData.event,\\r\\n        newStart: date,\\r\\n        allDay,\\r\\n      });\\r\\n    }\\r\\n    this.lastDraggedEvent = null;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @hidden\\r\\n   */\\r\\n  dragEnter(type: 'allDay' | 'time') {\\r\\n    this.eventDragEnterByType[type]++;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @hidden\\r\\n   */\\r\\n  dragLeave(type: 'allDay' | 'time') {\\r\\n    this.eventDragEnterByType[type]--;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @hidden\\r\\n   */\\r\\n  dragStarted(\\r\\n    eventsContainerElement: HTMLElement,\\r\\n    eventElement: HTMLElement,\\r\\n    event: WeekViewTimeEvent | WeekViewAllDayEvent,\\r\\n    useY: boolean\\r\\n  ): void {\\r\\n    this.dayColumnWidth = this.getDayColumnWidth(eventsContainerElement);\\r\\n    const dragHelper: CalendarDragHelper = new CalendarDragHelper(\\r\\n      eventsContainerElement,\\r\\n      eventElement\\r\\n    );\\r\\n    this.validateDrag = ({ x, y, transform }) => {\\r\\n      const isAllowed =\\r\\n        this.allDayEventResizes.size === 0 &&\\r\\n        this.timeEventResizes.size === 0 &&\\r\\n        dragHelper.validateDrag({\\r\\n          x,\\r\\n          y,\\r\\n          snapDraggedEvents: this.snapDraggedEvents,\\r\\n          dragAlreadyMoved: this.dragAlreadyMoved,\\r\\n          transform,\\r\\n        });\\r\\n      if (isAllowed && this.validateEventTimesChanged) {\\r\\n        const newEventTimes = this.getDragMovedEventTimes(\\r\\n          event,\\r\\n          { x, y },\\r\\n          this.dayColumnWidth,\\r\\n          useY\\r\\n        );\\r\\n        return this.validateEventTimesChanged({\\r\\n          type: CalendarEventTimesChangedEventType.Drag,\\r\\n          event: event.event,\\r\\n          newStart: newEventTimes.start,\\r\\n          newEnd: newEventTimes.end,\\r\\n        });\\r\\n      }\\r\\n\\r\\n      return isAllowed;\\r\\n    };\\r\\n    this.dragActive = true;\\r\\n    this.dragAlreadyMoved = false;\\r\\n    this.lastDraggedEvent = null;\\r\\n    this.eventDragEnterByType = {\\r\\n      allDay: 0,\\r\\n      time: 0,\\r\\n    };\\r\\n    if (!this.snapDraggedEvents && useY) {\\r\\n      this.view.hourColumns.forEach((column) => {\\r\\n        const linkedEvent = column.events.find(\\r\\n          (columnEvent) =>\\r\\n            columnEvent.event === event.event && columnEvent !== event\\r\\n        );\\r\\n        // hide any linked events while dragging\\r\\n        if (linkedEvent) {\\r\\n          linkedEvent.width = 0;\\r\\n          linkedEvent.height = 0;\\r\\n        }\\r\\n      });\\r\\n    }\\r\\n    this.cdr.markForCheck();\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @hidden\\r\\n   */\\r\\n  dragMove(dayEvent: WeekViewTimeEvent, dragEvent: DragMoveEvent) {\\r\\n    const newEventTimes = this.getDragMovedEventTimes(\\r\\n      dayEvent,\\r\\n      dragEvent,\\r\\n      this.dayColumnWidth,\\r\\n      true\\r\\n    );\\r\\n    const originalEvent = dayEvent.event;\\r\\n    const adjustedEvent = { ...originalEvent, ...newEventTimes };\\r\\n    const tempEvents = this.events.map((event) => {\\r\\n      if (event === originalEvent) {\\r\\n        return adjustedEvent;\\r\\n      }\\r\\n      return event;\\r\\n    });\\r\\n    this.restoreOriginalEvents(\\r\\n      tempEvents,\\r\\n      new Map([[adjustedEvent, originalEvent]]),\\r\\n      this.snapDraggedEvents\\r\\n    );\\r\\n    this.dragAlreadyMoved = true;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @hidden\\r\\n   */\\r\\n  allDayEventDragMove() {\\r\\n    this.dragAlreadyMoved = true;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @hidden\\r\\n   */\\r\\n  dragEnded(\\r\\n    weekEvent: WeekViewAllDayEvent | WeekViewTimeEvent,\\r\\n    dragEndEvent: DragEndEvent,\\r\\n    dayWidth: number,\\r\\n    useY = false\\r\\n  ): void {\\r\\n    this.view = this.getWeekView(this.events);\\r\\n    this.dragActive = false;\\r\\n    this.validateDrag = null;\\r\\n    const { start, end } = this.getDragMovedEventTimes(\\r\\n      weekEvent,\\r\\n      dragEndEvent,\\r\\n      dayWidth,\\r\\n      useY\\r\\n    );\\r\\n    if (\\r\\n      (this.snapDraggedEvents ||\\r\\n        this.eventDragEnterByType[useY ? 'time' : 'allDay'] > 0) &&\\r\\n      isDraggedWithinPeriod(start, end, this.view.period)\\r\\n    ) {\\r\\n      this.lastDraggedEvent = weekEvent.event;\\r\\n      this.eventTimesChanged.emit({\\r\\n        newStart: start,\\r\\n        newEnd: end,\\r\\n        event: weekEvent.event,\\r\\n        type: CalendarEventTimesChangedEventType.Drag,\\r\\n        allDay: !useY,\\r\\n      });\\r\\n    }\\r\\n  }\\r\\n\\r\\n  protected refreshHeader(): void {\\r\\n    this.days = this.utils.getWeekViewHeader({\\r\\n      viewDate: this.viewDate,\\r\\n      weekStartsOn: this.weekStartsOn,\\r\\n      excluded: this.excludeDays,\\r\\n      weekendDays: this.weekendDays,\\r\\n      ...getWeekViewPeriod(\\r\\n        this.dateAdapter,\\r\\n        this.viewDate,\\r\\n        this.weekStartsOn,\\r\\n        this.excludeDays,\\r\\n        this.daysInWeek\\r\\n      ),\\r\\n    });\\r\\n  }\\r\\n\\r\\n  protected refreshBody(): void {\\r\\n    this.view = this.getWeekView(this.events);\\r\\n  }\\r\\n\\r\\n  protected refreshAll(): void {\\r\\n    this.refreshHeader();\\r\\n    this.refreshBody();\\r\\n    this.emitBeforeViewRender();\\r\\n  }\\r\\n\\r\\n  protected emitBeforeViewRender(): void {\\r\\n    if (this.days && this.view) {\\r\\n      this.beforeViewRender.emit({\\r\\n        header: this.days,\\r\\n        ...this.view,\\r\\n      });\\r\\n    }\\r\\n  }\\r\\n\\r\\n  protected getWeekView(events: CalendarEvent[]) {\\r\\n    return this.utils.getWeekView({\\r\\n      events,\\r\\n      viewDate: this.viewDate,\\r\\n      weekStartsOn: this.weekStartsOn,\\r\\n      excluded: this.excludeDays,\\r\\n      precision: this.precision,\\r\\n      absolutePositionedEvents: true,\\r\\n      hourSegments: this.hourSegments,\\r\\n      hourDuration: this.hourDuration,\\r\\n      dayStart: {\\r\\n        hour: this.dayStartHour,\\r\\n        minute: this.dayStartMinute,\\r\\n      },\\r\\n      dayEnd: {\\r\\n        hour: this.dayEndHour,\\r\\n        minute: this.dayEndMinute,\\r\\n      },\\r\\n      segmentHeight: this.hourSegmentHeight,\\r\\n      weekendDays: this.weekendDays,\\r\\n      minimumEventHeight: this.minimumEventHeight,\\r\\n      ...getWeekViewPeriod(\\r\\n        this.dateAdapter,\\r\\n        this.viewDate,\\r\\n        this.weekStartsOn,\\r\\n        this.excludeDays,\\r\\n        this.daysInWeek\\r\\n      ),\\r\\n    });\\r\\n  }\\r\\n\\r\\n  protected getDragMovedEventTimes(\\r\\n    weekEvent: WeekViewAllDayEvent | WeekViewTimeEvent,\\r\\n    dragEndEvent: DragEndEvent | DragMoveEvent,\\r\\n    dayWidth: number,\\r\\n    useY: boolean\\r\\n  ) {\\r\\n    const daysDragged =\\r\\n      (roundToNearest(dragEndEvent.x, dayWidth) / dayWidth) *\\r\\n      (this.rtl ? -1 : 1);\\r\\n    const minutesMoved = useY\\r\\n      ? getMinutesMoved(\\r\\n          dragEndEvent.y,\\r\\n          this.hourSegments,\\r\\n          this.hourSegmentHeight,\\r\\n          this.eventSnapSize,\\r\\n          this.hourDuration\\r\\n        )\\r\\n      : 0;\\r\\n\\r\\n    const start = this.dateAdapter.addMinutes(\\r\\n      addDaysWithExclusions(\\r\\n        this.dateAdapter,\\r\\n        weekEvent.event.start,\\r\\n        daysDragged,\\r\\n        this.excludeDays\\r\\n      ),\\r\\n      minutesMoved\\r\\n    );\\r\\n    let end: Date;\\r\\n    if (weekEvent.event.end) {\\r\\n      end = this.dateAdapter.addMinutes(\\r\\n        addDaysWithExclusions(\\r\\n          this.dateAdapter,\\r\\n          weekEvent.event.end,\\r\\n          daysDragged,\\r\\n          this.excludeDays\\r\\n        ),\\r\\n        minutesMoved\\r\\n      );\\r\\n    }\\r\\n\\r\\n    return { start, end };\\r\\n  }\\r\\n\\r\\n  protected restoreOriginalEvents(\\r\\n    tempEvents: CalendarEvent[],\\r\\n    adjustedEvents: Map<CalendarEvent, CalendarEvent>,\\r\\n    snapDraggedEvents = true\\r\\n  ) {\\r\\n    const previousView = this.view;\\r\\n    if (snapDraggedEvents) {\\r\\n      this.view = this.getWeekView(tempEvents);\\r\\n    }\\r\\n\\r\\n    const adjustedEventsArray = tempEvents.filter((event) =>\\r\\n      adjustedEvents.has(event)\\r\\n    );\\r\\n    this.view.hourColumns.forEach((column, columnIndex) => {\\r\\n      previousView.hourColumns[columnIndex].hours.forEach((hour, hourIndex) => {\\r\\n        hour.segments.forEach((segment, segmentIndex) => {\\r\\n          column.hours[hourIndex].segments[segmentIndex].cssClass =\\r\\n            segment.cssClass;\\r\\n        });\\r\\n      });\\r\\n\\r\\n      adjustedEventsArray.forEach((adjustedEvent) => {\\r\\n        const originalEvent = adjustedEvents.get(adjustedEvent);\\r\\n        const existingColumnEvent = column.events.find(\\r\\n          (columnEvent) =>\\r\\n            columnEvent.event ===\\r\\n            (snapDraggedEvents ? adjustedEvent : originalEvent)\\r\\n        );\\r\\n        if (existingColumnEvent) {\\r\\n          // restore the original event so trackBy kicks in and the dom isn't changed\\r\\n          existingColumnEvent.event = originalEvent;\\r\\n          existingColumnEvent['tempEvent'] = adjustedEvent;\\r\\n          if (!snapDraggedEvents) {\\r\\n            existingColumnEvent.height = 0;\\r\\n            existingColumnEvent.width = 0;\\r\\n          }\\r\\n        } else {\\r\\n          // add a dummy event to the drop so if the event was removed from the original column the drag doesn't end early\\r\\n          const event = {\\r\\n            event: originalEvent,\\r\\n            left: 0,\\r\\n            top: 0,\\r\\n            height: 0,\\r\\n            width: 0,\\r\\n            startsBeforeDay: false,\\r\\n            endsAfterDay: false,\\r\\n            tempEvent: adjustedEvent,\\r\\n          };\\r\\n          column.events.push(event);\\r\\n        }\\r\\n      });\\r\\n    });\\r\\n    adjustedEvents.clear();\\r\\n  }\\r\\n\\r\\n  protected getTimeEventResizedDates(\\r\\n    calendarEvent: CalendarEvent,\\r\\n    resizeEvent: ResizeEvent\\r\\n  ) {\\r\\n    const newEventDates = {\\r\\n      start: calendarEvent.start,\\r\\n      end: getDefaultEventEnd(\\r\\n        this.dateAdapter,\\r\\n        calendarEvent,\\r\\n        this.minimumEventHeight\\r\\n      ),\\r\\n    };\\r\\n    const { end, ...eventWithoutEnd } = calendarEvent;\\r\\n    const smallestResizes = {\\r\\n      start: this.dateAdapter.addMinutes(\\r\\n        newEventDates.end,\\r\\n        this.minimumEventHeight * -1\\r\\n      ),\\r\\n      end: getDefaultEventEnd(\\r\\n        this.dateAdapter,\\r\\n        eventWithoutEnd,\\r\\n        this.minimumEventHeight\\r\\n      ),\\r\\n    };\\r\\n\\r\\n    const modifier = this.rtl ? -1 : 1;\\r\\n\\r\\n    if (typeof resizeEvent.edges.left !== 'undefined') {\\r\\n      const daysDiff =\\r\\n        Math.round(+resizeEvent.edges.left / this.dayColumnWidth) * modifier;\\r\\n      const newStart = addDaysWithExclusions(\\r\\n        this.dateAdapter,\\r\\n        newEventDates.start,\\r\\n        daysDiff,\\r\\n        this.excludeDays\\r\\n      );\\r\\n      if (newStart < smallestResizes.start) {\\r\\n        newEventDates.start = newStart;\\r\\n      } else {\\r\\n        newEventDates.start = smallestResizes.start;\\r\\n      }\\r\\n    } else if (typeof resizeEvent.edges.right !== 'undefined') {\\r\\n      const daysDiff =\\r\\n        Math.round(+resizeEvent.edges.right / this.dayColumnWidth) * modifier;\\r\\n      const newEnd = addDaysWithExclusions(\\r\\n        this.dateAdapter,\\r\\n        newEventDates.end,\\r\\n        daysDiff,\\r\\n        this.excludeDays\\r\\n      );\\r\\n      if (newEnd > smallestResizes.end) {\\r\\n        newEventDates.end = newEnd;\\r\\n      } else {\\r\\n        newEventDates.end = smallestResizes.end;\\r\\n      }\\r\\n    }\\r\\n\\r\\n    if (typeof resizeEvent.edges.top !== 'undefined') {\\r\\n      const minutesMoved = getMinutesMoved(\\r\\n        resizeEvent.edges.top as number,\\r\\n        this.hourSegments,\\r\\n        this.hourSegmentHeight,\\r\\n        this.eventSnapSize,\\r\\n        this.hourDuration\\r\\n      );\\r\\n      const newStart = this.dateAdapter.addMinutes(\\r\\n        newEventDates.start,\\r\\n        minutesMoved\\r\\n      );\\r\\n      if (newStart < smallestResizes.start) {\\r\\n        newEventDates.start = newStart;\\r\\n      } else {\\r\\n        newEventDates.start = smallestResizes.start;\\r\\n      }\\r\\n    } else if (typeof resizeEvent.edges.bottom !== 'undefined') {\\r\\n      const minutesMoved = getMinutesMoved(\\r\\n        resizeEvent.edges.bottom as number,\\r\\n        this.hourSegments,\\r\\n        this.hourSegmentHeight,\\r\\n        this.eventSnapSize,\\r\\n        this.hourDuration\\r\\n      );\\r\\n      const newEnd = this.dateAdapter.addMinutes(\\r\\n        newEventDates.end,\\r\\n        minutesMoved\\r\\n      );\\r\\n      if (newEnd > smallestResizes.end) {\\r\\n        newEventDates.end = newEnd;\\r\\n      } else {\\r\\n        newEventDates.end = smallestResizes.end;\\r\\n      }\\r\\n    }\\r\\n\\r\\n    return newEventDates;\\r\\n  }\\r\\n\\r\\n  protected resizeStarted(\\r\\n    eventsContainer: HTMLElement,\\r\\n    event: WeekViewTimeEvent | WeekViewAllDayEvent,\\r\\n    dayWidth?: number\\r\\n  ) {\\r\\n    this.dayColumnWidth = this.getDayColumnWidth(eventsContainer);\\r\\n    const resizeHelper = new CalendarResizeHelper(\\r\\n      eventsContainer,\\r\\n      dayWidth,\\r\\n      this.rtl\\r\\n    );\\r\\n    this.validateResize = ({ rectangle, edges }) => {\\r\\n      const isWithinBoundary = resizeHelper.validateResize({\\r\\n        rectangle: { ...rectangle },\\r\\n        edges,\\r\\n      });\\r\\n\\r\\n      if (isWithinBoundary && this.validateEventTimesChanged) {\\r\\n        let newEventDates;\\r\\n        if (!dayWidth) {\\r\\n          newEventDates = this.getTimeEventResizedDates(event.event, {\\r\\n            rectangle,\\r\\n            edges,\\r\\n          });\\r\\n        } else {\\r\\n          const modifier = this.rtl ? -1 : 1;\\r\\n          if (typeof edges.left !== 'undefined') {\\r\\n            const diff = Math.round(+edges.left / dayWidth) * modifier;\\r\\n            newEventDates = this.getAllDayEventResizedDates(\\r\\n              event.event,\\r\\n              diff,\\r\\n              !this.rtl\\r\\n            );\\r\\n          } else {\\r\\n            const diff = Math.round(+edges.right / dayWidth) * modifier;\\r\\n            newEventDates = this.getAllDayEventResizedDates(\\r\\n              event.event,\\r\\n              diff,\\r\\n              this.rtl\\r\\n            );\\r\\n          }\\r\\n        }\\r\\n        return this.validateEventTimesChanged({\\r\\n          type: CalendarEventTimesChangedEventType.Resize,\\r\\n          event: event.event,\\r\\n          newStart: newEventDates.start,\\r\\n          newEnd: newEventDates.end,\\r\\n        });\\r\\n      }\\r\\n\\r\\n      return isWithinBoundary;\\r\\n    };\\r\\n    this.cdr.markForCheck();\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @hidden\\r\\n   */\\r\\n  protected getAllDayEventResizedDates(\\r\\n    event: CalendarEvent,\\r\\n    daysDiff: number,\\r\\n    beforeStart: boolean\\r\\n  ) {\\r\\n    let start: Date = event.start;\\r\\n    let end: Date = event.end || event.start;\\r\\n    if (beforeStart) {\\r\\n      start = addDaysWithExclusions(\\r\\n        this.dateAdapter,\\r\\n        start,\\r\\n        daysDiff,\\r\\n        this.excludeDays\\r\\n      );\\r\\n    } else {\\r\\n      end = addDaysWithExclusions(\\r\\n        this.dateAdapter,\\r\\n        end,\\r\\n        daysDiff,\\r\\n        this.excludeDays\\r\\n      );\\r\\n    }\\r\\n\\r\\n    return { start, end };\\r\\n  }\\r\\n}\\r\\n\",\"import {\\r\\n  Component,\\r\\n  Input,\\r\\n  Output,\\r\\n  EventEmitter,\\r\\n  TemplateRef,\\r\\n} from '@angular/core';\\r\\nimport { CalendarEvent } from 'calendar-utils';\\r\\nimport { Subject } from 'rxjs';\\r\\nimport { CalendarEventTimesChangedEvent } from '../../common/calendar-event-times-changed-event/calendar-event-times-changed-event.interface';\\r\\nimport { PlacementArray } from 'positioning';\\r\\nimport { CalendarWeekViewBeforeRenderEvent } from '../../week/calendar-week.module';\\r\\nimport { ResizeCursors } from 'angular-resizable-element';\\r\\n\\r\\nexport type CalendarDayViewBeforeRenderEvent =\\r\\n  CalendarWeekViewBeforeRenderEvent;\\r\\n\\r\\n/**\\r\\n * Shows all events on a given day. Example usage:\\r\\n *\\r\\n * ```typescript\\r\\n * <mwl-calendar-day-view\\r\\n *  [viewDate]=\\\"viewDate\\\"\\r\\n *  [events]=\\\"events\\\">\\r\\n * </mwl-calendar-day-view>\\r\\n * ```\\r\\n */\\r\\n@Component({\\r\\n  selector: 'mwl-calendar-day-view',\\r\\n  template: `\\r\\n    <mwl-calendar-week-view\\r\\n      class=\\\"cal-day-view\\\"\\r\\n      [daysInWeek]=\\\"1\\\"\\r\\n      [viewDate]=\\\"viewDate\\\"\\r\\n      [events]=\\\"events\\\"\\r\\n      [hourSegments]=\\\"hourSegments\\\"\\r\\n      [hourDuration]=\\\"hourDuration\\\"\\r\\n      [hourSegmentHeight]=\\\"hourSegmentHeight\\\"\\r\\n      [minimumEventHeight]=\\\"minimumEventHeight\\\"\\r\\n      [dayStartHour]=\\\"dayStartHour\\\"\\r\\n      [dayStartMinute]=\\\"dayStartMinute\\\"\\r\\n      [dayEndHour]=\\\"dayEndHour\\\"\\r\\n      [dayEndMinute]=\\\"dayEndMinute\\\"\\r\\n      [refresh]=\\\"refresh\\\"\\r\\n      [locale]=\\\"locale\\\"\\r\\n      [eventSnapSize]=\\\"eventSnapSize\\\"\\r\\n      [tooltipPlacement]=\\\"tooltipPlacement\\\"\\r\\n      [tooltipTemplate]=\\\"tooltipTemplate\\\"\\r\\n      [tooltipAppendToBody]=\\\"tooltipAppendToBody\\\"\\r\\n      [tooltipDelay]=\\\"tooltipDelay\\\"\\r\\n      [resizeCursors]=\\\"resizeCursors\\\"\\r\\n      [hourSegmentTemplate]=\\\"hourSegmentTemplate\\\"\\r\\n      [eventTemplate]=\\\"eventTemplate\\\"\\r\\n      [eventTitleTemplate]=\\\"eventTitleTemplate\\\"\\r\\n      [eventActionsTemplate]=\\\"eventActionsTemplate\\\"\\r\\n      [snapDraggedEvents]=\\\"snapDraggedEvents\\\"\\r\\n      [allDayEventsLabelTemplate]=\\\"allDayEventsLabelTemplate\\\"\\r\\n      [currentTimeMarkerTemplate]=\\\"currentTimeMarkerTemplate\\\"\\r\\n      [validateEventTimesChanged]=\\\"validateEventTimesChanged\\\"\\r\\n      (eventClicked)=\\\"eventClicked.emit($event)\\\"\\r\\n      (hourSegmentClicked)=\\\"hourSegmentClicked.emit($event)\\\"\\r\\n      (eventTimesChanged)=\\\"eventTimesChanged.emit($event)\\\"\\r\\n      (beforeViewRender)=\\\"beforeViewRender.emit($event)\\\"\\r\\n    ></mwl-calendar-week-view>\\r\\n  `,\\r\\n})\\r\\nexport class CalendarDayViewComponent {\\r\\n  /**\\r\\n   * The current view date\\r\\n   */\\r\\n  @Input() viewDate: Date;\\r\\n\\r\\n  /**\\r\\n   * An array of events to display on view\\r\\n   * The schema is available here: https://github.com/mattlewis92/calendar-utils/blob/c51689985f59a271940e30bc4e2c4e1fee3fcb5c/src/calendarUtils.ts#L49-L63\\r\\n   */\\r\\n  @Input() events: CalendarEvent[] = [];\\r\\n\\r\\n  /**\\r\\n   * The number of segments in an hour. Must divide equally into 60.\\r\\n   */\\r\\n  @Input() hourSegments: number = 2;\\r\\n\\r\\n  /**\\r\\n   * The height in pixels of each hour segment\\r\\n   */\\r\\n  @Input() hourSegmentHeight: number = 30;\\r\\n\\r\\n  /**\\r\\n   * The duration of each segment group in minutes\\r\\n   */\\r\\n  @Input() hourDuration: number;\\r\\n\\r\\n  /**\\r\\n   * The minimum height in pixels of each event\\r\\n   */\\r\\n  @Input() minimumEventHeight: number = 30;\\r\\n\\r\\n  /**\\r\\n   * The day start hours in 24 hour time. Must be 0-23\\r\\n   */\\r\\n  @Input() dayStartHour: number = 0;\\r\\n\\r\\n  /**\\r\\n   * The day start minutes. Must be 0-59\\r\\n   */\\r\\n  @Input() dayStartMinute: number = 0;\\r\\n\\r\\n  /**\\r\\n   * The day end hours in 24 hour time. Must be 0-23\\r\\n   */\\r\\n  @Input() dayEndHour: number = 23;\\r\\n\\r\\n  /**\\r\\n   * The day end minutes. Must be 0-59\\r\\n   */\\r\\n  @Input() dayEndMinute: number = 59;\\r\\n\\r\\n  /**\\r\\n   * An observable that when emitted on will re-render the current view\\r\\n   */\\r\\n  @Input() refresh: Subject<any>;\\r\\n\\r\\n  /**\\r\\n   * The locale used to format dates\\r\\n   */\\r\\n  @Input() locale: string;\\r\\n\\r\\n  /**\\r\\n   * The grid size to snap resizing and dragging of events to\\r\\n   */\\r\\n  @Input() eventSnapSize: number;\\r\\n\\r\\n  /**\\r\\n   * The placement of the event tooltip\\r\\n   */\\r\\n  @Input() tooltipPlacement: PlacementArray = 'auto';\\r\\n\\r\\n  /**\\r\\n   * A custom template to use for the event tooltips\\r\\n   */\\r\\n  @Input() tooltipTemplate: TemplateRef<any>;\\r\\n\\r\\n  /**\\r\\n   * Whether to append tooltips to the body or next to the trigger element\\r\\n   */\\r\\n  @Input() tooltipAppendToBody: boolean = true;\\r\\n\\r\\n  /**\\r\\n   * The delay in milliseconds before the tooltip should be displayed. If not provided the tooltip\\r\\n   * will be displayed immediately.\\r\\n   */\\r\\n  @Input() tooltipDelay: number | null = null;\\r\\n\\r\\n  /**\\r\\n   * A custom template to use to replace the hour segment\\r\\n   */\\r\\n  @Input() hourSegmentTemplate: TemplateRef<any>;\\r\\n\\r\\n  /**\\r\\n   * A custom template to use for day view events\\r\\n   */\\r\\n  @Input() eventTemplate: TemplateRef<any>;\\r\\n\\r\\n  /**\\r\\n   * A custom template to use for event titles\\r\\n   */\\r\\n  @Input() eventTitleTemplate: TemplateRef<any>;\\r\\n\\r\\n  /**\\r\\n   * A custom template to use for event actions\\r\\n   */\\r\\n  @Input() eventActionsTemplate: TemplateRef<any>;\\r\\n\\r\\n  /**\\r\\n   * Whether to snap events to a grid when dragging\\r\\n   */\\r\\n  @Input() snapDraggedEvents: boolean = true;\\r\\n\\r\\n  /**\\r\\n   * A custom template to use for the all day events label text\\r\\n   */\\r\\n  @Input() allDayEventsLabelTemplate: TemplateRef<any>;\\r\\n\\r\\n  /**\\r\\n   * A custom template to use for the current time marker\\r\\n   */\\r\\n  @Input() currentTimeMarkerTemplate: TemplateRef<any>;\\r\\n\\r\\n  /**\\r\\n   * Allow you to customise where events can be dragged and resized to.\\r\\n   * Return true to allow dragging and resizing to the new location, or false to prevent it\\r\\n   */\\r\\n  @Input() validateEventTimesChanged: (\\r\\n    event: CalendarEventTimesChangedEvent\\r\\n  ) => boolean;\\r\\n\\r\\n  /**\\r\\n   * Customise the document cursor when dragging to resize an event\\r\\n   */\\r\\n  @Input() resizeCursors: Partial<\\r\\n    Pick<ResizeCursors, 'leftOrRight' | 'topOrBottom'>\\r\\n  >;\\r\\n\\r\\n  /**\\r\\n   * Called when an event title is clicked\\r\\n   */\\r\\n  @Output() eventClicked = new EventEmitter<{\\r\\n    event: CalendarEvent;\\r\\n    sourceEvent: MouseEvent | KeyboardEvent;\\r\\n  }>();\\r\\n\\r\\n  /**\\r\\n   * Called when an hour segment is clicked\\r\\n   */\\r\\n  @Output() hourSegmentClicked = new EventEmitter<{\\r\\n    date: Date;\\r\\n    sourceEvent: MouseEvent;\\r\\n  }>();\\r\\n\\r\\n  /**\\r\\n   * Called when an event is resized or dragged and dropped\\r\\n   */\\r\\n  @Output() eventTimesChanged =\\r\\n    new EventEmitter<CalendarEventTimesChangedEvent>();\\r\\n\\r\\n  /**\\r\\n   * An output that will be called before the view is rendered for the current day.\\r\\n   * If you add the `cssClass` property to an hour grid segment it will add that class to the hour segment in the template\\r\\n   */\\r\\n  @Output() beforeViewRender =\\r\\n    new EventEmitter<CalendarDayViewBeforeRenderEvent>();\\r\\n}\\r\\n\",\"import { NgModule } from '@angular/core';\\r\\nimport { CommonModule } from '@angular/common';\\r\\nimport { ResizableModule } from 'angular-resizable-element';\\r\\nimport { DragAndDropModule } from 'angular-draggable-droppable';\\r\\nimport { CalendarWeekViewComponent } from './calendar-week-view/calendar-week-view.component';\\r\\nimport { CalendarWeekViewHeaderComponent } from './calendar-week-view/calendar-week-view-header/calendar-week-view-header.component';\\r\\nimport { CalendarWeekViewEventComponent } from './calendar-week-view/calendar-week-view-event/calendar-week-view-event.component';\\r\\nimport { CalendarCommonModule } from '../common/calendar-common.module';\\r\\nimport { CalendarWeekViewHourSegmentComponent } from './calendar-week-view/calendar-week-view-hour-segment/calendar-week-view-hour-segment.component';\\r\\nimport { CalendarWeekViewCurrentTimeMarkerComponent } from './calendar-week-view/calendar-week-view-current-time-marker/calendar-week-view-current-time-marker.component';\\r\\n\\r\\nexport {\\r\\n  CalendarWeekViewComponent,\\r\\n  CalendarWeekViewBeforeRenderEvent,\\r\\n} from './calendar-week-view/calendar-week-view.component';\\r\\nexport {\\r\\n  WeekViewAllDayEvent as CalendarWeekViewAllDayEvent,\\r\\n  WeekViewAllDayEventRow as CalendarWeekViewAllDayEventRow,\\r\\n  GetWeekViewArgs as CalendarGetWeekViewArgs,\\r\\n} from 'calendar-utils';\\r\\nexport { getWeekViewPeriod } from '../common/util/util';\\r\\n\\r\\n// needed for ivy, not part of the public api\\r\\nexport { CalendarWeekViewHeaderComponent as ɵCalendarWeekViewHeaderComponent } from './calendar-week-view/calendar-week-view-header/calendar-week-view-header.component';\\r\\nexport { CalendarWeekViewEventComponent as ɵCalendarWeekViewEventComponent } from './calendar-week-view/calendar-week-view-event/calendar-week-view-event.component';\\r\\nexport { CalendarWeekViewHourSegmentComponent as ɵCalendarWeekViewHourSegmentComponent } from './calendar-week-view/calendar-week-view-hour-segment/calendar-week-view-hour-segment.component';\\r\\nexport { CalendarWeekViewCurrentTimeMarkerComponent as ɵCalendarWeekViewCurrentTimeMarkerComponent } from './calendar-week-view/calendar-week-view-current-time-marker/calendar-week-view-current-time-marker.component';\\r\\n\\r\\n@NgModule({\\r\\n  imports: [\\r\\n    CommonModule,\\r\\n    ResizableModule,\\r\\n    DragAndDropModule,\\r\\n    CalendarCommonModule,\\r\\n  ],\\r\\n  declarations: [\\r\\n    CalendarWeekViewComponent,\\r\\n    CalendarWeekViewHeaderComponent,\\r\\n    CalendarWeekViewEventComponent,\\r\\n    CalendarWeekViewHourSegmentComponent,\\r\\n    CalendarWeekViewCurrentTimeMarkerComponent,\\r\\n  ],\\r\\n  exports: [\\r\\n    ResizableModule,\\r\\n    DragAndDropModule,\\r\\n    CalendarWeekViewComponent,\\r\\n    CalendarWeekViewHeaderComponent,\\r\\n    CalendarWeekViewEventComponent,\\r\\n    CalendarWeekViewHourSegmentComponent,\\r\\n    CalendarWeekViewCurrentTimeMarkerComponent,\\r\\n  ],\\r\\n})\\r\\nexport class CalendarWeekModule {}\\r\\n\",\"import { NgModule } from '@angular/core';\\r\\nimport { CommonModule } from '@angular/common';\\r\\nimport { CalendarDayViewComponent } from './calendar-day-view/calendar-day-view.component';\\r\\nimport { CalendarCommonModule } from '../common/calendar-common.module';\\r\\nimport { CalendarWeekModule } from '../week/calendar-week.module';\\r\\n\\r\\nexport {\\r\\n  CalendarDayViewComponent,\\r\\n  CalendarDayViewBeforeRenderEvent,\\r\\n} from './calendar-day-view/calendar-day-view.component';\\r\\n\\r\\n@NgModule({\\r\\n  imports: [CommonModule, CalendarCommonModule, CalendarWeekModule],\\r\\n  declarations: [CalendarDayViewComponent],\\r\\n  exports: [CalendarDayViewComponent],\\r\\n})\\r\\nexport class CalendarDayModule {}\\r\\n\",\"import {\\r\\n  Component,\\r\\n  Input,\\r\\n  Output,\\r\\n  EventEmitter,\\r\\n  TemplateRef,\\r\\n} from '@angular/core';\\r\\nimport { MonthViewDay, CalendarEvent } from 'calendar-utils';\\r\\nimport { isWithinThreshold, trackByEventId } from '../../../common/util/util';\\r\\nimport { PlacementArray } from 'positioning';\\r\\n\\r\\n@Component({\\r\\n  selector: 'mwl-calendar-month-cell',\\r\\n  template: `\\r\\n    <ng-template\\r\\n      #defaultTemplate\\r\\n      let-day=\\\"day\\\"\\r\\n      let-openDay=\\\"openDay\\\"\\r\\n      let-locale=\\\"locale\\\"\\r\\n      let-tooltipPlacement=\\\"tooltipPlacement\\\"\\r\\n      let-highlightDay=\\\"highlightDay\\\"\\r\\n      let-unhighlightDay=\\\"unhighlightDay\\\"\\r\\n      let-eventClicked=\\\"eventClicked\\\"\\r\\n      let-tooltipTemplate=\\\"tooltipTemplate\\\"\\r\\n      let-tooltipAppendToBody=\\\"tooltipAppendToBody\\\"\\r\\n      let-tooltipDelay=\\\"tooltipDelay\\\"\\r\\n      let-trackByEventId=\\\"trackByEventId\\\"\\r\\n      let-validateDrag=\\\"validateDrag\\\"\\r\\n    >\\r\\n      <div\\r\\n        class=\\\"cal-cell-top\\\"\\r\\n        [attr.aria-label]=\\\"\\r\\n          { day: day, locale: locale } | calendarA11y : 'monthCell'\\r\\n        \\\"\\r\\n      >\\r\\n        <span aria-hidden=\\\"true\\\">\\r\\n          <span class=\\\"cal-day-badge\\\" *ngIf=\\\"day.badgeTotal > 0\\\">{{\\r\\n            day.badgeTotal\\r\\n          }}</span>\\r\\n          <span class=\\\"cal-day-number\\\">{{\\r\\n            day.date | calendarDate : 'monthViewDayNumber' : locale\\r\\n          }}</span>\\r\\n        </span>\\r\\n      </div>\\r\\n      <div class=\\\"cal-events\\\" *ngIf=\\\"day.events.length > 0\\\">\\r\\n        <div\\r\\n          class=\\\"cal-event\\\"\\r\\n          *ngFor=\\\"let event of day.events; trackBy: trackByEventId\\\"\\r\\n          [ngStyle]=\\\"{ backgroundColor: event.color?.primary }\\\"\\r\\n          [ngClass]=\\\"event?.cssClass\\\"\\r\\n          (mouseenter)=\\\"highlightDay.emit({ event: event })\\\"\\r\\n          (mouseleave)=\\\"unhighlightDay.emit({ event: event })\\\"\\r\\n          [mwlCalendarTooltip]=\\\"\\r\\n            event.title | calendarEventTitle : 'monthTooltip' : event\\r\\n          \\\"\\r\\n          [tooltipPlacement]=\\\"tooltipPlacement\\\"\\r\\n          [tooltipEvent]=\\\"event\\\"\\r\\n          [tooltipTemplate]=\\\"tooltipTemplate\\\"\\r\\n          [tooltipAppendToBody]=\\\"tooltipAppendToBody\\\"\\r\\n          [tooltipDelay]=\\\"tooltipDelay\\\"\\r\\n          mwlDraggable\\r\\n          [class.cal-draggable]=\\\"event.draggable\\\"\\r\\n          dragActiveClass=\\\"cal-drag-active\\\"\\r\\n          [dropData]=\\\"{ event: event, draggedFrom: day }\\\"\\r\\n          [dragAxis]=\\\"{ x: event.draggable, y: event.draggable }\\\"\\r\\n          [validateDrag]=\\\"validateDrag\\\"\\r\\n          [touchStartLongPress]=\\\"{ delay: 300, delta: 30 }\\\"\\r\\n          (mwlClick)=\\\"eventClicked.emit({ event: event, sourceEvent: $event })\\\"\\r\\n          [attr.aria-hidden]=\\\"{} | calendarA11y : 'hideMonthCellEvents'\\\"\\r\\n        ></div>\\r\\n      </div>\\r\\n    </ng-template>\\r\\n    <ng-template\\r\\n      [ngTemplateOutlet]=\\\"customTemplate || defaultTemplate\\\"\\r\\n      [ngTemplateOutletContext]=\\\"{\\r\\n        day: day,\\r\\n        openDay: openDay,\\r\\n        locale: locale,\\r\\n        tooltipPlacement: tooltipPlacement,\\r\\n        highlightDay: highlightDay,\\r\\n        unhighlightDay: unhighlightDay,\\r\\n        eventClicked: eventClicked,\\r\\n        tooltipTemplate: tooltipTemplate,\\r\\n        tooltipAppendToBody: tooltipAppendToBody,\\r\\n        tooltipDelay: tooltipDelay,\\r\\n        trackByEventId: trackByEventId,\\r\\n        validateDrag: validateDrag\\r\\n      }\\\"\\r\\n    >\\r\\n    </ng-template>\\r\\n  `,\\r\\n  // eslint-disable-next-line @angular-eslint/no-host-metadata-property\\r\\n  host: {\\r\\n    class: 'cal-cell cal-day-cell',\\r\\n    '[class.cal-past]': 'day.isPast',\\r\\n    '[class.cal-today]': 'day.isToday',\\r\\n    '[class.cal-future]': 'day.isFuture',\\r\\n    '[class.cal-weekend]': 'day.isWeekend',\\r\\n    '[class.cal-in-month]': 'day.inMonth',\\r\\n    '[class.cal-out-month]': '!day.inMonth',\\r\\n    '[class.cal-has-events]': 'day.events.length > 0',\\r\\n    '[class.cal-open]': 'day === openDay',\\r\\n    '[class.cal-event-highlight]': '!!day.backgroundColor',\\r\\n  },\\r\\n})\\r\\nexport class CalendarMonthCellComponent {\\r\\n  @Input() day: MonthViewDay;\\r\\n\\r\\n  @Input() openDay: MonthViewDay;\\r\\n\\r\\n  @Input() locale: string;\\r\\n\\r\\n  @Input() tooltipPlacement: PlacementArray;\\r\\n\\r\\n  @Input() tooltipAppendToBody: boolean;\\r\\n\\r\\n  @Input() customTemplate: TemplateRef<any>;\\r\\n\\r\\n  @Input() tooltipTemplate: TemplateRef<any>;\\r\\n\\r\\n  @Input() tooltipDelay: number | null;\\r\\n\\r\\n  @Output() highlightDay: EventEmitter<any> = new EventEmitter();\\r\\n\\r\\n  @Output() unhighlightDay: EventEmitter<any> = new EventEmitter();\\r\\n\\r\\n  @Output() eventClicked = new EventEmitter<{\\r\\n    event: CalendarEvent;\\r\\n    sourceEvent: MouseEvent;\\r\\n  }>();\\r\\n\\r\\n  trackByEventId = trackByEventId;\\r\\n\\r\\n  validateDrag = isWithinThreshold;\\r\\n}\\r\\n\",\"import {\\r\\n  Component,\\r\\n  Input,\\r\\n  Output,\\r\\n  EventEmitter,\\r\\n  TemplateRef,\\r\\n} from '@angular/core';\\r\\nimport {\\r\\n  trigger,\\r\\n  style,\\r\\n  state,\\r\\n  transition,\\r\\n  animate,\\r\\n  AnimationTriggerMetadata,\\r\\n} from '@angular/animations';\\r\\nimport { CalendarEvent } from 'calendar-utils';\\r\\nimport { isWithinThreshold, trackByEventId } from '../../../common/util/util';\\r\\n\\r\\nexport const collapseAnimation: AnimationTriggerMetadata = trigger('collapse', [\\r\\n  state(\\r\\n    'void',\\r\\n    style({\\r\\n      height: 0,\\r\\n      overflow: 'hidden',\\r\\n      'padding-top': 0,\\r\\n      'padding-bottom': 0,\\r\\n    })\\r\\n  ),\\r\\n  state(\\r\\n    '*',\\r\\n    style({\\r\\n      height: '*',\\r\\n      overflow: 'hidden',\\r\\n      'padding-top': '*',\\r\\n      'padding-bottom': '*',\\r\\n    })\\r\\n  ),\\r\\n  transition('* => void', animate('150ms ease-out')),\\r\\n  transition('void => *', animate('150ms ease-in')),\\r\\n]);\\r\\n\\r\\n@Component({\\r\\n  selector: 'mwl-calendar-open-day-events',\\r\\n  template: `\\r\\n    <ng-template\\r\\n      #defaultTemplate\\r\\n      let-events=\\\"events\\\"\\r\\n      let-eventClicked=\\\"eventClicked\\\"\\r\\n      let-isOpen=\\\"isOpen\\\"\\r\\n      let-trackByEventId=\\\"trackByEventId\\\"\\r\\n      let-validateDrag=\\\"validateDrag\\\"\\r\\n    >\\r\\n      <div\\r\\n        class=\\\"cal-open-day-events\\\"\\r\\n        [@collapse]\\r\\n        *ngIf=\\\"isOpen\\\"\\r\\n        role=\\\"application\\\"\\r\\n      >\\r\\n        <span\\r\\n          tabindex=\\\"-1\\\"\\r\\n          role=\\\"alert\\\"\\r\\n          [attr.aria-label]=\\\"\\r\\n            { date: date, locale: locale } | calendarA11y : 'openDayEventsAlert'\\r\\n          \\\"\\r\\n        ></span>\\r\\n        <span\\r\\n          tabindex=\\\"0\\\"\\r\\n          role=\\\"landmark\\\"\\r\\n          [attr.aria-label]=\\\"\\r\\n            { date: date, locale: locale }\\r\\n              | calendarA11y : 'openDayEventsLandmark'\\r\\n          \\\"\\r\\n        ></span>\\r\\n        <div\\r\\n          *ngFor=\\\"let event of events; trackBy: trackByEventId\\\"\\r\\n          [ngClass]=\\\"event?.cssClass\\\"\\r\\n          mwlDraggable\\r\\n          [class.cal-draggable]=\\\"event.draggable\\\"\\r\\n          dragActiveClass=\\\"cal-drag-active\\\"\\r\\n          [dropData]=\\\"{ event: event }\\\"\\r\\n          [dragAxis]=\\\"{ x: event.draggable, y: event.draggable }\\\"\\r\\n          [validateDrag]=\\\"validateDrag\\\"\\r\\n          [touchStartLongPress]=\\\"{ delay: 300, delta: 30 }\\\"\\r\\n        >\\r\\n          <span\\r\\n            class=\\\"cal-event\\\"\\r\\n            [ngStyle]=\\\"{ backgroundColor: event.color?.primary }\\\"\\r\\n          >\\r\\n          </span>\\r\\n          &ngsp;\\r\\n          <mwl-calendar-event-title\\r\\n            [event]=\\\"event\\\"\\r\\n            [customTemplate]=\\\"eventTitleTemplate\\\"\\r\\n            view=\\\"month\\\"\\r\\n            (mwlClick)=\\\"\\r\\n              eventClicked.emit({ event: event, sourceEvent: $event })\\r\\n            \\\"\\r\\n            (mwlKeydownEnter)=\\\"\\r\\n              eventClicked.emit({ event: event, sourceEvent: $event })\\r\\n            \\\"\\r\\n            tabindex=\\\"0\\\"\\r\\n            [attr.aria-label]=\\\"\\r\\n              { event: event, locale: locale }\\r\\n                | calendarA11y : 'eventDescription'\\r\\n            \\\"\\r\\n          >\\r\\n          </mwl-calendar-event-title>\\r\\n          &ngsp;\\r\\n          <mwl-calendar-event-actions\\r\\n            [event]=\\\"event\\\"\\r\\n            [customTemplate]=\\\"eventActionsTemplate\\\"\\r\\n          >\\r\\n          </mwl-calendar-event-actions>\\r\\n        </div>\\r\\n      </div>\\r\\n    </ng-template>\\r\\n    <ng-template\\r\\n      [ngTemplateOutlet]=\\\"customTemplate || defaultTemplate\\\"\\r\\n      [ngTemplateOutletContext]=\\\"{\\r\\n        events: events,\\r\\n        eventClicked: eventClicked,\\r\\n        isOpen: isOpen,\\r\\n        trackByEventId: trackByEventId,\\r\\n        validateDrag: validateDrag\\r\\n      }\\\"\\r\\n    >\\r\\n    </ng-template>\\r\\n  `,\\r\\n  animations: [collapseAnimation],\\r\\n})\\r\\nexport class CalendarOpenDayEventsComponent {\\r\\n  @Input()\\r\\n  locale!: string;\\r\\n\\r\\n  @Input() isOpen: boolean = false;\\r\\n\\r\\n  @Input()\\r\\n  events!: CalendarEvent[];\\r\\n\\r\\n  @Input()\\r\\n  customTemplate!: TemplateRef<any>;\\r\\n\\r\\n  @Input()\\r\\n  eventTitleTemplate!: TemplateRef<any>;\\r\\n\\r\\n  @Input()\\r\\n  eventActionsTemplate!: TemplateRef<any>;\\r\\n\\r\\n  @Input()\\r\\n  date!: Date;\\r\\n\\r\\n  @Output() eventClicked = new EventEmitter<{\\r\\n    event: CalendarEvent;\\r\\n    sourceEvent: MouseEvent | KeyboardEvent;\\r\\n  }>();\\r\\n\\r\\n  trackByEventId = trackByEventId;\\r\\n\\r\\n  validateDrag = isWithinThreshold;\\r\\n}\\r\\n\",\"import {\\r\\n  Component,\\r\\n  Input,\\r\\n  TemplateRef,\\r\\n  EventEmitter,\\r\\n  Output,\\r\\n} from '@angular/core';\\r\\nimport { WeekDay } from 'calendar-utils';\\r\\nimport { trackByWeekDayHeaderDate } from '../../../common/util/util';\\r\\n\\r\\n@Component({\\r\\n  selector: 'mwl-calendar-month-view-header',\\r\\n  template: `\\r\\n    <ng-template\\r\\n      #defaultTemplate\\r\\n      let-days=\\\"days\\\"\\r\\n      let-locale=\\\"locale\\\"\\r\\n      let-trackByWeekDayHeaderDate=\\\"trackByWeekDayHeaderDate\\\"\\r\\n    >\\r\\n      <div class=\\\"cal-cell-row cal-header\\\" role=\\\"row\\\">\\r\\n        <div\\r\\n          class=\\\"cal-cell\\\"\\r\\n          *ngFor=\\\"let day of days; trackBy: trackByWeekDayHeaderDate\\\"\\r\\n          [class.cal-past]=\\\"day.isPast\\\"\\r\\n          [class.cal-today]=\\\"day.isToday\\\"\\r\\n          [class.cal-future]=\\\"day.isFuture\\\"\\r\\n          [class.cal-weekend]=\\\"day.isWeekend\\\"\\r\\n          (click)=\\\"\\r\\n            columnHeaderClicked.emit({\\r\\n              isoDayNumber: day.day,\\r\\n              sourceEvent: $event\\r\\n            })\\r\\n          \\\"\\r\\n          [ngClass]=\\\"day.cssClass\\\"\\r\\n          tabindex=\\\"0\\\"\\r\\n          role=\\\"columnheader\\\"\\r\\n        >\\r\\n          {{ day.date | calendarDate : 'monthViewColumnHeader' : locale }}\\r\\n        </div>\\r\\n      </div>\\r\\n    </ng-template>\\r\\n    <ng-template\\r\\n      [ngTemplateOutlet]=\\\"customTemplate || defaultTemplate\\\"\\r\\n      [ngTemplateOutletContext]=\\\"{\\r\\n        days: days,\\r\\n        locale: locale,\\r\\n        trackByWeekDayHeaderDate: trackByWeekDayHeaderDate\\r\\n      }\\\"\\r\\n    >\\r\\n    </ng-template>\\r\\n  `,\\r\\n})\\r\\nexport class CalendarMonthViewHeaderComponent {\\r\\n  @Input() days: WeekDay[];\\r\\n\\r\\n  @Input() locale: string;\\r\\n\\r\\n  @Input() customTemplate: TemplateRef<any>;\\r\\n\\r\\n  @Output() columnHeaderClicked = new EventEmitter<{\\r\\n    isoDayNumber: number;\\r\\n    sourceEvent: MouseEvent;\\r\\n  }>();\\r\\n\\r\\n  trackByWeekDayHeaderDate = trackByWeekDayHeaderDate;\\r\\n}\\r\\n\",\"import {\\r\\n  Component,\\r\\n  OnChanges,\\r\\n  Input,\\r\\n  Output,\\r\\n  EventEmitter,\\r\\n  ChangeDetectorRef,\\r\\n  OnInit,\\r\\n  OnDestroy,\\r\\n  LOCALE_ID,\\r\\n  Inject,\\r\\n  TemplateRef,\\r\\n} from '@angular/core';\\r\\nimport {\\r\\n  CalendarEvent,\\r\\n  WeekDay,\\r\\n  MonthView,\\r\\n  MonthViewDay,\\r\\n  ViewPeriod,\\r\\n} from 'calendar-utils';\\r\\nimport { Subject, Subscription } from 'rxjs';\\r\\nimport {\\r\\n  CalendarEventTimesChangedEvent,\\r\\n  CalendarEventTimesChangedEventType,\\r\\n} from '../../common/calendar-event-times-changed-event/calendar-event-times-changed-event.interface';\\r\\nimport { CalendarUtils } from '../../common/calendar-utils/calendar-utils.provider';\\r\\nimport { validateEvents } from '../../common/util/util';\\r\\nimport { DateAdapter } from '../../date-adapters/date-adapter';\\r\\nimport { PlacementArray } from 'positioning';\\r\\n\\r\\nexport interface CalendarMonthViewBeforeRenderEvent {\\r\\n  header: WeekDay[];\\r\\n  body: MonthViewDay[];\\r\\n  period: ViewPeriod;\\r\\n}\\r\\n\\r\\nexport interface CalendarMonthViewEventTimesChangedEvent<\\r\\n  EventMetaType = any,\\r\\n  DayMetaType = any\\r\\n> extends CalendarEventTimesChangedEvent<EventMetaType> {\\r\\n  day: MonthViewDay<DayMetaType>;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Shows all events on a given month. Example usage:\\r\\n *\\r\\n * ```typescript\\r\\n * <mwl-calendar-month-view\\r\\n *  [viewDate]=\\\"viewDate\\\"\\r\\n *  [events]=\\\"events\\\">\\r\\n * </mwl-calendar-month-view>\\r\\n * ```\\r\\n */\\r\\n@Component({\\r\\n  selector: 'mwl-calendar-month-view',\\r\\n  template: `\\r\\n    <div class=\\\"cal-month-view\\\" role=\\\"grid\\\">\\r\\n      <mwl-calendar-month-view-header\\r\\n        [days]=\\\"columnHeaders\\\"\\r\\n        [locale]=\\\"locale\\\"\\r\\n        (columnHeaderClicked)=\\\"columnHeaderClicked.emit($event)\\\"\\r\\n        [customTemplate]=\\\"headerTemplate\\\"\\r\\n      >\\r\\n      </mwl-calendar-month-view-header>\\r\\n      <div class=\\\"cal-days\\\">\\r\\n        <div\\r\\n          *ngFor=\\\"let rowIndex of view.rowOffsets; trackBy: trackByRowOffset\\\"\\r\\n        >\\r\\n          <div role=\\\"row\\\" class=\\\"cal-cell-row\\\">\\r\\n            <mwl-calendar-month-cell\\r\\n              role=\\\"gridcell\\\"\\r\\n              *ngFor=\\\"\\r\\n                let day of view.days\\r\\n                  | slice : rowIndex : rowIndex + view.totalDaysVisibleInWeek;\\r\\n                trackBy: trackByDate\\r\\n              \\\"\\r\\n              [ngClass]=\\\"day?.cssClass\\\"\\r\\n              [day]=\\\"day\\\"\\r\\n              [openDay]=\\\"openDay\\\"\\r\\n              [locale]=\\\"locale\\\"\\r\\n              [tooltipPlacement]=\\\"tooltipPlacement\\\"\\r\\n              [tooltipAppendToBody]=\\\"tooltipAppendToBody\\\"\\r\\n              [tooltipTemplate]=\\\"tooltipTemplate\\\"\\r\\n              [tooltipDelay]=\\\"tooltipDelay\\\"\\r\\n              [customTemplate]=\\\"cellTemplate\\\"\\r\\n              [ngStyle]=\\\"{ backgroundColor: day.backgroundColor }\\\"\\r\\n              (mwlClick)=\\\"dayClicked.emit({ day: day, sourceEvent: $event })\\\"\\r\\n              [clickListenerDisabled]=\\\"dayClicked.observers.length === 0\\\"\\r\\n              (mwlKeydownEnter)=\\\"\\r\\n                dayClicked.emit({ day: day, sourceEvent: $event })\\r\\n              \\\"\\r\\n              (highlightDay)=\\\"toggleDayHighlight($event.event, true)\\\"\\r\\n              (unhighlightDay)=\\\"toggleDayHighlight($event.event, false)\\\"\\r\\n              mwlDroppable\\r\\n              dragOverClass=\\\"cal-drag-over\\\"\\r\\n              (drop)=\\\"\\r\\n                eventDropped(\\r\\n                  day,\\r\\n                  $event.dropData.event,\\r\\n                  $event.dropData.draggedFrom\\r\\n                )\\r\\n              \\\"\\r\\n              (eventClicked)=\\\"\\r\\n                eventClicked.emit({\\r\\n                  event: $event.event,\\r\\n                  sourceEvent: $event.sourceEvent\\r\\n                })\\r\\n              \\\"\\r\\n              [attr.tabindex]=\\\"{} | calendarA11y : 'monthCellTabIndex'\\\"\\r\\n            >\\r\\n            </mwl-calendar-month-cell>\\r\\n          </div>\\r\\n          <mwl-calendar-open-day-events\\r\\n            [locale]=\\\"locale\\\"\\r\\n            [isOpen]=\\\"openRowIndex === rowIndex\\\"\\r\\n            [events]=\\\"openDay?.events\\\"\\r\\n            [date]=\\\"openDay?.date\\\"\\r\\n            [customTemplate]=\\\"openDayEventsTemplate\\\"\\r\\n            [eventTitleTemplate]=\\\"eventTitleTemplate\\\"\\r\\n            [eventActionsTemplate]=\\\"eventActionsTemplate\\\"\\r\\n            (eventClicked)=\\\"\\r\\n              eventClicked.emit({\\r\\n                event: $event.event,\\r\\n                sourceEvent: $event.sourceEvent\\r\\n              })\\r\\n            \\\"\\r\\n            mwlDroppable\\r\\n            dragOverClass=\\\"cal-drag-over\\\"\\r\\n            (drop)=\\\"\\r\\n              eventDropped(\\r\\n                openDay,\\r\\n                $event.dropData.event,\\r\\n                $event.dropData.draggedFrom\\r\\n              )\\r\\n            \\\"\\r\\n          >\\r\\n          </mwl-calendar-open-day-events>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  `,\\r\\n})\\r\\nexport class CalendarMonthViewComponent\\r\\n  implements OnChanges, OnInit, OnDestroy\\r\\n{\\r\\n  /**\\r\\n   * The current view date\\r\\n   */\\r\\n  @Input() viewDate: Date;\\r\\n\\r\\n  /**\\r\\n   * An array of events to display on view.\\r\\n   * The schema is available here: https://github.com/mattlewis92/calendar-utils/blob/c51689985f59a271940e30bc4e2c4e1fee3fcb5c/src/calendarUtils.ts#L49-L63\\r\\n   */\\r\\n  @Input() events: CalendarEvent[] = [];\\r\\n\\r\\n  /**\\r\\n   * An array of day indexes (0 = sunday, 1 = monday etc) that will be hidden on the view\\r\\n   */\\r\\n  @Input() excludeDays: number[] = [];\\r\\n\\r\\n  /**\\r\\n   * Whether the events list for the day of the `viewDate` option is visible or not\\r\\n   */\\r\\n  @Input() activeDayIsOpen: boolean = false;\\r\\n\\r\\n  /**\\r\\n   * If set will be used to determine the day that should be open. If not set, the `viewDate` is used\\r\\n   */\\r\\n  @Input() activeDay: Date;\\r\\n\\r\\n  /**\\r\\n   * An observable that when emitted on will re-render the current view\\r\\n   */\\r\\n  @Input() refresh: Subject<any>;\\r\\n\\r\\n  /**\\r\\n   * The locale used to format dates\\r\\n   */\\r\\n  @Input() locale: string;\\r\\n\\r\\n  /**\\r\\n   * The placement of the event tooltip\\r\\n   */\\r\\n  @Input() tooltipPlacement: PlacementArray = 'auto';\\r\\n\\r\\n  /**\\r\\n   * A custom template to use for the event tooltips\\r\\n   */\\r\\n  @Input() tooltipTemplate: TemplateRef<any>;\\r\\n\\r\\n  /**\\r\\n   * Whether to append tooltips to the body or next to the trigger element\\r\\n   */\\r\\n  @Input() tooltipAppendToBody: boolean = true;\\r\\n\\r\\n  /**\\r\\n   * The delay in milliseconds before the tooltip should be displayed. If not provided the tooltip\\r\\n   * will be displayed immediately.\\r\\n   */\\r\\n  @Input() tooltipDelay: number | null = null;\\r\\n\\r\\n  /**\\r\\n   * The start number of the week.\\r\\n   * If using the moment date adapter this option won't do anything and you'll need to set it globally like so:\\r\\n   * ```\\r\\n   * moment.updateLocale('en', {\\r\\n   *   week: {\\r\\n   *     dow: 1, // set start of week to monday instead\\r\\n   *     doy: 0,\\r\\n   *   },\\r\\n   * });\\r\\n   * ```\\r\\n   */\\r\\n  @Input() weekStartsOn: number;\\r\\n\\r\\n  /**\\r\\n   * A custom template to use to replace the header\\r\\n   */\\r\\n  @Input() headerTemplate: TemplateRef<any>;\\r\\n\\r\\n  /**\\r\\n   * A custom template to use to replace the day cell\\r\\n   */\\r\\n  @Input() cellTemplate: TemplateRef<any>;\\r\\n\\r\\n  /**\\r\\n   * A custom template to use for the slide down box of events for the active day\\r\\n   */\\r\\n  @Input() openDayEventsTemplate: TemplateRef<any>;\\r\\n\\r\\n  /**\\r\\n   * A custom template to use for event titles\\r\\n   */\\r\\n  @Input() eventTitleTemplate: TemplateRef<any>;\\r\\n\\r\\n  /**\\r\\n   * A custom template to use for event actions\\r\\n   */\\r\\n  @Input() eventActionsTemplate: TemplateRef<any>;\\r\\n\\r\\n  /**\\r\\n   * An array of day indexes (0 = sunday, 1 = monday etc) that indicate which days are weekends\\r\\n   */\\r\\n  @Input() weekendDays: number[];\\r\\n\\r\\n  /**\\r\\n   * An output that will be called before the view is rendered for the current month.\\r\\n   * If you add the `cssClass` property to a day in the body it will add that class to the cell element in the template\\r\\n   */\\r\\n  @Output() beforeViewRender =\\r\\n    new EventEmitter<CalendarMonthViewBeforeRenderEvent>();\\r\\n\\r\\n  /**\\r\\n   * Called when the day cell is clicked\\r\\n   */\\r\\n  @Output() dayClicked = new EventEmitter<{\\r\\n    day: MonthViewDay;\\r\\n    sourceEvent: MouseEvent | KeyboardEvent;\\r\\n  }>();\\r\\n\\r\\n  /**\\r\\n   * Called when the event title is clicked\\r\\n   */\\r\\n  @Output() eventClicked = new EventEmitter<{\\r\\n    event: CalendarEvent;\\r\\n    sourceEvent: MouseEvent | KeyboardEvent;\\r\\n  }>();\\r\\n\\r\\n  /**\\r\\n   * Called when a header week day is clicked. Returns ISO day number.\\r\\n   */\\r\\n  @Output() columnHeaderClicked = new EventEmitter<{\\r\\n    isoDayNumber: number;\\r\\n    sourceEvent: MouseEvent | KeyboardEvent;\\r\\n  }>();\\r\\n\\r\\n  /**\\r\\n   * Called when an event is dragged and dropped\\r\\n   */\\r\\n  @Output()\\r\\n  eventTimesChanged =\\r\\n    new EventEmitter<CalendarMonthViewEventTimesChangedEvent>();\\r\\n\\r\\n  /**\\r\\n   * @hidden\\r\\n   */\\r\\n  columnHeaders: WeekDay[];\\r\\n\\r\\n  /**\\r\\n   * @hidden\\r\\n   */\\r\\n  view: MonthView;\\r\\n\\r\\n  /**\\r\\n   * @hidden\\r\\n   */\\r\\n  openRowIndex: number;\\r\\n\\r\\n  /**\\r\\n   * @hidden\\r\\n   */\\r\\n  openDay: MonthViewDay;\\r\\n\\r\\n  /**\\r\\n   * @hidden\\r\\n   */\\r\\n  refreshSubscription: Subscription;\\r\\n\\r\\n  /**\\r\\n   * @hidden\\r\\n   */\\r\\n  constructor(\\r\\n    protected cdr: ChangeDetectorRef,\\r\\n    protected utils: CalendarUtils,\\r\\n    @Inject(LOCALE_ID) locale: string,\\r\\n    protected dateAdapter: DateAdapter\\r\\n  ) {\\r\\n    this.locale = locale;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @hidden\\r\\n   */\\r\\n  trackByRowOffset = (index: number, offset: number) =>\\r\\n    this.view.days\\r\\n      .slice(offset, this.view.totalDaysVisibleInWeek)\\r\\n      .map((day) => day.date.toISOString())\\r\\n      .join('-');\\r\\n\\r\\n  /**\\r\\n   * @hidden\\r\\n   */\\r\\n  trackByDate = (index: number, day: MonthViewDay) => day.date.toISOString();\\r\\n\\r\\n  /**\\r\\n   * @hidden\\r\\n   */\\r\\n  ngOnInit(): void {\\r\\n    if (this.refresh) {\\r\\n      this.refreshSubscription = this.refresh.subscribe(() => {\\r\\n        this.refreshAll();\\r\\n        this.cdr.markForCheck();\\r\\n      });\\r\\n    }\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @hidden\\r\\n   */\\r\\n  ngOnChanges(changes: any): void {\\r\\n    const refreshHeader =\\r\\n      changes.viewDate || changes.excludeDays || changes.weekendDays;\\r\\n    const refreshBody =\\r\\n      changes.viewDate ||\\r\\n      changes.events ||\\r\\n      changes.excludeDays ||\\r\\n      changes.weekendDays;\\r\\n\\r\\n    if (refreshHeader) {\\r\\n      this.refreshHeader();\\r\\n    }\\r\\n\\r\\n    if (changes.events) {\\r\\n      validateEvents(this.events);\\r\\n    }\\r\\n\\r\\n    if (refreshBody) {\\r\\n      this.refreshBody();\\r\\n    }\\r\\n\\r\\n    if (refreshHeader || refreshBody) {\\r\\n      this.emitBeforeViewRender();\\r\\n    }\\r\\n\\r\\n    if (\\r\\n      changes.activeDayIsOpen ||\\r\\n      changes.viewDate ||\\r\\n      changes.events ||\\r\\n      changes.excludeDays ||\\r\\n      changes.activeDay\\r\\n    ) {\\r\\n      this.checkActiveDayIsOpen();\\r\\n    }\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @hidden\\r\\n   */\\r\\n  ngOnDestroy(): void {\\r\\n    if (this.refreshSubscription) {\\r\\n      this.refreshSubscription.unsubscribe();\\r\\n    }\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @hidden\\r\\n   */\\r\\n  toggleDayHighlight(event: CalendarEvent, isHighlighted: boolean): void {\\r\\n    this.view.days.forEach((day) => {\\r\\n      if (isHighlighted && day.events.indexOf(event) > -1) {\\r\\n        day.backgroundColor =\\r\\n          (event.color && event.color.secondary) || '#D1E8FF';\\r\\n      } else {\\r\\n        delete day.backgroundColor;\\r\\n      }\\r\\n    });\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @hidden\\r\\n   */\\r\\n  eventDropped(\\r\\n    droppedOn: MonthViewDay,\\r\\n    event: CalendarEvent,\\r\\n    draggedFrom?: MonthViewDay\\r\\n  ): void {\\r\\n    if (droppedOn !== draggedFrom) {\\r\\n      const year: number = this.dateAdapter.getYear(droppedOn.date);\\r\\n      const month: number = this.dateAdapter.getMonth(droppedOn.date);\\r\\n      const date: number = this.dateAdapter.getDate(droppedOn.date);\\r\\n      const newStart: Date = this.dateAdapter.setDate(\\r\\n        this.dateAdapter.setMonth(\\r\\n          this.dateAdapter.setYear(event.start, year),\\r\\n          month\\r\\n        ),\\r\\n        date\\r\\n      );\\r\\n      let newEnd: Date;\\r\\n      if (event.end) {\\r\\n        const secondsDiff: number = this.dateAdapter.differenceInSeconds(\\r\\n          newStart,\\r\\n          event.start\\r\\n        );\\r\\n        newEnd = this.dateAdapter.addSeconds(event.end, secondsDiff);\\r\\n      }\\r\\n      this.eventTimesChanged.emit({\\r\\n        event,\\r\\n        newStart,\\r\\n        newEnd,\\r\\n        day: droppedOn,\\r\\n        type: CalendarEventTimesChangedEventType.Drop,\\r\\n      });\\r\\n    }\\r\\n  }\\r\\n\\r\\n  protected refreshHeader(): void {\\r\\n    this.columnHeaders = this.utils.getWeekViewHeader({\\r\\n      viewDate: this.viewDate,\\r\\n      weekStartsOn: this.weekStartsOn,\\r\\n      excluded: this.excludeDays,\\r\\n      weekendDays: this.weekendDays,\\r\\n    });\\r\\n  }\\r\\n\\r\\n  protected refreshBody(): void {\\r\\n    this.view = this.utils.getMonthView({\\r\\n      events: this.events,\\r\\n      viewDate: this.viewDate,\\r\\n      weekStartsOn: this.weekStartsOn,\\r\\n      excluded: this.excludeDays,\\r\\n      weekendDays: this.weekendDays,\\r\\n    });\\r\\n  }\\r\\n\\r\\n  protected checkActiveDayIsOpen(): void {\\r\\n    if (this.activeDayIsOpen === true) {\\r\\n      const activeDay = this.activeDay || this.viewDate;\\r\\n      this.openDay = this.view.days.find((day) =>\\r\\n        this.dateAdapter.isSameDay(day.date, activeDay)\\r\\n      );\\r\\n      const index: number = this.view.days.indexOf(this.openDay);\\r\\n      this.openRowIndex =\\r\\n        Math.floor(index / this.view.totalDaysVisibleInWeek) *\\r\\n        this.view.totalDaysVisibleInWeek;\\r\\n    } else {\\r\\n      this.openRowIndex = null;\\r\\n      this.openDay = null;\\r\\n    }\\r\\n  }\\r\\n\\r\\n  protected refreshAll(): void {\\r\\n    this.refreshHeader();\\r\\n    this.refreshBody();\\r\\n    this.emitBeforeViewRender();\\r\\n    this.checkActiveDayIsOpen();\\r\\n  }\\r\\n\\r\\n  protected emitBeforeViewRender(): void {\\r\\n    if (this.columnHeaders && this.view) {\\r\\n      this.beforeViewRender.emit({\\r\\n        header: this.columnHeaders,\\r\\n        body: this.view.days,\\r\\n        period: this.view.period,\\r\\n      });\\r\\n    }\\r\\n  }\\r\\n}\\r\\n\",\"import { NgModule } from '@angular/core';\\r\\nimport { CommonModule } from '@angular/common';\\r\\nimport { DragAndDropModule } from 'angular-draggable-droppable';\\r\\nimport { CalendarMonthViewComponent } from './calendar-month-view/calendar-month-view.component';\\r\\nimport { CalendarMonthViewHeaderComponent } from './calendar-month-view/calendar-month-view-header/calendar-month-view-header.component';\\r\\nimport { CalendarMonthCellComponent } from './calendar-month-view/calendar-month-cell/calendar-month-cell.component';\\r\\nimport { CalendarOpenDayEventsComponent } from './calendar-month-view/calendar-open-day-events/calendar-open-day-events.component';\\r\\nimport { CalendarCommonModule } from '../common/calendar-common.module';\\r\\n\\r\\nexport {\\r\\n  CalendarMonthViewComponent,\\r\\n  CalendarMonthViewBeforeRenderEvent,\\r\\n  CalendarMonthViewEventTimesChangedEvent,\\r\\n} from './calendar-month-view/calendar-month-view.component';\\r\\nexport { MonthViewDay as CalendarMonthViewDay } from 'calendar-utils';\\r\\nexport { collapseAnimation } from './calendar-month-view/calendar-open-day-events/calendar-open-day-events.component';\\r\\n\\r\\n// needed for ivy, not part of the public api\\r\\nexport { CalendarMonthCellComponent as ɵCalendarMonthCellComponent } from './calendar-month-view/calendar-month-cell/calendar-month-cell.component';\\r\\nexport { CalendarMonthViewHeaderComponent as ɵCalendarMonthViewHeaderComponent } from './calendar-month-view/calendar-month-view-header/calendar-month-view-header.component';\\r\\nexport { CalendarOpenDayEventsComponent as ɵCalendarOpenDayEventsComponent } from './calendar-month-view/calendar-open-day-events/calendar-open-day-events.component';\\r\\n\\r\\n@NgModule({\\r\\n  imports: [CommonModule, DragAndDropModule, CalendarCommonModule],\\r\\n  declarations: [\\r\\n    CalendarMonthViewComponent,\\r\\n    CalendarMonthCellComponent,\\r\\n    CalendarOpenDayEventsComponent,\\r\\n    CalendarMonthViewHeaderComponent,\\r\\n  ],\\r\\n  exports: [\\r\\n    DragAndDropModule,\\r\\n    CalendarMonthViewComponent,\\r\\n    CalendarMonthCellComponent,\\r\\n    CalendarOpenDayEventsComponent,\\r\\n    CalendarMonthViewHeaderComponent,\\r\\n  ],\\r\\n})\\r\\nexport class CalendarMonthModule {}\\r\\n\",\"import { Component, OnInit } from '@angular/core';\\r\\n\\r\\n@Component({\\r\\n    selector: 'calendar-name',\\r\\n    templateUrl: './calendar.component.html',\\r\\n    styleUrls: ['./calendar.scss']\\r\\n})\\r\\nexport class CalendarComponent implements OnInit {\\r\\n    constructor() { }\\r\\n\\r\\n    ngOnInit(): void { }\\r\\n}\\r\\n\",\"\",\"import { NgModule, ModuleWithProviders, Provider } from '@angular/core';\\nimport { CalendarMonthModule } from './month/calendar-month.module';\\nimport { CalendarWeekModule } from './week/calendar-week.module';\\nimport { CalendarDayModule } from './day/calendar-day.module';\\nimport { \\n  CalendarCommonModule,\\n  CalendarModuleConfig,\\n  CalendarEventTitleFormatter,\\n  CalendarDateFormatter,\\n  CalendarA11y,\\n } from './common/calendar-common.module';\\nimport { CalendarUtils } from './common/calendar-utils/calendar-utils.provider';\\nimport { CalendarComponent } from './calendar.component';\\n\\n\\n@NgModule({\\n  declarations: [\\n    CalendarComponent\\n  ],\\n  imports: [\\n    CalendarMonthModule,\\n    CalendarWeekModule,\\n    CalendarDayModule,\\n    CalendarCommonModule\\n  ],\\n  exports: [\\n    CalendarComponent,\\n    CalendarMonthModule,\\n    CalendarWeekModule,\\n    CalendarDayModule,\\n    CalendarCommonModule\\n  ]\\n})\\nexport class CalendarModule {\\n  static forRoot(\\n    dateAdapter: Provider,\\n    config: CalendarModuleConfig = {}\\n  ): ModuleWithProviders<CalendarModule> {\\n    return {\\n      ngModule: CalendarModule,\\n      providers: [\\n        dateAdapter,\\n        config.eventTitleFormatter || CalendarEventTitleFormatter,\\n        config.dateFormatter || CalendarDateFormatter,\\n        config.utils || CalendarUtils,\\n        config.a11y || CalendarA11y,\\n      ],\\n    };\\n  }\\n}\\n\",\"/*\\n * Public API Surface of ng-calendar-schedule\\n */\\nexport * from './lib/date-adapters/date-adapter';\\nexport * from './lib/date-adapters/date-fns';\\nexport * from './lib/common/calendar-common.module';\\nexport * from './lib/day/calendar-day.module';\\nexport * from './lib/month/calendar-month.module';\\nexport * from './lib/week/calendar-week.module';\\nexport * from './lib/calendar.module';\\nexport * from './lib/calendar.component'\\n\",\"/**\\n * Generated bundle index. Do not edit.\\n */\\n\\nexport * from './public-api';\\n\"],\"names\":[\"baseAdapterFactory\",\"i2.ClickDirective\",\"i3.KeydownEnterDirective\",\"i4.CalendarA11yPipe\",\"i1.CalendarEventTitleFormatter\",\"i2.CalendarEventTitlePipe\",\"i3.CalendarA11yPipe\",\"validateEventsWithoutLog\",\"i1.DateAdapter\",\"i3.ClickDirective\",\"i4.CalendarDatePipe\",\"i2.CalendarEventActionsComponent\",\"i3.CalendarEventTitleComponent\",\"i4.CalendarTooltipDirective\",\"i5.ClickDirective\",\"i6.KeydownEnterDirective\",\"i7.CalendarEventTitlePipe\",\"i8.CalendarA11yPipe\",\"i2.CalendarDatePipe\",\"i2\",\"i2.DateAdapter\",\"i3\",\"i5\",\"i6.ClickDirective\",\"i7.CalendarWeekViewHeaderComponent\",\"i8.CalendarWeekViewEventComponent\",\"i9.CalendarWeekViewHourSegmentComponent\",\"i10.CalendarWeekViewCurrentTimeMarkerComponent\",\"i1.CalendarWeekViewComponent\",\"i3.CalendarTooltipDirective\",\"i4.ClickDirective\",\"i5.CalendarDatePipe\",\"i6.CalendarEventTitlePipe\",\"i7.CalendarA11yPipe\",\"i3.CalendarEventActionsComponent\",\"i4.CalendarEventTitleComponent\",\"i4\",\"i7.CalendarMonthCellComponent\",\"i8.CalendarOpenDayEventsComponent\",\"i9.CalendarMonthViewHeaderComponent\",\"i10.CalendarA11yPipe\"],\"mappings\":\"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\"}","type":"asset"}],"fesm2015":[{"exports":["CalendarA11y","CalendarAngularDateFormatter","CalendarCommonModule","CalendarComponent","CalendarDateFormatter","CalendarDayModule","CalendarDayViewComponent","CalendarEventTimesChangedEventType","CalendarEventTitleFormatter","CalendarModule","CalendarMomentDateFormatter","CalendarMonthModule","CalendarMonthViewComponent","CalendarNativeDateFormatter","CalendarUtils","CalendarView","CalendarWeekModule","CalendarWeekViewComponent","DAYS_OF_WEEK","DateAdapter","MOMENT","adapterFactory","collapseAnimation","getWeekViewPeriod","ɵCalendarA11yPipe","ɵCalendarDatePipe","ɵCalendarEventActionsComponent","ɵCalendarEventTitleComponent","ɵCalendarEventTitlePipe","ɵCalendarMonthCellComponent","ɵCalendarMonthViewHeaderComponent","ɵCalendarNextViewDirective","ɵCalendarOpenDayEventsComponent","ɵCalendarPreviousViewDirective","ɵCalendarTodayDirective","ɵCalendarTooltipDirective","ɵCalendarTooltipWindowComponent","ɵCalendarWeekViewCurrentTimeMarkerComponent","ɵCalendarWeekViewEventComponent","ɵCalendarWeekViewHeaderComponent","ɵCalendarWeekViewHourSegmentComponent","ɵClickDirective","ɵKeydownEnterDirective"],"facadeModuleId":"C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\ng-calendar-schedule.mjs","isDynamicEntry":false,"isEntry":true,"isImplicitEntry":false,"moduleIds":["C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\date-adapters\\date-adapter.mjs","C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\date-adapters\\date-fns\\index.mjs","C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\common\\click\\click.directive.mjs","C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\common\\keydown-enter\\keydown-enter.directive.mjs","C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\common\\calendar-a11y\\calendar-a11y.provider.mjs","C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\common\\calendar-a11y\\calendar-a11y.pipe.mjs","C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\common\\calendar-event-actions\\calendar-event-actions.component.mjs","C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\common\\calendar-event-title-formatter\\calendar-event-title-formatter.provider.mjs","C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\common\\calendar-event-title\\calendar-event-title.pipe.mjs","C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\common\\calendar-event-title\\calendar-event-title.component.mjs","C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\common\\calendar-tooltip\\calendar-tooltip.directive.mjs","C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\common\\calendar-view\\calendar-view.enum.mjs","C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\common\\util\\util.mjs","C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\common\\calendar-previous-view\\calendar-previous-view.directive.mjs","C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\common\\calendar-next-view\\calendar-next-view.directive.mjs","C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\common\\calendar-today\\calendar-today.directive.mjs","C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\common\\calendar-angular-date-formatter\\calendar-angular-date-formatter.provider.mjs","C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\common\\calendar-date-formatter\\calendar-date-formatter.provider.mjs","C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\common\\calendar-date\\calendar-date.pipe.mjs","C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\common\\calendar-utils\\calendar-utils.provider.mjs","C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\common\\calendar-moment-date-formatter\\calendar-moment-date-formatter.provider.mjs","C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\common\\calendar-native-date-formatter\\calendar-native-date-formatter.provider.mjs","C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\common\\calendar-a11y\\calendar-a11y.interface.mjs","C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\common\\calendar-date-formatter\\calendar-date-formatter.interface.mjs","C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\common\\calendar-event-times-changed-event\\calendar-event-times-changed-event.interface.mjs","C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\common\\calendar-common.module.mjs","C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\common\\calendar-drag-helper\\calendar-drag-helper.provider.mjs","C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\common\\calendar-resize-helper\\calendar-resize-helper.provider.mjs","C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\week\\calendar-week-view\\calendar-week-view-header\\calendar-week-view-header.component.mjs","C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\week\\calendar-week-view\\calendar-week-view-event\\calendar-week-view-event.component.mjs","C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\week\\calendar-week-view\\calendar-week-view-hour-segment\\calendar-week-view-hour-segment.component.mjs","C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\week\\calendar-week-view\\calendar-week-view-current-time-marker\\calendar-week-view-current-time-marker.component.mjs","C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\week\\calendar-week-view\\calendar-week-view.component.mjs","C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\day\\calendar-day-view\\calendar-day-view.component.mjs","C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\week\\calendar-week.module.mjs","C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\day\\calendar-day.module.mjs","C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\month\\calendar-month-view\\calendar-month-cell\\calendar-month-cell.component.mjs","C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\month\\calendar-month-view\\calendar-open-day-events\\calendar-open-day-events.component.mjs","C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\month\\calendar-month-view\\calendar-month-view-header\\calendar-month-view-header.component.mjs","C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\month\\calendar-month-view\\calendar-month-view.component.mjs","C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\month\\calendar-month.module.mjs","C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\calendar.component.mjs","C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\calendar.module.mjs","C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\public-api.mjs","C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\ng-calendar-schedule.mjs"],"name":"ng-calendar-schedule","type":"chunk","dynamicImports":[],"fileName":"ng-calendar-schedule.mjs","implicitlyLoadedBefore":[],"importedBindings":{"calendar-utils/date-adapters/date-fns":["adapterFactory"],"date-fns":["addWeeks","addMonths","subDays","subWeeks","subMonths","getISOWeek","setDate","setMonth","setYear","getDate","getYear"],"@angular/core":["EventEmitter","*","Directive","Inject","Input","Output","Injectable","LOCALE_ID","Pipe","Component","HostListener","InjectionToken","NgModule"],"@angular/common":["DOCUMENT","formatDate","*","CommonModule","I18nPluralPipe"],"rxjs":["Subject","Observable","of","timer","BehaviorSubject","interval"],"rxjs/operators":["takeUntil","switchMap","startWith","switchMapTo","map"],"positioning":["positionElements"],"calendar-utils":["validateEvents","getMonthView","getWeekViewHeader","getWeekView","DAYS_OF_WEEK"],"tslib":["__rest"],"angular-resizable-element":["*","ResizableModule"],"angular-draggable-droppable":["*","DragAndDropModule"],"@angular/animations":["trigger","state","style","transition","animate"]},"imports":["calendar-utils/date-adapters/date-fns","date-fns","@angular/core","@angular/common","rxjs","rxjs/operators","positioning","calendar-utils","tslib","angular-resizable-element","angular-draggable-droppable","@angular/animations"],"modules":{"C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\date-adapters\\date-adapter.mjs":{"code":"class DateAdapter {\r\n}","originalLength":4237,"removedExports":[],"renderedExports":["DateAdapter"],"renderedLength":22},"C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\date-adapters\\date-fns\\index.mjs":{"code":"function adapterFactory() {\r\n    return Object.assign(Object.assign({}, adapterFactory$1()), { addWeeks,\r\n        addMonths,\r\n        subDays,\r\n        subWeeks,\r\n        subMonths,\r\n        getISOWeek,\r\n        setDate,\r\n        setMonth,\r\n        setYear,\r\n        getDate,\r\n        getYear });\r\n}","originalLength":2214,"removedExports":[],"renderedExports":["adapterFactory"],"renderedLength":299},"C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\common\\click\\click.directive.mjs":{"code":"class ClickDirective {\r\n    constructor(renderer, elm, document) {\r\n        this.renderer = renderer;\r\n        this.elm = elm;\r\n        this.document = document;\r\n        this.clickListenerDisabled = false;\r\n        this.click = new EventEmitter(); // eslint-disable-line\r\n        this.destroy$ = new Subject();\r\n    }\r\n    ngOnInit() {\r\n        if (!this.clickListenerDisabled) {\r\n            this.listen()\r\n                .pipe(takeUntil(this.destroy$))\r\n                .subscribe((event) => {\r\n                event.stopPropagation();\r\n                this.click.emit(event);\r\n            });\r\n        }\r\n    }\r\n    ngOnDestroy() {\r\n        this.destroy$.next();\r\n    }\r\n    listen() {\r\n        return new Observable((observer) => {\r\n            return this.renderer.listen(this.elm.nativeElement, 'click', (event) => {\r\n                observer.next(event);\r\n            });\r\n        });\r\n    }\r\n}\r\nClickDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: ClickDirective, deps: [{ token: i0.Renderer2 }, { token: i0.ElementRef }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Directive });\r\nClickDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.0.4\", type: ClickDirective, selector: \"[mwlClick]\", inputs: { clickListenerDisabled: \"clickListenerDisabled\" }, outputs: { click: \"mwlClick\" }, ngImport: i0 });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: ClickDirective, decorators: [{\r\n            type: Directive,\r\n            args: [{\r\n                    selector: '[mwlClick]',\r\n                }]\r\n        }], ctorParameters: function () {\r\n        return [{ type: i0.Renderer2 }, { type: i0.ElementRef }, { type: undefined, decorators: [{\r\n                        type: Inject,\r\n                        args: [DOCUMENT]\r\n                    }] }];\r\n    }, propDecorators: { clickListenerDisabled: [{\r\n                type: Input\r\n            }], click: [{\r\n                type: Output,\r\n                args: ['mwlClick']\r\n            }] } });","originalLength":6126,"removedExports":[],"renderedExports":["ClickDirective"],"renderedLength":2082},"C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\common\\keydown-enter\\keydown-enter.directive.mjs":{"code":"class KeydownEnterDirective {\r\n    constructor(host, ngZone, renderer) {\r\n        this.host = host;\r\n        this.ngZone = ngZone;\r\n        this.renderer = renderer;\r\n        this.keydown = new EventEmitter(); // eslint-disable-line\r\n        this.keydownListener = null;\r\n    }\r\n    ngOnInit() {\r\n        this.ngZone.runOutsideAngular(() => {\r\n            this.keydownListener = this.renderer.listen(this.host.nativeElement, 'keydown', (event) => {\r\n                if (event.keyCode === 13 ||\r\n                    event.which === 13 ||\r\n                    event.key === 'Enter') {\r\n                    event.preventDefault();\r\n                    event.stopPropagation();\r\n                    this.ngZone.run(() => {\r\n                        this.keydown.emit(event);\r\n                    });\r\n                }\r\n            });\r\n        });\r\n    }\r\n    ngOnDestroy() {\r\n        if (this.keydownListener !== null) {\r\n            this.keydownListener();\r\n            this.keydownListener = null;\r\n        }\r\n    }\r\n}\r\nKeydownEnterDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: KeydownEnterDirective, deps: [{ token: i0.ElementRef }, { token: i0.NgZone }, { token: i0.Renderer2 }], target: i0.ɵɵFactoryTarget.Directive });\r\nKeydownEnterDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.0.4\", type: KeydownEnterDirective, selector: \"[mwlKeydownEnter]\", outputs: { keydown: \"mwlKeydownEnter\" }, ngImport: i0 });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: KeydownEnterDirective, decorators: [{\r\n            type: Directive,\r\n            args: [{\r\n                    selector: '[mwlKeydownEnter]',\r\n                }]\r\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.NgZone }, { type: i0.Renderer2 }]; }, propDecorators: { keydown: [{\r\n                type: Output,\r\n                args: ['mwlKeydownEnter']\r\n            }] } });","originalLength":5737,"removedExports":[],"renderedExports":["KeydownEnterDirective"],"renderedLength":1997},"C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\common\\calendar-a11y\\calendar-a11y.provider.mjs":{"code":"/**\r\n * This class is responsible for adding accessibility to the calendar.\r\n * You may override any of its methods via angulars DI to suit your requirements.\r\n * For example:\r\n *\r\n * ```typescript\r\n * import { A11yParams, CalendarA11y } from 'angular-calendar';\r\n * import { formatDate, I18nPluralPipe } from '@angular/common';\r\n * import { Injectable } from '@angular/core';\r\n *\r\n * // adding your own a11y params\r\n * export interface CustomA11yParams extends A11yParams {\r\n *   isDrSuess?: boolean;\r\n * }\r\n *\r\n * @Injectable()\r\n * export class CustomCalendarA11y extends CalendarA11y {\r\n *   constructor(protected i18nPlural: I18nPluralPipe) {\r\n *     super(i18nPlural);\r\n *   }\r\n *\r\n *   // overriding a function\r\n *   public openDayEventsLandmark({ date, locale, isDrSuess }: CustomA11yParams): string {\r\n *     if (isDrSuess) {\r\n *       return `\r\n *         ${formatDate(date, 'EEEE MMMM d', locale)}\r\n *          Today you are you! That is truer than true! There is no one alive\r\n *          who is you-er than you!\r\n *       `;\r\n *     }\r\n *   }\r\n * }\r\n *\r\n * // in your component that uses the calendar\r\n * providers: [{\r\n *  provide: CalendarA11y,\r\n *  useClass: CustomCalendarA11y\r\n * }]\r\n * ```\r\n */\r\nclass CalendarA11y {\r\n    constructor(i18nPlural) {\r\n        this.i18nPlural = i18nPlural;\r\n    }\r\n    /**\r\n     * Aria label for the badges/date of a cell\r\n     * @example: `Saturday October 19 1 event click to expand`\r\n     */\r\n    monthCell({ day, locale }) {\r\n        if (day.badgeTotal > 0) {\r\n            return `\r\n        ${formatDate(day.date, 'EEEE MMMM d', locale)},\r\n        ${this.i18nPlural.transform(day.badgeTotal, {\r\n                '=0': 'No events',\r\n                '=1': 'One event',\r\n                other: '# events',\r\n            })},\r\n         click to expand\r\n      `;\r\n        }\r\n        else {\r\n            return `${formatDate(day.date, 'EEEE MMMM d', locale)}`;\r\n        }\r\n    }\r\n    /**\r\n     * Aria label for the open day events start landmark\r\n     * @example: `Saturday October 19 expanded view`\r\n     */\r\n    openDayEventsLandmark({ date, locale }) {\r\n        return `\r\n      Beginning of expanded view for ${formatDate(date, 'EEEE MMMM dd', locale)}\r\n    `;\r\n    }\r\n    /**\r\n     * Aria label for alert that a day in the month view was expanded\r\n     * @example: `Saturday October 19 expanded`\r\n     */\r\n    openDayEventsAlert({ date, locale }) {\r\n        return `${formatDate(date, 'EEEE MMMM dd', locale)} expanded`;\r\n    }\r\n    /**\r\n     * Descriptive aria label for an event\r\n     * @example: `Saturday October 19th, Scott's Pizza Party, from 11:00am to 5:00pm`\r\n     */\r\n    eventDescription({ event, locale }) {\r\n        if (event.allDay === true) {\r\n            return this.allDayEventDescription({ event, locale });\r\n        }\r\n        const aria = `\r\n      ${formatDate(event.start, 'EEEE MMMM dd', locale)},\r\n      ${event.title}, from ${formatDate(event.start, 'hh:mm a', locale)}\r\n    `;\r\n        if (event.end) {\r\n            return aria + ` to ${formatDate(event.end, 'hh:mm a', locale)}`;\r\n        }\r\n        return aria;\r\n    }\r\n    /**\r\n     * Descriptive aria label for an all day event\r\n     * @example:\r\n     * `Scott's Party, event spans multiple days: start time October 19 5:00pm, no stop time`\r\n     */\r\n    allDayEventDescription({ event, locale }) {\r\n        const aria = `\r\n      ${event.title}, event spans multiple days:\r\n      start time ${formatDate(event.start, 'MMMM dd hh:mm a', locale)}\r\n    `;\r\n        if (event.end) {\r\n            return (aria + `, stop time ${formatDate(event.end, 'MMMM d hh:mm a', locale)}`);\r\n        }\r\n        return aria + `, no stop time`;\r\n    }\r\n    /**\r\n     * Aria label for the calendar event actions icons\r\n     * @returns 'Edit' for fa-pencil icons, and 'Delete' for fa-times icons\r\n     */\r\n    actionButtonLabel({ action }) {\r\n        return action.a11yLabel;\r\n    }\r\n    /**\r\n     * @returns {number} Tab index to be given to month cells\r\n     */\r\n    monthCellTabIndex() {\r\n        return 0;\r\n    }\r\n    /**\r\n     * @returns true if the events inside the month cell should be aria-hidden\r\n     */\r\n    hideMonthCellEvents() {\r\n        return true;\r\n    }\r\n    /**\r\n     * @returns true if event titles should be aria-hidden (global)\r\n     */\r\n    hideEventTitle() {\r\n        return true;\r\n    }\r\n    /**\r\n     * @returns true if hour segments in the week view should be aria-hidden\r\n     */\r\n    hideWeekHourSegment() {\r\n        return true;\r\n    }\r\n    /**\r\n     * @returns true if hour segments in the day view should be aria-hidden\r\n     */\r\n    hideDayHourSegment() {\r\n        return true;\r\n    }\r\n}\r\nCalendarA11y.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarA11y, deps: [{ token: i1.I18nPluralPipe }], target: i0.ɵɵFactoryTarget.Injectable });\r\nCalendarA11y.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarA11y });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarA11y, decorators: [{\r\n            type: Injectable\r\n        }], ctorParameters: function () { return [{ type: i1.I18nPluralPipe }]; } });","originalLength":15389,"removedExports":[],"renderedExports":["CalendarA11y"],"renderedLength":5192},"C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\common\\calendar-a11y\\calendar-a11y.pipe.mjs":{"code":"/**\r\n * This pipe is primarily for rendering aria labels. Example usage:\r\n * ```typescript\r\n * // where `myEvent` is a `CalendarEvent` and myLocale is a locale identifier\r\n * {{ { event: myEvent, locale: myLocale } | calendarA11y: 'eventDescription' }}\r\n * ```\r\n */\r\nclass CalendarA11yPipe {\r\n    constructor(calendarA11y, locale) {\r\n        this.calendarA11y = calendarA11y;\r\n        this.locale = locale;\r\n    }\r\n    transform(a11yParams, method) {\r\n        a11yParams.locale = a11yParams.locale || this.locale;\r\n        if (typeof this.calendarA11y[method] === 'undefined') {\r\n            const allowedMethods = Object.getOwnPropertyNames(Object.getPrototypeOf(CalendarA11y.prototype)).filter((iMethod) => iMethod !== 'constructor');\r\n            throw new Error(`${method} is not a valid a11y method. Can only be one of ${allowedMethods.join(', ')}`);\r\n        }\r\n        return this.calendarA11y[method](a11yParams);\r\n    }\r\n}\r\nCalendarA11yPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarA11yPipe, deps: [{ token: CalendarA11y }, { token: LOCALE_ID }], target: i0.ɵɵFactoryTarget.Pipe });\r\nCalendarA11yPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"14.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarA11yPipe, name: \"calendarA11y\" });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarA11yPipe, decorators: [{\r\n            type: Pipe,\r\n            args: [{\r\n                    name: 'calendarA11y',\r\n                }]\r\n        }], ctorParameters: function () {\r\n        return [{ type: CalendarA11y }, { type: undefined, decorators: [{\r\n                        type: Inject,\r\n                        args: [LOCALE_ID]\r\n                    }] }];\r\n    } });","originalLength":5169,"removedExports":[],"renderedExports":["CalendarA11yPipe"],"renderedLength":1775},"C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\common\\calendar-event-actions\\calendar-event-actions.component.mjs":{"code":"class CalendarEventActionsComponent {\r\n    constructor() {\r\n        this.trackByActionId = (index, action) => action.id ? action.id : action;\r\n    }\r\n}\r\nCalendarEventActionsComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarEventActionsComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\r\nCalendarEventActionsComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.0.4\", type: CalendarEventActionsComponent, selector: \"mwl-calendar-event-actions\", inputs: { event: \"event\", customTemplate: \"customTemplate\" }, ngImport: i0, template: `\r\n    <ng-template\r\n      #defaultTemplate\r\n      let-event=\"event\"\r\n      let-trackByActionId=\"trackByActionId\"\r\n    >\r\n      <span *ngIf=\"event.actions\" class=\"cal-event-actions\">\r\n        <a\r\n          class=\"cal-event-action\"\r\n          href=\"javascript:;\"\r\n          *ngFor=\"let action of event.actions; trackBy: trackByActionId\"\r\n          (mwlClick)=\"action.onClick({ event: event, sourceEvent: $event })\"\r\n          (mwlKeydownEnter)=\"\r\n            action.onClick({ event: event, sourceEvent: $event })\r\n          \"\r\n          [ngClass]=\"action.cssClass\"\r\n          [innerHtml]=\"action.label\"\r\n          tabindex=\"0\"\r\n          role=\"button\"\r\n          [attr.aria-label]=\"\r\n            { action: action } | calendarA11y : 'actionButtonLabel'\r\n          \"\r\n        >\r\n        </a>\r\n      </span>\r\n    </ng-template>\r\n    <ng-template\r\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\r\n      [ngTemplateOutletContext]=\"{\r\n        event: event,\r\n        trackByActionId: trackByActionId\r\n      }\"\r\n    >\r\n    </ng-template>\r\n  `, isInline: true, dependencies: [{ kind: \"directive\", type: i1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i1.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"directive\", type: ClickDirective, selector: \"[mwlClick]\", inputs: [\"clickListenerDisabled\"], outputs: [\"mwlClick\"] }, { kind: \"directive\", type: KeydownEnterDirective, selector: \"[mwlKeydownEnter]\", outputs: [\"mwlKeydownEnter\"] }, { kind: \"pipe\", type: CalendarA11yPipe, name: \"calendarA11y\" }] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarEventActionsComponent, decorators: [{\r\n            type: Component,\r\n            args: [{\r\n                    selector: 'mwl-calendar-event-actions',\r\n                    template: `\r\n    <ng-template\r\n      #defaultTemplate\r\n      let-event=\"event\"\r\n      let-trackByActionId=\"trackByActionId\"\r\n    >\r\n      <span *ngIf=\"event.actions\" class=\"cal-event-actions\">\r\n        <a\r\n          class=\"cal-event-action\"\r\n          href=\"javascript:;\"\r\n          *ngFor=\"let action of event.actions; trackBy: trackByActionId\"\r\n          (mwlClick)=\"action.onClick({ event: event, sourceEvent: $event })\"\r\n          (mwlKeydownEnter)=\"\r\n            action.onClick({ event: event, sourceEvent: $event })\r\n          \"\r\n          [ngClass]=\"action.cssClass\"\r\n          [innerHtml]=\"action.label\"\r\n          tabindex=\"0\"\r\n          role=\"button\"\r\n          [attr.aria-label]=\"\r\n            { action: action } | calendarA11y : 'actionButtonLabel'\r\n          \"\r\n        >\r\n        </a>\r\n      </span>\r\n    </ng-template>\r\n    <ng-template\r\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\r\n      [ngTemplateOutletContext]=\"{\r\n        event: event,\r\n        trackByActionId: trackByActionId\r\n      }\"\r\n    >\r\n    </ng-template>\r\n  `,\r\n                }]\r\n        }], propDecorators: { event: [{\r\n                type: Input\r\n            }], customTemplate: [{\r\n                type: Input\r\n            }] } });","originalLength":7471,"removedExports":[],"renderedExports":["CalendarEventActionsComponent"],"renderedLength":4004},"C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\common\\calendar-event-title-formatter\\calendar-event-title-formatter.provider.mjs":{"code":"/**\r\n * This class is responsible for displaying all event titles within the calendar. You may override any of its methods via angulars DI to suit your requirements. For example:\r\n *\r\n * ```typescript\r\n * import { Injectable } from '@angular/core';\r\n * import { CalendarEventTitleFormatter, CalendarEvent } from 'angular-calendar';\r\n *\r\n * @Injectable()\r\n * class CustomEventTitleFormatter extends CalendarEventTitleFormatter {\r\n *\r\n *   month(event: CalendarEvent): string {\r\n *     return `Custom prefix: ${event.title}`;\r\n *   }\r\n *\r\n * }\r\n *\r\n * // in your component\r\n * providers: [{\r\n *  provide: CalendarEventTitleFormatter,\r\n *  useClass: CustomEventTitleFormatter\r\n * }]\r\n * ```\r\n */\r\nclass CalendarEventTitleFormatter {\r\n    /**\r\n     * The month view event title.\r\n     */\r\n    month(event, title) {\r\n        return event.title;\r\n    }\r\n    /**\r\n     * The month view event tooltip. Return a falsey value from this to disable the tooltip.\r\n     */\r\n    monthTooltip(event, title) {\r\n        return event.title;\r\n    }\r\n    /**\r\n     * The week view event title.\r\n     */\r\n    week(event, title) {\r\n        return event.title;\r\n    }\r\n    /**\r\n     * The week view event tooltip. Return a falsey value from this to disable the tooltip.\r\n     */\r\n    weekTooltip(event, title) {\r\n        return event.title;\r\n    }\r\n    /**\r\n     * The day view event title.\r\n     */\r\n    day(event, title) {\r\n        return event.title;\r\n    }\r\n    /**\r\n     * The day view event tooltip. Return a falsey value from this to disable the tooltip.\r\n     */\r\n    dayTooltip(event, title) {\r\n        return event.title;\r\n    }\r\n}","originalLength":5368,"removedExports":[],"renderedExports":["CalendarEventTitleFormatter"],"renderedLength":1617},"C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\common\\calendar-event-title\\calendar-event-title.pipe.mjs":{"code":"class CalendarEventTitlePipe {\r\n    constructor(calendarEventTitle) {\r\n        this.calendarEventTitle = calendarEventTitle;\r\n    }\r\n    transform(title, titleType, event) {\r\n        return this.calendarEventTitle[titleType](event, title);\r\n    }\r\n}\r\nCalendarEventTitlePipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarEventTitlePipe, deps: [{ token: CalendarEventTitleFormatter }], target: i0.ɵɵFactoryTarget.Pipe });\r\nCalendarEventTitlePipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"14.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarEventTitlePipe, name: \"calendarEventTitle\" });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarEventTitlePipe, decorators: [{\r\n            type: Pipe,\r\n            args: [{\r\n                    name: 'calendarEventTitle',\r\n                }]\r\n        }], ctorParameters: function () { return [{ type: CalendarEventTitleFormatter }]; } });","originalLength":2790,"removedExports":[],"renderedExports":["CalendarEventTitlePipe"],"renderedLength":986},"C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\common\\calendar-event-title\\calendar-event-title.component.mjs":{"code":"class CalendarEventTitleComponent {\r\n}\r\nCalendarEventTitleComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarEventTitleComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\r\nCalendarEventTitleComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.0.4\", type: CalendarEventTitleComponent, selector: \"mwl-calendar-event-title\", inputs: { event: \"event\", customTemplate: \"customTemplate\", view: \"view\" }, ngImport: i0, template: `\r\n    <ng-template #defaultTemplate let-event=\"event\" let-view=\"view\">\r\n      <span\r\n        class=\"cal-event-title\"\r\n        [innerHTML]=\"event.title | calendarEventTitle : view : event\"\r\n        [attr.aria-hidden]=\"{} | calendarA11y : 'hideEventTitle'\"\r\n      >\r\n      </span>\r\n    </ng-template>\r\n    <ng-template\r\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\r\n      [ngTemplateOutletContext]=\"{\r\n        event: event,\r\n        view: view\r\n      }\"\r\n    >\r\n    </ng-template>\r\n  `, isInline: true, dependencies: [{ kind: \"directive\", type: i1.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"pipe\", type: CalendarEventTitlePipe, name: \"calendarEventTitle\" }, { kind: \"pipe\", type: CalendarA11yPipe, name: \"calendarA11y\" }] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarEventTitleComponent, decorators: [{\r\n            type: Component,\r\n            args: [{\r\n                    selector: 'mwl-calendar-event-title',\r\n                    template: `\r\n    <ng-template #defaultTemplate let-event=\"event\" let-view=\"view\">\r\n      <span\r\n        class=\"cal-event-title\"\r\n        [innerHTML]=\"event.title | calendarEventTitle : view : event\"\r\n        [attr.aria-hidden]=\"{} | calendarA11y : 'hideEventTitle'\"\r\n      >\r\n      </span>\r\n    </ng-template>\r\n    <ng-template\r\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\r\n      [ngTemplateOutletContext]=\"{\r\n        event: event,\r\n        view: view\r\n      }\"\r\n    >\r\n    </ng-template>\r\n  `,\r\n                }]\r\n        }], propDecorators: { event: [{\r\n                type: Input\r\n            }], customTemplate: [{\r\n                type: Input\r\n            }], view: [{\r\n                type: Input\r\n            }] } });","originalLength":4645,"removedExports":[],"renderedExports":["CalendarEventTitleComponent"],"renderedLength":2371},"C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\common\\calendar-tooltip\\calendar-tooltip.directive.mjs":{"code":"class CalendarTooltipWindowComponent {\r\n}\r\nCalendarTooltipWindowComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarTooltipWindowComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\r\nCalendarTooltipWindowComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.0.4\", type: CalendarTooltipWindowComponent, selector: \"mwl-calendar-tooltip-window\", inputs: { contents: \"contents\", placement: \"placement\", event: \"event\", customTemplate: \"customTemplate\" }, ngImport: i0, template: `\r\n    <ng-template\r\n      #defaultTemplate\r\n      let-contents=\"contents\"\r\n      let-placement=\"placement\"\r\n      let-event=\"event\"\r\n    >\r\n      <div class=\"cal-tooltip\" [ngClass]=\"'cal-tooltip-' + placement\">\r\n        <div class=\"cal-tooltip-arrow\"></div>\r\n        <div class=\"cal-tooltip-inner\" [innerHtml]=\"contents\"></div>\r\n      </div>\r\n    </ng-template>\r\n    <ng-template\r\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\r\n      [ngTemplateOutletContext]=\"{\r\n        contents: contents,\r\n        placement: placement,\r\n        event: event\r\n      }\"\r\n    >\r\n    </ng-template>\r\n  `, isInline: true, dependencies: [{ kind: \"directive\", type: i1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i1.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarTooltipWindowComponent, decorators: [{\r\n            type: Component,\r\n            args: [{\r\n                    selector: 'mwl-calendar-tooltip-window',\r\n                    template: `\r\n    <ng-template\r\n      #defaultTemplate\r\n      let-contents=\"contents\"\r\n      let-placement=\"placement\"\r\n      let-event=\"event\"\r\n    >\r\n      <div class=\"cal-tooltip\" [ngClass]=\"'cal-tooltip-' + placement\">\r\n        <div class=\"cal-tooltip-arrow\"></div>\r\n        <div class=\"cal-tooltip-inner\" [innerHtml]=\"contents\"></div>\r\n      </div>\r\n    </ng-template>\r\n    <ng-template\r\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\r\n      [ngTemplateOutletContext]=\"{\r\n        contents: contents,\r\n        placement: placement,\r\n        event: event\r\n      }\"\r\n    >\r\n    </ng-template>\r\n  `,\r\n                }]\r\n        }], propDecorators: { contents: [{\r\n                type: Input\r\n            }], placement: [{\r\n                type: Input\r\n            }], event: [{\r\n                type: Input\r\n            }], customTemplate: [{\r\n                type: Input\r\n            }] } });\r\nclass CalendarTooltipDirective {\r\n    constructor(elementRef, injector, renderer, componentFactoryResolver, viewContainerRef, document // eslint-disable-line\r\n    ) {\r\n        this.elementRef = elementRef;\r\n        this.injector = injector;\r\n        this.renderer = renderer;\r\n        this.viewContainerRef = viewContainerRef;\r\n        this.document = document;\r\n        this.placement = 'auto'; // eslint-disable-line  @angular-eslint/no-input-rename\r\n        this.delay = null; // eslint-disable-line  @angular-eslint/no-input-rename\r\n        this.cancelTooltipDelay$ = new Subject();\r\n        this.tooltipFactory = componentFactoryResolver.resolveComponentFactory(CalendarTooltipWindowComponent);\r\n    }\r\n    ngOnChanges(changes) {\r\n        if (this.tooltipRef &&\r\n            (changes.contents || changes.customTemplate || changes.event)) {\r\n            this.tooltipRef.instance.contents = this.contents;\r\n            this.tooltipRef.instance.customTemplate = this.customTemplate;\r\n            this.tooltipRef.instance.event = this.event;\r\n            this.tooltipRef.changeDetectorRef.markForCheck();\r\n            if (!this.contents) {\r\n                this.hide();\r\n            }\r\n        }\r\n    }\r\n    ngOnDestroy() {\r\n        this.hide();\r\n    }\r\n    onMouseOver() {\r\n        const delay$ = this.delay === null ? of('now') : timer(this.delay);\r\n        delay$.pipe(takeUntil(this.cancelTooltipDelay$)).subscribe(() => {\r\n            this.show();\r\n        });\r\n    }\r\n    onMouseOut() {\r\n        this.hide();\r\n    }\r\n    show() {\r\n        if (!this.tooltipRef && this.contents) {\r\n            this.tooltipRef = this.viewContainerRef.createComponent(this.tooltipFactory, 0, this.injector, []);\r\n            this.tooltipRef.instance.contents = this.contents;\r\n            this.tooltipRef.instance.customTemplate = this.customTemplate;\r\n            this.tooltipRef.instance.event = this.event;\r\n            if (this.appendToBody) {\r\n                this.document.body.appendChild(this.tooltipRef.location.nativeElement);\r\n            }\r\n            requestAnimationFrame(() => {\r\n                this.positionTooltip();\r\n            });\r\n        }\r\n    }\r\n    hide() {\r\n        if (this.tooltipRef) {\r\n            this.viewContainerRef.remove(this.viewContainerRef.indexOf(this.tooltipRef.hostView));\r\n            this.tooltipRef = null;\r\n        }\r\n        this.cancelTooltipDelay$.next();\r\n    }\r\n    positionTooltip(previousPositions = []) {\r\n        if (this.tooltipRef) {\r\n            this.tooltipRef.changeDetectorRef.detectChanges();\r\n            this.tooltipRef.instance.placement = positionElements(this.elementRef.nativeElement, this.tooltipRef.location.nativeElement.children[0], this.placement, this.appendToBody);\r\n            // keep re-positioning the tooltip until the arrow position doesn't make a difference\r\n            if (previousPositions.indexOf(this.tooltipRef.instance.placement) === -1) {\r\n                this.positionTooltip([\r\n                    ...previousPositions,\r\n                    this.tooltipRef.instance.placement,\r\n                ]);\r\n            }\r\n        }\r\n    }\r\n}\r\nCalendarTooltipDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarTooltipDirective, deps: [{ token: i0.ElementRef }, { token: i0.Injector }, { token: i0.Renderer2 }, { token: i0.ComponentFactoryResolver }, { token: i0.ViewContainerRef }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Directive });\r\nCalendarTooltipDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.0.4\", type: CalendarTooltipDirective, selector: \"[mwlCalendarTooltip]\", inputs: { contents: [\"mwlCalendarTooltip\", \"contents\"], placement: [\"tooltipPlacement\", \"placement\"], customTemplate: [\"tooltipTemplate\", \"customTemplate\"], event: [\"tooltipEvent\", \"event\"], appendToBody: [\"tooltipAppendToBody\", \"appendToBody\"], delay: [\"tooltipDelay\", \"delay\"] }, host: { listeners: { \"mouseenter\": \"onMouseOver()\", \"mouseleave\": \"onMouseOut()\" } }, usesOnChanges: true, ngImport: i0 });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarTooltipDirective, decorators: [{\r\n            type: Directive,\r\n            args: [{\r\n                    selector: '[mwlCalendarTooltip]',\r\n                }]\r\n        }], ctorParameters: function () {\r\n        return [{ type: i0.ElementRef }, { type: i0.Injector }, { type: i0.Renderer2 }, { type: i0.ComponentFactoryResolver }, { type: i0.ViewContainerRef }, { type: undefined, decorators: [{\r\n                        type: Inject,\r\n                        args: [DOCUMENT]\r\n                    }] }];\r\n    }, propDecorators: { contents: [{\r\n                type: Input,\r\n                args: ['mwlCalendarTooltip']\r\n            }], placement: [{\r\n                type: Input,\r\n                args: ['tooltipPlacement']\r\n            }], customTemplate: [{\r\n                type: Input,\r\n                args: ['tooltipTemplate']\r\n            }], event: [{\r\n                type: Input,\r\n                args: ['tooltipEvent']\r\n            }], appendToBody: [{\r\n                type: Input,\r\n                args: ['tooltipAppendToBody']\r\n            }], delay: [{\r\n                type: Input,\r\n                args: ['tooltipDelay']\r\n            }], onMouseOver: [{\r\n                type: HostListener,\r\n                args: ['mouseenter']\r\n            }], onMouseOut: [{\r\n                type: HostListener,\r\n                args: ['mouseleave']\r\n            }] } });","originalLength":21369,"removedExports":[],"renderedExports":["CalendarTooltipWindowComponent","CalendarTooltipDirective"],"renderedLength":8175},"C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\common\\calendar-view\\calendar-view.enum.mjs":{"code":"var CalendarView;\r\n(function (CalendarView) {\r\n    CalendarView[\"Month\"] = \"month\";\r\n    CalendarView[\"Week\"] = \"week\";\r\n    CalendarView[\"Day\"] = \"day\";\r\n})(CalendarView || (CalendarView = {}));","originalLength":842,"removedExports":[],"renderedExports":["CalendarView"],"renderedLength":195},"C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\common\\util\\util.mjs":{"code":"const validateEvents = (events) => {\r\n    const warn = (...args) => console.warn('angular-calendar', ...args);\r\n    return validateEvents$1(events, warn);\r\n};\r\nfunction isInsideLeftAndRight(outer, inner) {\r\n    return (Math.floor(outer.left) <= Math.ceil(inner.left) &&\r\n        Math.floor(inner.left) <= Math.ceil(outer.right) &&\r\n        Math.floor(outer.left) <= Math.ceil(inner.right) &&\r\n        Math.floor(inner.right) <= Math.ceil(outer.right));\r\n}\r\nfunction isInsideTopAndBottom(outer, inner) {\r\n    return (Math.floor(outer.top) <= Math.ceil(inner.top) &&\r\n        Math.floor(inner.top) <= Math.ceil(outer.bottom) &&\r\n        Math.floor(outer.top) <= Math.ceil(inner.bottom) &&\r\n        Math.floor(inner.bottom) <= Math.ceil(outer.bottom));\r\n}\r\nfunction isInside(outer, inner) {\r\n    return (isInsideLeftAndRight(outer, inner) && isInsideTopAndBottom(outer, inner));\r\n}\r\nfunction roundToNearest(amount, precision) {\r\n    return Math.round(amount / precision) * precision;\r\n}\r\nconst trackByEventId = (index, event) => event.id ? event.id : event;\r\nconst trackByWeekDayHeaderDate = (index, day) => day.date.toISOString();\r\nconst trackByHourSegment = (index, segment) => segment.date.toISOString();\r\nconst trackByHour = (index, hour) => hour.segments[0].date.toISOString();\r\nconst trackByWeekAllDayEvent = (index, weekEvent) => (weekEvent.event.id ? weekEvent.event.id : weekEvent.event);\r\nconst trackByWeekTimeEvent = (index, weekEvent) => (weekEvent.event.id ? weekEvent.event.id : weekEvent.event);\r\nconst MINUTES_IN_HOUR = 60;\r\nfunction getPixelAmountInMinutes(hourSegments, hourSegmentHeight, hourDuration) {\r\n    return (hourDuration || MINUTES_IN_HOUR) / (hourSegments * hourSegmentHeight);\r\n}\r\nfunction getMinutesMoved(movedY, hourSegments, hourSegmentHeight, eventSnapSize, hourDuration) {\r\n    const draggedInPixelsSnapSize = roundToNearest(movedY, eventSnapSize || hourSegmentHeight);\r\n    const pixelAmountInMinutes = getPixelAmountInMinutes(hourSegments, hourSegmentHeight, hourDuration);\r\n    return draggedInPixelsSnapSize * pixelAmountInMinutes;\r\n}\r\nfunction getDefaultEventEnd(dateAdapter, event, minimumMinutes) {\r\n    if (event.end) {\r\n        return event.end;\r\n    }\r\n    else {\r\n        return dateAdapter.addMinutes(event.start, minimumMinutes);\r\n    }\r\n}\r\nfunction addDaysWithExclusions(dateAdapter, date, days, excluded) {\r\n    let daysCounter = 0;\r\n    let daysToAdd = 0;\r\n    const changeDays = days < 0 ? dateAdapter.subDays : dateAdapter.addDays;\r\n    let result = date;\r\n    while (daysToAdd <= Math.abs(days)) {\r\n        result = changeDays(date, daysCounter);\r\n        const day = dateAdapter.getDay(result);\r\n        if (excluded.indexOf(day) === -1) {\r\n            daysToAdd++;\r\n        }\r\n        daysCounter++;\r\n    }\r\n    return result;\r\n}\r\nfunction isDraggedWithinPeriod(newStart, newEnd, period) {\r\n    const end = newEnd || newStart;\r\n    return ((period.start <= newStart && newStart <= period.end) ||\r\n        (period.start <= end && end <= period.end));\r\n}\r\nfunction shouldFireDroppedEvent(dropEvent, date, allDay, calendarId) {\r\n    return (dropEvent.dropData &&\r\n        dropEvent.dropData.event &&\r\n        (dropEvent.dropData.calendarId !== calendarId ||\r\n            (dropEvent.dropData.event.allDay && !allDay) ||\r\n            (!dropEvent.dropData.event.allDay && allDay)));\r\n}\r\nfunction getWeekViewPeriod(dateAdapter, viewDate, weekStartsOn, excluded = [], daysInWeek) {\r\n    let viewStart = daysInWeek\r\n        ? dateAdapter.startOfDay(viewDate)\r\n        : dateAdapter.startOfWeek(viewDate, { weekStartsOn });\r\n    const endOfWeek = dateAdapter.endOfWeek(viewDate, { weekStartsOn });\r\n    while (excluded.indexOf(dateAdapter.getDay(viewStart)) > -1 &&\r\n        viewStart < endOfWeek) {\r\n        viewStart = dateAdapter.addDays(viewStart, 1);\r\n    }\r\n    if (daysInWeek) {\r\n        const viewEnd = dateAdapter.endOfDay(addDaysWithExclusions(dateAdapter, viewStart, daysInWeek - 1, excluded));\r\n        return { viewStart, viewEnd };\r\n    }\r\n    else {\r\n        let viewEnd = endOfWeek;\r\n        while (excluded.indexOf(dateAdapter.getDay(viewEnd)) > -1 &&\r\n            viewEnd > viewStart) {\r\n            viewEnd = dateAdapter.subDays(viewEnd, 1);\r\n        }\r\n        return { viewStart, viewEnd };\r\n    }\r\n}\r\nfunction isWithinThreshold({ x, y }) {\r\n    const DRAG_THRESHOLD = 1;\r\n    return Math.abs(x) > DRAG_THRESHOLD || Math.abs(y) > DRAG_THRESHOLD;\r\n}","originalLength":19810,"removedExports":[],"renderedExports":["validateEvents","isInsideLeftAndRight","isInside","roundToNearest","trackByEventId","trackByWeekDayHeaderDate","trackByHourSegment","trackByHour","trackByWeekAllDayEvent","trackByWeekTimeEvent","getMinutesMoved","getDefaultEventEnd","addDaysWithExclusions","isDraggedWithinPeriod","shouldFireDroppedEvent","getWeekViewPeriod","isWithinThreshold"],"renderedLength":4412},"C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\common\\calendar-previous-view\\calendar-previous-view.directive.mjs":{"code":"/**\r\n * Change the view date to the previous view. For example:\r\n *\r\n * ```typescript\r\n * <button\r\n *  mwlCalendarPreviousView\r\n *  [(viewDate)]=\"viewDate\"\r\n *  [view]=\"view\">\r\n *  Previous\r\n * </button>\r\n * ```\r\n */\r\nclass CalendarPreviousViewDirective {\r\n    constructor(dateAdapter) {\r\n        this.dateAdapter = dateAdapter;\r\n        /**\r\n         * Days to skip when going back by 1 day\r\n         */\r\n        this.excludeDays = [];\r\n        /**\r\n         * Called when the view date is changed\r\n         */\r\n        this.viewDateChange = new EventEmitter();\r\n    }\r\n    /**\r\n     * @hidden\r\n     */\r\n    onClick() {\r\n        const subFn = {\r\n            day: this.dateAdapter.subDays,\r\n            week: this.dateAdapter.subWeeks,\r\n            month: this.dateAdapter.subMonths,\r\n        }[this.view];\r\n        if (this.view === CalendarView.Day) {\r\n            this.viewDateChange.emit(addDaysWithExclusions(this.dateAdapter, this.viewDate, -1, this.excludeDays));\r\n        }\r\n        else if (this.view === CalendarView.Week && this.daysInWeek) {\r\n            this.viewDateChange.emit(addDaysWithExclusions(this.dateAdapter, this.viewDate, -this.daysInWeek, this.excludeDays));\r\n        }\r\n        else {\r\n            this.viewDateChange.emit(subFn(this.viewDate, 1));\r\n        }\r\n    }\r\n}\r\nCalendarPreviousViewDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarPreviousViewDirective, deps: [{ token: DateAdapter }], target: i0.ɵɵFactoryTarget.Directive });\r\nCalendarPreviousViewDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.0.4\", type: CalendarPreviousViewDirective, selector: \"[mwlCalendarPreviousView]\", inputs: { view: \"view\", viewDate: \"viewDate\", excludeDays: \"excludeDays\", daysInWeek: \"daysInWeek\" }, outputs: { viewDateChange: \"viewDateChange\" }, host: { listeners: { \"click\": \"onClick()\" } }, ngImport: i0 });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarPreviousViewDirective, decorators: [{\r\n            type: Directive,\r\n            args: [{\r\n                    selector: '[mwlCalendarPreviousView]',\r\n                }]\r\n        }], ctorParameters: function () { return [{ type: DateAdapter }]; }, propDecorators: { view: [{\r\n                type: Input\r\n            }], viewDate: [{\r\n                type: Input\r\n            }], excludeDays: [{\r\n                type: Input\r\n            }], daysInWeek: [{\r\n                type: Input\r\n            }], viewDateChange: [{\r\n                type: Output\r\n            }], onClick: [{\r\n                type: HostListener,\r\n                args: ['click']\r\n            }] } });","originalLength":8118,"removedExports":[],"renderedExports":["CalendarPreviousViewDirective"],"renderedLength":2690},"C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\common\\calendar-next-view\\calendar-next-view.directive.mjs":{"code":"/**\r\n * Change the view date to the next view. For example:\r\n *\r\n * ```typescript\r\n * <button\r\n *  mwlCalendarNextView\r\n *  [(viewDate)]=\"viewDate\"\r\n *  [view]=\"view\">\r\n *  Next\r\n * </button>\r\n * ```\r\n */\r\nclass CalendarNextViewDirective {\r\n    constructor(dateAdapter) {\r\n        this.dateAdapter = dateAdapter;\r\n        /**\r\n         * Days to skip when going forward by 1 day\r\n         */\r\n        this.excludeDays = [];\r\n        /**\r\n         * Called when the view date is changed\r\n         */\r\n        this.viewDateChange = new EventEmitter();\r\n    }\r\n    /**\r\n     * @hidden\r\n     */\r\n    onClick() {\r\n        const addFn = {\r\n            day: this.dateAdapter.addDays,\r\n            week: this.dateAdapter.addWeeks,\r\n            month: this.dateAdapter.addMonths,\r\n        }[this.view];\r\n        if (this.view === CalendarView.Day) {\r\n            this.viewDateChange.emit(addDaysWithExclusions(this.dateAdapter, this.viewDate, 1, this.excludeDays));\r\n        }\r\n        else if (this.view === CalendarView.Week && this.daysInWeek) {\r\n            this.viewDateChange.emit(addDaysWithExclusions(this.dateAdapter, this.viewDate, this.daysInWeek, this.excludeDays));\r\n        }\r\n        else {\r\n            this.viewDateChange.emit(addFn(this.viewDate, 1));\r\n        }\r\n    }\r\n}\r\nCalendarNextViewDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarNextViewDirective, deps: [{ token: DateAdapter }], target: i0.ɵɵFactoryTarget.Directive });\r\nCalendarNextViewDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.0.4\", type: CalendarNextViewDirective, selector: \"[mwlCalendarNextView]\", inputs: { view: \"view\", viewDate: \"viewDate\", excludeDays: \"excludeDays\", daysInWeek: \"daysInWeek\" }, outputs: { viewDateChange: \"viewDateChange\" }, host: { listeners: { \"click\": \"onClick()\" } }, ngImport: i0 });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarNextViewDirective, decorators: [{\r\n            type: Directive,\r\n            args: [{\r\n                    selector: '[mwlCalendarNextView]',\r\n                }]\r\n        }], ctorParameters: function () { return [{ type: DateAdapter }]; }, propDecorators: { view: [{\r\n                type: Input\r\n            }], viewDate: [{\r\n                type: Input\r\n            }], excludeDays: [{\r\n                type: Input\r\n            }], daysInWeek: [{\r\n                type: Input\r\n            }], viewDateChange: [{\r\n                type: Output\r\n            }], onClick: [{\r\n                type: HostListener,\r\n                args: ['click']\r\n            }] } });","originalLength":8011,"removedExports":[],"renderedExports":["CalendarNextViewDirective"],"renderedLength":2647},"C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\common\\calendar-today\\calendar-today.directive.mjs":{"code":"/**\r\n * Change the view date to the current day. For example:\r\n *\r\n * ```typescript\r\n * <button\r\n *  mwlCalendarToday\r\n *  [(viewDate)]=\"viewDate\">\r\n *  Today\r\n * </button>\r\n * ```\r\n */\r\nclass CalendarTodayDirective {\r\n    constructor(dateAdapter) {\r\n        this.dateAdapter = dateAdapter;\r\n        /**\r\n         * Called when the view date is changed\r\n         */\r\n        this.viewDateChange = new EventEmitter();\r\n    }\r\n    /**\r\n     * @hidden\r\n     */\r\n    onClick() {\r\n        this.viewDateChange.emit(this.dateAdapter.startOfDay(new Date()));\r\n    }\r\n}\r\nCalendarTodayDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarTodayDirective, deps: [{ token: DateAdapter }], target: i0.ɵɵFactoryTarget.Directive });\r\nCalendarTodayDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.0.4\", type: CalendarTodayDirective, selector: \"[mwlCalendarToday]\", inputs: { viewDate: \"viewDate\" }, outputs: { viewDateChange: \"viewDateChange\" }, host: { listeners: { \"click\": \"onClick()\" } }, ngImport: i0 });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarTodayDirective, decorators: [{\r\n            type: Directive,\r\n            args: [{\r\n                    selector: '[mwlCalendarToday]',\r\n                }]\r\n        }], ctorParameters: function () { return [{ type: DateAdapter }]; }, propDecorators: { viewDate: [{\r\n                type: Input\r\n            }], viewDateChange: [{\r\n                type: Output\r\n            }], onClick: [{\r\n                type: HostListener,\r\n                args: ['click']\r\n            }] } });","originalLength":4187,"removedExports":[],"renderedExports":["CalendarTodayDirective"],"renderedLength":1659},"C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\common\\calendar-angular-date-formatter\\calendar-angular-date-formatter.provider.mjs":{"code":"/**\r\n * This will use the angular date pipe to do all date formatting. It is the default date formatter used by the calendar.\r\n */\r\nclass CalendarAngularDateFormatter {\r\n    constructor(dateAdapter) {\r\n        this.dateAdapter = dateAdapter;\r\n    }\r\n    /**\r\n     * The month view header week day labels\r\n     */\r\n    monthViewColumnHeader({ date, locale }) {\r\n        return formatDate(date, 'EEEE', locale);\r\n    }\r\n    /**\r\n     * The month view cell day number\r\n     */\r\n    monthViewDayNumber({ date, locale }) {\r\n        return formatDate(date, 'd', locale);\r\n    }\r\n    /**\r\n     * The month view title\r\n     */\r\n    monthViewTitle({ date, locale }) {\r\n        return formatDate(date, 'LLLL y', locale);\r\n    }\r\n    /**\r\n     * The week view header week day labels\r\n     */\r\n    weekViewColumnHeader({ date, locale }) {\r\n        return formatDate(date, 'EEEE', locale);\r\n    }\r\n    /**\r\n     * The week view sub header day and month labels\r\n     */\r\n    weekViewColumnSubHeader({ date, locale, }) {\r\n        return formatDate(date, 'MMM d', locale);\r\n    }\r\n    /**\r\n     * The week view title\r\n     */\r\n    weekViewTitle({ date, locale, weekStartsOn, excludeDays, daysInWeek, }) {\r\n        const { viewStart, viewEnd } = getWeekViewPeriod(this.dateAdapter, date, weekStartsOn, excludeDays, daysInWeek);\r\n        const format = (dateToFormat, showYear) => formatDate(dateToFormat, 'MMM d' + (showYear ? ', yyyy' : ''), locale);\r\n        return `${format(viewStart, viewStart.getUTCFullYear() !== viewEnd.getUTCFullYear())} - ${format(viewEnd, true)}`;\r\n    }\r\n    /**\r\n     * The time formatting down the left hand side of the week view\r\n     */\r\n    weekViewHour({ date, locale }) {\r\n        return formatDate(date, 'h a', locale);\r\n    }\r\n    /**\r\n     * The time formatting down the left hand side of the day view\r\n     */\r\n    dayViewHour({ date, locale }) {\r\n        return formatDate(date, 'h a', locale);\r\n    }\r\n    /**\r\n     * The day view title\r\n     */\r\n    dayViewTitle({ date, locale }) {\r\n        return formatDate(date, 'EEEE, MMMM d, y', locale);\r\n    }\r\n}\r\nCalendarAngularDateFormatter.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarAngularDateFormatter, deps: [{ token: DateAdapter }], target: i0.ɵɵFactoryTarget.Injectable });\r\nCalendarAngularDateFormatter.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarAngularDateFormatter });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarAngularDateFormatter, decorators: [{\r\n            type: Injectable\r\n        }], ctorParameters: function () { return [{ type: DateAdapter }]; } });","originalLength":9731,"removedExports":[],"renderedExports":["CalendarAngularDateFormatter"],"renderedLength":2712},"C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\common\\calendar-date-formatter\\calendar-date-formatter.provider.mjs":{"code":"/**\r\n * This class is responsible for all formatting of dates. There are 3 implementations available, the `CalendarAngularDateFormatter` (default) which uses the angular date pipe to format dates, the `CalendarNativeDateFormatter` which will use the <a href=\"https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Intl\" target=\"_blank\">Intl</a> API to format dates, or there is the `CalendarMomentDateFormatter` which uses <a href=\"http://momentjs.com/\" target=\"_blank\">moment</a>.\r\n *\r\n * If you wish, you may override any of the defaults via angulars DI. For example:\r\n *\r\n * ```typescript\r\n * import { CalendarDateFormatter, DateFormatterParams } from 'angular-calendar';\r\n * import { formatDate } from '@angular/common';\r\n * import { Injectable } from '@angular/core';\r\n *\r\n * @Injectable()\r\n * class CustomDateFormatter extends CalendarDateFormatter {\r\n *\r\n *   public monthViewColumnHeader({date, locale}: DateFormatterParams): string {\r\n *     return formatDate(date, 'EEE', locale); // use short week days\r\n *   }\r\n *\r\n * }\r\n *\r\n * // in your component that uses the calendar\r\n * providers: [{\r\n *   provide: CalendarDateFormatter,\r\n *   useClass: CustomDateFormatter\r\n * }]\r\n * ```\r\n */\r\nclass CalendarDateFormatter extends CalendarAngularDateFormatter {\r\n}\r\nCalendarDateFormatter.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarDateFormatter, deps: null, target: i0.ɵɵFactoryTarget.Injectable });\r\nCalendarDateFormatter.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarDateFormatter });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarDateFormatter, decorators: [{\r\n            type: Injectable\r\n        }] });","originalLength":4765,"removedExports":[],"renderedExports":["CalendarDateFormatter"],"renderedLength":1802},"C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\common\\calendar-date\\calendar-date.pipe.mjs":{"code":"/**\r\n * This pipe is primarily for rendering the current view title. Example usage:\r\n * ```typescript\r\n * // where `viewDate` is a `Date` and view is `'month' | 'week' | 'day'`\r\n * {{ viewDate | calendarDate:(view + 'ViewTitle'):'en' }}\r\n * ```\r\n */\r\nclass CalendarDatePipe {\r\n    constructor(dateFormatter, locale) {\r\n        this.dateFormatter = dateFormatter;\r\n        this.locale = locale;\r\n    }\r\n    transform(date, method, locale = this.locale, weekStartsOn = 0, excludeDays = [], daysInWeek) {\r\n        if (typeof this.dateFormatter[method] === 'undefined') {\r\n            const allowedMethods = Object.getOwnPropertyNames(Object.getPrototypeOf(CalendarDateFormatter.prototype)).filter((iMethod) => iMethod !== 'constructor');\r\n            throw new Error(`${method} is not a valid date formatter. Can only be one of ${allowedMethods.join(', ')}`);\r\n        }\r\n        return this.dateFormatter[method]({\r\n            date,\r\n            locale,\r\n            weekStartsOn,\r\n            excludeDays,\r\n            daysInWeek,\r\n        });\r\n    }\r\n}\r\nCalendarDatePipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarDatePipe, deps: [{ token: CalendarDateFormatter }, { token: LOCALE_ID }], target: i0.ɵɵFactoryTarget.Pipe });\r\nCalendarDatePipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"14.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarDatePipe, name: \"calendarDate\" });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarDatePipe, decorators: [{\r\n            type: Pipe,\r\n            args: [{\r\n                    name: 'calendarDate',\r\n                }]\r\n        }], ctorParameters: function () {\r\n        return [{ type: CalendarDateFormatter }, { type: undefined, decorators: [{\r\n                        type: Inject,\r\n                        args: [LOCALE_ID]\r\n                    }] }];\r\n    } });","originalLength":5700,"removedExports":[],"renderedExports":["CalendarDatePipe"],"renderedLength":1915},"C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\common\\calendar-utils\\calendar-utils.provider.mjs":{"code":"class CalendarUtils {\r\n    constructor(dateAdapter) {\r\n        this.dateAdapter = dateAdapter;\r\n    }\r\n    getMonthView(args) {\r\n        return getMonthView(this.dateAdapter, args);\r\n    }\r\n    getWeekViewHeader(args) {\r\n        return getWeekViewHeader(this.dateAdapter, args);\r\n    }\r\n    getWeekView(args) {\r\n        return getWeekView(this.dateAdapter, args);\r\n    }\r\n}\r\nCalendarUtils.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarUtils, deps: [{ token: DateAdapter }], target: i0.ɵɵFactoryTarget.Injectable });\r\nCalendarUtils.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarUtils });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarUtils, decorators: [{\r\n            type: Injectable\r\n        }], ctorParameters: function () { return [{ type: DateAdapter }]; } });","originalLength":3273,"removedExports":[],"renderedExports":["CalendarUtils"],"renderedLength":931},"C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\common\\calendar-moment-date-formatter\\calendar-moment-date-formatter.provider.mjs":{"code":"const MOMENT = new InjectionToken('Moment');\r\n/**\r\n * This will use <a href=\"http://momentjs.com/\" target=\"_blank\">moment</a> to do all date formatting. To use this class:\r\n *\r\n * ```typescript\r\n * import { CalendarDateFormatter, CalendarMomentDateFormatter, MOMENT } from 'angular-calendar';\r\n * import moment from 'moment';\r\n *\r\n * // in your component\r\n * provide: [{\r\n *   provide: MOMENT, useValue: moment\r\n * }, {\r\n *   provide: CalendarDateFormatter, useClass: CalendarMomentDateFormatter\r\n * }]\r\n *\r\n * ```\r\n */\r\nclass CalendarMomentDateFormatter {\r\n    /**\r\n     * @hidden\r\n     */\r\n    constructor(moment, dateAdapter) {\r\n        this.moment = moment;\r\n        this.dateAdapter = dateAdapter;\r\n    }\r\n    /**\r\n     * The month view header week day labels\r\n     */\r\n    monthViewColumnHeader({ date, locale }) {\r\n        return this.moment(date).locale(locale).format('dddd');\r\n    }\r\n    /**\r\n     * The month view cell day number\r\n     */\r\n    monthViewDayNumber({ date, locale }) {\r\n        return this.moment(date).locale(locale).format('D');\r\n    }\r\n    /**\r\n     * The month view title\r\n     */\r\n    monthViewTitle({ date, locale }) {\r\n        return this.moment(date).locale(locale).format('MMMM YYYY');\r\n    }\r\n    /**\r\n     * The week view header week day labels\r\n     */\r\n    weekViewColumnHeader({ date, locale }) {\r\n        return this.moment(date).locale(locale).format('dddd');\r\n    }\r\n    /**\r\n     * The week view sub header day and month labels\r\n     */\r\n    weekViewColumnSubHeader({ date, locale, }) {\r\n        return this.moment(date).locale(locale).format('MMM D');\r\n    }\r\n    /**\r\n     * The week view title\r\n     */\r\n    weekViewTitle({ date, locale, weekStartsOn, excludeDays, daysInWeek, }) {\r\n        const { viewStart, viewEnd } = getWeekViewPeriod(this.dateAdapter, date, weekStartsOn, excludeDays, daysInWeek);\r\n        const format = (dateToFormat, showYear) => this.moment(dateToFormat)\r\n            .locale(locale)\r\n            .format('MMM D' + (showYear ? ', YYYY' : ''));\r\n        return `${format(viewStart, viewStart.getUTCFullYear() !== viewEnd.getUTCFullYear())} - ${format(viewEnd, true)}`;\r\n    }\r\n    /**\r\n     * The time formatting down the left hand side of the week view\r\n     */\r\n    weekViewHour({ date, locale }) {\r\n        return this.moment(date).locale(locale).format('ha');\r\n    }\r\n    /**\r\n     * The time formatting down the left hand side of the day view\r\n     */\r\n    dayViewHour({ date, locale }) {\r\n        return this.moment(date).locale(locale).format('ha');\r\n    }\r\n    /**\r\n     * The day view title\r\n     */\r\n    dayViewTitle({ date, locale }) {\r\n        return this.moment(date).locale(locale).format('dddd, LL'); // dddd = Thursday\r\n    } // LL = locale-dependent Month Day, Year\r\n}\r\nCalendarMomentDateFormatter.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarMomentDateFormatter, deps: [{ token: MOMENT }, { token: DateAdapter }], target: i0.ɵɵFactoryTarget.Injectable });\r\nCalendarMomentDateFormatter.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarMomentDateFormatter });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarMomentDateFormatter, decorators: [{\r\n            type: Injectable\r\n        }], ctorParameters: function () {\r\n        return [{ type: undefined, decorators: [{\r\n                        type: Inject,\r\n                        args: [MOMENT]\r\n                    }] }, { type: DateAdapter }];\r\n    } });","originalLength":12203,"removedExports":[],"renderedExports":["MOMENT","CalendarMomentDateFormatter"],"renderedLength":3558},"C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\common\\calendar-native-date-formatter\\calendar-native-date-formatter.provider.mjs":{"code":"/**\r\n * This will use <a href=\"https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Intl\" target=\"_blank\">Intl</a> API to do all date formatting.\r\n *\r\n * You will need to include a <a href=\"https://github.com/andyearnshaw/Intl.js/\">polyfill</a> for older browsers.\r\n */\r\nclass CalendarNativeDateFormatter {\r\n    constructor(dateAdapter) {\r\n        this.dateAdapter = dateAdapter;\r\n    }\r\n    /**\r\n     * The month view header week day labels\r\n     */\r\n    monthViewColumnHeader({ date, locale }) {\r\n        return new Intl.DateTimeFormat(locale, { weekday: 'long' }).format(date);\r\n    }\r\n    /**\r\n     * The month view cell day number\r\n     */\r\n    monthViewDayNumber({ date, locale }) {\r\n        return new Intl.DateTimeFormat(locale, { day: 'numeric' }).format(date);\r\n    }\r\n    /**\r\n     * The month view title\r\n     */\r\n    monthViewTitle({ date, locale }) {\r\n        return new Intl.DateTimeFormat(locale, {\r\n            year: 'numeric',\r\n            month: 'long',\r\n        }).format(date);\r\n    }\r\n    /**\r\n     * The week view header week day labels\r\n     */\r\n    weekViewColumnHeader({ date, locale }) {\r\n        return new Intl.DateTimeFormat(locale, { weekday: 'long' }).format(date);\r\n    }\r\n    /**\r\n     * The week view sub header day and month labels\r\n     */\r\n    weekViewColumnSubHeader({ date, locale, }) {\r\n        return new Intl.DateTimeFormat(locale, {\r\n            day: 'numeric',\r\n            month: 'short',\r\n        }).format(date);\r\n    }\r\n    /**\r\n     * The week view title\r\n     */\r\n    weekViewTitle({ date, locale, weekStartsOn, excludeDays, daysInWeek, }) {\r\n        const { viewStart, viewEnd } = getWeekViewPeriod(this.dateAdapter, date, weekStartsOn, excludeDays, daysInWeek);\r\n        const format = (dateToFormat, showYear) => new Intl.DateTimeFormat(locale, {\r\n            day: 'numeric',\r\n            month: 'short',\r\n            year: showYear ? 'numeric' : undefined,\r\n        }).format(dateToFormat);\r\n        return `${format(viewStart, viewStart.getUTCFullYear() !== viewEnd.getUTCFullYear())} - ${format(viewEnd, true)}`;\r\n    }\r\n    /**\r\n     * The time formatting down the left hand side of the week view\r\n     */\r\n    weekViewHour({ date, locale }) {\r\n        return new Intl.DateTimeFormat(locale, { hour: 'numeric' }).format(date);\r\n    }\r\n    /**\r\n     * The time formatting down the left hand side of the day view\r\n     */\r\n    dayViewHour({ date, locale }) {\r\n        return new Intl.DateTimeFormat(locale, { hour: 'numeric' }).format(date);\r\n    }\r\n    /**\r\n     * The day view title\r\n     */\r\n    dayViewTitle({ date, locale }) {\r\n        return new Intl.DateTimeFormat(locale, {\r\n            day: 'numeric',\r\n            month: 'long',\r\n            year: 'numeric',\r\n            weekday: 'long',\r\n        }).format(date);\r\n    }\r\n}\r\nCalendarNativeDateFormatter.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarNativeDateFormatter, deps: [{ token: DateAdapter }], target: i0.ɵɵFactoryTarget.Injectable });\r\nCalendarNativeDateFormatter.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarNativeDateFormatter });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarNativeDateFormatter, decorators: [{\r\n            type: Injectable\r\n        }], ctorParameters: function () { return [{ type: DateAdapter }]; } });","originalLength":12003,"removedExports":[],"renderedExports":["CalendarNativeDateFormatter"],"renderedLength":3443},"C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\common\\calendar-a11y\\calendar-a11y.interface.mjs":{"code":"","originalLength":1106,"removedExports":[],"renderedExports":[],"renderedLength":0},"C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\common\\calendar-date-formatter\\calendar-date-formatter.interface.mjs":{"code":"","originalLength":3090,"removedExports":[],"renderedExports":[],"renderedLength":0},"C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\common\\calendar-event-times-changed-event\\calendar-event-times-changed-event.interface.mjs":{"code":"var CalendarEventTimesChangedEventType;\r\n(function (CalendarEventTimesChangedEventType) {\r\n    CalendarEventTimesChangedEventType[\"Drag\"] = \"drag\";\r\n    CalendarEventTimesChangedEventType[\"Drop\"] = \"drop\";\r\n    CalendarEventTimesChangedEventType[\"Resize\"] = \"resize\";\r\n})(CalendarEventTimesChangedEventType || (CalendarEventTimesChangedEventType = {}));","originalLength":1644,"removedExports":[],"renderedExports":["CalendarEventTimesChangedEventType"],"renderedLength":353},"C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\common\\calendar-common.module.mjs":{"code":"/**\r\n * Import this module to if you're just using a singular view and want to save on bundle size. Example usage:\r\n *\r\n * ```typescript\r\n * import { CalendarCommonModule, CalendarMonthModule } from 'angular-calendar';\r\n *\r\n * @NgModule({\r\n *   imports: [\r\n *     CalendarCommonModule.forRoot(),\r\n *     CalendarMonthModule\r\n *   ]\r\n * })\r\n * class MyModule {}\r\n * ```\r\n *\r\n */\r\nclass CalendarCommonModule {\r\n    static forRoot(dateAdapter, config = {}) {\r\n        return {\r\n            ngModule: CalendarCommonModule,\r\n            providers: [\r\n                dateAdapter,\r\n                config.eventTitleFormatter || CalendarEventTitleFormatter,\r\n                config.dateFormatter || CalendarDateFormatter,\r\n                config.utils || CalendarUtils,\r\n                config.a11y || CalendarA11y,\r\n            ],\r\n        };\r\n    }\r\n}\r\nCalendarCommonModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarCommonModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\r\nCalendarCommonModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarCommonModule, declarations: [CalendarEventActionsComponent,\r\n        CalendarEventTitleComponent,\r\n        CalendarTooltipWindowComponent,\r\n        CalendarTooltipDirective,\r\n        CalendarPreviousViewDirective,\r\n        CalendarNextViewDirective,\r\n        CalendarTodayDirective,\r\n        CalendarDatePipe,\r\n        CalendarEventTitlePipe,\r\n        CalendarA11yPipe,\r\n        ClickDirective,\r\n        KeydownEnterDirective], imports: [CommonModule], exports: [CalendarEventActionsComponent,\r\n        CalendarEventTitleComponent,\r\n        CalendarTooltipWindowComponent,\r\n        CalendarTooltipDirective,\r\n        CalendarPreviousViewDirective,\r\n        CalendarNextViewDirective,\r\n        CalendarTodayDirective,\r\n        CalendarDatePipe,\r\n        CalendarEventTitlePipe,\r\n        CalendarA11yPipe,\r\n        ClickDirective,\r\n        KeydownEnterDirective] });\r\nCalendarCommonModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarCommonModule, providers: [I18nPluralPipe], imports: [CommonModule] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarCommonModule, decorators: [{\r\n            type: NgModule,\r\n            args: [{\r\n                    declarations: [\r\n                        CalendarEventActionsComponent,\r\n                        CalendarEventTitleComponent,\r\n                        CalendarTooltipWindowComponent,\r\n                        CalendarTooltipDirective,\r\n                        CalendarPreviousViewDirective,\r\n                        CalendarNextViewDirective,\r\n                        CalendarTodayDirective,\r\n                        CalendarDatePipe,\r\n                        CalendarEventTitlePipe,\r\n                        CalendarA11yPipe,\r\n                        ClickDirective,\r\n                        KeydownEnterDirective,\r\n                    ],\r\n                    imports: [CommonModule],\r\n                    exports: [\r\n                        CalendarEventActionsComponent,\r\n                        CalendarEventTitleComponent,\r\n                        CalendarTooltipWindowComponent,\r\n                        CalendarTooltipDirective,\r\n                        CalendarPreviousViewDirective,\r\n                        CalendarNextViewDirective,\r\n                        CalendarTodayDirective,\r\n                        CalendarDatePipe,\r\n                        CalendarEventTitlePipe,\r\n                        CalendarA11yPipe,\r\n                        ClickDirective,\r\n                        KeydownEnterDirective,\r\n                    ],\r\n                    providers: [I18nPluralPipe],\r\n                }]\r\n        }] });","originalLength":20070,"removedExports":[],"renderedExports":["CalendarCommonModule"],"renderedLength":3841},"C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\common\\calendar-drag-helper\\calendar-drag-helper.provider.mjs":{"code":"class CalendarDragHelper {\r\n    constructor(dragContainerElement, draggableElement) {\r\n        this.dragContainerElement = dragContainerElement;\r\n        this.startPosition = draggableElement.getBoundingClientRect();\r\n    }\r\n    validateDrag({ x, y, snapDraggedEvents, dragAlreadyMoved, transform, }) {\r\n        const isDraggedWithinThreshold = isWithinThreshold({ x, y }) || dragAlreadyMoved;\r\n        if (snapDraggedEvents) {\r\n            const inner = Object.assign({}, this.startPosition, {\r\n                left: this.startPosition.left + transform.x,\r\n                right: this.startPosition.right + transform.x,\r\n                top: this.startPosition.top + transform.y,\r\n                bottom: this.startPosition.bottom + transform.y,\r\n            });\r\n            if (isDraggedWithinThreshold) {\r\n                const outer = this.dragContainerElement.getBoundingClientRect();\r\n                const isTopInside = outer.top < inner.top && inner.top < outer.bottom;\r\n                const isBottomInside = outer.top < inner.bottom && inner.bottom < outer.bottom;\r\n                return (isInsideLeftAndRight(outer, inner) && (isTopInside || isBottomInside));\r\n            }\r\n            /* istanbul ignore next */\r\n            return false;\r\n        }\r\n        else {\r\n            return isDraggedWithinThreshold;\r\n        }\r\n    }\r\n}","originalLength":5752,"removedExports":[],"renderedExports":["CalendarDragHelper"],"renderedLength":1348},"C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\common\\calendar-resize-helper\\calendar-resize-helper.provider.mjs":{"code":"class CalendarResizeHelper {\r\n    constructor(resizeContainerElement, minWidth, rtl) {\r\n        this.resizeContainerElement = resizeContainerElement;\r\n        this.minWidth = minWidth;\r\n        this.rtl = rtl;\r\n    }\r\n    validateResize({ rectangle, edges }) {\r\n        if (this.rtl) {\r\n            // TODO - find a way of testing this, for some reason the tests always fail but it does actually work\r\n            /* istanbul ignore next */\r\n            if (typeof edges.left !== 'undefined') {\r\n                rectangle.left -= edges.left;\r\n                rectangle.right += edges.left;\r\n            }\r\n            else if (typeof edges.right !== 'undefined') {\r\n                rectangle.left += edges.right;\r\n                rectangle.right -= edges.right;\r\n            }\r\n            rectangle.width = rectangle.right - rectangle.left;\r\n        }\r\n        if (this.minWidth &&\r\n            Math.ceil(rectangle.width) < Math.ceil(this.minWidth)) {\r\n            return false;\r\n        }\r\n        return isInside(this.resizeContainerElement.getBoundingClientRect(), rectangle);\r\n    }\r\n}","originalLength":4175,"removedExports":[],"renderedExports":["CalendarResizeHelper"],"renderedLength":1090},"C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\week\\calendar-week-view\\calendar-week-view-header\\calendar-week-view-header.component.mjs":{"code":"class CalendarWeekViewHeaderComponent {\r\n    constructor() {\r\n        this.dayHeaderClicked = new EventEmitter();\r\n        this.eventDropped = new EventEmitter();\r\n        this.dragEnter = new EventEmitter();\r\n        this.trackByWeekDayHeaderDate = trackByWeekDayHeaderDate;\r\n    }\r\n}\r\nCalendarWeekViewHeaderComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarWeekViewHeaderComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\r\nCalendarWeekViewHeaderComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.0.4\", type: CalendarWeekViewHeaderComponent, selector: \"mwl-calendar-week-view-header\", inputs: { days: \"days\", locale: \"locale\", customTemplate: \"customTemplate\" }, outputs: { dayHeaderClicked: \"dayHeaderClicked\", eventDropped: \"eventDropped\", dragEnter: \"dragEnter\" }, ngImport: i0, template: `\r\n    <ng-template\r\n      #defaultTemplate\r\n      let-days=\"days\"\r\n      let-locale=\"locale\"\r\n      let-dayHeaderClicked=\"dayHeaderClicked\"\r\n      let-eventDropped=\"eventDropped\"\r\n      let-trackByWeekDayHeaderDate=\"trackByWeekDayHeaderDate\"\r\n      let-dragEnter=\"dragEnter\"\r\n    >\r\n      <div class=\"cal-day-headers\" role=\"row\">\r\n        <div\r\n          class=\"cal-header\"\r\n          *ngFor=\"let day of days; trackBy: trackByWeekDayHeaderDate\"\r\n          [class.cal-past]=\"day.isPast\"\r\n          [class.cal-today]=\"day.isToday\"\r\n          [class.cal-future]=\"day.isFuture\"\r\n          [class.cal-weekend]=\"day.isWeekend\"\r\n          [ngClass]=\"day.cssClass\"\r\n          (mwlClick)=\"dayHeaderClicked.emit({ day: day, sourceEvent: $event })\"\r\n          mwlDroppable\r\n          dragOverClass=\"cal-drag-over\"\r\n          (drop)=\"\r\n            eventDropped.emit({\r\n              event: $event.dropData.event,\r\n              newStart: day.date\r\n            })\r\n          \"\r\n          (dragEnter)=\"dragEnter.emit({ date: day.date })\"\r\n          tabindex=\"0\"\r\n          role=\"columnheader\"\r\n        >\r\n          <b>{{ day.date | calendarDate : 'weekViewColumnHeader' : locale }}</b\r\n          ><br />\r\n          <span>{{\r\n            day.date | calendarDate : 'weekViewColumnSubHeader' : locale\r\n          }}</span>\r\n        </div>\r\n      </div>\r\n    </ng-template>\r\n    <ng-template\r\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\r\n      [ngTemplateOutletContext]=\"{\r\n        days: days,\r\n        locale: locale,\r\n        dayHeaderClicked: dayHeaderClicked,\r\n        eventDropped: eventDropped,\r\n        dragEnter: dragEnter,\r\n        trackByWeekDayHeaderDate: trackByWeekDayHeaderDate\r\n      }\"\r\n    >\r\n    </ng-template>\r\n  `, isInline: true, dependencies: [{ kind: \"directive\", type: i1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i1.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"directive\", type: i2.DroppableDirective, selector: \"[mwlDroppable]\", inputs: [\"dragOverClass\", \"dragActiveClass\", \"validateDrop\"], outputs: [\"dragEnter\", \"dragLeave\", \"dragOver\", \"drop\"] }, { kind: \"directive\", type: ClickDirective, selector: \"[mwlClick]\", inputs: [\"clickListenerDisabled\"], outputs: [\"mwlClick\"] }, { kind: \"pipe\", type: CalendarDatePipe, name: \"calendarDate\" }] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarWeekViewHeaderComponent, decorators: [{\r\n            type: Component,\r\n            args: [{\r\n                    selector: 'mwl-calendar-week-view-header',\r\n                    template: `\r\n    <ng-template\r\n      #defaultTemplate\r\n      let-days=\"days\"\r\n      let-locale=\"locale\"\r\n      let-dayHeaderClicked=\"dayHeaderClicked\"\r\n      let-eventDropped=\"eventDropped\"\r\n      let-trackByWeekDayHeaderDate=\"trackByWeekDayHeaderDate\"\r\n      let-dragEnter=\"dragEnter\"\r\n    >\r\n      <div class=\"cal-day-headers\" role=\"row\">\r\n        <div\r\n          class=\"cal-header\"\r\n          *ngFor=\"let day of days; trackBy: trackByWeekDayHeaderDate\"\r\n          [class.cal-past]=\"day.isPast\"\r\n          [class.cal-today]=\"day.isToday\"\r\n          [class.cal-future]=\"day.isFuture\"\r\n          [class.cal-weekend]=\"day.isWeekend\"\r\n          [ngClass]=\"day.cssClass\"\r\n          (mwlClick)=\"dayHeaderClicked.emit({ day: day, sourceEvent: $event })\"\r\n          mwlDroppable\r\n          dragOverClass=\"cal-drag-over\"\r\n          (drop)=\"\r\n            eventDropped.emit({\r\n              event: $event.dropData.event,\r\n              newStart: day.date\r\n            })\r\n          \"\r\n          (dragEnter)=\"dragEnter.emit({ date: day.date })\"\r\n          tabindex=\"0\"\r\n          role=\"columnheader\"\r\n        >\r\n          <b>{{ day.date | calendarDate : 'weekViewColumnHeader' : locale }}</b\r\n          ><br />\r\n          <span>{{\r\n            day.date | calendarDate : 'weekViewColumnSubHeader' : locale\r\n          }}</span>\r\n        </div>\r\n      </div>\r\n    </ng-template>\r\n    <ng-template\r\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\r\n      [ngTemplateOutletContext]=\"{\r\n        days: days,\r\n        locale: locale,\r\n        dayHeaderClicked: dayHeaderClicked,\r\n        eventDropped: eventDropped,\r\n        dragEnter: dragEnter,\r\n        trackByWeekDayHeaderDate: trackByWeekDayHeaderDate\r\n      }\"\r\n    >\r\n    </ng-template>\r\n  `,\r\n                }]\r\n        }], propDecorators: { days: [{\r\n                type: Input\r\n            }], locale: [{\r\n                type: Input\r\n            }], customTemplate: [{\r\n                type: Input\r\n            }], dayHeaderClicked: [{\r\n                type: Output\r\n            }], eventDropped: [{\r\n                type: Output\r\n            }], dragEnter: [{\r\n                type: Output\r\n            }] } });","originalLength":11309,"removedExports":[],"renderedExports":["CalendarWeekViewHeaderComponent"],"renderedLength":5882},"C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\week\\calendar-week-view\\calendar-week-view-event\\calendar-week-view-event.component.mjs":{"code":"class CalendarWeekViewEventComponent {\r\n    constructor() {\r\n        this.eventClicked = new EventEmitter();\r\n    }\r\n}\r\nCalendarWeekViewEventComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarWeekViewEventComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\r\nCalendarWeekViewEventComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.0.4\", type: CalendarWeekViewEventComponent, selector: \"mwl-calendar-week-view-event\", inputs: { locale: \"locale\", weekEvent: \"weekEvent\", tooltipPlacement: \"tooltipPlacement\", tooltipAppendToBody: \"tooltipAppendToBody\", tooltipDisabled: \"tooltipDisabled\", tooltipDelay: \"tooltipDelay\", customTemplate: \"customTemplate\", eventTitleTemplate: \"eventTitleTemplate\", eventActionsTemplate: \"eventActionsTemplate\", tooltipTemplate: \"tooltipTemplate\", column: \"column\", daysInWeek: \"daysInWeek\" }, outputs: { eventClicked: \"eventClicked\" }, ngImport: i0, template: `\r\n    <ng-template\r\n      #defaultTemplate\r\n      let-weekEvent=\"weekEvent\"\r\n      let-tooltipPlacement=\"tooltipPlacement\"\r\n      let-eventClicked=\"eventClicked\"\r\n      let-tooltipTemplate=\"tooltipTemplate\"\r\n      let-tooltipAppendToBody=\"tooltipAppendToBody\"\r\n      let-tooltipDisabled=\"tooltipDisabled\"\r\n      let-tooltipDelay=\"tooltipDelay\"\r\n      let-column=\"column\"\r\n      let-daysInWeek=\"daysInWeek\"\r\n    >\r\n      <div\r\n        class=\"cal-event\"\r\n        [ngStyle]=\"{\r\n          color: weekEvent.event.color?.secondaryText,\r\n          backgroundColor: weekEvent.event.color?.secondary,\r\n          borderColor: weekEvent.event.color?.primary\r\n        }\"\r\n        [mwlCalendarTooltip]=\"\r\n          !tooltipDisabled\r\n            ? (weekEvent.event.title\r\n              | calendarEventTitle\r\n                : (daysInWeek === 1 ? 'dayTooltip' : 'weekTooltip')\r\n                : weekEvent.tempEvent || weekEvent.event)\r\n            : ''\r\n        \"\r\n        [tooltipPlacement]=\"tooltipPlacement\"\r\n        [tooltipEvent]=\"weekEvent.tempEvent || weekEvent.event\"\r\n        [tooltipTemplate]=\"tooltipTemplate\"\r\n        [tooltipAppendToBody]=\"tooltipAppendToBody\"\r\n        [tooltipDelay]=\"tooltipDelay\"\r\n        (mwlClick)=\"eventClicked.emit({ sourceEvent: $event })\"\r\n        (mwlKeydownEnter)=\"eventClicked.emit({ sourceEvent: $event })\"\r\n        tabindex=\"0\"\r\n        role=\"application\"\r\n        [attr.aria-label]=\"\r\n          { event: weekEvent.tempEvent || weekEvent.event, locale: locale }\r\n            | calendarA11y : 'eventDescription'\r\n        \"\r\n      >\r\n        <mwl-calendar-event-actions\r\n          [event]=\"weekEvent.tempEvent || weekEvent.event\"\r\n          [customTemplate]=\"eventActionsTemplate\"\r\n        >\r\n        </mwl-calendar-event-actions>\r\n        &ngsp;\r\n        <mwl-calendar-event-title\r\n          [event]=\"weekEvent.tempEvent || weekEvent.event\"\r\n          [customTemplate]=\"eventTitleTemplate\"\r\n          [view]=\"daysInWeek === 1 ? 'day' : 'week'\"\r\n        >\r\n        </mwl-calendar-event-title>\r\n      </div>\r\n    </ng-template>\r\n    <ng-template\r\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\r\n      [ngTemplateOutletContext]=\"{\r\n        weekEvent: weekEvent,\r\n        tooltipPlacement: tooltipPlacement,\r\n        eventClicked: eventClicked,\r\n        tooltipTemplate: tooltipTemplate,\r\n        tooltipAppendToBody: tooltipAppendToBody,\r\n        tooltipDisabled: tooltipDisabled,\r\n        tooltipDelay: tooltipDelay,\r\n        column: column,\r\n        daysInWeek: daysInWeek\r\n      }\"\r\n    >\r\n    </ng-template>\r\n  `, isInline: true, dependencies: [{ kind: \"directive\", type: i1.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"directive\", type: i1.NgStyle, selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }, { kind: \"component\", type: CalendarEventActionsComponent, selector: \"mwl-calendar-event-actions\", inputs: [\"event\", \"customTemplate\"] }, { kind: \"component\", type: CalendarEventTitleComponent, selector: \"mwl-calendar-event-title\", inputs: [\"event\", \"customTemplate\", \"view\"] }, { kind: \"directive\", type: CalendarTooltipDirective, selector: \"[mwlCalendarTooltip]\", inputs: [\"mwlCalendarTooltip\", \"tooltipPlacement\", \"tooltipTemplate\", \"tooltipEvent\", \"tooltipAppendToBody\", \"tooltipDelay\"] }, { kind: \"directive\", type: ClickDirective, selector: \"[mwlClick]\", inputs: [\"clickListenerDisabled\"], outputs: [\"mwlClick\"] }, { kind: \"directive\", type: KeydownEnterDirective, selector: \"[mwlKeydownEnter]\", outputs: [\"mwlKeydownEnter\"] }, { kind: \"pipe\", type: CalendarEventTitlePipe, name: \"calendarEventTitle\" }, { kind: \"pipe\", type: CalendarA11yPipe, name: \"calendarA11y\" }] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarWeekViewEventComponent, decorators: [{\r\n            type: Component,\r\n            args: [{\r\n                    selector: 'mwl-calendar-week-view-event',\r\n                    template: `\r\n    <ng-template\r\n      #defaultTemplate\r\n      let-weekEvent=\"weekEvent\"\r\n      let-tooltipPlacement=\"tooltipPlacement\"\r\n      let-eventClicked=\"eventClicked\"\r\n      let-tooltipTemplate=\"tooltipTemplate\"\r\n      let-tooltipAppendToBody=\"tooltipAppendToBody\"\r\n      let-tooltipDisabled=\"tooltipDisabled\"\r\n      let-tooltipDelay=\"tooltipDelay\"\r\n      let-column=\"column\"\r\n      let-daysInWeek=\"daysInWeek\"\r\n    >\r\n      <div\r\n        class=\"cal-event\"\r\n        [ngStyle]=\"{\r\n          color: weekEvent.event.color?.secondaryText,\r\n          backgroundColor: weekEvent.event.color?.secondary,\r\n          borderColor: weekEvent.event.color?.primary\r\n        }\"\r\n        [mwlCalendarTooltip]=\"\r\n          !tooltipDisabled\r\n            ? (weekEvent.event.title\r\n              | calendarEventTitle\r\n                : (daysInWeek === 1 ? 'dayTooltip' : 'weekTooltip')\r\n                : weekEvent.tempEvent || weekEvent.event)\r\n            : ''\r\n        \"\r\n        [tooltipPlacement]=\"tooltipPlacement\"\r\n        [tooltipEvent]=\"weekEvent.tempEvent || weekEvent.event\"\r\n        [tooltipTemplate]=\"tooltipTemplate\"\r\n        [tooltipAppendToBody]=\"tooltipAppendToBody\"\r\n        [tooltipDelay]=\"tooltipDelay\"\r\n        (mwlClick)=\"eventClicked.emit({ sourceEvent: $event })\"\r\n        (mwlKeydownEnter)=\"eventClicked.emit({ sourceEvent: $event })\"\r\n        tabindex=\"0\"\r\n        role=\"application\"\r\n        [attr.aria-label]=\"\r\n          { event: weekEvent.tempEvent || weekEvent.event, locale: locale }\r\n            | calendarA11y : 'eventDescription'\r\n        \"\r\n      >\r\n        <mwl-calendar-event-actions\r\n          [event]=\"weekEvent.tempEvent || weekEvent.event\"\r\n          [customTemplate]=\"eventActionsTemplate\"\r\n        >\r\n        </mwl-calendar-event-actions>\r\n        &ngsp;\r\n        <mwl-calendar-event-title\r\n          [event]=\"weekEvent.tempEvent || weekEvent.event\"\r\n          [customTemplate]=\"eventTitleTemplate\"\r\n          [view]=\"daysInWeek === 1 ? 'day' : 'week'\"\r\n        >\r\n        </mwl-calendar-event-title>\r\n      </div>\r\n    </ng-template>\r\n    <ng-template\r\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\r\n      [ngTemplateOutletContext]=\"{\r\n        weekEvent: weekEvent,\r\n        tooltipPlacement: tooltipPlacement,\r\n        eventClicked: eventClicked,\r\n        tooltipTemplate: tooltipTemplate,\r\n        tooltipAppendToBody: tooltipAppendToBody,\r\n        tooltipDisabled: tooltipDisabled,\r\n        tooltipDelay: tooltipDelay,\r\n        column: column,\r\n        daysInWeek: daysInWeek\r\n      }\"\r\n    >\r\n    </ng-template>\r\n  `,\r\n                }]\r\n        }], propDecorators: { locale: [{\r\n                type: Input\r\n            }], weekEvent: [{\r\n                type: Input\r\n            }], tooltipPlacement: [{\r\n                type: Input\r\n            }], tooltipAppendToBody: [{\r\n                type: Input\r\n            }], tooltipDisabled: [{\r\n                type: Input\r\n            }], tooltipDelay: [{\r\n                type: Input\r\n            }], customTemplate: [{\r\n                type: Input\r\n            }], eventTitleTemplate: [{\r\n                type: Input\r\n            }], eventActionsTemplate: [{\r\n                type: Input\r\n            }], tooltipTemplate: [{\r\n                type: Input\r\n            }], column: [{\r\n                type: Input\r\n            }], daysInWeek: [{\r\n                type: Input\r\n            }], eventClicked: [{\r\n                type: Output\r\n            }] } });","originalLength":15769,"removedExports":[],"renderedExports":["CalendarWeekViewEventComponent"],"renderedLength":8437},"C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\week\\calendar-week-view\\calendar-week-view-hour-segment\\calendar-week-view-hour-segment.component.mjs":{"code":"class CalendarWeekViewHourSegmentComponent {\r\n}\r\nCalendarWeekViewHourSegmentComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarWeekViewHourSegmentComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\r\nCalendarWeekViewHourSegmentComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.0.4\", type: CalendarWeekViewHourSegmentComponent, selector: \"mwl-calendar-week-view-hour-segment\", inputs: { segment: \"segment\", segmentHeight: \"segmentHeight\", locale: \"locale\", isTimeLabel: \"isTimeLabel\", daysInWeek: \"daysInWeek\", customTemplate: \"customTemplate\" }, ngImport: i0, template: `\r\n    <ng-template\r\n      #defaultTemplate\r\n      let-segment=\"segment\"\r\n      let-locale=\"locale\"\r\n      let-segmentHeight=\"segmentHeight\"\r\n      let-isTimeLabel=\"isTimeLabel\"\r\n      let-daysInWeek=\"daysInWeek\"\r\n    >\r\n      <div\r\n        [attr.aria-hidden]=\"\r\n          {}\r\n            | calendarA11y\r\n              : (daysInWeek === 1\r\n                  ? 'hideDayHourSegment'\r\n                  : 'hideWeekHourSegment')\r\n        \"\r\n        class=\"cal-hour-segment\"\r\n        [style.height.px]=\"segmentHeight\"\r\n        [class.cal-hour-start]=\"segment.isStart\"\r\n        [class.cal-after-hour-start]=\"!segment.isStart\"\r\n        [ngClass]=\"segment.cssClass\"\r\n      >\r\n        <div class=\"cal-time\" *ngIf=\"isTimeLabel\">\r\n          {{\r\n            segment.displayDate\r\n              | calendarDate\r\n                : (daysInWeek === 1 ? 'dayViewHour' : 'weekViewHour')\r\n                : locale\r\n          }}\r\n        </div>\r\n      </div>\r\n    </ng-template>\r\n    <ng-template\r\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\r\n      [ngTemplateOutletContext]=\"{\r\n        segment: segment,\r\n        locale: locale,\r\n        segmentHeight: segmentHeight,\r\n        isTimeLabel: isTimeLabel,\r\n        daysInWeek: daysInWeek\r\n      }\"\r\n    >\r\n    </ng-template>\r\n  `, isInline: true, dependencies: [{ kind: \"directive\", type: i1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i1.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"pipe\", type: CalendarDatePipe, name: \"calendarDate\" }, { kind: \"pipe\", type: CalendarA11yPipe, name: \"calendarA11y\" }] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarWeekViewHourSegmentComponent, decorators: [{\r\n            type: Component,\r\n            args: [{\r\n                    selector: 'mwl-calendar-week-view-hour-segment',\r\n                    template: `\r\n    <ng-template\r\n      #defaultTemplate\r\n      let-segment=\"segment\"\r\n      let-locale=\"locale\"\r\n      let-segmentHeight=\"segmentHeight\"\r\n      let-isTimeLabel=\"isTimeLabel\"\r\n      let-daysInWeek=\"daysInWeek\"\r\n    >\r\n      <div\r\n        [attr.aria-hidden]=\"\r\n          {}\r\n            | calendarA11y\r\n              : (daysInWeek === 1\r\n                  ? 'hideDayHourSegment'\r\n                  : 'hideWeekHourSegment')\r\n        \"\r\n        class=\"cal-hour-segment\"\r\n        [style.height.px]=\"segmentHeight\"\r\n        [class.cal-hour-start]=\"segment.isStart\"\r\n        [class.cal-after-hour-start]=\"!segment.isStart\"\r\n        [ngClass]=\"segment.cssClass\"\r\n      >\r\n        <div class=\"cal-time\" *ngIf=\"isTimeLabel\">\r\n          {{\r\n            segment.displayDate\r\n              | calendarDate\r\n                : (daysInWeek === 1 ? 'dayViewHour' : 'weekViewHour')\r\n                : locale\r\n          }}\r\n        </div>\r\n      </div>\r\n    </ng-template>\r\n    <ng-template\r\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\r\n      [ngTemplateOutletContext]=\"{\r\n        segment: segment,\r\n        locale: locale,\r\n        segmentHeight: segmentHeight,\r\n        isTimeLabel: isTimeLabel,\r\n        daysInWeek: daysInWeek\r\n      }\"\r\n    >\r\n    </ng-template>\r\n  `,\r\n                }]\r\n        }], propDecorators: { segment: [{\r\n                type: Input\r\n            }], segmentHeight: [{\r\n                type: Input\r\n            }], locale: [{\r\n                type: Input\r\n            }], isTimeLabel: [{\r\n                type: Input\r\n            }], daysInWeek: [{\r\n                type: Input\r\n            }], customTemplate: [{\r\n                type: Input\r\n            }] } });","originalLength":8330,"removedExports":[],"renderedExports":["CalendarWeekViewHourSegmentComponent"],"renderedLength":4458},"C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\week\\calendar-week-view\\calendar-week-view-current-time-marker\\calendar-week-view-current-time-marker.component.mjs":{"code":"class CalendarWeekViewCurrentTimeMarkerComponent {\r\n    constructor(dateAdapter, zone) {\r\n        this.dateAdapter = dateAdapter;\r\n        this.zone = zone;\r\n        this.columnDate$ = new BehaviorSubject(undefined);\r\n        this.marker$ = this.zone.onStable.pipe(switchMap(() => interval(60 * 1000)), startWith(0), switchMapTo(this.columnDate$), map((columnDate) => {\r\n            const startOfDay = this.dateAdapter.setMinutes(this.dateAdapter.setHours(columnDate, this.dayStartHour), this.dayStartMinute);\r\n            const endOfDay = this.dateAdapter.setMinutes(this.dateAdapter.setHours(columnDate, this.dayEndHour), this.dayEndMinute);\r\n            const hourHeightModifier = (this.hourSegments * this.hourSegmentHeight) /\r\n                (this.hourDuration || 60);\r\n            const now = new Date();\r\n            return {\r\n                isVisible: this.dateAdapter.isSameDay(columnDate, now) &&\r\n                    now >= startOfDay &&\r\n                    now <= endOfDay,\r\n                top: this.dateAdapter.differenceInMinutes(now, startOfDay) *\r\n                    hourHeightModifier,\r\n            };\r\n        }));\r\n    }\r\n    ngOnChanges(changes) {\r\n        if (changes.columnDate) {\r\n            this.columnDate$.next(changes.columnDate.currentValue);\r\n        }\r\n    }\r\n}\r\nCalendarWeekViewCurrentTimeMarkerComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarWeekViewCurrentTimeMarkerComponent, deps: [{ token: DateAdapter }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\r\nCalendarWeekViewCurrentTimeMarkerComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.0.4\", type: CalendarWeekViewCurrentTimeMarkerComponent, selector: \"mwl-calendar-week-view-current-time-marker\", inputs: { columnDate: \"columnDate\", dayStartHour: \"dayStartHour\", dayStartMinute: \"dayStartMinute\", dayEndHour: \"dayEndHour\", dayEndMinute: \"dayEndMinute\", hourSegments: \"hourSegments\", hourDuration: \"hourDuration\", hourSegmentHeight: \"hourSegmentHeight\", customTemplate: \"customTemplate\" }, usesOnChanges: true, ngImport: i0, template: `\r\n    <ng-template\r\n      #defaultTemplate\r\n      let-columnDate=\"columnDate\"\r\n      let-dayStartHour=\"dayStartHour\"\r\n      let-dayStartMinute=\"dayStartMinute\"\r\n      let-dayEndHour=\"dayEndHour\"\r\n      let-dayEndMinute=\"dayEndMinute\"\r\n      let-isVisible=\"isVisible\"\r\n      let-topPx=\"topPx\"\r\n    >\r\n      <div\r\n        class=\"cal-current-time-marker\"\r\n        *ngIf=\"isVisible\"\r\n        [style.top.px]=\"topPx\"\r\n      ></div>\r\n    </ng-template>\r\n    <ng-template\r\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\r\n      [ngTemplateOutletContext]=\"{\r\n        columnDate: columnDate,\r\n        dayStartHour: dayStartHour,\r\n        dayStartMinute: dayStartMinute,\r\n        dayEndHour: dayEndHour,\r\n        dayEndMinute: dayEndMinute,\r\n        isVisible: (marker$ | async)?.isVisible,\r\n        topPx: (marker$ | async)?.top\r\n      }\"\r\n    >\r\n    </ng-template>\r\n  `, isInline: true, dependencies: [{ kind: \"directive\", type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i1.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"pipe\", type: i1.AsyncPipe, name: \"async\" }] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarWeekViewCurrentTimeMarkerComponent, decorators: [{\r\n            type: Component,\r\n            args: [{\r\n                    selector: 'mwl-calendar-week-view-current-time-marker',\r\n                    template: `\r\n    <ng-template\r\n      #defaultTemplate\r\n      let-columnDate=\"columnDate\"\r\n      let-dayStartHour=\"dayStartHour\"\r\n      let-dayStartMinute=\"dayStartMinute\"\r\n      let-dayEndHour=\"dayEndHour\"\r\n      let-dayEndMinute=\"dayEndMinute\"\r\n      let-isVisible=\"isVisible\"\r\n      let-topPx=\"topPx\"\r\n    >\r\n      <div\r\n        class=\"cal-current-time-marker\"\r\n        *ngIf=\"isVisible\"\r\n        [style.top.px]=\"topPx\"\r\n      ></div>\r\n    </ng-template>\r\n    <ng-template\r\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\r\n      [ngTemplateOutletContext]=\"{\r\n        columnDate: columnDate,\r\n        dayStartHour: dayStartHour,\r\n        dayStartMinute: dayStartMinute,\r\n        dayEndHour: dayEndHour,\r\n        dayEndMinute: dayEndMinute,\r\n        isVisible: (marker$ | async)?.isVisible,\r\n        topPx: (marker$ | async)?.top\r\n      }\"\r\n    >\r\n    </ng-template>\r\n  `,\r\n                }]\r\n        }], ctorParameters: function () { return [{ type: DateAdapter }, { type: i0.NgZone }]; }, propDecorators: { columnDate: [{\r\n                type: Input\r\n            }], dayStartHour: [{\r\n                type: Input\r\n            }], dayStartMinute: [{\r\n                type: Input\r\n            }], dayEndHour: [{\r\n                type: Input\r\n            }], dayEndMinute: [{\r\n                type: Input\r\n            }], hourSegments: [{\r\n                type: Input\r\n            }], hourDuration: [{\r\n                type: Input\r\n            }], hourSegmentHeight: [{\r\n                type: Input\r\n            }], customTemplate: [{\r\n                type: Input\r\n            }] } });","originalLength":12737,"removedExports":[],"renderedExports":["CalendarWeekViewCurrentTimeMarkerComponent"],"renderedLength":5265},"C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\week\\calendar-week-view\\calendar-week-view.component.mjs":{"code":"/**\r\n * Shows all events on a given week. Example usage:\r\n *\r\n * ```typescript\r\n * <mwl-calendar-week-view\r\n *  [viewDate]=\"viewDate\"\r\n *  [events]=\"events\">\r\n * </mwl-calendar-week-view>\r\n * ```\r\n */\r\nclass CalendarWeekViewComponent {\r\n    /**\r\n     * @hidden\r\n     */\r\n    constructor(cdr, utils, locale, dateAdapter, element) {\r\n        this.cdr = cdr;\r\n        this.utils = utils;\r\n        this.dateAdapter = dateAdapter;\r\n        this.element = element;\r\n        /**\r\n         * An array of events to display on view\r\n         * The schema is available here: https://github.com/mattlewis92/calendar-utils/blob/c51689985f59a271940e30bc4e2c4e1fee3fcb5c/src/calendarUtils.ts#L49-L63\r\n         */\r\n        this.events = [];\r\n        /**\r\n         * An array of day indexes (0 = sunday, 1 = monday etc) that will be hidden on the view\r\n         */\r\n        this.excludeDays = [];\r\n        /**\r\n         * The placement of the event tooltip\r\n         */\r\n        this.tooltipPlacement = 'auto';\r\n        /**\r\n         * Whether to append tooltips to the body or next to the trigger element\r\n         */\r\n        this.tooltipAppendToBody = true;\r\n        /**\r\n         * The delay in milliseconds before the tooltip should be displayed. If not provided the tooltip\r\n         * will be displayed immediately.\r\n         */\r\n        this.tooltipDelay = null;\r\n        /**\r\n         * The precision to display events.\r\n         * `days` will round event start and end dates to the nearest day and `minutes` will not do this rounding\r\n         */\r\n        this.precision = 'days';\r\n        /**\r\n         * Whether to snap events to a grid when dragging\r\n         */\r\n        this.snapDraggedEvents = true;\r\n        /**\r\n         * The number of segments in an hour. Must divide equally into 60.\r\n         */\r\n        this.hourSegments = 2;\r\n        /**\r\n         * The height in pixels of each hour segment\r\n         */\r\n        this.hourSegmentHeight = 30;\r\n        /**\r\n         * The minimum height in pixels of each event\r\n         */\r\n        this.minimumEventHeight = 30;\r\n        /**\r\n         * The day start hours in 24 hour time. Must be 0-23\r\n         */\r\n        this.dayStartHour = 0;\r\n        /**\r\n         * The day start minutes. Must be 0-59\r\n         */\r\n        this.dayStartMinute = 0;\r\n        /**\r\n         * The day end hours in 24 hour time. Must be 0-23\r\n         */\r\n        this.dayEndHour = 23;\r\n        /**\r\n         * The day end minutes. Must be 0-59\r\n         */\r\n        this.dayEndMinute = 59;\r\n        /**\r\n         * Called when a header week day is clicked. Adding a `cssClass` property on `$event.day` will add that class to the header element\r\n         */\r\n        this.dayHeaderClicked = new EventEmitter();\r\n        /**\r\n         * Called when an event title is clicked\r\n         */\r\n        this.eventClicked = new EventEmitter();\r\n        /**\r\n         * Called when an event is resized or dragged and dropped\r\n         */\r\n        this.eventTimesChanged = new EventEmitter();\r\n        /**\r\n         * An output that will be called before the view is rendered for the current week.\r\n         * If you add the `cssClass` property to a day in the header it will add that class to the cell element in the template\r\n         */\r\n        this.beforeViewRender = new EventEmitter();\r\n        /**\r\n         * Called when an hour segment is clicked\r\n         */\r\n        this.hourSegmentClicked = new EventEmitter();\r\n        /**\r\n         * @hidden\r\n         */\r\n        this.allDayEventResizes = new Map();\r\n        /**\r\n         * @hidden\r\n         */\r\n        this.timeEventResizes = new Map();\r\n        /**\r\n         * @hidden\r\n         */\r\n        this.eventDragEnterByType = {\r\n            allDay: 0,\r\n            time: 0,\r\n        };\r\n        /**\r\n         * @hidden\r\n         */\r\n        this.dragActive = false;\r\n        /**\r\n         * @hidden\r\n         */\r\n        this.dragAlreadyMoved = false;\r\n        /**\r\n         * @hidden\r\n         */\r\n        this.calendarId = Symbol('angular calendar week view id');\r\n        /**\r\n         * @hidden\r\n         */\r\n        this.rtl = false;\r\n        /**\r\n         * @hidden\r\n         */\r\n        this.trackByWeekDayHeaderDate = trackByWeekDayHeaderDate;\r\n        /**\r\n         * @hidden\r\n         */\r\n        this.trackByHourSegment = trackByHourSegment;\r\n        /**\r\n         * @hidden\r\n         */\r\n        this.trackByHour = trackByHour;\r\n        /**\r\n         * @hidden\r\n         */\r\n        this.trackByWeekAllDayEvent = trackByWeekAllDayEvent;\r\n        /**\r\n         * @hidden\r\n         */\r\n        this.trackByWeekTimeEvent = trackByWeekTimeEvent;\r\n        /**\r\n         * @hidden\r\n         */\r\n        this.trackByHourColumn = (index, column) => column.hours[0] ? column.hours[0].segments[0].date.toISOString() : column;\r\n        /**\r\n         * @hidden\r\n         */\r\n        this.trackById = (index, row) => row.id;\r\n        this.locale = locale;\r\n    }\r\n    /**\r\n     * @hidden\r\n     */\r\n    ngOnInit() {\r\n        if (this.refresh) {\r\n            this.refreshSubscription = this.refresh.subscribe(() => {\r\n                this.refreshAll();\r\n                this.cdr.markForCheck();\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * @hidden\r\n     */\r\n    ngOnChanges(changes) {\r\n        const refreshHeader = changes.viewDate ||\r\n            changes.excludeDays ||\r\n            changes.weekendDays ||\r\n            changes.daysInWeek ||\r\n            changes.weekStartsOn;\r\n        const refreshBody = changes.viewDate ||\r\n            changes.dayStartHour ||\r\n            changes.dayStartMinute ||\r\n            changes.dayEndHour ||\r\n            changes.dayEndMinute ||\r\n            changes.hourSegments ||\r\n            changes.hourDuration ||\r\n            changes.weekStartsOn ||\r\n            changes.weekendDays ||\r\n            changes.excludeDays ||\r\n            changes.hourSegmentHeight ||\r\n            changes.events ||\r\n            changes.daysInWeek ||\r\n            changes.minimumEventHeight;\r\n        if (refreshHeader) {\r\n            this.refreshHeader();\r\n        }\r\n        if (changes.events) {\r\n            validateEvents(this.events);\r\n        }\r\n        if (refreshBody) {\r\n            this.refreshBody();\r\n        }\r\n        if (refreshHeader || refreshBody) {\r\n            this.emitBeforeViewRender();\r\n        }\r\n    }\r\n    /**\r\n     * @hidden\r\n     */\r\n    ngOnDestroy() {\r\n        if (this.refreshSubscription) {\r\n            this.refreshSubscription.unsubscribe();\r\n        }\r\n    }\r\n    /**\r\n     * @hidden\r\n     */\r\n    ngAfterViewInit() {\r\n        this.rtl =\r\n            typeof window !== 'undefined' &&\r\n                getComputedStyle(this.element.nativeElement).direction === 'rtl';\r\n        this.cdr.detectChanges();\r\n    }\r\n    /**\r\n     * @hidden\r\n     */\r\n    timeEventResizeStarted(eventsContainer, timeEvent, resizeEvent) {\r\n        this.timeEventResizes.set(timeEvent.event, resizeEvent);\r\n        this.resizeStarted(eventsContainer, timeEvent);\r\n    }\r\n    /**\r\n     * @hidden\r\n     */\r\n    timeEventResizing(timeEvent, resizeEvent) {\r\n        this.timeEventResizes.set(timeEvent.event, resizeEvent);\r\n        const adjustedEvents = new Map();\r\n        const tempEvents = [...this.events];\r\n        this.timeEventResizes.forEach((lastResizeEvent, event) => {\r\n            const newEventDates = this.getTimeEventResizedDates(event, lastResizeEvent);\r\n            const adjustedEvent = Object.assign(Object.assign({}, event), newEventDates);\r\n            adjustedEvents.set(adjustedEvent, event);\r\n            const eventIndex = tempEvents.indexOf(event);\r\n            tempEvents[eventIndex] = adjustedEvent;\r\n        });\r\n        this.restoreOriginalEvents(tempEvents, adjustedEvents, true);\r\n    }\r\n    /**\r\n     * @hidden\r\n     */\r\n    timeEventResizeEnded(timeEvent) {\r\n        this.view = this.getWeekView(this.events);\r\n        const lastResizeEvent = this.timeEventResizes.get(timeEvent.event);\r\n        if (lastResizeEvent) {\r\n            this.timeEventResizes.delete(timeEvent.event);\r\n            const newEventDates = this.getTimeEventResizedDates(timeEvent.event, lastResizeEvent);\r\n            this.eventTimesChanged.emit({\r\n                newStart: newEventDates.start,\r\n                newEnd: newEventDates.end,\r\n                event: timeEvent.event,\r\n                type: CalendarEventTimesChangedEventType.Resize,\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * @hidden\r\n     */\r\n    allDayEventResizeStarted(allDayEventsContainer, allDayEvent, resizeEvent) {\r\n        this.allDayEventResizes.set(allDayEvent, {\r\n            originalOffset: allDayEvent.offset,\r\n            originalSpan: allDayEvent.span,\r\n            edge: typeof resizeEvent.edges.left !== 'undefined' ? 'left' : 'right',\r\n        });\r\n        this.resizeStarted(allDayEventsContainer, allDayEvent, this.getDayColumnWidth(allDayEventsContainer));\r\n    }\r\n    /**\r\n     * @hidden\r\n     */\r\n    allDayEventResizing(allDayEvent, resizeEvent, dayWidth) {\r\n        const currentResize = this.allDayEventResizes.get(allDayEvent);\r\n        const modifier = this.rtl ? -1 : 1;\r\n        if (typeof resizeEvent.edges.left !== 'undefined') {\r\n            const diff = Math.round(+resizeEvent.edges.left / dayWidth) * modifier;\r\n            allDayEvent.offset = currentResize.originalOffset + diff;\r\n            allDayEvent.span = currentResize.originalSpan - diff;\r\n        }\r\n        else if (typeof resizeEvent.edges.right !== 'undefined') {\r\n            const diff = Math.round(+resizeEvent.edges.right / dayWidth) * modifier;\r\n            allDayEvent.span = currentResize.originalSpan + diff;\r\n        }\r\n    }\r\n    /**\r\n     * @hidden\r\n     */\r\n    allDayEventResizeEnded(allDayEvent) {\r\n        const currentResize = this.allDayEventResizes.get(allDayEvent);\r\n        if (currentResize) {\r\n            const allDayEventResizingBeforeStart = currentResize.edge === 'left';\r\n            let daysDiff;\r\n            if (allDayEventResizingBeforeStart) {\r\n                daysDiff = allDayEvent.offset - currentResize.originalOffset;\r\n            }\r\n            else {\r\n                daysDiff = allDayEvent.span - currentResize.originalSpan;\r\n            }\r\n            allDayEvent.offset = currentResize.originalOffset;\r\n            allDayEvent.span = currentResize.originalSpan;\r\n            const newDates = this.getAllDayEventResizedDates(allDayEvent.event, daysDiff, allDayEventResizingBeforeStart);\r\n            this.eventTimesChanged.emit({\r\n                newStart: newDates.start,\r\n                newEnd: newDates.end,\r\n                event: allDayEvent.event,\r\n                type: CalendarEventTimesChangedEventType.Resize,\r\n            });\r\n            this.allDayEventResizes.delete(allDayEvent);\r\n        }\r\n    }\r\n    /**\r\n     * @hidden\r\n     */\r\n    getDayColumnWidth(eventRowContainer) {\r\n        return Math.floor(eventRowContainer.offsetWidth / this.days.length);\r\n    }\r\n    /**\r\n     * @hidden\r\n     */\r\n    dateDragEnter(date) {\r\n        this.lastDragEnterDate = date;\r\n    }\r\n    /**\r\n     * @hidden\r\n     */\r\n    eventDropped(dropEvent, date, allDay) {\r\n        if (shouldFireDroppedEvent(dropEvent, date, allDay, this.calendarId) &&\r\n            this.lastDragEnterDate.getTime() === date.getTime() &&\r\n            (!this.snapDraggedEvents ||\r\n                dropEvent.dropData.event !== this.lastDraggedEvent)) {\r\n            this.eventTimesChanged.emit({\r\n                type: CalendarEventTimesChangedEventType.Drop,\r\n                event: dropEvent.dropData.event,\r\n                newStart: date,\r\n                allDay,\r\n            });\r\n        }\r\n        this.lastDraggedEvent = null;\r\n    }\r\n    /**\r\n     * @hidden\r\n     */\r\n    dragEnter(type) {\r\n        this.eventDragEnterByType[type]++;\r\n    }\r\n    /**\r\n     * @hidden\r\n     */\r\n    dragLeave(type) {\r\n        this.eventDragEnterByType[type]--;\r\n    }\r\n    /**\r\n     * @hidden\r\n     */\r\n    dragStarted(eventsContainerElement, eventElement, event, useY) {\r\n        this.dayColumnWidth = this.getDayColumnWidth(eventsContainerElement);\r\n        const dragHelper = new CalendarDragHelper(eventsContainerElement, eventElement);\r\n        this.validateDrag = ({ x, y, transform }) => {\r\n            const isAllowed = this.allDayEventResizes.size === 0 &&\r\n                this.timeEventResizes.size === 0 &&\r\n                dragHelper.validateDrag({\r\n                    x,\r\n                    y,\r\n                    snapDraggedEvents: this.snapDraggedEvents,\r\n                    dragAlreadyMoved: this.dragAlreadyMoved,\r\n                    transform,\r\n                });\r\n            if (isAllowed && this.validateEventTimesChanged) {\r\n                const newEventTimes = this.getDragMovedEventTimes(event, { x, y }, this.dayColumnWidth, useY);\r\n                return this.validateEventTimesChanged({\r\n                    type: CalendarEventTimesChangedEventType.Drag,\r\n                    event: event.event,\r\n                    newStart: newEventTimes.start,\r\n                    newEnd: newEventTimes.end,\r\n                });\r\n            }\r\n            return isAllowed;\r\n        };\r\n        this.dragActive = true;\r\n        this.dragAlreadyMoved = false;\r\n        this.lastDraggedEvent = null;\r\n        this.eventDragEnterByType = {\r\n            allDay: 0,\r\n            time: 0,\r\n        };\r\n        if (!this.snapDraggedEvents && useY) {\r\n            this.view.hourColumns.forEach((column) => {\r\n                const linkedEvent = column.events.find((columnEvent) => columnEvent.event === event.event && columnEvent !== event);\r\n                // hide any linked events while dragging\r\n                if (linkedEvent) {\r\n                    linkedEvent.width = 0;\r\n                    linkedEvent.height = 0;\r\n                }\r\n            });\r\n        }\r\n        this.cdr.markForCheck();\r\n    }\r\n    /**\r\n     * @hidden\r\n     */\r\n    dragMove(dayEvent, dragEvent) {\r\n        const newEventTimes = this.getDragMovedEventTimes(dayEvent, dragEvent, this.dayColumnWidth, true);\r\n        const originalEvent = dayEvent.event;\r\n        const adjustedEvent = Object.assign(Object.assign({}, originalEvent), newEventTimes);\r\n        const tempEvents = this.events.map((event) => {\r\n            if (event === originalEvent) {\r\n                return adjustedEvent;\r\n            }\r\n            return event;\r\n        });\r\n        this.restoreOriginalEvents(tempEvents, new Map([[adjustedEvent, originalEvent]]), this.snapDraggedEvents);\r\n        this.dragAlreadyMoved = true;\r\n    }\r\n    /**\r\n     * @hidden\r\n     */\r\n    allDayEventDragMove() {\r\n        this.dragAlreadyMoved = true;\r\n    }\r\n    /**\r\n     * @hidden\r\n     */\r\n    dragEnded(weekEvent, dragEndEvent, dayWidth, useY = false) {\r\n        this.view = this.getWeekView(this.events);\r\n        this.dragActive = false;\r\n        this.validateDrag = null;\r\n        const { start, end } = this.getDragMovedEventTimes(weekEvent, dragEndEvent, dayWidth, useY);\r\n        if ((this.snapDraggedEvents ||\r\n            this.eventDragEnterByType[useY ? 'time' : 'allDay'] > 0) &&\r\n            isDraggedWithinPeriod(start, end, this.view.period)) {\r\n            this.lastDraggedEvent = weekEvent.event;\r\n            this.eventTimesChanged.emit({\r\n                newStart: start,\r\n                newEnd: end,\r\n                event: weekEvent.event,\r\n                type: CalendarEventTimesChangedEventType.Drag,\r\n                allDay: !useY,\r\n            });\r\n        }\r\n    }\r\n    refreshHeader() {\r\n        this.days = this.utils.getWeekViewHeader(Object.assign({ viewDate: this.viewDate, weekStartsOn: this.weekStartsOn, excluded: this.excludeDays, weekendDays: this.weekendDays }, getWeekViewPeriod(this.dateAdapter, this.viewDate, this.weekStartsOn, this.excludeDays, this.daysInWeek)));\r\n    }\r\n    refreshBody() {\r\n        this.view = this.getWeekView(this.events);\r\n    }\r\n    refreshAll() {\r\n        this.refreshHeader();\r\n        this.refreshBody();\r\n        this.emitBeforeViewRender();\r\n    }\r\n    emitBeforeViewRender() {\r\n        if (this.days && this.view) {\r\n            this.beforeViewRender.emit(Object.assign({ header: this.days }, this.view));\r\n        }\r\n    }\r\n    getWeekView(events) {\r\n        return this.utils.getWeekView(Object.assign({ events, viewDate: this.viewDate, weekStartsOn: this.weekStartsOn, excluded: this.excludeDays, precision: this.precision, absolutePositionedEvents: true, hourSegments: this.hourSegments, hourDuration: this.hourDuration, dayStart: {\r\n                hour: this.dayStartHour,\r\n                minute: this.dayStartMinute,\r\n            }, dayEnd: {\r\n                hour: this.dayEndHour,\r\n                minute: this.dayEndMinute,\r\n            }, segmentHeight: this.hourSegmentHeight, weekendDays: this.weekendDays, minimumEventHeight: this.minimumEventHeight }, getWeekViewPeriod(this.dateAdapter, this.viewDate, this.weekStartsOn, this.excludeDays, this.daysInWeek)));\r\n    }\r\n    getDragMovedEventTimes(weekEvent, dragEndEvent, dayWidth, useY) {\r\n        const daysDragged = (roundToNearest(dragEndEvent.x, dayWidth) / dayWidth) *\r\n            (this.rtl ? -1 : 1);\r\n        const minutesMoved = useY\r\n            ? getMinutesMoved(dragEndEvent.y, this.hourSegments, this.hourSegmentHeight, this.eventSnapSize, this.hourDuration)\r\n            : 0;\r\n        const start = this.dateAdapter.addMinutes(addDaysWithExclusions(this.dateAdapter, weekEvent.event.start, daysDragged, this.excludeDays), minutesMoved);\r\n        let end;\r\n        if (weekEvent.event.end) {\r\n            end = this.dateAdapter.addMinutes(addDaysWithExclusions(this.dateAdapter, weekEvent.event.end, daysDragged, this.excludeDays), minutesMoved);\r\n        }\r\n        return { start, end };\r\n    }\r\n    restoreOriginalEvents(tempEvents, adjustedEvents, snapDraggedEvents = true) {\r\n        const previousView = this.view;\r\n        if (snapDraggedEvents) {\r\n            this.view = this.getWeekView(tempEvents);\r\n        }\r\n        const adjustedEventsArray = tempEvents.filter((event) => adjustedEvents.has(event));\r\n        this.view.hourColumns.forEach((column, columnIndex) => {\r\n            previousView.hourColumns[columnIndex].hours.forEach((hour, hourIndex) => {\r\n                hour.segments.forEach((segment, segmentIndex) => {\r\n                    column.hours[hourIndex].segments[segmentIndex].cssClass =\r\n                        segment.cssClass;\r\n                });\r\n            });\r\n            adjustedEventsArray.forEach((adjustedEvent) => {\r\n                const originalEvent = adjustedEvents.get(adjustedEvent);\r\n                const existingColumnEvent = column.events.find((columnEvent) => columnEvent.event ===\r\n                    (snapDraggedEvents ? adjustedEvent : originalEvent));\r\n                if (existingColumnEvent) {\r\n                    // restore the original event so trackBy kicks in and the dom isn't changed\r\n                    existingColumnEvent.event = originalEvent;\r\n                    existingColumnEvent['tempEvent'] = adjustedEvent;\r\n                    if (!snapDraggedEvents) {\r\n                        existingColumnEvent.height = 0;\r\n                        existingColumnEvent.width = 0;\r\n                    }\r\n                }\r\n                else {\r\n                    // add a dummy event to the drop so if the event was removed from the original column the drag doesn't end early\r\n                    const event = {\r\n                        event: originalEvent,\r\n                        left: 0,\r\n                        top: 0,\r\n                        height: 0,\r\n                        width: 0,\r\n                        startsBeforeDay: false,\r\n                        endsAfterDay: false,\r\n                        tempEvent: adjustedEvent,\r\n                    };\r\n                    column.events.push(event);\r\n                }\r\n            });\r\n        });\r\n        adjustedEvents.clear();\r\n    }\r\n    getTimeEventResizedDates(calendarEvent, resizeEvent) {\r\n        const newEventDates = {\r\n            start: calendarEvent.start,\r\n            end: getDefaultEventEnd(this.dateAdapter, calendarEvent, this.minimumEventHeight),\r\n        };\r\n        const { end } = calendarEvent, eventWithoutEnd = __rest(calendarEvent, [\"end\"]);\r\n        const smallestResizes = {\r\n            start: this.dateAdapter.addMinutes(newEventDates.end, this.minimumEventHeight * -1),\r\n            end: getDefaultEventEnd(this.dateAdapter, eventWithoutEnd, this.minimumEventHeight),\r\n        };\r\n        const modifier = this.rtl ? -1 : 1;\r\n        if (typeof resizeEvent.edges.left !== 'undefined') {\r\n            const daysDiff = Math.round(+resizeEvent.edges.left / this.dayColumnWidth) * modifier;\r\n            const newStart = addDaysWithExclusions(this.dateAdapter, newEventDates.start, daysDiff, this.excludeDays);\r\n            if (newStart < smallestResizes.start) {\r\n                newEventDates.start = newStart;\r\n            }\r\n            else {\r\n                newEventDates.start = smallestResizes.start;\r\n            }\r\n        }\r\n        else if (typeof resizeEvent.edges.right !== 'undefined') {\r\n            const daysDiff = Math.round(+resizeEvent.edges.right / this.dayColumnWidth) * modifier;\r\n            const newEnd = addDaysWithExclusions(this.dateAdapter, newEventDates.end, daysDiff, this.excludeDays);\r\n            if (newEnd > smallestResizes.end) {\r\n                newEventDates.end = newEnd;\r\n            }\r\n            else {\r\n                newEventDates.end = smallestResizes.end;\r\n            }\r\n        }\r\n        if (typeof resizeEvent.edges.top !== 'undefined') {\r\n            const minutesMoved = getMinutesMoved(resizeEvent.edges.top, this.hourSegments, this.hourSegmentHeight, this.eventSnapSize, this.hourDuration);\r\n            const newStart = this.dateAdapter.addMinutes(newEventDates.start, minutesMoved);\r\n            if (newStart < smallestResizes.start) {\r\n                newEventDates.start = newStart;\r\n            }\r\n            else {\r\n                newEventDates.start = smallestResizes.start;\r\n            }\r\n        }\r\n        else if (typeof resizeEvent.edges.bottom !== 'undefined') {\r\n            const minutesMoved = getMinutesMoved(resizeEvent.edges.bottom, this.hourSegments, this.hourSegmentHeight, this.eventSnapSize, this.hourDuration);\r\n            const newEnd = this.dateAdapter.addMinutes(newEventDates.end, minutesMoved);\r\n            if (newEnd > smallestResizes.end) {\r\n                newEventDates.end = newEnd;\r\n            }\r\n            else {\r\n                newEventDates.end = smallestResizes.end;\r\n            }\r\n        }\r\n        return newEventDates;\r\n    }\r\n    resizeStarted(eventsContainer, event, dayWidth) {\r\n        this.dayColumnWidth = this.getDayColumnWidth(eventsContainer);\r\n        const resizeHelper = new CalendarResizeHelper(eventsContainer, dayWidth, this.rtl);\r\n        this.validateResize = ({ rectangle, edges }) => {\r\n            const isWithinBoundary = resizeHelper.validateResize({\r\n                rectangle: Object.assign({}, rectangle),\r\n                edges,\r\n            });\r\n            if (isWithinBoundary && this.validateEventTimesChanged) {\r\n                let newEventDates;\r\n                if (!dayWidth) {\r\n                    newEventDates = this.getTimeEventResizedDates(event.event, {\r\n                        rectangle,\r\n                        edges,\r\n                    });\r\n                }\r\n                else {\r\n                    const modifier = this.rtl ? -1 : 1;\r\n                    if (typeof edges.left !== 'undefined') {\r\n                        const diff = Math.round(+edges.left / dayWidth) * modifier;\r\n                        newEventDates = this.getAllDayEventResizedDates(event.event, diff, !this.rtl);\r\n                    }\r\n                    else {\r\n                        const diff = Math.round(+edges.right / dayWidth) * modifier;\r\n                        newEventDates = this.getAllDayEventResizedDates(event.event, diff, this.rtl);\r\n                    }\r\n                }\r\n                return this.validateEventTimesChanged({\r\n                    type: CalendarEventTimesChangedEventType.Resize,\r\n                    event: event.event,\r\n                    newStart: newEventDates.start,\r\n                    newEnd: newEventDates.end,\r\n                });\r\n            }\r\n            return isWithinBoundary;\r\n        };\r\n        this.cdr.markForCheck();\r\n    }\r\n    /**\r\n     * @hidden\r\n     */\r\n    getAllDayEventResizedDates(event, daysDiff, beforeStart) {\r\n        let start = event.start;\r\n        let end = event.end || event.start;\r\n        if (beforeStart) {\r\n            start = addDaysWithExclusions(this.dateAdapter, start, daysDiff, this.excludeDays);\r\n        }\r\n        else {\r\n            end = addDaysWithExclusions(this.dateAdapter, end, daysDiff, this.excludeDays);\r\n        }\r\n        return { start, end };\r\n    }\r\n}\r\nCalendarWeekViewComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarWeekViewComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: CalendarUtils }, { token: LOCALE_ID }, { token: DateAdapter }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });\r\nCalendarWeekViewComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.0.4\", type: CalendarWeekViewComponent, selector: \"mwl-calendar-week-view\", inputs: { viewDate: \"viewDate\", events: \"events\", excludeDays: \"excludeDays\", refresh: \"refresh\", locale: \"locale\", tooltipPlacement: \"tooltipPlacement\", tooltipTemplate: \"tooltipTemplate\", tooltipAppendToBody: \"tooltipAppendToBody\", tooltipDelay: \"tooltipDelay\", weekStartsOn: \"weekStartsOn\", headerTemplate: \"headerTemplate\", eventTemplate: \"eventTemplate\", eventTitleTemplate: \"eventTitleTemplate\", eventActionsTemplate: \"eventActionsTemplate\", precision: \"precision\", weekendDays: \"weekendDays\", snapDraggedEvents: \"snapDraggedEvents\", hourSegments: \"hourSegments\", hourDuration: \"hourDuration\", hourSegmentHeight: \"hourSegmentHeight\", minimumEventHeight: \"minimumEventHeight\", dayStartHour: \"dayStartHour\", dayStartMinute: \"dayStartMinute\", dayEndHour: \"dayEndHour\", dayEndMinute: \"dayEndMinute\", hourSegmentTemplate: \"hourSegmentTemplate\", eventSnapSize: \"eventSnapSize\", allDayEventsLabelTemplate: \"allDayEventsLabelTemplate\", daysInWeek: \"daysInWeek\", currentTimeMarkerTemplate: \"currentTimeMarkerTemplate\", validateEventTimesChanged: \"validateEventTimesChanged\", resizeCursors: \"resizeCursors\" }, outputs: { dayHeaderClicked: \"dayHeaderClicked\", eventClicked: \"eventClicked\", eventTimesChanged: \"eventTimesChanged\", beforeViewRender: \"beforeViewRender\", hourSegmentClicked: \"hourSegmentClicked\" }, usesOnChanges: true, ngImport: i0, template: `\r\n    <div class=\"cal-week-view\" role=\"grid\">\r\n      <mwl-calendar-week-view-header\r\n        [days]=\"days\"\r\n        [locale]=\"locale\"\r\n        [customTemplate]=\"headerTemplate\"\r\n        (dayHeaderClicked)=\"dayHeaderClicked.emit($event)\"\r\n        (eventDropped)=\"\r\n          eventDropped({ dropData: $event }, $event.newStart, true)\r\n        \"\r\n        (dragEnter)=\"dateDragEnter($event.date)\"\r\n      >\r\n      </mwl-calendar-week-view-header>\r\n      <div\r\n        class=\"cal-all-day-events\"\r\n        #allDayEventsContainer\r\n        *ngIf=\"view.allDayEventRows.length > 0\"\r\n        mwlDroppable\r\n        (dragEnter)=\"dragEnter('allDay')\"\r\n        (dragLeave)=\"dragLeave('allDay')\"\r\n      >\r\n        <div class=\"cal-day-columns\">\r\n          <div\r\n            class=\"cal-time-label-column\"\r\n            [ngTemplateOutlet]=\"allDayEventsLabelTemplate\"\r\n          ></div>\r\n          <div\r\n            class=\"cal-day-column\"\r\n            *ngFor=\"let day of days; trackBy: trackByWeekDayHeaderDate\"\r\n            mwlDroppable\r\n            dragOverClass=\"cal-drag-over\"\r\n            (drop)=\"eventDropped($event, day.date, true)\"\r\n            (dragEnter)=\"dateDragEnter(day.date)\"\r\n          ></div>\r\n        </div>\r\n        <div\r\n          *ngFor=\"let eventRow of view.allDayEventRows; trackBy: trackById\"\r\n          #eventRowContainer\r\n          class=\"cal-events-row\"\r\n        >\r\n          <div\r\n            *ngFor=\"\r\n              let allDayEvent of eventRow.row;\r\n              trackBy: trackByWeekAllDayEvent\r\n            \"\r\n            #event\r\n            class=\"cal-event-container\"\r\n            [class.cal-draggable]=\"\r\n              allDayEvent.event.draggable && allDayEventResizes.size === 0\r\n            \"\r\n            [class.cal-starts-within-week]=\"!allDayEvent.startsBeforeWeek\"\r\n            [class.cal-ends-within-week]=\"!allDayEvent.endsAfterWeek\"\r\n            [ngClass]=\"allDayEvent.event?.cssClass\"\r\n            [style.width.%]=\"(100 / days.length) * allDayEvent.span\"\r\n            [style.marginLeft.%]=\"\r\n              rtl ? null : (100 / days.length) * allDayEvent.offset\r\n            \"\r\n            [style.marginRight.%]=\"\r\n              rtl ? (100 / days.length) * allDayEvent.offset : null\r\n            \"\r\n            mwlResizable\r\n            [resizeCursors]=\"resizeCursors\"\r\n            [resizeSnapGrid]=\"{ left: dayColumnWidth, right: dayColumnWidth }\"\r\n            [validateResize]=\"validateResize\"\r\n            (resizeStart)=\"\r\n              allDayEventResizeStarted(eventRowContainer, allDayEvent, $event)\r\n            \"\r\n            (resizing)=\"\r\n              allDayEventResizing(allDayEvent, $event, dayColumnWidth)\r\n            \"\r\n            (resizeEnd)=\"allDayEventResizeEnded(allDayEvent)\"\r\n            mwlDraggable\r\n            dragActiveClass=\"cal-drag-active\"\r\n            [dropData]=\"{ event: allDayEvent.event, calendarId: calendarId }\"\r\n            [dragAxis]=\"{\r\n              x: allDayEvent.event.draggable && allDayEventResizes.size === 0,\r\n              y:\r\n                !snapDraggedEvents &&\r\n                allDayEvent.event.draggable &&\r\n                allDayEventResizes.size === 0\r\n            }\"\r\n            [dragSnapGrid]=\"snapDraggedEvents ? { x: dayColumnWidth } : {}\"\r\n            [validateDrag]=\"validateDrag\"\r\n            [touchStartLongPress]=\"{ delay: 300, delta: 30 }\"\r\n            (dragStart)=\"\r\n              dragStarted(eventRowContainer, event, allDayEvent, false)\r\n            \"\r\n            (dragging)=\"allDayEventDragMove()\"\r\n            (dragEnd)=\"dragEnded(allDayEvent, $event, dayColumnWidth)\"\r\n          >\r\n            <div\r\n              class=\"cal-resize-handle cal-resize-handle-before-start\"\r\n              *ngIf=\"\r\n                allDayEvent.event?.resizable?.beforeStart &&\r\n                !allDayEvent.startsBeforeWeek\r\n              \"\r\n              mwlResizeHandle\r\n              [resizeEdges]=\"{ left: true }\"\r\n            ></div>\r\n            <mwl-calendar-week-view-event\r\n              [locale]=\"locale\"\r\n              [weekEvent]=\"allDayEvent\"\r\n              [tooltipPlacement]=\"tooltipPlacement\"\r\n              [tooltipTemplate]=\"tooltipTemplate\"\r\n              [tooltipAppendToBody]=\"tooltipAppendToBody\"\r\n              [tooltipDelay]=\"tooltipDelay\"\r\n              [customTemplate]=\"eventTemplate\"\r\n              [eventTitleTemplate]=\"eventTitleTemplate\"\r\n              [eventActionsTemplate]=\"eventActionsTemplate\"\r\n              [daysInWeek]=\"daysInWeek\"\r\n              (eventClicked)=\"\r\n                eventClicked.emit({\r\n                  event: allDayEvent.event,\r\n                  sourceEvent: $event.sourceEvent\r\n                })\r\n              \"\r\n            >\r\n            </mwl-calendar-week-view-event>\r\n            <div\r\n              class=\"cal-resize-handle cal-resize-handle-after-end\"\r\n              *ngIf=\"\r\n                allDayEvent.event?.resizable?.afterEnd &&\r\n                !allDayEvent.endsAfterWeek\r\n              \"\r\n              mwlResizeHandle\r\n              [resizeEdges]=\"{ right: true }\"\r\n            ></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div\r\n        class=\"cal-time-events\"\r\n        mwlDroppable\r\n        (dragEnter)=\"dragEnter('time')\"\r\n        (dragLeave)=\"dragLeave('time')\"\r\n      >\r\n        <div\r\n          class=\"cal-time-label-column\"\r\n          *ngIf=\"view.hourColumns.length > 0 && daysInWeek !== 1\"\r\n        >\r\n          <div\r\n            *ngFor=\"\r\n              let hour of view.hourColumns[0].hours;\r\n              trackBy: trackByHour;\r\n              let odd = odd\r\n            \"\r\n            class=\"cal-hour\"\r\n            [class.cal-hour-odd]=\"odd\"\r\n          >\r\n            <mwl-calendar-week-view-hour-segment\r\n              *ngFor=\"let segment of hour.segments; trackBy: trackByHourSegment\"\r\n              [style.height.px]=\"hourSegmentHeight\"\r\n              [segment]=\"segment\"\r\n              [segmentHeight]=\"hourSegmentHeight\"\r\n              [locale]=\"locale\"\r\n              [customTemplate]=\"hourSegmentTemplate\"\r\n              [isTimeLabel]=\"true\"\r\n              [daysInWeek]=\"daysInWeek\"\r\n            >\r\n            </mwl-calendar-week-view-hour-segment>\r\n          </div>\r\n        </div>\r\n        <div\r\n          class=\"cal-day-columns\"\r\n          [class.cal-resize-active]=\"timeEventResizes.size > 0\"\r\n          #dayColumns\r\n        >\r\n          <div\r\n            class=\"cal-day-column\"\r\n            *ngFor=\"let column of view.hourColumns; trackBy: trackByHourColumn\"\r\n          >\r\n            <mwl-calendar-week-view-current-time-marker\r\n              [columnDate]=\"column.date\"\r\n              [dayStartHour]=\"dayStartHour\"\r\n              [dayStartMinute]=\"dayStartMinute\"\r\n              [dayEndHour]=\"dayEndHour\"\r\n              [dayEndMinute]=\"dayEndMinute\"\r\n              [hourSegments]=\"hourSegments\"\r\n              [hourDuration]=\"hourDuration\"\r\n              [hourSegmentHeight]=\"hourSegmentHeight\"\r\n              [customTemplate]=\"currentTimeMarkerTemplate\"\r\n            ></mwl-calendar-week-view-current-time-marker>\r\n            <div class=\"cal-events-container\">\r\n              <div\r\n                *ngFor=\"\r\n                  let timeEvent of column.events;\r\n                  trackBy: trackByWeekTimeEvent\r\n                \"\r\n                #event\r\n                class=\"cal-event-container\"\r\n                [class.cal-draggable]=\"\r\n                  timeEvent.event.draggable && timeEventResizes.size === 0\r\n                \"\r\n                [class.cal-starts-within-day]=\"!timeEvent.startsBeforeDay\"\r\n                [class.cal-ends-within-day]=\"!timeEvent.endsAfterDay\"\r\n                [ngClass]=\"timeEvent.event.cssClass\"\r\n                [hidden]=\"timeEvent.height === 0 && timeEvent.width === 0\"\r\n                [style.top.px]=\"timeEvent.top\"\r\n                [style.height.px]=\"timeEvent.height\"\r\n                [style.left.%]=\"timeEvent.left\"\r\n                [style.width.%]=\"timeEvent.width\"\r\n                mwlResizable\r\n                [resizeCursors]=\"resizeCursors\"\r\n                [resizeSnapGrid]=\"{\r\n                  left: dayColumnWidth,\r\n                  right: dayColumnWidth,\r\n                  top: eventSnapSize || hourSegmentHeight,\r\n                  bottom: eventSnapSize || hourSegmentHeight\r\n                }\"\r\n                [validateResize]=\"validateResize\"\r\n                [allowNegativeResizes]=\"true\"\r\n                (resizeStart)=\"\r\n                  timeEventResizeStarted(dayColumns, timeEvent, $event)\r\n                \"\r\n                (resizing)=\"timeEventResizing(timeEvent, $event)\"\r\n                (resizeEnd)=\"timeEventResizeEnded(timeEvent)\"\r\n                mwlDraggable\r\n                dragActiveClass=\"cal-drag-active\"\r\n                [dropData]=\"{ event: timeEvent.event, calendarId: calendarId }\"\r\n                [dragAxis]=\"{\r\n                  x: timeEvent.event.draggable && timeEventResizes.size === 0,\r\n                  y: timeEvent.event.draggable && timeEventResizes.size === 0\r\n                }\"\r\n                [dragSnapGrid]=\"\r\n                  snapDraggedEvents\r\n                    ? {\r\n                        x: dayColumnWidth,\r\n                        y: eventSnapSize || hourSegmentHeight\r\n                      }\r\n                    : {}\r\n                \"\r\n                [touchStartLongPress]=\"{ delay: 300, delta: 30 }\"\r\n                [ghostDragEnabled]=\"!snapDraggedEvents\"\r\n                [ghostElementTemplate]=\"weekEventTemplate\"\r\n                [validateDrag]=\"validateDrag\"\r\n                (dragStart)=\"dragStarted(dayColumns, event, timeEvent, true)\"\r\n                (dragging)=\"dragMove(timeEvent, $event)\"\r\n                (dragEnd)=\"dragEnded(timeEvent, $event, dayColumnWidth, true)\"\r\n              >\r\n                <div\r\n                  class=\"cal-resize-handle cal-resize-handle-before-start\"\r\n                  *ngIf=\"\r\n                    timeEvent.event?.resizable?.beforeStart &&\r\n                    !timeEvent.startsBeforeDay\r\n                  \"\r\n                  mwlResizeHandle\r\n                  [resizeEdges]=\"{\r\n                    left: true,\r\n                    top: true\r\n                  }\"\r\n                ></div>\r\n                <ng-template\r\n                  [ngTemplateOutlet]=\"weekEventTemplate\"\r\n                ></ng-template>\r\n                <ng-template #weekEventTemplate>\r\n                  <mwl-calendar-week-view-event\r\n                    [locale]=\"locale\"\r\n                    [weekEvent]=\"timeEvent\"\r\n                    [tooltipPlacement]=\"tooltipPlacement\"\r\n                    [tooltipTemplate]=\"tooltipTemplate\"\r\n                    [tooltipAppendToBody]=\"tooltipAppendToBody\"\r\n                    [tooltipDisabled]=\"dragActive || timeEventResizes.size > 0\"\r\n                    [tooltipDelay]=\"tooltipDelay\"\r\n                    [customTemplate]=\"eventTemplate\"\r\n                    [eventTitleTemplate]=\"eventTitleTemplate\"\r\n                    [eventActionsTemplate]=\"eventActionsTemplate\"\r\n                    [column]=\"column\"\r\n                    [daysInWeek]=\"daysInWeek\"\r\n                    (eventClicked)=\"\r\n                      eventClicked.emit({\r\n                        event: timeEvent.event,\r\n                        sourceEvent: $event.sourceEvent\r\n                      })\r\n                    \"\r\n                  >\r\n                  </mwl-calendar-week-view-event>\r\n                </ng-template>\r\n                <div\r\n                  class=\"cal-resize-handle cal-resize-handle-after-end\"\r\n                  *ngIf=\"\r\n                    timeEvent.event?.resizable?.afterEnd &&\r\n                    !timeEvent.endsAfterDay\r\n                  \"\r\n                  mwlResizeHandle\r\n                  [resizeEdges]=\"{\r\n                    right: true,\r\n                    bottom: true\r\n                  }\"\r\n                ></div>\r\n              </div>\r\n            </div>\r\n\r\n            <div\r\n              *ngFor=\"\r\n                let hour of column.hours;\r\n                trackBy: trackByHour;\r\n                let odd = odd\r\n              \"\r\n              class=\"cal-hour\"\r\n              [class.cal-hour-odd]=\"odd\"\r\n            >\r\n              <mwl-calendar-week-view-hour-segment\r\n                *ngFor=\"\r\n                  let segment of hour.segments;\r\n                  trackBy: trackByHourSegment\r\n                \"\r\n                [style.height.px]=\"hourSegmentHeight\"\r\n                [segment]=\"segment\"\r\n                [segmentHeight]=\"hourSegmentHeight\"\r\n                [locale]=\"locale\"\r\n                [customTemplate]=\"hourSegmentTemplate\"\r\n                [daysInWeek]=\"daysInWeek\"\r\n                (mwlClick)=\"\r\n                  hourSegmentClicked.emit({\r\n                    date: segment.date,\r\n                    sourceEvent: $event\r\n                  })\r\n                \"\r\n                [clickListenerDisabled]=\"\r\n                  hourSegmentClicked.observers.length === 0\r\n                \"\r\n                mwlDroppable\r\n                [dragOverClass]=\"\r\n                  !dragActive || !snapDraggedEvents ? 'cal-drag-over' : null\r\n                \"\r\n                dragActiveClass=\"cal-drag-active\"\r\n                (drop)=\"eventDropped($event, segment.date, false)\"\r\n                (dragEnter)=\"dateDragEnter(segment.date)\"\r\n                [isTimeLabel]=\"daysInWeek === 1\"\r\n              >\r\n              </mwl-calendar-week-view-hour-segment>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  `, isInline: true, dependencies: [{ kind: \"directive\", type: i1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i1.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"directive\", type: i4.ResizableDirective, selector: \"[mwlResizable]\", inputs: [\"validateResize\", \"enableGhostResize\", \"resizeSnapGrid\", \"resizeCursors\", \"ghostElementPositioning\", \"allowNegativeResizes\", \"mouseMoveThrottleMS\"], outputs: [\"resizeStart\", \"resizing\", \"resizeEnd\"], exportAs: [\"mwlResizable\"] }, { kind: \"directive\", type: i4.ResizeHandleDirective, selector: \"[mwlResizeHandle]\", inputs: [\"resizeEdges\", \"resizableContainer\"] }, { kind: \"directive\", type: i2.DraggableDirective, selector: \"[mwlDraggable]\", inputs: [\"dropData\", \"dragAxis\", \"dragSnapGrid\", \"ghostDragEnabled\", \"showOriginalElementWhileDragging\", \"validateDrag\", \"dragCursor\", \"dragActiveClass\", \"ghostElementAppendTo\", \"ghostElementTemplate\", \"touchStartLongPress\", \"autoScroll\"], outputs: [\"dragPointerDown\", \"dragStart\", \"ghostElementCreated\", \"dragging\", \"dragEnd\"] }, { kind: \"directive\", type: i2.DroppableDirective, selector: \"[mwlDroppable]\", inputs: [\"dragOverClass\", \"dragActiveClass\", \"validateDrop\"], outputs: [\"dragEnter\", \"dragLeave\", \"dragOver\", \"drop\"] }, { kind: \"directive\", type: ClickDirective, selector: \"[mwlClick]\", inputs: [\"clickListenerDisabled\"], outputs: [\"mwlClick\"] }, { kind: \"component\", type: CalendarWeekViewHeaderComponent, selector: \"mwl-calendar-week-view-header\", inputs: [\"days\", \"locale\", \"customTemplate\"], outputs: [\"dayHeaderClicked\", \"eventDropped\", \"dragEnter\"] }, { kind: \"component\", type: CalendarWeekViewEventComponent, selector: \"mwl-calendar-week-view-event\", inputs: [\"locale\", \"weekEvent\", \"tooltipPlacement\", \"tooltipAppendToBody\", \"tooltipDisabled\", \"tooltipDelay\", \"customTemplate\", \"eventTitleTemplate\", \"eventActionsTemplate\", \"tooltipTemplate\", \"column\", \"daysInWeek\"], outputs: [\"eventClicked\"] }, { kind: \"component\", type: CalendarWeekViewHourSegmentComponent, selector: \"mwl-calendar-week-view-hour-segment\", inputs: [\"segment\", \"segmentHeight\", \"locale\", \"isTimeLabel\", \"daysInWeek\", \"customTemplate\"] }, { kind: \"component\", type: CalendarWeekViewCurrentTimeMarkerComponent, selector: \"mwl-calendar-week-view-current-time-marker\", inputs: [\"columnDate\", \"dayStartHour\", \"dayStartMinute\", \"dayEndHour\", \"dayEndMinute\", \"hourSegments\", \"hourDuration\", \"hourSegmentHeight\", \"customTemplate\"] }] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarWeekViewComponent, decorators: [{\r\n            type: Component,\r\n            args: [{\r\n                    selector: 'mwl-calendar-week-view',\r\n                    template: `\r\n    <div class=\"cal-week-view\" role=\"grid\">\r\n      <mwl-calendar-week-view-header\r\n        [days]=\"days\"\r\n        [locale]=\"locale\"\r\n        [customTemplate]=\"headerTemplate\"\r\n        (dayHeaderClicked)=\"dayHeaderClicked.emit($event)\"\r\n        (eventDropped)=\"\r\n          eventDropped({ dropData: $event }, $event.newStart, true)\r\n        \"\r\n        (dragEnter)=\"dateDragEnter($event.date)\"\r\n      >\r\n      </mwl-calendar-week-view-header>\r\n      <div\r\n        class=\"cal-all-day-events\"\r\n        #allDayEventsContainer\r\n        *ngIf=\"view.allDayEventRows.length > 0\"\r\n        mwlDroppable\r\n        (dragEnter)=\"dragEnter('allDay')\"\r\n        (dragLeave)=\"dragLeave('allDay')\"\r\n      >\r\n        <div class=\"cal-day-columns\">\r\n          <div\r\n            class=\"cal-time-label-column\"\r\n            [ngTemplateOutlet]=\"allDayEventsLabelTemplate\"\r\n          ></div>\r\n          <div\r\n            class=\"cal-day-column\"\r\n            *ngFor=\"let day of days; trackBy: trackByWeekDayHeaderDate\"\r\n            mwlDroppable\r\n            dragOverClass=\"cal-drag-over\"\r\n            (drop)=\"eventDropped($event, day.date, true)\"\r\n            (dragEnter)=\"dateDragEnter(day.date)\"\r\n          ></div>\r\n        </div>\r\n        <div\r\n          *ngFor=\"let eventRow of view.allDayEventRows; trackBy: trackById\"\r\n          #eventRowContainer\r\n          class=\"cal-events-row\"\r\n        >\r\n          <div\r\n            *ngFor=\"\r\n              let allDayEvent of eventRow.row;\r\n              trackBy: trackByWeekAllDayEvent\r\n            \"\r\n            #event\r\n            class=\"cal-event-container\"\r\n            [class.cal-draggable]=\"\r\n              allDayEvent.event.draggable && allDayEventResizes.size === 0\r\n            \"\r\n            [class.cal-starts-within-week]=\"!allDayEvent.startsBeforeWeek\"\r\n            [class.cal-ends-within-week]=\"!allDayEvent.endsAfterWeek\"\r\n            [ngClass]=\"allDayEvent.event?.cssClass\"\r\n            [style.width.%]=\"(100 / days.length) * allDayEvent.span\"\r\n            [style.marginLeft.%]=\"\r\n              rtl ? null : (100 / days.length) * allDayEvent.offset\r\n            \"\r\n            [style.marginRight.%]=\"\r\n              rtl ? (100 / days.length) * allDayEvent.offset : null\r\n            \"\r\n            mwlResizable\r\n            [resizeCursors]=\"resizeCursors\"\r\n            [resizeSnapGrid]=\"{ left: dayColumnWidth, right: dayColumnWidth }\"\r\n            [validateResize]=\"validateResize\"\r\n            (resizeStart)=\"\r\n              allDayEventResizeStarted(eventRowContainer, allDayEvent, $event)\r\n            \"\r\n            (resizing)=\"\r\n              allDayEventResizing(allDayEvent, $event, dayColumnWidth)\r\n            \"\r\n            (resizeEnd)=\"allDayEventResizeEnded(allDayEvent)\"\r\n            mwlDraggable\r\n            dragActiveClass=\"cal-drag-active\"\r\n            [dropData]=\"{ event: allDayEvent.event, calendarId: calendarId }\"\r\n            [dragAxis]=\"{\r\n              x: allDayEvent.event.draggable && allDayEventResizes.size === 0,\r\n              y:\r\n                !snapDraggedEvents &&\r\n                allDayEvent.event.draggable &&\r\n                allDayEventResizes.size === 0\r\n            }\"\r\n            [dragSnapGrid]=\"snapDraggedEvents ? { x: dayColumnWidth } : {}\"\r\n            [validateDrag]=\"validateDrag\"\r\n            [touchStartLongPress]=\"{ delay: 300, delta: 30 }\"\r\n            (dragStart)=\"\r\n              dragStarted(eventRowContainer, event, allDayEvent, false)\r\n            \"\r\n            (dragging)=\"allDayEventDragMove()\"\r\n            (dragEnd)=\"dragEnded(allDayEvent, $event, dayColumnWidth)\"\r\n          >\r\n            <div\r\n              class=\"cal-resize-handle cal-resize-handle-before-start\"\r\n              *ngIf=\"\r\n                allDayEvent.event?.resizable?.beforeStart &&\r\n                !allDayEvent.startsBeforeWeek\r\n              \"\r\n              mwlResizeHandle\r\n              [resizeEdges]=\"{ left: true }\"\r\n            ></div>\r\n            <mwl-calendar-week-view-event\r\n              [locale]=\"locale\"\r\n              [weekEvent]=\"allDayEvent\"\r\n              [tooltipPlacement]=\"tooltipPlacement\"\r\n              [tooltipTemplate]=\"tooltipTemplate\"\r\n              [tooltipAppendToBody]=\"tooltipAppendToBody\"\r\n              [tooltipDelay]=\"tooltipDelay\"\r\n              [customTemplate]=\"eventTemplate\"\r\n              [eventTitleTemplate]=\"eventTitleTemplate\"\r\n              [eventActionsTemplate]=\"eventActionsTemplate\"\r\n              [daysInWeek]=\"daysInWeek\"\r\n              (eventClicked)=\"\r\n                eventClicked.emit({\r\n                  event: allDayEvent.event,\r\n                  sourceEvent: $event.sourceEvent\r\n                })\r\n              \"\r\n            >\r\n            </mwl-calendar-week-view-event>\r\n            <div\r\n              class=\"cal-resize-handle cal-resize-handle-after-end\"\r\n              *ngIf=\"\r\n                allDayEvent.event?.resizable?.afterEnd &&\r\n                !allDayEvent.endsAfterWeek\r\n              \"\r\n              mwlResizeHandle\r\n              [resizeEdges]=\"{ right: true }\"\r\n            ></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div\r\n        class=\"cal-time-events\"\r\n        mwlDroppable\r\n        (dragEnter)=\"dragEnter('time')\"\r\n        (dragLeave)=\"dragLeave('time')\"\r\n      >\r\n        <div\r\n          class=\"cal-time-label-column\"\r\n          *ngIf=\"view.hourColumns.length > 0 && daysInWeek !== 1\"\r\n        >\r\n          <div\r\n            *ngFor=\"\r\n              let hour of view.hourColumns[0].hours;\r\n              trackBy: trackByHour;\r\n              let odd = odd\r\n            \"\r\n            class=\"cal-hour\"\r\n            [class.cal-hour-odd]=\"odd\"\r\n          >\r\n            <mwl-calendar-week-view-hour-segment\r\n              *ngFor=\"let segment of hour.segments; trackBy: trackByHourSegment\"\r\n              [style.height.px]=\"hourSegmentHeight\"\r\n              [segment]=\"segment\"\r\n              [segmentHeight]=\"hourSegmentHeight\"\r\n              [locale]=\"locale\"\r\n              [customTemplate]=\"hourSegmentTemplate\"\r\n              [isTimeLabel]=\"true\"\r\n              [daysInWeek]=\"daysInWeek\"\r\n            >\r\n            </mwl-calendar-week-view-hour-segment>\r\n          </div>\r\n        </div>\r\n        <div\r\n          class=\"cal-day-columns\"\r\n          [class.cal-resize-active]=\"timeEventResizes.size > 0\"\r\n          #dayColumns\r\n        >\r\n          <div\r\n            class=\"cal-day-column\"\r\n            *ngFor=\"let column of view.hourColumns; trackBy: trackByHourColumn\"\r\n          >\r\n            <mwl-calendar-week-view-current-time-marker\r\n              [columnDate]=\"column.date\"\r\n              [dayStartHour]=\"dayStartHour\"\r\n              [dayStartMinute]=\"dayStartMinute\"\r\n              [dayEndHour]=\"dayEndHour\"\r\n              [dayEndMinute]=\"dayEndMinute\"\r\n              [hourSegments]=\"hourSegments\"\r\n              [hourDuration]=\"hourDuration\"\r\n              [hourSegmentHeight]=\"hourSegmentHeight\"\r\n              [customTemplate]=\"currentTimeMarkerTemplate\"\r\n            ></mwl-calendar-week-view-current-time-marker>\r\n            <div class=\"cal-events-container\">\r\n              <div\r\n                *ngFor=\"\r\n                  let timeEvent of column.events;\r\n                  trackBy: trackByWeekTimeEvent\r\n                \"\r\n                #event\r\n                class=\"cal-event-container\"\r\n                [class.cal-draggable]=\"\r\n                  timeEvent.event.draggable && timeEventResizes.size === 0\r\n                \"\r\n                [class.cal-starts-within-day]=\"!timeEvent.startsBeforeDay\"\r\n                [class.cal-ends-within-day]=\"!timeEvent.endsAfterDay\"\r\n                [ngClass]=\"timeEvent.event.cssClass\"\r\n                [hidden]=\"timeEvent.height === 0 && timeEvent.width === 0\"\r\n                [style.top.px]=\"timeEvent.top\"\r\n                [style.height.px]=\"timeEvent.height\"\r\n                [style.left.%]=\"timeEvent.left\"\r\n                [style.width.%]=\"timeEvent.width\"\r\n                mwlResizable\r\n                [resizeCursors]=\"resizeCursors\"\r\n                [resizeSnapGrid]=\"{\r\n                  left: dayColumnWidth,\r\n                  right: dayColumnWidth,\r\n                  top: eventSnapSize || hourSegmentHeight,\r\n                  bottom: eventSnapSize || hourSegmentHeight\r\n                }\"\r\n                [validateResize]=\"validateResize\"\r\n                [allowNegativeResizes]=\"true\"\r\n                (resizeStart)=\"\r\n                  timeEventResizeStarted(dayColumns, timeEvent, $event)\r\n                \"\r\n                (resizing)=\"timeEventResizing(timeEvent, $event)\"\r\n                (resizeEnd)=\"timeEventResizeEnded(timeEvent)\"\r\n                mwlDraggable\r\n                dragActiveClass=\"cal-drag-active\"\r\n                [dropData]=\"{ event: timeEvent.event, calendarId: calendarId }\"\r\n                [dragAxis]=\"{\r\n                  x: timeEvent.event.draggable && timeEventResizes.size === 0,\r\n                  y: timeEvent.event.draggable && timeEventResizes.size === 0\r\n                }\"\r\n                [dragSnapGrid]=\"\r\n                  snapDraggedEvents\r\n                    ? {\r\n                        x: dayColumnWidth,\r\n                        y: eventSnapSize || hourSegmentHeight\r\n                      }\r\n                    : {}\r\n                \"\r\n                [touchStartLongPress]=\"{ delay: 300, delta: 30 }\"\r\n                [ghostDragEnabled]=\"!snapDraggedEvents\"\r\n                [ghostElementTemplate]=\"weekEventTemplate\"\r\n                [validateDrag]=\"validateDrag\"\r\n                (dragStart)=\"dragStarted(dayColumns, event, timeEvent, true)\"\r\n                (dragging)=\"dragMove(timeEvent, $event)\"\r\n                (dragEnd)=\"dragEnded(timeEvent, $event, dayColumnWidth, true)\"\r\n              >\r\n                <div\r\n                  class=\"cal-resize-handle cal-resize-handle-before-start\"\r\n                  *ngIf=\"\r\n                    timeEvent.event?.resizable?.beforeStart &&\r\n                    !timeEvent.startsBeforeDay\r\n                  \"\r\n                  mwlResizeHandle\r\n                  [resizeEdges]=\"{\r\n                    left: true,\r\n                    top: true\r\n                  }\"\r\n                ></div>\r\n                <ng-template\r\n                  [ngTemplateOutlet]=\"weekEventTemplate\"\r\n                ></ng-template>\r\n                <ng-template #weekEventTemplate>\r\n                  <mwl-calendar-week-view-event\r\n                    [locale]=\"locale\"\r\n                    [weekEvent]=\"timeEvent\"\r\n                    [tooltipPlacement]=\"tooltipPlacement\"\r\n                    [tooltipTemplate]=\"tooltipTemplate\"\r\n                    [tooltipAppendToBody]=\"tooltipAppendToBody\"\r\n                    [tooltipDisabled]=\"dragActive || timeEventResizes.size > 0\"\r\n                    [tooltipDelay]=\"tooltipDelay\"\r\n                    [customTemplate]=\"eventTemplate\"\r\n                    [eventTitleTemplate]=\"eventTitleTemplate\"\r\n                    [eventActionsTemplate]=\"eventActionsTemplate\"\r\n                    [column]=\"column\"\r\n                    [daysInWeek]=\"daysInWeek\"\r\n                    (eventClicked)=\"\r\n                      eventClicked.emit({\r\n                        event: timeEvent.event,\r\n                        sourceEvent: $event.sourceEvent\r\n                      })\r\n                    \"\r\n                  >\r\n                  </mwl-calendar-week-view-event>\r\n                </ng-template>\r\n                <div\r\n                  class=\"cal-resize-handle cal-resize-handle-after-end\"\r\n                  *ngIf=\"\r\n                    timeEvent.event?.resizable?.afterEnd &&\r\n                    !timeEvent.endsAfterDay\r\n                  \"\r\n                  mwlResizeHandle\r\n                  [resizeEdges]=\"{\r\n                    right: true,\r\n                    bottom: true\r\n                  }\"\r\n                ></div>\r\n              </div>\r\n            </div>\r\n\r\n            <div\r\n              *ngFor=\"\r\n                let hour of column.hours;\r\n                trackBy: trackByHour;\r\n                let odd = odd\r\n              \"\r\n              class=\"cal-hour\"\r\n              [class.cal-hour-odd]=\"odd\"\r\n            >\r\n              <mwl-calendar-week-view-hour-segment\r\n                *ngFor=\"\r\n                  let segment of hour.segments;\r\n                  trackBy: trackByHourSegment\r\n                \"\r\n                [style.height.px]=\"hourSegmentHeight\"\r\n                [segment]=\"segment\"\r\n                [segmentHeight]=\"hourSegmentHeight\"\r\n                [locale]=\"locale\"\r\n                [customTemplate]=\"hourSegmentTemplate\"\r\n                [daysInWeek]=\"daysInWeek\"\r\n                (mwlClick)=\"\r\n                  hourSegmentClicked.emit({\r\n                    date: segment.date,\r\n                    sourceEvent: $event\r\n                  })\r\n                \"\r\n                [clickListenerDisabled]=\"\r\n                  hourSegmentClicked.observers.length === 0\r\n                \"\r\n                mwlDroppable\r\n                [dragOverClass]=\"\r\n                  !dragActive || !snapDraggedEvents ? 'cal-drag-over' : null\r\n                \"\r\n                dragActiveClass=\"cal-drag-active\"\r\n                (drop)=\"eventDropped($event, segment.date, false)\"\r\n                (dragEnter)=\"dateDragEnter(segment.date)\"\r\n                [isTimeLabel]=\"daysInWeek === 1\"\r\n              >\r\n              </mwl-calendar-week-view-hour-segment>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  `,\r\n                }]\r\n        }], ctorParameters: function () {\r\n        return [{ type: i0.ChangeDetectorRef }, { type: CalendarUtils }, { type: undefined, decorators: [{\r\n                        type: Inject,\r\n                        args: [LOCALE_ID]\r\n                    }] }, { type: DateAdapter }, { type: i0.ElementRef }];\r\n    }, propDecorators: { viewDate: [{\r\n                type: Input\r\n            }], events: [{\r\n                type: Input\r\n            }], excludeDays: [{\r\n                type: Input\r\n            }], refresh: [{\r\n                type: Input\r\n            }], locale: [{\r\n                type: Input\r\n            }], tooltipPlacement: [{\r\n                type: Input\r\n            }], tooltipTemplate: [{\r\n                type: Input\r\n            }], tooltipAppendToBody: [{\r\n                type: Input\r\n            }], tooltipDelay: [{\r\n                type: Input\r\n            }], weekStartsOn: [{\r\n                type: Input\r\n            }], headerTemplate: [{\r\n                type: Input\r\n            }], eventTemplate: [{\r\n                type: Input\r\n            }], eventTitleTemplate: [{\r\n                type: Input\r\n            }], eventActionsTemplate: [{\r\n                type: Input\r\n            }], precision: [{\r\n                type: Input\r\n            }], weekendDays: [{\r\n                type: Input\r\n            }], snapDraggedEvents: [{\r\n                type: Input\r\n            }], hourSegments: [{\r\n                type: Input\r\n            }], hourDuration: [{\r\n                type: Input\r\n            }], hourSegmentHeight: [{\r\n                type: Input\r\n            }], minimumEventHeight: [{\r\n                type: Input\r\n            }], dayStartHour: [{\r\n                type: Input\r\n            }], dayStartMinute: [{\r\n                type: Input\r\n            }], dayEndHour: [{\r\n                type: Input\r\n            }], dayEndMinute: [{\r\n                type: Input\r\n            }], hourSegmentTemplate: [{\r\n                type: Input\r\n            }], eventSnapSize: [{\r\n                type: Input\r\n            }], allDayEventsLabelTemplate: [{\r\n                type: Input\r\n            }], daysInWeek: [{\r\n                type: Input\r\n            }], currentTimeMarkerTemplate: [{\r\n                type: Input\r\n            }], validateEventTimesChanged: [{\r\n                type: Input\r\n            }], resizeCursors: [{\r\n                type: Input\r\n            }], dayHeaderClicked: [{\r\n                type: Output\r\n            }], eventClicked: [{\r\n                type: Output\r\n            }], eventTimesChanged: [{\r\n                type: Output\r\n            }], beforeViewRender: [{\r\n                type: Output\r\n            }], hourSegmentClicked: [{\r\n                type: Output\r\n            }] } });","originalLength":152051,"removedExports":[],"renderedExports":["CalendarWeekViewComponent"],"renderedLength":59452},"C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\day\\calendar-day-view\\calendar-day-view.component.mjs":{"code":"/**\r\n * Shows all events on a given day. Example usage:\r\n *\r\n * ```typescript\r\n * <mwl-calendar-day-view\r\n *  [viewDate]=\"viewDate\"\r\n *  [events]=\"events\">\r\n * </mwl-calendar-day-view>\r\n * ```\r\n */\r\nclass CalendarDayViewComponent {\r\n    constructor() {\r\n        /**\r\n         * An array of events to display on view\r\n         * The schema is available here: https://github.com/mattlewis92/calendar-utils/blob/c51689985f59a271940e30bc4e2c4e1fee3fcb5c/src/calendarUtils.ts#L49-L63\r\n         */\r\n        this.events = [];\r\n        /**\r\n         * The number of segments in an hour. Must divide equally into 60.\r\n         */\r\n        this.hourSegments = 2;\r\n        /**\r\n         * The height in pixels of each hour segment\r\n         */\r\n        this.hourSegmentHeight = 30;\r\n        /**\r\n         * The minimum height in pixels of each event\r\n         */\r\n        this.minimumEventHeight = 30;\r\n        /**\r\n         * The day start hours in 24 hour time. Must be 0-23\r\n         */\r\n        this.dayStartHour = 0;\r\n        /**\r\n         * The day start minutes. Must be 0-59\r\n         */\r\n        this.dayStartMinute = 0;\r\n        /**\r\n         * The day end hours in 24 hour time. Must be 0-23\r\n         */\r\n        this.dayEndHour = 23;\r\n        /**\r\n         * The day end minutes. Must be 0-59\r\n         */\r\n        this.dayEndMinute = 59;\r\n        /**\r\n         * The placement of the event tooltip\r\n         */\r\n        this.tooltipPlacement = 'auto';\r\n        /**\r\n         * Whether to append tooltips to the body or next to the trigger element\r\n         */\r\n        this.tooltipAppendToBody = true;\r\n        /**\r\n         * The delay in milliseconds before the tooltip should be displayed. If not provided the tooltip\r\n         * will be displayed immediately.\r\n         */\r\n        this.tooltipDelay = null;\r\n        /**\r\n         * Whether to snap events to a grid when dragging\r\n         */\r\n        this.snapDraggedEvents = true;\r\n        /**\r\n         * Called when an event title is clicked\r\n         */\r\n        this.eventClicked = new EventEmitter();\r\n        /**\r\n         * Called when an hour segment is clicked\r\n         */\r\n        this.hourSegmentClicked = new EventEmitter();\r\n        /**\r\n         * Called when an event is resized or dragged and dropped\r\n         */\r\n        this.eventTimesChanged = new EventEmitter();\r\n        /**\r\n         * An output that will be called before the view is rendered for the current day.\r\n         * If you add the `cssClass` property to an hour grid segment it will add that class to the hour segment in the template\r\n         */\r\n        this.beforeViewRender = new EventEmitter();\r\n    }\r\n}\r\nCalendarDayViewComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarDayViewComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\r\nCalendarDayViewComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.0.4\", type: CalendarDayViewComponent, selector: \"mwl-calendar-day-view\", inputs: { viewDate: \"viewDate\", events: \"events\", hourSegments: \"hourSegments\", hourSegmentHeight: \"hourSegmentHeight\", hourDuration: \"hourDuration\", minimumEventHeight: \"minimumEventHeight\", dayStartHour: \"dayStartHour\", dayStartMinute: \"dayStartMinute\", dayEndHour: \"dayEndHour\", dayEndMinute: \"dayEndMinute\", refresh: \"refresh\", locale: \"locale\", eventSnapSize: \"eventSnapSize\", tooltipPlacement: \"tooltipPlacement\", tooltipTemplate: \"tooltipTemplate\", tooltipAppendToBody: \"tooltipAppendToBody\", tooltipDelay: \"tooltipDelay\", hourSegmentTemplate: \"hourSegmentTemplate\", eventTemplate: \"eventTemplate\", eventTitleTemplate: \"eventTitleTemplate\", eventActionsTemplate: \"eventActionsTemplate\", snapDraggedEvents: \"snapDraggedEvents\", allDayEventsLabelTemplate: \"allDayEventsLabelTemplate\", currentTimeMarkerTemplate: \"currentTimeMarkerTemplate\", validateEventTimesChanged: \"validateEventTimesChanged\", resizeCursors: \"resizeCursors\" }, outputs: { eventClicked: \"eventClicked\", hourSegmentClicked: \"hourSegmentClicked\", eventTimesChanged: \"eventTimesChanged\", beforeViewRender: \"beforeViewRender\" }, ngImport: i0, template: `\r\n    <mwl-calendar-week-view\r\n      class=\"cal-day-view\"\r\n      [daysInWeek]=\"1\"\r\n      [viewDate]=\"viewDate\"\r\n      [events]=\"events\"\r\n      [hourSegments]=\"hourSegments\"\r\n      [hourDuration]=\"hourDuration\"\r\n      [hourSegmentHeight]=\"hourSegmentHeight\"\r\n      [minimumEventHeight]=\"minimumEventHeight\"\r\n      [dayStartHour]=\"dayStartHour\"\r\n      [dayStartMinute]=\"dayStartMinute\"\r\n      [dayEndHour]=\"dayEndHour\"\r\n      [dayEndMinute]=\"dayEndMinute\"\r\n      [refresh]=\"refresh\"\r\n      [locale]=\"locale\"\r\n      [eventSnapSize]=\"eventSnapSize\"\r\n      [tooltipPlacement]=\"tooltipPlacement\"\r\n      [tooltipTemplate]=\"tooltipTemplate\"\r\n      [tooltipAppendToBody]=\"tooltipAppendToBody\"\r\n      [tooltipDelay]=\"tooltipDelay\"\r\n      [resizeCursors]=\"resizeCursors\"\r\n      [hourSegmentTemplate]=\"hourSegmentTemplate\"\r\n      [eventTemplate]=\"eventTemplate\"\r\n      [eventTitleTemplate]=\"eventTitleTemplate\"\r\n      [eventActionsTemplate]=\"eventActionsTemplate\"\r\n      [snapDraggedEvents]=\"snapDraggedEvents\"\r\n      [allDayEventsLabelTemplate]=\"allDayEventsLabelTemplate\"\r\n      [currentTimeMarkerTemplate]=\"currentTimeMarkerTemplate\"\r\n      [validateEventTimesChanged]=\"validateEventTimesChanged\"\r\n      (eventClicked)=\"eventClicked.emit($event)\"\r\n      (hourSegmentClicked)=\"hourSegmentClicked.emit($event)\"\r\n      (eventTimesChanged)=\"eventTimesChanged.emit($event)\"\r\n      (beforeViewRender)=\"beforeViewRender.emit($event)\"\r\n    ></mwl-calendar-week-view>\r\n  `, isInline: true, dependencies: [{ kind: \"component\", type: CalendarWeekViewComponent, selector: \"mwl-calendar-week-view\", inputs: [\"viewDate\", \"events\", \"excludeDays\", \"refresh\", \"locale\", \"tooltipPlacement\", \"tooltipTemplate\", \"tooltipAppendToBody\", \"tooltipDelay\", \"weekStartsOn\", \"headerTemplate\", \"eventTemplate\", \"eventTitleTemplate\", \"eventActionsTemplate\", \"precision\", \"weekendDays\", \"snapDraggedEvents\", \"hourSegments\", \"hourDuration\", \"hourSegmentHeight\", \"minimumEventHeight\", \"dayStartHour\", \"dayStartMinute\", \"dayEndHour\", \"dayEndMinute\", \"hourSegmentTemplate\", \"eventSnapSize\", \"allDayEventsLabelTemplate\", \"daysInWeek\", \"currentTimeMarkerTemplate\", \"validateEventTimesChanged\", \"resizeCursors\"], outputs: [\"dayHeaderClicked\", \"eventClicked\", \"eventTimesChanged\", \"beforeViewRender\", \"hourSegmentClicked\"] }] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarDayViewComponent, decorators: [{\r\n            type: Component,\r\n            args: [{\r\n                    selector: 'mwl-calendar-day-view',\r\n                    template: `\r\n    <mwl-calendar-week-view\r\n      class=\"cal-day-view\"\r\n      [daysInWeek]=\"1\"\r\n      [viewDate]=\"viewDate\"\r\n      [events]=\"events\"\r\n      [hourSegments]=\"hourSegments\"\r\n      [hourDuration]=\"hourDuration\"\r\n      [hourSegmentHeight]=\"hourSegmentHeight\"\r\n      [minimumEventHeight]=\"minimumEventHeight\"\r\n      [dayStartHour]=\"dayStartHour\"\r\n      [dayStartMinute]=\"dayStartMinute\"\r\n      [dayEndHour]=\"dayEndHour\"\r\n      [dayEndMinute]=\"dayEndMinute\"\r\n      [refresh]=\"refresh\"\r\n      [locale]=\"locale\"\r\n      [eventSnapSize]=\"eventSnapSize\"\r\n      [tooltipPlacement]=\"tooltipPlacement\"\r\n      [tooltipTemplate]=\"tooltipTemplate\"\r\n      [tooltipAppendToBody]=\"tooltipAppendToBody\"\r\n      [tooltipDelay]=\"tooltipDelay\"\r\n      [resizeCursors]=\"resizeCursors\"\r\n      [hourSegmentTemplate]=\"hourSegmentTemplate\"\r\n      [eventTemplate]=\"eventTemplate\"\r\n      [eventTitleTemplate]=\"eventTitleTemplate\"\r\n      [eventActionsTemplate]=\"eventActionsTemplate\"\r\n      [snapDraggedEvents]=\"snapDraggedEvents\"\r\n      [allDayEventsLabelTemplate]=\"allDayEventsLabelTemplate\"\r\n      [currentTimeMarkerTemplate]=\"currentTimeMarkerTemplate\"\r\n      [validateEventTimesChanged]=\"validateEventTimesChanged\"\r\n      (eventClicked)=\"eventClicked.emit($event)\"\r\n      (hourSegmentClicked)=\"hourSegmentClicked.emit($event)\"\r\n      (eventTimesChanged)=\"eventTimesChanged.emit($event)\"\r\n      (beforeViewRender)=\"beforeViewRender.emit($event)\"\r\n    ></mwl-calendar-week-view>\r\n  `,\r\n                }]\r\n        }], propDecorators: { viewDate: [{\r\n                type: Input\r\n            }], events: [{\r\n                type: Input\r\n            }], hourSegments: [{\r\n                type: Input\r\n            }], hourSegmentHeight: [{\r\n                type: Input\r\n            }], hourDuration: [{\r\n                type: Input\r\n            }], minimumEventHeight: [{\r\n                type: Input\r\n            }], dayStartHour: [{\r\n                type: Input\r\n            }], dayStartMinute: [{\r\n                type: Input\r\n            }], dayEndHour: [{\r\n                type: Input\r\n            }], dayEndMinute: [{\r\n                type: Input\r\n            }], refresh: [{\r\n                type: Input\r\n            }], locale: [{\r\n                type: Input\r\n            }], eventSnapSize: [{\r\n                type: Input\r\n            }], tooltipPlacement: [{\r\n                type: Input\r\n            }], tooltipTemplate: [{\r\n                type: Input\r\n            }], tooltipAppendToBody: [{\r\n                type: Input\r\n            }], tooltipDelay: [{\r\n                type: Input\r\n            }], hourSegmentTemplate: [{\r\n                type: Input\r\n            }], eventTemplate: [{\r\n                type: Input\r\n            }], eventTitleTemplate: [{\r\n                type: Input\r\n            }], eventActionsTemplate: [{\r\n                type: Input\r\n            }], snapDraggedEvents: [{\r\n                type: Input\r\n            }], allDayEventsLabelTemplate: [{\r\n                type: Input\r\n            }], currentTimeMarkerTemplate: [{\r\n                type: Input\r\n            }], validateEventTimesChanged: [{\r\n                type: Input\r\n            }], resizeCursors: [{\r\n                type: Input\r\n            }], eventClicked: [{\r\n                type: Output\r\n            }], hourSegmentClicked: [{\r\n                type: Output\r\n            }], eventTimesChanged: [{\r\n                type: Output\r\n            }], beforeViewRender: [{\r\n                type: Output\r\n            }] } });","originalLength":22572,"removedExports":[],"renderedExports":["CalendarDayViewComponent"],"renderedLength":10187},"C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\week\\calendar-week.module.mjs":{"code":"class CalendarWeekModule {\r\n}\r\nCalendarWeekModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarWeekModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\r\nCalendarWeekModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarWeekModule, declarations: [CalendarWeekViewComponent,\r\n        CalendarWeekViewHeaderComponent,\r\n        CalendarWeekViewEventComponent,\r\n        CalendarWeekViewHourSegmentComponent,\r\n        CalendarWeekViewCurrentTimeMarkerComponent], imports: [CommonModule,\r\n        ResizableModule,\r\n        DragAndDropModule,\r\n        CalendarCommonModule], exports: [ResizableModule,\r\n        DragAndDropModule,\r\n        CalendarWeekViewComponent,\r\n        CalendarWeekViewHeaderComponent,\r\n        CalendarWeekViewEventComponent,\r\n        CalendarWeekViewHourSegmentComponent,\r\n        CalendarWeekViewCurrentTimeMarkerComponent] });\r\nCalendarWeekModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarWeekModule, imports: [CommonModule,\r\n        ResizableModule,\r\n        DragAndDropModule,\r\n        CalendarCommonModule, ResizableModule,\r\n        DragAndDropModule] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarWeekModule, decorators: [{\r\n            type: NgModule,\r\n            args: [{\r\n                    imports: [\r\n                        CommonModule,\r\n                        ResizableModule,\r\n                        DragAndDropModule,\r\n                        CalendarCommonModule,\r\n                    ],\r\n                    declarations: [\r\n                        CalendarWeekViewComponent,\r\n                        CalendarWeekViewHeaderComponent,\r\n                        CalendarWeekViewEventComponent,\r\n                        CalendarWeekViewHourSegmentComponent,\r\n                        CalendarWeekViewCurrentTimeMarkerComponent,\r\n                    ],\r\n                    exports: [\r\n                        ResizableModule,\r\n                        DragAndDropModule,\r\n                        CalendarWeekViewComponent,\r\n                        CalendarWeekViewHeaderComponent,\r\n                        CalendarWeekViewEventComponent,\r\n                        CalendarWeekViewHourSegmentComponent,\r\n                        CalendarWeekViewCurrentTimeMarkerComponent,\r\n                    ],\r\n                }]\r\n        }] });","originalLength":10630,"removedExports":[],"renderedExports":["CalendarWeekModule"],"renderedLength":2492},"C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\day\\calendar-day.module.mjs":{"code":"class CalendarDayModule {\r\n}\r\nCalendarDayModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarDayModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\r\nCalendarDayModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarDayModule, declarations: [CalendarDayViewComponent], imports: [CommonModule, CalendarCommonModule, CalendarWeekModule], exports: [CalendarDayViewComponent] });\r\nCalendarDayModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarDayModule, imports: [CommonModule, CalendarCommonModule, CalendarWeekModule] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarDayModule, decorators: [{\r\n            type: NgModule,\r\n            args: [{\r\n                    imports: [CommonModule, CalendarCommonModule, CalendarWeekModule],\r\n                    declarations: [CalendarDayViewComponent],\r\n                    exports: [CalendarDayViewComponent],\r\n                }]\r\n        }] });","originalLength":3625,"removedExports":[],"renderedExports":["CalendarDayModule"],"renderedLength":1111},"C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\month\\calendar-month-view\\calendar-month-cell\\calendar-month-cell.component.mjs":{"code":"class CalendarMonthCellComponent {\r\n    constructor() {\r\n        this.highlightDay = new EventEmitter();\r\n        this.unhighlightDay = new EventEmitter();\r\n        this.eventClicked = new EventEmitter();\r\n        this.trackByEventId = trackByEventId;\r\n        this.validateDrag = isWithinThreshold;\r\n    }\r\n}\r\nCalendarMonthCellComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarMonthCellComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\r\nCalendarMonthCellComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.0.4\", type: CalendarMonthCellComponent, selector: \"mwl-calendar-month-cell\", inputs: { day: \"day\", openDay: \"openDay\", locale: \"locale\", tooltipPlacement: \"tooltipPlacement\", tooltipAppendToBody: \"tooltipAppendToBody\", customTemplate: \"customTemplate\", tooltipTemplate: \"tooltipTemplate\", tooltipDelay: \"tooltipDelay\" }, outputs: { highlightDay: \"highlightDay\", unhighlightDay: \"unhighlightDay\", eventClicked: \"eventClicked\" }, host: { properties: { \"class.cal-past\": \"day.isPast\", \"class.cal-today\": \"day.isToday\", \"class.cal-future\": \"day.isFuture\", \"class.cal-weekend\": \"day.isWeekend\", \"class.cal-in-month\": \"day.inMonth\", \"class.cal-out-month\": \"!day.inMonth\", \"class.cal-has-events\": \"day.events.length > 0\", \"class.cal-open\": \"day === openDay\", \"class.cal-event-highlight\": \"!!day.backgroundColor\" }, classAttribute: \"cal-cell cal-day-cell\" }, ngImport: i0, template: `\r\n    <ng-template\r\n      #defaultTemplate\r\n      let-day=\"day\"\r\n      let-openDay=\"openDay\"\r\n      let-locale=\"locale\"\r\n      let-tooltipPlacement=\"tooltipPlacement\"\r\n      let-highlightDay=\"highlightDay\"\r\n      let-unhighlightDay=\"unhighlightDay\"\r\n      let-eventClicked=\"eventClicked\"\r\n      let-tooltipTemplate=\"tooltipTemplate\"\r\n      let-tooltipAppendToBody=\"tooltipAppendToBody\"\r\n      let-tooltipDelay=\"tooltipDelay\"\r\n      let-trackByEventId=\"trackByEventId\"\r\n      let-validateDrag=\"validateDrag\"\r\n    >\r\n      <div\r\n        class=\"cal-cell-top\"\r\n        [attr.aria-label]=\"\r\n          { day: day, locale: locale } | calendarA11y : 'monthCell'\r\n        \"\r\n      >\r\n        <span aria-hidden=\"true\">\r\n          <span class=\"cal-day-badge\" *ngIf=\"day.badgeTotal > 0\">{{\r\n            day.badgeTotal\r\n          }}</span>\r\n          <span class=\"cal-day-number\">{{\r\n            day.date | calendarDate : 'monthViewDayNumber' : locale\r\n          }}</span>\r\n        </span>\r\n      </div>\r\n      <div class=\"cal-events\" *ngIf=\"day.events.length > 0\">\r\n        <div\r\n          class=\"cal-event\"\r\n          *ngFor=\"let event of day.events; trackBy: trackByEventId\"\r\n          [ngStyle]=\"{ backgroundColor: event.color?.primary }\"\r\n          [ngClass]=\"event?.cssClass\"\r\n          (mouseenter)=\"highlightDay.emit({ event: event })\"\r\n          (mouseleave)=\"unhighlightDay.emit({ event: event })\"\r\n          [mwlCalendarTooltip]=\"\r\n            event.title | calendarEventTitle : 'monthTooltip' : event\r\n          \"\r\n          [tooltipPlacement]=\"tooltipPlacement\"\r\n          [tooltipEvent]=\"event\"\r\n          [tooltipTemplate]=\"tooltipTemplate\"\r\n          [tooltipAppendToBody]=\"tooltipAppendToBody\"\r\n          [tooltipDelay]=\"tooltipDelay\"\r\n          mwlDraggable\r\n          [class.cal-draggable]=\"event.draggable\"\r\n          dragActiveClass=\"cal-drag-active\"\r\n          [dropData]=\"{ event: event, draggedFrom: day }\"\r\n          [dragAxis]=\"{ x: event.draggable, y: event.draggable }\"\r\n          [validateDrag]=\"validateDrag\"\r\n          [touchStartLongPress]=\"{ delay: 300, delta: 30 }\"\r\n          (mwlClick)=\"eventClicked.emit({ event: event, sourceEvent: $event })\"\r\n          [attr.aria-hidden]=\"{} | calendarA11y : 'hideMonthCellEvents'\"\r\n        ></div>\r\n      </div>\r\n    </ng-template>\r\n    <ng-template\r\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\r\n      [ngTemplateOutletContext]=\"{\r\n        day: day,\r\n        openDay: openDay,\r\n        locale: locale,\r\n        tooltipPlacement: tooltipPlacement,\r\n        highlightDay: highlightDay,\r\n        unhighlightDay: unhighlightDay,\r\n        eventClicked: eventClicked,\r\n        tooltipTemplate: tooltipTemplate,\r\n        tooltipAppendToBody: tooltipAppendToBody,\r\n        tooltipDelay: tooltipDelay,\r\n        trackByEventId: trackByEventId,\r\n        validateDrag: validateDrag\r\n      }\"\r\n    >\r\n    </ng-template>\r\n  `, isInline: true, dependencies: [{ kind: \"directive\", type: i1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i1.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"directive\", type: i1.NgStyle, selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }, { kind: \"directive\", type: i2.DraggableDirective, selector: \"[mwlDraggable]\", inputs: [\"dropData\", \"dragAxis\", \"dragSnapGrid\", \"ghostDragEnabled\", \"showOriginalElementWhileDragging\", \"validateDrag\", \"dragCursor\", \"dragActiveClass\", \"ghostElementAppendTo\", \"ghostElementTemplate\", \"touchStartLongPress\", \"autoScroll\"], outputs: [\"dragPointerDown\", \"dragStart\", \"ghostElementCreated\", \"dragging\", \"dragEnd\"] }, { kind: \"directive\", type: CalendarTooltipDirective, selector: \"[mwlCalendarTooltip]\", inputs: [\"mwlCalendarTooltip\", \"tooltipPlacement\", \"tooltipTemplate\", \"tooltipEvent\", \"tooltipAppendToBody\", \"tooltipDelay\"] }, { kind: \"directive\", type: ClickDirective, selector: \"[mwlClick]\", inputs: [\"clickListenerDisabled\"], outputs: [\"mwlClick\"] }, { kind: \"pipe\", type: CalendarDatePipe, name: \"calendarDate\" }, { kind: \"pipe\", type: CalendarEventTitlePipe, name: \"calendarEventTitle\" }, { kind: \"pipe\", type: CalendarA11yPipe, name: \"calendarA11y\" }] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarMonthCellComponent, decorators: [{\r\n            type: Component,\r\n            args: [{\r\n                    selector: 'mwl-calendar-month-cell',\r\n                    template: `\r\n    <ng-template\r\n      #defaultTemplate\r\n      let-day=\"day\"\r\n      let-openDay=\"openDay\"\r\n      let-locale=\"locale\"\r\n      let-tooltipPlacement=\"tooltipPlacement\"\r\n      let-highlightDay=\"highlightDay\"\r\n      let-unhighlightDay=\"unhighlightDay\"\r\n      let-eventClicked=\"eventClicked\"\r\n      let-tooltipTemplate=\"tooltipTemplate\"\r\n      let-tooltipAppendToBody=\"tooltipAppendToBody\"\r\n      let-tooltipDelay=\"tooltipDelay\"\r\n      let-trackByEventId=\"trackByEventId\"\r\n      let-validateDrag=\"validateDrag\"\r\n    >\r\n      <div\r\n        class=\"cal-cell-top\"\r\n        [attr.aria-label]=\"\r\n          { day: day, locale: locale } | calendarA11y : 'monthCell'\r\n        \"\r\n      >\r\n        <span aria-hidden=\"true\">\r\n          <span class=\"cal-day-badge\" *ngIf=\"day.badgeTotal > 0\">{{\r\n            day.badgeTotal\r\n          }}</span>\r\n          <span class=\"cal-day-number\">{{\r\n            day.date | calendarDate : 'monthViewDayNumber' : locale\r\n          }}</span>\r\n        </span>\r\n      </div>\r\n      <div class=\"cal-events\" *ngIf=\"day.events.length > 0\">\r\n        <div\r\n          class=\"cal-event\"\r\n          *ngFor=\"let event of day.events; trackBy: trackByEventId\"\r\n          [ngStyle]=\"{ backgroundColor: event.color?.primary }\"\r\n          [ngClass]=\"event?.cssClass\"\r\n          (mouseenter)=\"highlightDay.emit({ event: event })\"\r\n          (mouseleave)=\"unhighlightDay.emit({ event: event })\"\r\n          [mwlCalendarTooltip]=\"\r\n            event.title | calendarEventTitle : 'monthTooltip' : event\r\n          \"\r\n          [tooltipPlacement]=\"tooltipPlacement\"\r\n          [tooltipEvent]=\"event\"\r\n          [tooltipTemplate]=\"tooltipTemplate\"\r\n          [tooltipAppendToBody]=\"tooltipAppendToBody\"\r\n          [tooltipDelay]=\"tooltipDelay\"\r\n          mwlDraggable\r\n          [class.cal-draggable]=\"event.draggable\"\r\n          dragActiveClass=\"cal-drag-active\"\r\n          [dropData]=\"{ event: event, draggedFrom: day }\"\r\n          [dragAxis]=\"{ x: event.draggable, y: event.draggable }\"\r\n          [validateDrag]=\"validateDrag\"\r\n          [touchStartLongPress]=\"{ delay: 300, delta: 30 }\"\r\n          (mwlClick)=\"eventClicked.emit({ event: event, sourceEvent: $event })\"\r\n          [attr.aria-hidden]=\"{} | calendarA11y : 'hideMonthCellEvents'\"\r\n        ></div>\r\n      </div>\r\n    </ng-template>\r\n    <ng-template\r\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\r\n      [ngTemplateOutletContext]=\"{\r\n        day: day,\r\n        openDay: openDay,\r\n        locale: locale,\r\n        tooltipPlacement: tooltipPlacement,\r\n        highlightDay: highlightDay,\r\n        unhighlightDay: unhighlightDay,\r\n        eventClicked: eventClicked,\r\n        tooltipTemplate: tooltipTemplate,\r\n        tooltipAppendToBody: tooltipAppendToBody,\r\n        tooltipDelay: tooltipDelay,\r\n        trackByEventId: trackByEventId,\r\n        validateDrag: validateDrag\r\n      }\"\r\n    >\r\n    </ng-template>\r\n  `,\r\n                    // eslint-disable-next-line @angular-eslint/no-host-metadata-property\r\n                    host: {\r\n                        class: 'cal-cell cal-day-cell',\r\n                        '[class.cal-past]': 'day.isPast',\r\n                        '[class.cal-today]': 'day.isToday',\r\n                        '[class.cal-future]': 'day.isFuture',\r\n                        '[class.cal-weekend]': 'day.isWeekend',\r\n                        '[class.cal-in-month]': 'day.inMonth',\r\n                        '[class.cal-out-month]': '!day.inMonth',\r\n                        '[class.cal-has-events]': 'day.events.length > 0',\r\n                        '[class.cal-open]': 'day === openDay',\r\n                        '[class.cal-event-highlight]': '!!day.backgroundColor',\r\n                    },\r\n                }]\r\n        }], propDecorators: { day: [{\r\n                type: Input\r\n            }], openDay: [{\r\n                type: Input\r\n            }], locale: [{\r\n                type: Input\r\n            }], tooltipPlacement: [{\r\n                type: Input\r\n            }], tooltipAppendToBody: [{\r\n                type: Input\r\n            }], customTemplate: [{\r\n                type: Input\r\n            }], tooltipTemplate: [{\r\n                type: Input\r\n            }], tooltipDelay: [{\r\n                type: Input\r\n            }], highlightDay: [{\r\n                type: Output\r\n            }], unhighlightDay: [{\r\n                type: Output\r\n            }], eventClicked: [{\r\n                type: Output\r\n            }] } });","originalLength":19775,"removedExports":[],"renderedExports":["CalendarMonthCellComponent"],"renderedLength":10650},"C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\month\\calendar-month-view\\calendar-open-day-events\\calendar-open-day-events.component.mjs":{"code":"const collapseAnimation = trigger('collapse', [\r\n    state('void', style({\r\n        height: 0,\r\n        overflow: 'hidden',\r\n        'padding-top': 0,\r\n        'padding-bottom': 0,\r\n    })),\r\n    state('*', style({\r\n        height: '*',\r\n        overflow: 'hidden',\r\n        'padding-top': '*',\r\n        'padding-bottom': '*',\r\n    })),\r\n    transition('* => void', animate('150ms ease-out')),\r\n    transition('void => *', animate('150ms ease-in')),\r\n]);\r\nclass CalendarOpenDayEventsComponent {\r\n    constructor() {\r\n        this.isOpen = false;\r\n        this.eventClicked = new EventEmitter();\r\n        this.trackByEventId = trackByEventId;\r\n        this.validateDrag = isWithinThreshold;\r\n    }\r\n}\r\nCalendarOpenDayEventsComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarOpenDayEventsComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\r\nCalendarOpenDayEventsComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.0.4\", type: CalendarOpenDayEventsComponent, selector: \"mwl-calendar-open-day-events\", inputs: { locale: \"locale\", isOpen: \"isOpen\", events: \"events\", customTemplate: \"customTemplate\", eventTitleTemplate: \"eventTitleTemplate\", eventActionsTemplate: \"eventActionsTemplate\", date: \"date\" }, outputs: { eventClicked: \"eventClicked\" }, ngImport: i0, template: `\r\n    <ng-template\r\n      #defaultTemplate\r\n      let-events=\"events\"\r\n      let-eventClicked=\"eventClicked\"\r\n      let-isOpen=\"isOpen\"\r\n      let-trackByEventId=\"trackByEventId\"\r\n      let-validateDrag=\"validateDrag\"\r\n    >\r\n      <div\r\n        class=\"cal-open-day-events\"\r\n        [@collapse]\r\n        *ngIf=\"isOpen\"\r\n        role=\"application\"\r\n      >\r\n        <span\r\n          tabindex=\"-1\"\r\n          role=\"alert\"\r\n          [attr.aria-label]=\"\r\n            { date: date, locale: locale } | calendarA11y : 'openDayEventsAlert'\r\n          \"\r\n        ></span>\r\n        <span\r\n          tabindex=\"0\"\r\n          role=\"landmark\"\r\n          [attr.aria-label]=\"\r\n            { date: date, locale: locale }\r\n              | calendarA11y : 'openDayEventsLandmark'\r\n          \"\r\n        ></span>\r\n        <div\r\n          *ngFor=\"let event of events; trackBy: trackByEventId\"\r\n          [ngClass]=\"event?.cssClass\"\r\n          mwlDraggable\r\n          [class.cal-draggable]=\"event.draggable\"\r\n          dragActiveClass=\"cal-drag-active\"\r\n          [dropData]=\"{ event: event }\"\r\n          [dragAxis]=\"{ x: event.draggable, y: event.draggable }\"\r\n          [validateDrag]=\"validateDrag\"\r\n          [touchStartLongPress]=\"{ delay: 300, delta: 30 }\"\r\n        >\r\n          <span\r\n            class=\"cal-event\"\r\n            [ngStyle]=\"{ backgroundColor: event.color?.primary }\"\r\n          >\r\n          </span>\r\n          &ngsp;\r\n          <mwl-calendar-event-title\r\n            [event]=\"event\"\r\n            [customTemplate]=\"eventTitleTemplate\"\r\n            view=\"month\"\r\n            (mwlClick)=\"\r\n              eventClicked.emit({ event: event, sourceEvent: $event })\r\n            \"\r\n            (mwlKeydownEnter)=\"\r\n              eventClicked.emit({ event: event, sourceEvent: $event })\r\n            \"\r\n            tabindex=\"0\"\r\n            [attr.aria-label]=\"\r\n              { event: event, locale: locale }\r\n                | calendarA11y : 'eventDescription'\r\n            \"\r\n          >\r\n          </mwl-calendar-event-title>\r\n          &ngsp;\r\n          <mwl-calendar-event-actions\r\n            [event]=\"event\"\r\n            [customTemplate]=\"eventActionsTemplate\"\r\n          >\r\n          </mwl-calendar-event-actions>\r\n        </div>\r\n      </div>\r\n    </ng-template>\r\n    <ng-template\r\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\r\n      [ngTemplateOutletContext]=\"{\r\n        events: events,\r\n        eventClicked: eventClicked,\r\n        isOpen: isOpen,\r\n        trackByEventId: trackByEventId,\r\n        validateDrag: validateDrag\r\n      }\"\r\n    >\r\n    </ng-template>\r\n  `, isInline: true, dependencies: [{ kind: \"directive\", type: i1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i1.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"directive\", type: i1.NgStyle, selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }, { kind: \"directive\", type: i2.DraggableDirective, selector: \"[mwlDraggable]\", inputs: [\"dropData\", \"dragAxis\", \"dragSnapGrid\", \"ghostDragEnabled\", \"showOriginalElementWhileDragging\", \"validateDrag\", \"dragCursor\", \"dragActiveClass\", \"ghostElementAppendTo\", \"ghostElementTemplate\", \"touchStartLongPress\", \"autoScroll\"], outputs: [\"dragPointerDown\", \"dragStart\", \"ghostElementCreated\", \"dragging\", \"dragEnd\"] }, { kind: \"component\", type: CalendarEventActionsComponent, selector: \"mwl-calendar-event-actions\", inputs: [\"event\", \"customTemplate\"] }, { kind: \"component\", type: CalendarEventTitleComponent, selector: \"mwl-calendar-event-title\", inputs: [\"event\", \"customTemplate\", \"view\"] }, { kind: \"directive\", type: ClickDirective, selector: \"[mwlClick]\", inputs: [\"clickListenerDisabled\"], outputs: [\"mwlClick\"] }, { kind: \"directive\", type: KeydownEnterDirective, selector: \"[mwlKeydownEnter]\", outputs: [\"mwlKeydownEnter\"] }, { kind: \"pipe\", type: CalendarA11yPipe, name: \"calendarA11y\" }], animations: [collapseAnimation] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarOpenDayEventsComponent, decorators: [{\r\n            type: Component,\r\n            args: [{\r\n                    selector: 'mwl-calendar-open-day-events',\r\n                    template: `\r\n    <ng-template\r\n      #defaultTemplate\r\n      let-events=\"events\"\r\n      let-eventClicked=\"eventClicked\"\r\n      let-isOpen=\"isOpen\"\r\n      let-trackByEventId=\"trackByEventId\"\r\n      let-validateDrag=\"validateDrag\"\r\n    >\r\n      <div\r\n        class=\"cal-open-day-events\"\r\n        [@collapse]\r\n        *ngIf=\"isOpen\"\r\n        role=\"application\"\r\n      >\r\n        <span\r\n          tabindex=\"-1\"\r\n          role=\"alert\"\r\n          [attr.aria-label]=\"\r\n            { date: date, locale: locale } | calendarA11y : 'openDayEventsAlert'\r\n          \"\r\n        ></span>\r\n        <span\r\n          tabindex=\"0\"\r\n          role=\"landmark\"\r\n          [attr.aria-label]=\"\r\n            { date: date, locale: locale }\r\n              | calendarA11y : 'openDayEventsLandmark'\r\n          \"\r\n        ></span>\r\n        <div\r\n          *ngFor=\"let event of events; trackBy: trackByEventId\"\r\n          [ngClass]=\"event?.cssClass\"\r\n          mwlDraggable\r\n          [class.cal-draggable]=\"event.draggable\"\r\n          dragActiveClass=\"cal-drag-active\"\r\n          [dropData]=\"{ event: event }\"\r\n          [dragAxis]=\"{ x: event.draggable, y: event.draggable }\"\r\n          [validateDrag]=\"validateDrag\"\r\n          [touchStartLongPress]=\"{ delay: 300, delta: 30 }\"\r\n        >\r\n          <span\r\n            class=\"cal-event\"\r\n            [ngStyle]=\"{ backgroundColor: event.color?.primary }\"\r\n          >\r\n          </span>\r\n          &ngsp;\r\n          <mwl-calendar-event-title\r\n            [event]=\"event\"\r\n            [customTemplate]=\"eventTitleTemplate\"\r\n            view=\"month\"\r\n            (mwlClick)=\"\r\n              eventClicked.emit({ event: event, sourceEvent: $event })\r\n            \"\r\n            (mwlKeydownEnter)=\"\r\n              eventClicked.emit({ event: event, sourceEvent: $event })\r\n            \"\r\n            tabindex=\"0\"\r\n            [attr.aria-label]=\"\r\n              { event: event, locale: locale }\r\n                | calendarA11y : 'eventDescription'\r\n            \"\r\n          >\r\n          </mwl-calendar-event-title>\r\n          &ngsp;\r\n          <mwl-calendar-event-actions\r\n            [event]=\"event\"\r\n            [customTemplate]=\"eventActionsTemplate\"\r\n          >\r\n          </mwl-calendar-event-actions>\r\n        </div>\r\n      </div>\r\n    </ng-template>\r\n    <ng-template\r\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\r\n      [ngTemplateOutletContext]=\"{\r\n        events: events,\r\n        eventClicked: eventClicked,\r\n        isOpen: isOpen,\r\n        trackByEventId: trackByEventId,\r\n        validateDrag: validateDrag\r\n      }\"\r\n    >\r\n    </ng-template>\r\n  `,\r\n                    animations: [collapseAnimation],\r\n                }]\r\n        }], propDecorators: { locale: [{\r\n                type: Input\r\n            }], isOpen: [{\r\n                type: Input\r\n            }], events: [{\r\n                type: Input\r\n            }], customTemplate: [{\r\n                type: Input\r\n            }], eventTitleTemplate: [{\r\n                type: Input\r\n            }], eventActionsTemplate: [{\r\n                type: Input\r\n            }], date: [{\r\n                type: Input\r\n            }], eventClicked: [{\r\n                type: Output\r\n            }] } });","originalLength":18107,"removedExports":[],"renderedExports":["collapseAnimation","CalendarOpenDayEventsComponent"],"renderedLength":9053},"C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\month\\calendar-month-view\\calendar-month-view-header\\calendar-month-view-header.component.mjs":{"code":"class CalendarMonthViewHeaderComponent {\r\n    constructor() {\r\n        this.columnHeaderClicked = new EventEmitter();\r\n        this.trackByWeekDayHeaderDate = trackByWeekDayHeaderDate;\r\n    }\r\n}\r\nCalendarMonthViewHeaderComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarMonthViewHeaderComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\r\nCalendarMonthViewHeaderComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.0.4\", type: CalendarMonthViewHeaderComponent, selector: \"mwl-calendar-month-view-header\", inputs: { days: \"days\", locale: \"locale\", customTemplate: \"customTemplate\" }, outputs: { columnHeaderClicked: \"columnHeaderClicked\" }, ngImport: i0, template: `\r\n    <ng-template\r\n      #defaultTemplate\r\n      let-days=\"days\"\r\n      let-locale=\"locale\"\r\n      let-trackByWeekDayHeaderDate=\"trackByWeekDayHeaderDate\"\r\n    >\r\n      <div class=\"cal-cell-row cal-header\" role=\"row\">\r\n        <div\r\n          class=\"cal-cell\"\r\n          *ngFor=\"let day of days; trackBy: trackByWeekDayHeaderDate\"\r\n          [class.cal-past]=\"day.isPast\"\r\n          [class.cal-today]=\"day.isToday\"\r\n          [class.cal-future]=\"day.isFuture\"\r\n          [class.cal-weekend]=\"day.isWeekend\"\r\n          (click)=\"\r\n            columnHeaderClicked.emit({\r\n              isoDayNumber: day.day,\r\n              sourceEvent: $event\r\n            })\r\n          \"\r\n          [ngClass]=\"day.cssClass\"\r\n          tabindex=\"0\"\r\n          role=\"columnheader\"\r\n        >\r\n          {{ day.date | calendarDate : 'monthViewColumnHeader' : locale }}\r\n        </div>\r\n      </div>\r\n    </ng-template>\r\n    <ng-template\r\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\r\n      [ngTemplateOutletContext]=\"{\r\n        days: days,\r\n        locale: locale,\r\n        trackByWeekDayHeaderDate: trackByWeekDayHeaderDate\r\n      }\"\r\n    >\r\n    </ng-template>\r\n  `, isInline: true, dependencies: [{ kind: \"directive\", type: i1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i1.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"pipe\", type: CalendarDatePipe, name: \"calendarDate\" }] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarMonthViewHeaderComponent, decorators: [{\r\n            type: Component,\r\n            args: [{\r\n                    selector: 'mwl-calendar-month-view-header',\r\n                    template: `\r\n    <ng-template\r\n      #defaultTemplate\r\n      let-days=\"days\"\r\n      let-locale=\"locale\"\r\n      let-trackByWeekDayHeaderDate=\"trackByWeekDayHeaderDate\"\r\n    >\r\n      <div class=\"cal-cell-row cal-header\" role=\"row\">\r\n        <div\r\n          class=\"cal-cell\"\r\n          *ngFor=\"let day of days; trackBy: trackByWeekDayHeaderDate\"\r\n          [class.cal-past]=\"day.isPast\"\r\n          [class.cal-today]=\"day.isToday\"\r\n          [class.cal-future]=\"day.isFuture\"\r\n          [class.cal-weekend]=\"day.isWeekend\"\r\n          (click)=\"\r\n            columnHeaderClicked.emit({\r\n              isoDayNumber: day.day,\r\n              sourceEvent: $event\r\n            })\r\n          \"\r\n          [ngClass]=\"day.cssClass\"\r\n          tabindex=\"0\"\r\n          role=\"columnheader\"\r\n        >\r\n          {{ day.date | calendarDate : 'monthViewColumnHeader' : locale }}\r\n        </div>\r\n      </div>\r\n    </ng-template>\r\n    <ng-template\r\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\r\n      [ngTemplateOutletContext]=\"{\r\n        days: days,\r\n        locale: locale,\r\n        trackByWeekDayHeaderDate: trackByWeekDayHeaderDate\r\n      }\"\r\n    >\r\n    </ng-template>\r\n  `,\r\n                }]\r\n        }], propDecorators: { days: [{\r\n                type: Input\r\n            }], locale: [{\r\n                type: Input\r\n            }], customTemplate: [{\r\n                type: Input\r\n            }], columnHeaderClicked: [{\r\n                type: Output\r\n            }] } });","originalLength":8218,"removedExports":[],"renderedExports":["CalendarMonthViewHeaderComponent"],"renderedLength":4164},"C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\month\\calendar-month-view\\calendar-month-view.component.mjs":{"code":"/**\r\n * Shows all events on a given month. Example usage:\r\n *\r\n * ```typescript\r\n * <mwl-calendar-month-view\r\n *  [viewDate]=\"viewDate\"\r\n *  [events]=\"events\">\r\n * </mwl-calendar-month-view>\r\n * ```\r\n */\r\nclass CalendarMonthViewComponent {\r\n    /**\r\n     * @hidden\r\n     */\r\n    constructor(cdr, utils, locale, dateAdapter) {\r\n        this.cdr = cdr;\r\n        this.utils = utils;\r\n        this.dateAdapter = dateAdapter;\r\n        /**\r\n         * An array of events to display on view.\r\n         * The schema is available here: https://github.com/mattlewis92/calendar-utils/blob/c51689985f59a271940e30bc4e2c4e1fee3fcb5c/src/calendarUtils.ts#L49-L63\r\n         */\r\n        this.events = [];\r\n        /**\r\n         * An array of day indexes (0 = sunday, 1 = monday etc) that will be hidden on the view\r\n         */\r\n        this.excludeDays = [];\r\n        /**\r\n         * Whether the events list for the day of the `viewDate` option is visible or not\r\n         */\r\n        this.activeDayIsOpen = false;\r\n        /**\r\n         * The placement of the event tooltip\r\n         */\r\n        this.tooltipPlacement = 'auto';\r\n        /**\r\n         * Whether to append tooltips to the body or next to the trigger element\r\n         */\r\n        this.tooltipAppendToBody = true;\r\n        /**\r\n         * The delay in milliseconds before the tooltip should be displayed. If not provided the tooltip\r\n         * will be displayed immediately.\r\n         */\r\n        this.tooltipDelay = null;\r\n        /**\r\n         * An output that will be called before the view is rendered for the current month.\r\n         * If you add the `cssClass` property to a day in the body it will add that class to the cell element in the template\r\n         */\r\n        this.beforeViewRender = new EventEmitter();\r\n        /**\r\n         * Called when the day cell is clicked\r\n         */\r\n        this.dayClicked = new EventEmitter();\r\n        /**\r\n         * Called when the event title is clicked\r\n         */\r\n        this.eventClicked = new EventEmitter();\r\n        /**\r\n         * Called when a header week day is clicked. Returns ISO day number.\r\n         */\r\n        this.columnHeaderClicked = new EventEmitter();\r\n        /**\r\n         * Called when an event is dragged and dropped\r\n         */\r\n        this.eventTimesChanged = new EventEmitter();\r\n        /**\r\n         * @hidden\r\n         */\r\n        this.trackByRowOffset = (index, offset) => this.view.days\r\n            .slice(offset, this.view.totalDaysVisibleInWeek)\r\n            .map((day) => day.date.toISOString())\r\n            .join('-');\r\n        /**\r\n         * @hidden\r\n         */\r\n        this.trackByDate = (index, day) => day.date.toISOString();\r\n        this.locale = locale;\r\n    }\r\n    /**\r\n     * @hidden\r\n     */\r\n    ngOnInit() {\r\n        if (this.refresh) {\r\n            this.refreshSubscription = this.refresh.subscribe(() => {\r\n                this.refreshAll();\r\n                this.cdr.markForCheck();\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * @hidden\r\n     */\r\n    ngOnChanges(changes) {\r\n        const refreshHeader = changes.viewDate || changes.excludeDays || changes.weekendDays;\r\n        const refreshBody = changes.viewDate ||\r\n            changes.events ||\r\n            changes.excludeDays ||\r\n            changes.weekendDays;\r\n        if (refreshHeader) {\r\n            this.refreshHeader();\r\n        }\r\n        if (changes.events) {\r\n            validateEvents(this.events);\r\n        }\r\n        if (refreshBody) {\r\n            this.refreshBody();\r\n        }\r\n        if (refreshHeader || refreshBody) {\r\n            this.emitBeforeViewRender();\r\n        }\r\n        if (changes.activeDayIsOpen ||\r\n            changes.viewDate ||\r\n            changes.events ||\r\n            changes.excludeDays ||\r\n            changes.activeDay) {\r\n            this.checkActiveDayIsOpen();\r\n        }\r\n    }\r\n    /**\r\n     * @hidden\r\n     */\r\n    ngOnDestroy() {\r\n        if (this.refreshSubscription) {\r\n            this.refreshSubscription.unsubscribe();\r\n        }\r\n    }\r\n    /**\r\n     * @hidden\r\n     */\r\n    toggleDayHighlight(event, isHighlighted) {\r\n        this.view.days.forEach((day) => {\r\n            if (isHighlighted && day.events.indexOf(event) > -1) {\r\n                day.backgroundColor =\r\n                    (event.color && event.color.secondary) || '#D1E8FF';\r\n            }\r\n            else {\r\n                delete day.backgroundColor;\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * @hidden\r\n     */\r\n    eventDropped(droppedOn, event, draggedFrom) {\r\n        if (droppedOn !== draggedFrom) {\r\n            const year = this.dateAdapter.getYear(droppedOn.date);\r\n            const month = this.dateAdapter.getMonth(droppedOn.date);\r\n            const date = this.dateAdapter.getDate(droppedOn.date);\r\n            const newStart = this.dateAdapter.setDate(this.dateAdapter.setMonth(this.dateAdapter.setYear(event.start, year), month), date);\r\n            let newEnd;\r\n            if (event.end) {\r\n                const secondsDiff = this.dateAdapter.differenceInSeconds(newStart, event.start);\r\n                newEnd = this.dateAdapter.addSeconds(event.end, secondsDiff);\r\n            }\r\n            this.eventTimesChanged.emit({\r\n                event,\r\n                newStart,\r\n                newEnd,\r\n                day: droppedOn,\r\n                type: CalendarEventTimesChangedEventType.Drop,\r\n            });\r\n        }\r\n    }\r\n    refreshHeader() {\r\n        this.columnHeaders = this.utils.getWeekViewHeader({\r\n            viewDate: this.viewDate,\r\n            weekStartsOn: this.weekStartsOn,\r\n            excluded: this.excludeDays,\r\n            weekendDays: this.weekendDays,\r\n        });\r\n    }\r\n    refreshBody() {\r\n        this.view = this.utils.getMonthView({\r\n            events: this.events,\r\n            viewDate: this.viewDate,\r\n            weekStartsOn: this.weekStartsOn,\r\n            excluded: this.excludeDays,\r\n            weekendDays: this.weekendDays,\r\n        });\r\n    }\r\n    checkActiveDayIsOpen() {\r\n        if (this.activeDayIsOpen === true) {\r\n            const activeDay = this.activeDay || this.viewDate;\r\n            this.openDay = this.view.days.find((day) => this.dateAdapter.isSameDay(day.date, activeDay));\r\n            const index = this.view.days.indexOf(this.openDay);\r\n            this.openRowIndex =\r\n                Math.floor(index / this.view.totalDaysVisibleInWeek) *\r\n                    this.view.totalDaysVisibleInWeek;\r\n        }\r\n        else {\r\n            this.openRowIndex = null;\r\n            this.openDay = null;\r\n        }\r\n    }\r\n    refreshAll() {\r\n        this.refreshHeader();\r\n        this.refreshBody();\r\n        this.emitBeforeViewRender();\r\n        this.checkActiveDayIsOpen();\r\n    }\r\n    emitBeforeViewRender() {\r\n        if (this.columnHeaders && this.view) {\r\n            this.beforeViewRender.emit({\r\n                header: this.columnHeaders,\r\n                body: this.view.days,\r\n                period: this.view.period,\r\n            });\r\n        }\r\n    }\r\n}\r\nCalendarMonthViewComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarMonthViewComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: CalendarUtils }, { token: LOCALE_ID }, { token: DateAdapter }], target: i0.ɵɵFactoryTarget.Component });\r\nCalendarMonthViewComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.0.4\", type: CalendarMonthViewComponent, selector: \"mwl-calendar-month-view\", inputs: { viewDate: \"viewDate\", events: \"events\", excludeDays: \"excludeDays\", activeDayIsOpen: \"activeDayIsOpen\", activeDay: \"activeDay\", refresh: \"refresh\", locale: \"locale\", tooltipPlacement: \"tooltipPlacement\", tooltipTemplate: \"tooltipTemplate\", tooltipAppendToBody: \"tooltipAppendToBody\", tooltipDelay: \"tooltipDelay\", weekStartsOn: \"weekStartsOn\", headerTemplate: \"headerTemplate\", cellTemplate: \"cellTemplate\", openDayEventsTemplate: \"openDayEventsTemplate\", eventTitleTemplate: \"eventTitleTemplate\", eventActionsTemplate: \"eventActionsTemplate\", weekendDays: \"weekendDays\" }, outputs: { beforeViewRender: \"beforeViewRender\", dayClicked: \"dayClicked\", eventClicked: \"eventClicked\", columnHeaderClicked: \"columnHeaderClicked\", eventTimesChanged: \"eventTimesChanged\" }, usesOnChanges: true, ngImport: i0, template: `\r\n    <div class=\"cal-month-view\" role=\"grid\">\r\n      <mwl-calendar-month-view-header\r\n        [days]=\"columnHeaders\"\r\n        [locale]=\"locale\"\r\n        (columnHeaderClicked)=\"columnHeaderClicked.emit($event)\"\r\n        [customTemplate]=\"headerTemplate\"\r\n      >\r\n      </mwl-calendar-month-view-header>\r\n      <div class=\"cal-days\">\r\n        <div\r\n          *ngFor=\"let rowIndex of view.rowOffsets; trackBy: trackByRowOffset\"\r\n        >\r\n          <div role=\"row\" class=\"cal-cell-row\">\r\n            <mwl-calendar-month-cell\r\n              role=\"gridcell\"\r\n              *ngFor=\"\r\n                let day of view.days\r\n                  | slice : rowIndex : rowIndex + view.totalDaysVisibleInWeek;\r\n                trackBy: trackByDate\r\n              \"\r\n              [ngClass]=\"day?.cssClass\"\r\n              [day]=\"day\"\r\n              [openDay]=\"openDay\"\r\n              [locale]=\"locale\"\r\n              [tooltipPlacement]=\"tooltipPlacement\"\r\n              [tooltipAppendToBody]=\"tooltipAppendToBody\"\r\n              [tooltipTemplate]=\"tooltipTemplate\"\r\n              [tooltipDelay]=\"tooltipDelay\"\r\n              [customTemplate]=\"cellTemplate\"\r\n              [ngStyle]=\"{ backgroundColor: day.backgroundColor }\"\r\n              (mwlClick)=\"dayClicked.emit({ day: day, sourceEvent: $event })\"\r\n              [clickListenerDisabled]=\"dayClicked.observers.length === 0\"\r\n              (mwlKeydownEnter)=\"\r\n                dayClicked.emit({ day: day, sourceEvent: $event })\r\n              \"\r\n              (highlightDay)=\"toggleDayHighlight($event.event, true)\"\r\n              (unhighlightDay)=\"toggleDayHighlight($event.event, false)\"\r\n              mwlDroppable\r\n              dragOverClass=\"cal-drag-over\"\r\n              (drop)=\"\r\n                eventDropped(\r\n                  day,\r\n                  $event.dropData.event,\r\n                  $event.dropData.draggedFrom\r\n                )\r\n              \"\r\n              (eventClicked)=\"\r\n                eventClicked.emit({\r\n                  event: $event.event,\r\n                  sourceEvent: $event.sourceEvent\r\n                })\r\n              \"\r\n              [attr.tabindex]=\"{} | calendarA11y : 'monthCellTabIndex'\"\r\n            >\r\n            </mwl-calendar-month-cell>\r\n          </div>\r\n          <mwl-calendar-open-day-events\r\n            [locale]=\"locale\"\r\n            [isOpen]=\"openRowIndex === rowIndex\"\r\n            [events]=\"openDay?.events\"\r\n            [date]=\"openDay?.date\"\r\n            [customTemplate]=\"openDayEventsTemplate\"\r\n            [eventTitleTemplate]=\"eventTitleTemplate\"\r\n            [eventActionsTemplate]=\"eventActionsTemplate\"\r\n            (eventClicked)=\"\r\n              eventClicked.emit({\r\n                event: $event.event,\r\n                sourceEvent: $event.sourceEvent\r\n              })\r\n            \"\r\n            mwlDroppable\r\n            dragOverClass=\"cal-drag-over\"\r\n            (drop)=\"\r\n              eventDropped(\r\n                openDay,\r\n                $event.dropData.event,\r\n                $event.dropData.draggedFrom\r\n              )\r\n            \"\r\n          >\r\n          </mwl-calendar-open-day-events>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  `, isInline: true, dependencies: [{ kind: \"directive\", type: i1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i1.NgStyle, selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }, { kind: \"directive\", type: i2.DroppableDirective, selector: \"[mwlDroppable]\", inputs: [\"dragOverClass\", \"dragActiveClass\", \"validateDrop\"], outputs: [\"dragEnter\", \"dragLeave\", \"dragOver\", \"drop\"] }, { kind: \"directive\", type: ClickDirective, selector: \"[mwlClick]\", inputs: [\"clickListenerDisabled\"], outputs: [\"mwlClick\"] }, { kind: \"directive\", type: KeydownEnterDirective, selector: \"[mwlKeydownEnter]\", outputs: [\"mwlKeydownEnter\"] }, { kind: \"component\", type: CalendarMonthCellComponent, selector: \"mwl-calendar-month-cell\", inputs: [\"day\", \"openDay\", \"locale\", \"tooltipPlacement\", \"tooltipAppendToBody\", \"customTemplate\", \"tooltipTemplate\", \"tooltipDelay\"], outputs: [\"highlightDay\", \"unhighlightDay\", \"eventClicked\"] }, { kind: \"component\", type: CalendarOpenDayEventsComponent, selector: \"mwl-calendar-open-day-events\", inputs: [\"locale\", \"isOpen\", \"events\", \"customTemplate\", \"eventTitleTemplate\", \"eventActionsTemplate\", \"date\"], outputs: [\"eventClicked\"] }, { kind: \"component\", type: CalendarMonthViewHeaderComponent, selector: \"mwl-calendar-month-view-header\", inputs: [\"days\", \"locale\", \"customTemplate\"], outputs: [\"columnHeaderClicked\"] }, { kind: \"pipe\", type: i1.SlicePipe, name: \"slice\" }, { kind: \"pipe\", type: CalendarA11yPipe, name: \"calendarA11y\" }] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarMonthViewComponent, decorators: [{\r\n            type: Component,\r\n            args: [{\r\n                    selector: 'mwl-calendar-month-view',\r\n                    template: `\r\n    <div class=\"cal-month-view\" role=\"grid\">\r\n      <mwl-calendar-month-view-header\r\n        [days]=\"columnHeaders\"\r\n        [locale]=\"locale\"\r\n        (columnHeaderClicked)=\"columnHeaderClicked.emit($event)\"\r\n        [customTemplate]=\"headerTemplate\"\r\n      >\r\n      </mwl-calendar-month-view-header>\r\n      <div class=\"cal-days\">\r\n        <div\r\n          *ngFor=\"let rowIndex of view.rowOffsets; trackBy: trackByRowOffset\"\r\n        >\r\n          <div role=\"row\" class=\"cal-cell-row\">\r\n            <mwl-calendar-month-cell\r\n              role=\"gridcell\"\r\n              *ngFor=\"\r\n                let day of view.days\r\n                  | slice : rowIndex : rowIndex + view.totalDaysVisibleInWeek;\r\n                trackBy: trackByDate\r\n              \"\r\n              [ngClass]=\"day?.cssClass\"\r\n              [day]=\"day\"\r\n              [openDay]=\"openDay\"\r\n              [locale]=\"locale\"\r\n              [tooltipPlacement]=\"tooltipPlacement\"\r\n              [tooltipAppendToBody]=\"tooltipAppendToBody\"\r\n              [tooltipTemplate]=\"tooltipTemplate\"\r\n              [tooltipDelay]=\"tooltipDelay\"\r\n              [customTemplate]=\"cellTemplate\"\r\n              [ngStyle]=\"{ backgroundColor: day.backgroundColor }\"\r\n              (mwlClick)=\"dayClicked.emit({ day: day, sourceEvent: $event })\"\r\n              [clickListenerDisabled]=\"dayClicked.observers.length === 0\"\r\n              (mwlKeydownEnter)=\"\r\n                dayClicked.emit({ day: day, sourceEvent: $event })\r\n              \"\r\n              (highlightDay)=\"toggleDayHighlight($event.event, true)\"\r\n              (unhighlightDay)=\"toggleDayHighlight($event.event, false)\"\r\n              mwlDroppable\r\n              dragOverClass=\"cal-drag-over\"\r\n              (drop)=\"\r\n                eventDropped(\r\n                  day,\r\n                  $event.dropData.event,\r\n                  $event.dropData.draggedFrom\r\n                )\r\n              \"\r\n              (eventClicked)=\"\r\n                eventClicked.emit({\r\n                  event: $event.event,\r\n                  sourceEvent: $event.sourceEvent\r\n                })\r\n              \"\r\n              [attr.tabindex]=\"{} | calendarA11y : 'monthCellTabIndex'\"\r\n            >\r\n            </mwl-calendar-month-cell>\r\n          </div>\r\n          <mwl-calendar-open-day-events\r\n            [locale]=\"locale\"\r\n            [isOpen]=\"openRowIndex === rowIndex\"\r\n            [events]=\"openDay?.events\"\r\n            [date]=\"openDay?.date\"\r\n            [customTemplate]=\"openDayEventsTemplate\"\r\n            [eventTitleTemplate]=\"eventTitleTemplate\"\r\n            [eventActionsTemplate]=\"eventActionsTemplate\"\r\n            (eventClicked)=\"\r\n              eventClicked.emit({\r\n                event: $event.event,\r\n                sourceEvent: $event.sourceEvent\r\n              })\r\n            \"\r\n            mwlDroppable\r\n            dragOverClass=\"cal-drag-over\"\r\n            (drop)=\"\r\n              eventDropped(\r\n                openDay,\r\n                $event.dropData.event,\r\n                $event.dropData.draggedFrom\r\n              )\r\n            \"\r\n          >\r\n          </mwl-calendar-open-day-events>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  `,\r\n                }]\r\n        }], ctorParameters: function () {\r\n        return [{ type: i0.ChangeDetectorRef }, { type: CalendarUtils }, { type: undefined, decorators: [{\r\n                        type: Inject,\r\n                        args: [LOCALE_ID]\r\n                    }] }, { type: DateAdapter }];\r\n    }, propDecorators: { viewDate: [{\r\n                type: Input\r\n            }], events: [{\r\n                type: Input\r\n            }], excludeDays: [{\r\n                type: Input\r\n            }], activeDayIsOpen: [{\r\n                type: Input\r\n            }], activeDay: [{\r\n                type: Input\r\n            }], refresh: [{\r\n                type: Input\r\n            }], locale: [{\r\n                type: Input\r\n            }], tooltipPlacement: [{\r\n                type: Input\r\n            }], tooltipTemplate: [{\r\n                type: Input\r\n            }], tooltipAppendToBody: [{\r\n                type: Input\r\n            }], tooltipDelay: [{\r\n                type: Input\r\n            }], weekStartsOn: [{\r\n                type: Input\r\n            }], headerTemplate: [{\r\n                type: Input\r\n            }], cellTemplate: [{\r\n                type: Input\r\n            }], openDayEventsTemplate: [{\r\n                type: Input\r\n            }], eventTitleTemplate: [{\r\n                type: Input\r\n            }], eventActionsTemplate: [{\r\n                type: Input\r\n            }], weekendDays: [{\r\n                type: Input\r\n            }], beforeViewRender: [{\r\n                type: Output\r\n            }], dayClicked: [{\r\n                type: Output\r\n            }], eventClicked: [{\r\n                type: Output\r\n            }], columnHeaderClicked: [{\r\n                type: Output\r\n            }], eventTimesChanged: [{\r\n                type: Output\r\n            }] } });","originalLength":46794,"removedExports":[],"renderedExports":["CalendarMonthViewComponent"],"renderedLength":18358},"C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\month\\calendar-month.module.mjs":{"code":"class CalendarMonthModule {\r\n}\r\nCalendarMonthModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarMonthModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\r\nCalendarMonthModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarMonthModule, declarations: [CalendarMonthViewComponent,\r\n        CalendarMonthCellComponent,\r\n        CalendarOpenDayEventsComponent,\r\n        CalendarMonthViewHeaderComponent], imports: [CommonModule, DragAndDropModule, CalendarCommonModule], exports: [DragAndDropModule,\r\n        CalendarMonthViewComponent,\r\n        CalendarMonthCellComponent,\r\n        CalendarOpenDayEventsComponent,\r\n        CalendarMonthViewHeaderComponent] });\r\nCalendarMonthModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarMonthModule, imports: [CommonModule, DragAndDropModule, CalendarCommonModule, DragAndDropModule] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarMonthModule, decorators: [{\r\n            type: NgModule,\r\n            args: [{\r\n                    imports: [CommonModule, DragAndDropModule, CalendarCommonModule],\r\n                    declarations: [\r\n                        CalendarMonthViewComponent,\r\n                        CalendarMonthCellComponent,\r\n                        CalendarOpenDayEventsComponent,\r\n                        CalendarMonthViewHeaderComponent,\r\n                    ],\r\n                    exports: [\r\n                        DragAndDropModule,\r\n                        CalendarMonthViewComponent,\r\n                        CalendarMonthCellComponent,\r\n                        CalendarOpenDayEventsComponent,\r\n                        CalendarMonthViewHeaderComponent,\r\n                    ],\r\n                }]\r\n        }] });","originalLength":8245,"removedExports":[],"renderedExports":["CalendarMonthModule"],"renderedLength":1901},"C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\calendar.component.mjs":{"code":"class CalendarComponent {\r\n    constructor() { }\r\n    ngOnInit() { }\r\n}\r\nCalendarComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\r\nCalendarComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.0.4\", type: CalendarComponent, selector: \"calendar-name\", ngImport: i0, template: \"\", styles: [\"@charset \\\"UTF-8\\\";.cal-month-view .cal-header{text-align:center;font-weight:bolder}.cal-month-view .cal-header .cal-cell{padding:5px 0;overflow:hidden;text-overflow:ellipsis;display:block;white-space:nowrap}.cal-month-view .cal-days{border:1px solid;border-bottom:0}.cal-month-view .cal-cell-top{min-height:78px;flex:1}.cal-month-view .cal-cell-row{display:flex}.cal-month-view .cal-cell{float:left;flex:1;display:flex;flex-direction:column;align-items:stretch}.cal-month-view .cal-cell .cal-event{pointer-events:all!important}.cal-month-view .cal-day-cell{min-height:100px}.cal-month-view .cal-day-cell:not(:last-child){border-right:1px solid}[dir=rtl] .cal-month-view .cal-day-cell:not(:last-child){border-right:initial;border-left:1px solid}.cal-month-view .cal-days .cal-cell-row{border-bottom:1px solid}.cal-month-view .cal-day-badge{margin-top:18px;margin-left:10px;display:inline-block;min-width:10px;padding:3px 7px;font-size:12px;font-weight:700;line-height:1;text-align:center;white-space:nowrap;vertical-align:middle;border-radius:10px;float:left}.cal-month-view .cal-day-number{font-size:1.2em;font-weight:400;opacity:.5;margin-top:15px;margin-right:15px;float:right;margin-bottom:10px}.cal-month-view .cal-events{flex:1;align-items:flex-end;margin:3px;line-height:10px;display:flex;flex-wrap:wrap}.cal-month-view .cal-event{width:10px;height:10px;border-radius:50%;display:inline-block;margin:2px}.cal-month-view .cal-day-cell.cal-in-month.cal-has-events{cursor:pointer}.cal-month-view .cal-day-cell.cal-out-month .cal-day-number{opacity:.1;cursor:default}.cal-month-view .cal-day-cell.cal-today .cal-day-number{font-size:1.9em}.cal-month-view .cal-open-day-events{padding:15px}.cal-month-view .cal-open-day-events .cal-event{position:relative;top:2px}.cal-month-view .cal-out-month .cal-day-badge,.cal-month-view .cal-out-month .cal-event{opacity:.3}.cal-month-view .cal-draggable{cursor:move}.cal-month-view .cal-drag-active *{pointer-events:none}.cal-month-view .cal-event-title{cursor:pointer}.cal-month-view .cal-event-title:hover{text-decoration:underline}.cal-month-view{background-color:#fff}.cal-month-view .cal-cell-row:hover{background-color:#fafafa}.cal-month-view .cal-cell-row .cal-cell:hover,.cal-month-view .cal-cell.cal-has-events.cal-open{background-color:#ededed}.cal-month-view .cal-days{border-color:#e1e1e1}.cal-month-view .cal-day-cell:not(:last-child){border-right-color:#e1e1e1}[dir=rtl] .cal-month-view .cal-day-cell:not(:last-child){border-right-color:initial;border-left-color:#e1e1e1}.cal-month-view .cal-days .cal-cell-row{border-bottom-color:#e1e1e1}.cal-month-view .cal-day-badge{background-color:#b94a48;color:#fff}.cal-month-view .cal-event{background-color:#1e90ff;border-color:#d1e8ff;color:#fff}.cal-month-view .cal-day-cell.cal-weekend .cal-day-number{color:#8b0000}.cal-month-view .cal-day-cell.cal-today{background-color:#e8fde7}.cal-month-view .cal-day-cell.cal-drag-over{background-color:#e0e0e0!important}.cal-month-view .cal-open-day-events{color:#fff;background-color:#555;box-shadow:inset 0 0 15px #00000080}.cal-week-view *{box-sizing:border-box}.cal-week-view .cal-day-headers{display:flex;padding-left:70px;border:1px solid}[dir=rtl] .cal-week-view .cal-day-headers{padding-left:initial;padding-right:70px}.cal-week-view .cal-day-headers .cal-header{flex:1;text-align:center;padding:5px}.cal-week-view .cal-day-headers .cal-header:not(:last-child){border-right:1px solid}[dir=rtl] .cal-week-view .cal-day-headers .cal-header:not(:last-child){border-right:initial;border-left:1px solid}.cal-week-view .cal-day-headers .cal-header:first-child{border-left:1px solid}[dir=rtl] .cal-week-view .cal-day-headers .cal-header:first-child{border-left:initial;border-right:1px solid}.cal-week-view .cal-day-headers span{font-weight:400;opacity:.5}.cal-week-view .cal-day-column{flex-grow:1;border-left:solid 1px}[dir=rtl] .cal-week-view .cal-day-column{border-left:initial;border-right:solid 1px}.cal-week-view .cal-event{font-size:12px;border:1px solid;direction:ltr}.cal-week-view .cal-time-label-column{width:70px;height:100%}.cal-week-view .cal-current-time-marker{position:absolute;width:100%;height:2px;z-index:2}.cal-week-view .cal-all-day-events{border:solid 1px;border-top:0;border-bottom-width:3px;padding-top:3px;position:relative}.cal-week-view .cal-all-day-events .cal-day-columns{height:100%;width:100%;display:flex;position:absolute;top:0;z-index:0}.cal-week-view .cal-all-day-events .cal-events-row{position:relative;height:31px;margin-left:70px}[dir=rtl] .cal-week-view .cal-all-day-events .cal-events-row{margin-left:initial;margin-right:70px}.cal-week-view .cal-all-day-events .cal-event-container{display:inline-block;position:absolute}.cal-week-view .cal-all-day-events .cal-event-container.resize-active{z-index:1;pointer-events:none}.cal-week-view .cal-all-day-events .cal-event{padding:0 5px;margin-left:2px;margin-right:2px;height:28px;line-height:28px}.cal-week-view .cal-all-day-events .cal-starts-within-week .cal-event{border-top-left-radius:5px;border-bottom-left-radius:5px}[dir=rtl] .cal-week-view .cal-all-day-events .cal-starts-within-week .cal-event{border-top-left-radius:initial;border-bottom-left-radius:initial;border-top-right-radius:5px!important;border-bottom-right-radius:5px!important}.cal-week-view .cal-all-day-events .cal-ends-within-week .cal-event{border-top-right-radius:5px;border-bottom-right-radius:5px}[dir=rtl] .cal-week-view .cal-all-day-events .cal-ends-within-week .cal-event{border-top-right-radius:initial;border-bottom-right-radius:initial;border-top-left-radius:5px;border-bottom-left-radius:5px}.cal-week-view .cal-all-day-events .cal-time-label-column{display:flex;align-items:center;justify-content:center;font-size:14px}.cal-week-view .cal-all-day-events .cal-resize-handle{width:6px;height:100%;cursor:col-resize;position:absolute;top:0}.cal-week-view .cal-all-day-events .cal-resize-handle.cal-resize-handle-after-end{right:0}[dir=rtl] .cal-week-view .cal-all-day-events .cal-resize-handle.cal-resize-handle-after-end{right:initial;left:0}.cal-week-view .cal-event,.cal-week-view .cal-header{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.cal-week-view .cal-drag-active{pointer-events:none;z-index:1}.cal-week-view .cal-drag-active *{pointer-events:none}.cal-week-view .cal-time-events{position:relative;border:solid 1px;border-top:0;display:flex}.cal-week-view .cal-time-events .cal-day-columns{display:flex;flex-grow:1}.cal-week-view .cal-time-events .cal-day-column,.cal-week-view .cal-time-events .cal-events-container{position:relative}.cal-week-view .cal-time-events .cal-event-container{position:absolute;z-index:1}.cal-week-view .cal-time-events .cal-event{width:calc(100% - 2px);height:calc(100% - 2px);margin:1px;padding:0 5px;line-height:25px}.cal-week-view .cal-time-events .cal-resize-handle{width:100%;height:4px;cursor:row-resize;position:absolute}.cal-week-view .cal-time-events .cal-resize-handle.cal-resize-handle-after-end{bottom:0}.cal-week-view .cal-hour-segment{position:relative}.cal-week-view .cal-hour-segment:after{content:\\\"\\\\a0\\\"}.cal-week-view .cal-event-container:not(.cal-draggable){cursor:pointer}.cal-week-view .cal-draggable{cursor:move}.cal-week-view mwl-calendar-week-view-hour-segment,.cal-week-view .cal-hour-segment{display:block}.cal-week-view .cal-hour:not(:last-child) .cal-hour-segment,.cal-week-view .cal-hour:last-child :not(:last-child) .cal-hour-segment{border-bottom:thin dashed}.cal-week-view .cal-time{font-weight:700;padding-top:5px;width:70px;text-align:center}.cal-week-view .cal-hour-segment.cal-after-hour-start .cal-time{display:none}.cal-week-view .cal-starts-within-day .cal-event{border-top-left-radius:5px;border-top-right-radius:5px}.cal-week-view .cal-ends-within-day .cal-event{border-bottom-left-radius:5px;border-bottom-right-radius:5px}.cal-week-view{background-color:#fff;border-top:solid 1px #e1e1e1}.cal-week-view .cal-day-headers{border-color:#e1e1e1;border-top:0}.cal-week-view .cal-day-headers .cal-header:not(:last-child){border-right-color:#e1e1e1}[dir=rtl] .cal-week-view .cal-day-headers .cal-header:not(:last-child){border-right-color:initial;border-left:solid 1px #e1e1e1!important}.cal-week-view .cal-day-headers .cal-header:first-child{border-left-color:#e1e1e1}[dir=rtl] .cal-week-view .cal-day-headers .cal-header:first-child{border-left-color:initial;border-right-color:#e1e1e1}.cal-week-view .cal-day-headers .cal-header:hover,.cal-week-view .cal-day-headers .cal-drag-over{background-color:#ededed}.cal-week-view .cal-day-column{border-left-color:#e1e1e1}[dir=rtl] .cal-week-view .cal-day-column{border-left-color:initial;border-right-color:#e1e1e1}.cal-week-view .cal-event{background-color:#d1e8ff;border-color:#1e90ff;color:#1e90ff}.cal-week-view .cal-all-day-events{border-color:#e1e1e1}.cal-week-view .cal-header.cal-today{background-color:#e8fde7}.cal-week-view .cal-header.cal-weekend span{color:#8b0000}.cal-week-view .cal-time-events{border-color:#e1e1e1}.cal-week-view .cal-time-events .cal-day-columns:not(.cal-resize-active) .cal-hour-segment:hover{background-color:#ededed}.cal-week-view .cal-hour-odd{background-color:#fafafa}.cal-week-view .cal-drag-over .cal-hour-segment{background-color:#ededed}.cal-week-view .cal-hour:not(:last-child) .cal-hour-segment,.cal-week-view .cal-hour:last-child :not(:last-child) .cal-hour-segment{border-bottom-color:#e1e1e1}.cal-week-view .cal-current-time-marker{background-color:#ea4334}.cal-day-view mwl-calendar-week-view-header{display:none}.cal-day-view .cal-events-container{margin-left:70px}[dir=rtl] .cal-day-view .cal-events-container{margin-left:initial;margin-right:70px}.cal-day-view .cal-day-column{border-left:0}.cal-day-view .cal-current-time-marker{margin-left:70px;width:calc(100% - 70px)}[dir=rtl] .cal-day-view .cal-current-time-marker{margin-left:initial;margin-right:70px}.cal-tooltip{position:absolute;z-index:1070;display:block;font-style:normal;font-weight:400;letter-spacing:normal;line-break:auto;line-height:1.5;text-align:start;text-decoration:none;text-shadow:none;text-transform:none;white-space:normal;word-break:normal;word-spacing:normal;font-size:11px;word-wrap:break-word;opacity:.9}.cal-tooltip.cal-tooltip-top{padding:5px 0;margin-top:-3px}.cal-tooltip.cal-tooltip-top .cal-tooltip-arrow{bottom:0;left:50%;margin-left:-5px;border-width:5px 5px 0}.cal-tooltip.cal-tooltip-right{padding:0 5px;margin-left:3px}.cal-tooltip.cal-tooltip-right .cal-tooltip-arrow{top:50%;left:0;margin-top:-5px;border-width:5px 5px 5px 0}.cal-tooltip.cal-tooltip-bottom{padding:5px 0;margin-top:3px}.cal-tooltip.cal-tooltip-bottom .cal-tooltip-arrow{top:0;left:50%;margin-left:-5px;border-width:0 5px 5px}.cal-tooltip.cal-tooltip-left{padding:0 5px;margin-left:-3px}.cal-tooltip.cal-tooltip-left .cal-tooltip-arrow{top:50%;right:0;margin-top:-5px;border-width:5px 0 5px 5px}.cal-tooltip-inner{max-width:200px;padding:3px 8px;text-align:center;border-radius:.25rem}.cal-tooltip-arrow{position:absolute;width:0;height:0;border-color:transparent;border-style:solid}.cal-tooltip.cal-tooltip-top .cal-tooltip-arrow{border-top-color:#000}.cal-tooltip.cal-tooltip-right .cal-tooltip-arrow{border-right-color:#000}.cal-tooltip.cal-tooltip-bottom .cal-tooltip-arrow{border-bottom-color:#000}.cal-tooltip.cal-tooltip-left .cal-tooltip-arrow{border-left-color:#000}.cal-tooltip-inner{color:#fff;background-color:#000}\\n\"] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarComponent, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'calendar-name', template: \"\", styles: [\"@charset \\\"UTF-8\\\";.cal-month-view .cal-header{text-align:center;font-weight:bolder}.cal-month-view .cal-header .cal-cell{padding:5px 0;overflow:hidden;text-overflow:ellipsis;display:block;white-space:nowrap}.cal-month-view .cal-days{border:1px solid;border-bottom:0}.cal-month-view .cal-cell-top{min-height:78px;flex:1}.cal-month-view .cal-cell-row{display:flex}.cal-month-view .cal-cell{float:left;flex:1;display:flex;flex-direction:column;align-items:stretch}.cal-month-view .cal-cell .cal-event{pointer-events:all!important}.cal-month-view .cal-day-cell{min-height:100px}.cal-month-view .cal-day-cell:not(:last-child){border-right:1px solid}[dir=rtl] .cal-month-view .cal-day-cell:not(:last-child){border-right:initial;border-left:1px solid}.cal-month-view .cal-days .cal-cell-row{border-bottom:1px solid}.cal-month-view .cal-day-badge{margin-top:18px;margin-left:10px;display:inline-block;min-width:10px;padding:3px 7px;font-size:12px;font-weight:700;line-height:1;text-align:center;white-space:nowrap;vertical-align:middle;border-radius:10px;float:left}.cal-month-view .cal-day-number{font-size:1.2em;font-weight:400;opacity:.5;margin-top:15px;margin-right:15px;float:right;margin-bottom:10px}.cal-month-view .cal-events{flex:1;align-items:flex-end;margin:3px;line-height:10px;display:flex;flex-wrap:wrap}.cal-month-view .cal-event{width:10px;height:10px;border-radius:50%;display:inline-block;margin:2px}.cal-month-view .cal-day-cell.cal-in-month.cal-has-events{cursor:pointer}.cal-month-view .cal-day-cell.cal-out-month .cal-day-number{opacity:.1;cursor:default}.cal-month-view .cal-day-cell.cal-today .cal-day-number{font-size:1.9em}.cal-month-view .cal-open-day-events{padding:15px}.cal-month-view .cal-open-day-events .cal-event{position:relative;top:2px}.cal-month-view .cal-out-month .cal-day-badge,.cal-month-view .cal-out-month .cal-event{opacity:.3}.cal-month-view .cal-draggable{cursor:move}.cal-month-view .cal-drag-active *{pointer-events:none}.cal-month-view .cal-event-title{cursor:pointer}.cal-month-view .cal-event-title:hover{text-decoration:underline}.cal-month-view{background-color:#fff}.cal-month-view .cal-cell-row:hover{background-color:#fafafa}.cal-month-view .cal-cell-row .cal-cell:hover,.cal-month-view .cal-cell.cal-has-events.cal-open{background-color:#ededed}.cal-month-view .cal-days{border-color:#e1e1e1}.cal-month-view .cal-day-cell:not(:last-child){border-right-color:#e1e1e1}[dir=rtl] .cal-month-view .cal-day-cell:not(:last-child){border-right-color:initial;border-left-color:#e1e1e1}.cal-month-view .cal-days .cal-cell-row{border-bottom-color:#e1e1e1}.cal-month-view .cal-day-badge{background-color:#b94a48;color:#fff}.cal-month-view .cal-event{background-color:#1e90ff;border-color:#d1e8ff;color:#fff}.cal-month-view .cal-day-cell.cal-weekend .cal-day-number{color:#8b0000}.cal-month-view .cal-day-cell.cal-today{background-color:#e8fde7}.cal-month-view .cal-day-cell.cal-drag-over{background-color:#e0e0e0!important}.cal-month-view .cal-open-day-events{color:#fff;background-color:#555;box-shadow:inset 0 0 15px #00000080}.cal-week-view *{box-sizing:border-box}.cal-week-view .cal-day-headers{display:flex;padding-left:70px;border:1px solid}[dir=rtl] .cal-week-view .cal-day-headers{padding-left:initial;padding-right:70px}.cal-week-view .cal-day-headers .cal-header{flex:1;text-align:center;padding:5px}.cal-week-view .cal-day-headers .cal-header:not(:last-child){border-right:1px solid}[dir=rtl] .cal-week-view .cal-day-headers .cal-header:not(:last-child){border-right:initial;border-left:1px solid}.cal-week-view .cal-day-headers .cal-header:first-child{border-left:1px solid}[dir=rtl] .cal-week-view .cal-day-headers .cal-header:first-child{border-left:initial;border-right:1px solid}.cal-week-view .cal-day-headers span{font-weight:400;opacity:.5}.cal-week-view .cal-day-column{flex-grow:1;border-left:solid 1px}[dir=rtl] .cal-week-view .cal-day-column{border-left:initial;border-right:solid 1px}.cal-week-view .cal-event{font-size:12px;border:1px solid;direction:ltr}.cal-week-view .cal-time-label-column{width:70px;height:100%}.cal-week-view .cal-current-time-marker{position:absolute;width:100%;height:2px;z-index:2}.cal-week-view .cal-all-day-events{border:solid 1px;border-top:0;border-bottom-width:3px;padding-top:3px;position:relative}.cal-week-view .cal-all-day-events .cal-day-columns{height:100%;width:100%;display:flex;position:absolute;top:0;z-index:0}.cal-week-view .cal-all-day-events .cal-events-row{position:relative;height:31px;margin-left:70px}[dir=rtl] .cal-week-view .cal-all-day-events .cal-events-row{margin-left:initial;margin-right:70px}.cal-week-view .cal-all-day-events .cal-event-container{display:inline-block;position:absolute}.cal-week-view .cal-all-day-events .cal-event-container.resize-active{z-index:1;pointer-events:none}.cal-week-view .cal-all-day-events .cal-event{padding:0 5px;margin-left:2px;margin-right:2px;height:28px;line-height:28px}.cal-week-view .cal-all-day-events .cal-starts-within-week .cal-event{border-top-left-radius:5px;border-bottom-left-radius:5px}[dir=rtl] .cal-week-view .cal-all-day-events .cal-starts-within-week .cal-event{border-top-left-radius:initial;border-bottom-left-radius:initial;border-top-right-radius:5px!important;border-bottom-right-radius:5px!important}.cal-week-view .cal-all-day-events .cal-ends-within-week .cal-event{border-top-right-radius:5px;border-bottom-right-radius:5px}[dir=rtl] .cal-week-view .cal-all-day-events .cal-ends-within-week .cal-event{border-top-right-radius:initial;border-bottom-right-radius:initial;border-top-left-radius:5px;border-bottom-left-radius:5px}.cal-week-view .cal-all-day-events .cal-time-label-column{display:flex;align-items:center;justify-content:center;font-size:14px}.cal-week-view .cal-all-day-events .cal-resize-handle{width:6px;height:100%;cursor:col-resize;position:absolute;top:0}.cal-week-view .cal-all-day-events .cal-resize-handle.cal-resize-handle-after-end{right:0}[dir=rtl] .cal-week-view .cal-all-day-events .cal-resize-handle.cal-resize-handle-after-end{right:initial;left:0}.cal-week-view .cal-event,.cal-week-view .cal-header{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.cal-week-view .cal-drag-active{pointer-events:none;z-index:1}.cal-week-view .cal-drag-active *{pointer-events:none}.cal-week-view .cal-time-events{position:relative;border:solid 1px;border-top:0;display:flex}.cal-week-view .cal-time-events .cal-day-columns{display:flex;flex-grow:1}.cal-week-view .cal-time-events .cal-day-column,.cal-week-view .cal-time-events .cal-events-container{position:relative}.cal-week-view .cal-time-events .cal-event-container{position:absolute;z-index:1}.cal-week-view .cal-time-events .cal-event{width:calc(100% - 2px);height:calc(100% - 2px);margin:1px;padding:0 5px;line-height:25px}.cal-week-view .cal-time-events .cal-resize-handle{width:100%;height:4px;cursor:row-resize;position:absolute}.cal-week-view .cal-time-events .cal-resize-handle.cal-resize-handle-after-end{bottom:0}.cal-week-view .cal-hour-segment{position:relative}.cal-week-view .cal-hour-segment:after{content:\\\"\\\\a0\\\"}.cal-week-view .cal-event-container:not(.cal-draggable){cursor:pointer}.cal-week-view .cal-draggable{cursor:move}.cal-week-view mwl-calendar-week-view-hour-segment,.cal-week-view .cal-hour-segment{display:block}.cal-week-view .cal-hour:not(:last-child) .cal-hour-segment,.cal-week-view .cal-hour:last-child :not(:last-child) .cal-hour-segment{border-bottom:thin dashed}.cal-week-view .cal-time{font-weight:700;padding-top:5px;width:70px;text-align:center}.cal-week-view .cal-hour-segment.cal-after-hour-start .cal-time{display:none}.cal-week-view .cal-starts-within-day .cal-event{border-top-left-radius:5px;border-top-right-radius:5px}.cal-week-view .cal-ends-within-day .cal-event{border-bottom-left-radius:5px;border-bottom-right-radius:5px}.cal-week-view{background-color:#fff;border-top:solid 1px #e1e1e1}.cal-week-view .cal-day-headers{border-color:#e1e1e1;border-top:0}.cal-week-view .cal-day-headers .cal-header:not(:last-child){border-right-color:#e1e1e1}[dir=rtl] .cal-week-view .cal-day-headers .cal-header:not(:last-child){border-right-color:initial;border-left:solid 1px #e1e1e1!important}.cal-week-view .cal-day-headers .cal-header:first-child{border-left-color:#e1e1e1}[dir=rtl] .cal-week-view .cal-day-headers .cal-header:first-child{border-left-color:initial;border-right-color:#e1e1e1}.cal-week-view .cal-day-headers .cal-header:hover,.cal-week-view .cal-day-headers .cal-drag-over{background-color:#ededed}.cal-week-view .cal-day-column{border-left-color:#e1e1e1}[dir=rtl] .cal-week-view .cal-day-column{border-left-color:initial;border-right-color:#e1e1e1}.cal-week-view .cal-event{background-color:#d1e8ff;border-color:#1e90ff;color:#1e90ff}.cal-week-view .cal-all-day-events{border-color:#e1e1e1}.cal-week-view .cal-header.cal-today{background-color:#e8fde7}.cal-week-view .cal-header.cal-weekend span{color:#8b0000}.cal-week-view .cal-time-events{border-color:#e1e1e1}.cal-week-view .cal-time-events .cal-day-columns:not(.cal-resize-active) .cal-hour-segment:hover{background-color:#ededed}.cal-week-view .cal-hour-odd{background-color:#fafafa}.cal-week-view .cal-drag-over .cal-hour-segment{background-color:#ededed}.cal-week-view .cal-hour:not(:last-child) .cal-hour-segment,.cal-week-view .cal-hour:last-child :not(:last-child) .cal-hour-segment{border-bottom-color:#e1e1e1}.cal-week-view .cal-current-time-marker{background-color:#ea4334}.cal-day-view mwl-calendar-week-view-header{display:none}.cal-day-view .cal-events-container{margin-left:70px}[dir=rtl] .cal-day-view .cal-events-container{margin-left:initial;margin-right:70px}.cal-day-view .cal-day-column{border-left:0}.cal-day-view .cal-current-time-marker{margin-left:70px;width:calc(100% - 70px)}[dir=rtl] .cal-day-view .cal-current-time-marker{margin-left:initial;margin-right:70px}.cal-tooltip{position:absolute;z-index:1070;display:block;font-style:normal;font-weight:400;letter-spacing:normal;line-break:auto;line-height:1.5;text-align:start;text-decoration:none;text-shadow:none;text-transform:none;white-space:normal;word-break:normal;word-spacing:normal;font-size:11px;word-wrap:break-word;opacity:.9}.cal-tooltip.cal-tooltip-top{padding:5px 0;margin-top:-3px}.cal-tooltip.cal-tooltip-top .cal-tooltip-arrow{bottom:0;left:50%;margin-left:-5px;border-width:5px 5px 0}.cal-tooltip.cal-tooltip-right{padding:0 5px;margin-left:3px}.cal-tooltip.cal-tooltip-right .cal-tooltip-arrow{top:50%;left:0;margin-top:-5px;border-width:5px 5px 5px 0}.cal-tooltip.cal-tooltip-bottom{padding:5px 0;margin-top:3px}.cal-tooltip.cal-tooltip-bottom .cal-tooltip-arrow{top:0;left:50%;margin-left:-5px;border-width:0 5px 5px}.cal-tooltip.cal-tooltip-left{padding:0 5px;margin-left:-3px}.cal-tooltip.cal-tooltip-left .cal-tooltip-arrow{top:50%;right:0;margin-top:-5px;border-width:5px 0 5px 5px}.cal-tooltip-inner{max-width:200px;padding:3px 8px;text-align:center;border-radius:.25rem}.cal-tooltip-arrow{position:absolute;width:0;height:0;border-color:transparent;border-style:solid}.cal-tooltip.cal-tooltip-top .cal-tooltip-arrow{border-top-color:#000}.cal-tooltip.cal-tooltip-right .cal-tooltip-arrow{border-right-color:#000}.cal-tooltip.cal-tooltip-bottom .cal-tooltip-arrow{border-bottom-color:#000}.cal-tooltip.cal-tooltip-left .cal-tooltip-arrow{border-left-color:#000}.cal-tooltip-inner{color:#fff;background-color:#000}\\n\"] }]\r\n        }], ctorParameters: function () { return []; } });","originalLength":24680,"removedExports":[],"renderedExports":["CalendarComponent"],"renderedLength":23515},"C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\lib\\calendar.module.mjs":{"code":"class CalendarModule {\r\n    static forRoot(dateAdapter, config = {}) {\r\n        return {\r\n            ngModule: CalendarModule,\r\n            providers: [\r\n                dateAdapter,\r\n                config.eventTitleFormatter || CalendarEventTitleFormatter,\r\n                config.dateFormatter || CalendarDateFormatter,\r\n                config.utils || CalendarUtils,\r\n                config.a11y || CalendarA11y,\r\n            ],\r\n        };\r\n    }\r\n}\r\nCalendarModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\r\nCalendarModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarModule, declarations: [CalendarComponent], imports: [CalendarMonthModule,\r\n        CalendarWeekModule,\r\n        CalendarDayModule,\r\n        CalendarCommonModule], exports: [CalendarComponent,\r\n        CalendarMonthModule,\r\n        CalendarWeekModule,\r\n        CalendarDayModule,\r\n        CalendarCommonModule] });\r\nCalendarModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarModule, imports: [CalendarMonthModule,\r\n        CalendarWeekModule,\r\n        CalendarDayModule,\r\n        CalendarCommonModule, CalendarMonthModule,\r\n        CalendarWeekModule,\r\n        CalendarDayModule,\r\n        CalendarCommonModule] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarModule, decorators: [{\r\n            type: NgModule,\r\n            args: [{\r\n                    declarations: [\r\n                        CalendarComponent\r\n                    ],\r\n                    imports: [\r\n                        CalendarMonthModule,\r\n                        CalendarWeekModule,\r\n                        CalendarDayModule,\r\n                        CalendarCommonModule\r\n                    ],\r\n                    exports: [\r\n                        CalendarComponent,\r\n                        CalendarMonthModule,\r\n                        CalendarWeekModule,\r\n                        CalendarDayModule,\r\n                        CalendarCommonModule\r\n                    ]\r\n                }]\r\n        }] });","originalLength":6526,"removedExports":[],"renderedExports":["CalendarModule"],"renderedLength":2248},"C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\public-api.mjs":{"code":"/*\r\n * Public API Surface of ng-calendar-schedule\r\n */","originalLength":1563,"removedExports":[],"renderedExports":[],"renderedLength":54},"C:\\Users\\wcastro\\projetos\\ng-calendar-schedule\\dist\\ng-calendar-schedule\\esm2020\\ng-calendar-schedule.mjs":{"code":"/**\r\n * Generated bundle index. Do not edit.\r\n */","originalLength":540,"removedExports":[],"renderedExports":[],"renderedLength":49}},"referencedFiles":[],"code":"import { adapterFactory as adapterFactory$1 } from 'calendar-utils/date-adapters/date-fns';\nimport { addWeeks, addMonths, subDays, subWeeks, subMonths, getISOWeek, setDate, setMonth, setYear, getDate, getYear } from 'date-fns';\nimport * as i0 from '@angular/core';\nimport { EventEmitter, Directive, Inject, Input, Output, Injectable, LOCALE_ID, Pipe, Component, HostListener, InjectionToken, NgModule } from '@angular/core';\nimport * as i1 from '@angular/common';\nimport { DOCUMENT, formatDate, CommonModule, I18nPluralPipe } from '@angular/common';\nimport { Subject, Observable, of, timer, BehaviorSubject, interval } from 'rxjs';\nimport { takeUntil, switchMap, startWith, switchMapTo, map } from 'rxjs/operators';\nimport { positionElements } from 'positioning';\nimport { validateEvents as validateEvents$1, getMonthView, getWeekViewHeader, getWeekView } from 'calendar-utils';\nexport { DAYS_OF_WEEK } from 'calendar-utils';\nimport { __rest } from 'tslib';\nimport * as i4 from 'angular-resizable-element';\nimport { ResizableModule } from 'angular-resizable-element';\nimport * as i2 from 'angular-draggable-droppable';\nimport { DragAndDropModule } from 'angular-draggable-droppable';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\n\nclass DateAdapter {\r\n}\n\nfunction adapterFactory() {\r\n    return Object.assign(Object.assign({}, adapterFactory$1()), { addWeeks,\r\n        addMonths,\r\n        subDays,\r\n        subWeeks,\r\n        subMonths,\r\n        getISOWeek,\r\n        setDate,\r\n        setMonth,\r\n        setYear,\r\n        getDate,\r\n        getYear });\r\n}\n\nclass ClickDirective {\r\n    constructor(renderer, elm, document) {\r\n        this.renderer = renderer;\r\n        this.elm = elm;\r\n        this.document = document;\r\n        this.clickListenerDisabled = false;\r\n        this.click = new EventEmitter(); // eslint-disable-line\r\n        this.destroy$ = new Subject();\r\n    }\r\n    ngOnInit() {\r\n        if (!this.clickListenerDisabled) {\r\n            this.listen()\r\n                .pipe(takeUntil(this.destroy$))\r\n                .subscribe((event) => {\r\n                event.stopPropagation();\r\n                this.click.emit(event);\r\n            });\r\n        }\r\n    }\r\n    ngOnDestroy() {\r\n        this.destroy$.next();\r\n    }\r\n    listen() {\r\n        return new Observable((observer) => {\r\n            return this.renderer.listen(this.elm.nativeElement, 'click', (event) => {\r\n                observer.next(event);\r\n            });\r\n        });\r\n    }\r\n}\r\nClickDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: ClickDirective, deps: [{ token: i0.Renderer2 }, { token: i0.ElementRef }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Directive });\r\nClickDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.0.4\", type: ClickDirective, selector: \"[mwlClick]\", inputs: { clickListenerDisabled: \"clickListenerDisabled\" }, outputs: { click: \"mwlClick\" }, ngImport: i0 });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: ClickDirective, decorators: [{\r\n            type: Directive,\r\n            args: [{\r\n                    selector: '[mwlClick]',\r\n                }]\r\n        }], ctorParameters: function () {\r\n        return [{ type: i0.Renderer2 }, { type: i0.ElementRef }, { type: undefined, decorators: [{\r\n                        type: Inject,\r\n                        args: [DOCUMENT]\r\n                    }] }];\r\n    }, propDecorators: { clickListenerDisabled: [{\r\n                type: Input\r\n            }], click: [{\r\n                type: Output,\r\n                args: ['mwlClick']\r\n            }] } });\n\nclass KeydownEnterDirective {\r\n    constructor(host, ngZone, renderer) {\r\n        this.host = host;\r\n        this.ngZone = ngZone;\r\n        this.renderer = renderer;\r\n        this.keydown = new EventEmitter(); // eslint-disable-line\r\n        this.keydownListener = null;\r\n    }\r\n    ngOnInit() {\r\n        this.ngZone.runOutsideAngular(() => {\r\n            this.keydownListener = this.renderer.listen(this.host.nativeElement, 'keydown', (event) => {\r\n                if (event.keyCode === 13 ||\r\n                    event.which === 13 ||\r\n                    event.key === 'Enter') {\r\n                    event.preventDefault();\r\n                    event.stopPropagation();\r\n                    this.ngZone.run(() => {\r\n                        this.keydown.emit(event);\r\n                    });\r\n                }\r\n            });\r\n        });\r\n    }\r\n    ngOnDestroy() {\r\n        if (this.keydownListener !== null) {\r\n            this.keydownListener();\r\n            this.keydownListener = null;\r\n        }\r\n    }\r\n}\r\nKeydownEnterDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: KeydownEnterDirective, deps: [{ token: i0.ElementRef }, { token: i0.NgZone }, { token: i0.Renderer2 }], target: i0.ɵɵFactoryTarget.Directive });\r\nKeydownEnterDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.0.4\", type: KeydownEnterDirective, selector: \"[mwlKeydownEnter]\", outputs: { keydown: \"mwlKeydownEnter\" }, ngImport: i0 });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: KeydownEnterDirective, decorators: [{\r\n            type: Directive,\r\n            args: [{\r\n                    selector: '[mwlKeydownEnter]',\r\n                }]\r\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.NgZone }, { type: i0.Renderer2 }]; }, propDecorators: { keydown: [{\r\n                type: Output,\r\n                args: ['mwlKeydownEnter']\r\n            }] } });\n\n/**\r\n * This class is responsible for adding accessibility to the calendar.\r\n * You may override any of its methods via angulars DI to suit your requirements.\r\n * For example:\r\n *\r\n * ```typescript\r\n * import { A11yParams, CalendarA11y } from 'angular-calendar';\r\n * import { formatDate, I18nPluralPipe } from '@angular/common';\r\n * import { Injectable } from '@angular/core';\r\n *\r\n * // adding your own a11y params\r\n * export interface CustomA11yParams extends A11yParams {\r\n *   isDrSuess?: boolean;\r\n * }\r\n *\r\n * @Injectable()\r\n * export class CustomCalendarA11y extends CalendarA11y {\r\n *   constructor(protected i18nPlural: I18nPluralPipe) {\r\n *     super(i18nPlural);\r\n *   }\r\n *\r\n *   // overriding a function\r\n *   public openDayEventsLandmark({ date, locale, isDrSuess }: CustomA11yParams): string {\r\n *     if (isDrSuess) {\r\n *       return `\r\n *         ${formatDate(date, 'EEEE MMMM d', locale)}\r\n *          Today you are you! That is truer than true! There is no one alive\r\n *          who is you-er than you!\r\n *       `;\r\n *     }\r\n *   }\r\n * }\r\n *\r\n * // in your component that uses the calendar\r\n * providers: [{\r\n *  provide: CalendarA11y,\r\n *  useClass: CustomCalendarA11y\r\n * }]\r\n * ```\r\n */\r\nclass CalendarA11y {\r\n    constructor(i18nPlural) {\r\n        this.i18nPlural = i18nPlural;\r\n    }\r\n    /**\r\n     * Aria label for the badges/date of a cell\r\n     * @example: `Saturday October 19 1 event click to expand`\r\n     */\r\n    monthCell({ day, locale }) {\r\n        if (day.badgeTotal > 0) {\r\n            return `\r\n        ${formatDate(day.date, 'EEEE MMMM d', locale)},\r\n        ${this.i18nPlural.transform(day.badgeTotal, {\r\n                '=0': 'No events',\r\n                '=1': 'One event',\r\n                other: '# events',\r\n            })},\r\n         click to expand\r\n      `;\r\n        }\r\n        else {\r\n            return `${formatDate(day.date, 'EEEE MMMM d', locale)}`;\r\n        }\r\n    }\r\n    /**\r\n     * Aria label for the open day events start landmark\r\n     * @example: `Saturday October 19 expanded view`\r\n     */\r\n    openDayEventsLandmark({ date, locale }) {\r\n        return `\r\n      Beginning of expanded view for ${formatDate(date, 'EEEE MMMM dd', locale)}\r\n    `;\r\n    }\r\n    /**\r\n     * Aria label for alert that a day in the month view was expanded\r\n     * @example: `Saturday October 19 expanded`\r\n     */\r\n    openDayEventsAlert({ date, locale }) {\r\n        return `${formatDate(date, 'EEEE MMMM dd', locale)} expanded`;\r\n    }\r\n    /**\r\n     * Descriptive aria label for an event\r\n     * @example: `Saturday October 19th, Scott's Pizza Party, from 11:00am to 5:00pm`\r\n     */\r\n    eventDescription({ event, locale }) {\r\n        if (event.allDay === true) {\r\n            return this.allDayEventDescription({ event, locale });\r\n        }\r\n        const aria = `\r\n      ${formatDate(event.start, 'EEEE MMMM dd', locale)},\r\n      ${event.title}, from ${formatDate(event.start, 'hh:mm a', locale)}\r\n    `;\r\n        if (event.end) {\r\n            return aria + ` to ${formatDate(event.end, 'hh:mm a', locale)}`;\r\n        }\r\n        return aria;\r\n    }\r\n    /**\r\n     * Descriptive aria label for an all day event\r\n     * @example:\r\n     * `Scott's Party, event spans multiple days: start time October 19 5:00pm, no stop time`\r\n     */\r\n    allDayEventDescription({ event, locale }) {\r\n        const aria = `\r\n      ${event.title}, event spans multiple days:\r\n      start time ${formatDate(event.start, 'MMMM dd hh:mm a', locale)}\r\n    `;\r\n        if (event.end) {\r\n            return (aria + `, stop time ${formatDate(event.end, 'MMMM d hh:mm a', locale)}`);\r\n        }\r\n        return aria + `, no stop time`;\r\n    }\r\n    /**\r\n     * Aria label for the calendar event actions icons\r\n     * @returns 'Edit' for fa-pencil icons, and 'Delete' for fa-times icons\r\n     */\r\n    actionButtonLabel({ action }) {\r\n        return action.a11yLabel;\r\n    }\r\n    /**\r\n     * @returns {number} Tab index to be given to month cells\r\n     */\r\n    monthCellTabIndex() {\r\n        return 0;\r\n    }\r\n    /**\r\n     * @returns true if the events inside the month cell should be aria-hidden\r\n     */\r\n    hideMonthCellEvents() {\r\n        return true;\r\n    }\r\n    /**\r\n     * @returns true if event titles should be aria-hidden (global)\r\n     */\r\n    hideEventTitle() {\r\n        return true;\r\n    }\r\n    /**\r\n     * @returns true if hour segments in the week view should be aria-hidden\r\n     */\r\n    hideWeekHourSegment() {\r\n        return true;\r\n    }\r\n    /**\r\n     * @returns true if hour segments in the day view should be aria-hidden\r\n     */\r\n    hideDayHourSegment() {\r\n        return true;\r\n    }\r\n}\r\nCalendarA11y.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarA11y, deps: [{ token: i1.I18nPluralPipe }], target: i0.ɵɵFactoryTarget.Injectable });\r\nCalendarA11y.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarA11y });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarA11y, decorators: [{\r\n            type: Injectable\r\n        }], ctorParameters: function () { return [{ type: i1.I18nPluralPipe }]; } });\n\n/**\r\n * This pipe is primarily for rendering aria labels. Example usage:\r\n * ```typescript\r\n * // where `myEvent` is a `CalendarEvent` and myLocale is a locale identifier\r\n * {{ { event: myEvent, locale: myLocale } | calendarA11y: 'eventDescription' }}\r\n * ```\r\n */\r\nclass CalendarA11yPipe {\r\n    constructor(calendarA11y, locale) {\r\n        this.calendarA11y = calendarA11y;\r\n        this.locale = locale;\r\n    }\r\n    transform(a11yParams, method) {\r\n        a11yParams.locale = a11yParams.locale || this.locale;\r\n        if (typeof this.calendarA11y[method] === 'undefined') {\r\n            const allowedMethods = Object.getOwnPropertyNames(Object.getPrototypeOf(CalendarA11y.prototype)).filter((iMethod) => iMethod !== 'constructor');\r\n            throw new Error(`${method} is not a valid a11y method. Can only be one of ${allowedMethods.join(', ')}`);\r\n        }\r\n        return this.calendarA11y[method](a11yParams);\r\n    }\r\n}\r\nCalendarA11yPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarA11yPipe, deps: [{ token: CalendarA11y }, { token: LOCALE_ID }], target: i0.ɵɵFactoryTarget.Pipe });\r\nCalendarA11yPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"14.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarA11yPipe, name: \"calendarA11y\" });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarA11yPipe, decorators: [{\r\n            type: Pipe,\r\n            args: [{\r\n                    name: 'calendarA11y',\r\n                }]\r\n        }], ctorParameters: function () {\r\n        return [{ type: CalendarA11y }, { type: undefined, decorators: [{\r\n                        type: Inject,\r\n                        args: [LOCALE_ID]\r\n                    }] }];\r\n    } });\n\nclass CalendarEventActionsComponent {\r\n    constructor() {\r\n        this.trackByActionId = (index, action) => action.id ? action.id : action;\r\n    }\r\n}\r\nCalendarEventActionsComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarEventActionsComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\r\nCalendarEventActionsComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.0.4\", type: CalendarEventActionsComponent, selector: \"mwl-calendar-event-actions\", inputs: { event: \"event\", customTemplate: \"customTemplate\" }, ngImport: i0, template: `\r\n    <ng-template\r\n      #defaultTemplate\r\n      let-event=\"event\"\r\n      let-trackByActionId=\"trackByActionId\"\r\n    >\r\n      <span *ngIf=\"event.actions\" class=\"cal-event-actions\">\r\n        <a\r\n          class=\"cal-event-action\"\r\n          href=\"javascript:;\"\r\n          *ngFor=\"let action of event.actions; trackBy: trackByActionId\"\r\n          (mwlClick)=\"action.onClick({ event: event, sourceEvent: $event })\"\r\n          (mwlKeydownEnter)=\"\r\n            action.onClick({ event: event, sourceEvent: $event })\r\n          \"\r\n          [ngClass]=\"action.cssClass\"\r\n          [innerHtml]=\"action.label\"\r\n          tabindex=\"0\"\r\n          role=\"button\"\r\n          [attr.aria-label]=\"\r\n            { action: action } | calendarA11y : 'actionButtonLabel'\r\n          \"\r\n        >\r\n        </a>\r\n      </span>\r\n    </ng-template>\r\n    <ng-template\r\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\r\n      [ngTemplateOutletContext]=\"{\r\n        event: event,\r\n        trackByActionId: trackByActionId\r\n      }\"\r\n    >\r\n    </ng-template>\r\n  `, isInline: true, dependencies: [{ kind: \"directive\", type: i1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i1.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"directive\", type: ClickDirective, selector: \"[mwlClick]\", inputs: [\"clickListenerDisabled\"], outputs: [\"mwlClick\"] }, { kind: \"directive\", type: KeydownEnterDirective, selector: \"[mwlKeydownEnter]\", outputs: [\"mwlKeydownEnter\"] }, { kind: \"pipe\", type: CalendarA11yPipe, name: \"calendarA11y\" }] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarEventActionsComponent, decorators: [{\r\n            type: Component,\r\n            args: [{\r\n                    selector: 'mwl-calendar-event-actions',\r\n                    template: `\r\n    <ng-template\r\n      #defaultTemplate\r\n      let-event=\"event\"\r\n      let-trackByActionId=\"trackByActionId\"\r\n    >\r\n      <span *ngIf=\"event.actions\" class=\"cal-event-actions\">\r\n        <a\r\n          class=\"cal-event-action\"\r\n          href=\"javascript:;\"\r\n          *ngFor=\"let action of event.actions; trackBy: trackByActionId\"\r\n          (mwlClick)=\"action.onClick({ event: event, sourceEvent: $event })\"\r\n          (mwlKeydownEnter)=\"\r\n            action.onClick({ event: event, sourceEvent: $event })\r\n          \"\r\n          [ngClass]=\"action.cssClass\"\r\n          [innerHtml]=\"action.label\"\r\n          tabindex=\"0\"\r\n          role=\"button\"\r\n          [attr.aria-label]=\"\r\n            { action: action } | calendarA11y : 'actionButtonLabel'\r\n          \"\r\n        >\r\n        </a>\r\n      </span>\r\n    </ng-template>\r\n    <ng-template\r\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\r\n      [ngTemplateOutletContext]=\"{\r\n        event: event,\r\n        trackByActionId: trackByActionId\r\n      }\"\r\n    >\r\n    </ng-template>\r\n  `,\r\n                }]\r\n        }], propDecorators: { event: [{\r\n                type: Input\r\n            }], customTemplate: [{\r\n                type: Input\r\n            }] } });\n\n/**\r\n * This class is responsible for displaying all event titles within the calendar. You may override any of its methods via angulars DI to suit your requirements. For example:\r\n *\r\n * ```typescript\r\n * import { Injectable } from '@angular/core';\r\n * import { CalendarEventTitleFormatter, CalendarEvent } from 'angular-calendar';\r\n *\r\n * @Injectable()\r\n * class CustomEventTitleFormatter extends CalendarEventTitleFormatter {\r\n *\r\n *   month(event: CalendarEvent): string {\r\n *     return `Custom prefix: ${event.title}`;\r\n *   }\r\n *\r\n * }\r\n *\r\n * // in your component\r\n * providers: [{\r\n *  provide: CalendarEventTitleFormatter,\r\n *  useClass: CustomEventTitleFormatter\r\n * }]\r\n * ```\r\n */\r\nclass CalendarEventTitleFormatter {\r\n    /**\r\n     * The month view event title.\r\n     */\r\n    month(event, title) {\r\n        return event.title;\r\n    }\r\n    /**\r\n     * The month view event tooltip. Return a falsey value from this to disable the tooltip.\r\n     */\r\n    monthTooltip(event, title) {\r\n        return event.title;\r\n    }\r\n    /**\r\n     * The week view event title.\r\n     */\r\n    week(event, title) {\r\n        return event.title;\r\n    }\r\n    /**\r\n     * The week view event tooltip. Return a falsey value from this to disable the tooltip.\r\n     */\r\n    weekTooltip(event, title) {\r\n        return event.title;\r\n    }\r\n    /**\r\n     * The day view event title.\r\n     */\r\n    day(event, title) {\r\n        return event.title;\r\n    }\r\n    /**\r\n     * The day view event tooltip. Return a falsey value from this to disable the tooltip.\r\n     */\r\n    dayTooltip(event, title) {\r\n        return event.title;\r\n    }\r\n}\n\nclass CalendarEventTitlePipe {\r\n    constructor(calendarEventTitle) {\r\n        this.calendarEventTitle = calendarEventTitle;\r\n    }\r\n    transform(title, titleType, event) {\r\n        return this.calendarEventTitle[titleType](event, title);\r\n    }\r\n}\r\nCalendarEventTitlePipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarEventTitlePipe, deps: [{ token: CalendarEventTitleFormatter }], target: i0.ɵɵFactoryTarget.Pipe });\r\nCalendarEventTitlePipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"14.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarEventTitlePipe, name: \"calendarEventTitle\" });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarEventTitlePipe, decorators: [{\r\n            type: Pipe,\r\n            args: [{\r\n                    name: 'calendarEventTitle',\r\n                }]\r\n        }], ctorParameters: function () { return [{ type: CalendarEventTitleFormatter }]; } });\n\nclass CalendarEventTitleComponent {\r\n}\r\nCalendarEventTitleComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarEventTitleComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\r\nCalendarEventTitleComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.0.4\", type: CalendarEventTitleComponent, selector: \"mwl-calendar-event-title\", inputs: { event: \"event\", customTemplate: \"customTemplate\", view: \"view\" }, ngImport: i0, template: `\r\n    <ng-template #defaultTemplate let-event=\"event\" let-view=\"view\">\r\n      <span\r\n        class=\"cal-event-title\"\r\n        [innerHTML]=\"event.title | calendarEventTitle : view : event\"\r\n        [attr.aria-hidden]=\"{} | calendarA11y : 'hideEventTitle'\"\r\n      >\r\n      </span>\r\n    </ng-template>\r\n    <ng-template\r\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\r\n      [ngTemplateOutletContext]=\"{\r\n        event: event,\r\n        view: view\r\n      }\"\r\n    >\r\n    </ng-template>\r\n  `, isInline: true, dependencies: [{ kind: \"directive\", type: i1.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"pipe\", type: CalendarEventTitlePipe, name: \"calendarEventTitle\" }, { kind: \"pipe\", type: CalendarA11yPipe, name: \"calendarA11y\" }] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarEventTitleComponent, decorators: [{\r\n            type: Component,\r\n            args: [{\r\n                    selector: 'mwl-calendar-event-title',\r\n                    template: `\r\n    <ng-template #defaultTemplate let-event=\"event\" let-view=\"view\">\r\n      <span\r\n        class=\"cal-event-title\"\r\n        [innerHTML]=\"event.title | calendarEventTitle : view : event\"\r\n        [attr.aria-hidden]=\"{} | calendarA11y : 'hideEventTitle'\"\r\n      >\r\n      </span>\r\n    </ng-template>\r\n    <ng-template\r\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\r\n      [ngTemplateOutletContext]=\"{\r\n        event: event,\r\n        view: view\r\n      }\"\r\n    >\r\n    </ng-template>\r\n  `,\r\n                }]\r\n        }], propDecorators: { event: [{\r\n                type: Input\r\n            }], customTemplate: [{\r\n                type: Input\r\n            }], view: [{\r\n                type: Input\r\n            }] } });\n\nclass CalendarTooltipWindowComponent {\r\n}\r\nCalendarTooltipWindowComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarTooltipWindowComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\r\nCalendarTooltipWindowComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.0.4\", type: CalendarTooltipWindowComponent, selector: \"mwl-calendar-tooltip-window\", inputs: { contents: \"contents\", placement: \"placement\", event: \"event\", customTemplate: \"customTemplate\" }, ngImport: i0, template: `\r\n    <ng-template\r\n      #defaultTemplate\r\n      let-contents=\"contents\"\r\n      let-placement=\"placement\"\r\n      let-event=\"event\"\r\n    >\r\n      <div class=\"cal-tooltip\" [ngClass]=\"'cal-tooltip-' + placement\">\r\n        <div class=\"cal-tooltip-arrow\"></div>\r\n        <div class=\"cal-tooltip-inner\" [innerHtml]=\"contents\"></div>\r\n      </div>\r\n    </ng-template>\r\n    <ng-template\r\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\r\n      [ngTemplateOutletContext]=\"{\r\n        contents: contents,\r\n        placement: placement,\r\n        event: event\r\n      }\"\r\n    >\r\n    </ng-template>\r\n  `, isInline: true, dependencies: [{ kind: \"directive\", type: i1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i1.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarTooltipWindowComponent, decorators: [{\r\n            type: Component,\r\n            args: [{\r\n                    selector: 'mwl-calendar-tooltip-window',\r\n                    template: `\r\n    <ng-template\r\n      #defaultTemplate\r\n      let-contents=\"contents\"\r\n      let-placement=\"placement\"\r\n      let-event=\"event\"\r\n    >\r\n      <div class=\"cal-tooltip\" [ngClass]=\"'cal-tooltip-' + placement\">\r\n        <div class=\"cal-tooltip-arrow\"></div>\r\n        <div class=\"cal-tooltip-inner\" [innerHtml]=\"contents\"></div>\r\n      </div>\r\n    </ng-template>\r\n    <ng-template\r\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\r\n      [ngTemplateOutletContext]=\"{\r\n        contents: contents,\r\n        placement: placement,\r\n        event: event\r\n      }\"\r\n    >\r\n    </ng-template>\r\n  `,\r\n                }]\r\n        }], propDecorators: { contents: [{\r\n                type: Input\r\n            }], placement: [{\r\n                type: Input\r\n            }], event: [{\r\n                type: Input\r\n            }], customTemplate: [{\r\n                type: Input\r\n            }] } });\r\nclass CalendarTooltipDirective {\r\n    constructor(elementRef, injector, renderer, componentFactoryResolver, viewContainerRef, document // eslint-disable-line\r\n    ) {\r\n        this.elementRef = elementRef;\r\n        this.injector = injector;\r\n        this.renderer = renderer;\r\n        this.viewContainerRef = viewContainerRef;\r\n        this.document = document;\r\n        this.placement = 'auto'; // eslint-disable-line  @angular-eslint/no-input-rename\r\n        this.delay = null; // eslint-disable-line  @angular-eslint/no-input-rename\r\n        this.cancelTooltipDelay$ = new Subject();\r\n        this.tooltipFactory = componentFactoryResolver.resolveComponentFactory(CalendarTooltipWindowComponent);\r\n    }\r\n    ngOnChanges(changes) {\r\n        if (this.tooltipRef &&\r\n            (changes.contents || changes.customTemplate || changes.event)) {\r\n            this.tooltipRef.instance.contents = this.contents;\r\n            this.tooltipRef.instance.customTemplate = this.customTemplate;\r\n            this.tooltipRef.instance.event = this.event;\r\n            this.tooltipRef.changeDetectorRef.markForCheck();\r\n            if (!this.contents) {\r\n                this.hide();\r\n            }\r\n        }\r\n    }\r\n    ngOnDestroy() {\r\n        this.hide();\r\n    }\r\n    onMouseOver() {\r\n        const delay$ = this.delay === null ? of('now') : timer(this.delay);\r\n        delay$.pipe(takeUntil(this.cancelTooltipDelay$)).subscribe(() => {\r\n            this.show();\r\n        });\r\n    }\r\n    onMouseOut() {\r\n        this.hide();\r\n    }\r\n    show() {\r\n        if (!this.tooltipRef && this.contents) {\r\n            this.tooltipRef = this.viewContainerRef.createComponent(this.tooltipFactory, 0, this.injector, []);\r\n            this.tooltipRef.instance.contents = this.contents;\r\n            this.tooltipRef.instance.customTemplate = this.customTemplate;\r\n            this.tooltipRef.instance.event = this.event;\r\n            if (this.appendToBody) {\r\n                this.document.body.appendChild(this.tooltipRef.location.nativeElement);\r\n            }\r\n            requestAnimationFrame(() => {\r\n                this.positionTooltip();\r\n            });\r\n        }\r\n    }\r\n    hide() {\r\n        if (this.tooltipRef) {\r\n            this.viewContainerRef.remove(this.viewContainerRef.indexOf(this.tooltipRef.hostView));\r\n            this.tooltipRef = null;\r\n        }\r\n        this.cancelTooltipDelay$.next();\r\n    }\r\n    positionTooltip(previousPositions = []) {\r\n        if (this.tooltipRef) {\r\n            this.tooltipRef.changeDetectorRef.detectChanges();\r\n            this.tooltipRef.instance.placement = positionElements(this.elementRef.nativeElement, this.tooltipRef.location.nativeElement.children[0], this.placement, this.appendToBody);\r\n            // keep re-positioning the tooltip until the arrow position doesn't make a difference\r\n            if (previousPositions.indexOf(this.tooltipRef.instance.placement) === -1) {\r\n                this.positionTooltip([\r\n                    ...previousPositions,\r\n                    this.tooltipRef.instance.placement,\r\n                ]);\r\n            }\r\n        }\r\n    }\r\n}\r\nCalendarTooltipDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarTooltipDirective, deps: [{ token: i0.ElementRef }, { token: i0.Injector }, { token: i0.Renderer2 }, { token: i0.ComponentFactoryResolver }, { token: i0.ViewContainerRef }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Directive });\r\nCalendarTooltipDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.0.4\", type: CalendarTooltipDirective, selector: \"[mwlCalendarTooltip]\", inputs: { contents: [\"mwlCalendarTooltip\", \"contents\"], placement: [\"tooltipPlacement\", \"placement\"], customTemplate: [\"tooltipTemplate\", \"customTemplate\"], event: [\"tooltipEvent\", \"event\"], appendToBody: [\"tooltipAppendToBody\", \"appendToBody\"], delay: [\"tooltipDelay\", \"delay\"] }, host: { listeners: { \"mouseenter\": \"onMouseOver()\", \"mouseleave\": \"onMouseOut()\" } }, usesOnChanges: true, ngImport: i0 });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarTooltipDirective, decorators: [{\r\n            type: Directive,\r\n            args: [{\r\n                    selector: '[mwlCalendarTooltip]',\r\n                }]\r\n        }], ctorParameters: function () {\r\n        return [{ type: i0.ElementRef }, { type: i0.Injector }, { type: i0.Renderer2 }, { type: i0.ComponentFactoryResolver }, { type: i0.ViewContainerRef }, { type: undefined, decorators: [{\r\n                        type: Inject,\r\n                        args: [DOCUMENT]\r\n                    }] }];\r\n    }, propDecorators: { contents: [{\r\n                type: Input,\r\n                args: ['mwlCalendarTooltip']\r\n            }], placement: [{\r\n                type: Input,\r\n                args: ['tooltipPlacement']\r\n            }], customTemplate: [{\r\n                type: Input,\r\n                args: ['tooltipTemplate']\r\n            }], event: [{\r\n                type: Input,\r\n                args: ['tooltipEvent']\r\n            }], appendToBody: [{\r\n                type: Input,\r\n                args: ['tooltipAppendToBody']\r\n            }], delay: [{\r\n                type: Input,\r\n                args: ['tooltipDelay']\r\n            }], onMouseOver: [{\r\n                type: HostListener,\r\n                args: ['mouseenter']\r\n            }], onMouseOut: [{\r\n                type: HostListener,\r\n                args: ['mouseleave']\r\n            }] } });\n\nvar CalendarView;\r\n(function (CalendarView) {\r\n    CalendarView[\"Month\"] = \"month\";\r\n    CalendarView[\"Week\"] = \"week\";\r\n    CalendarView[\"Day\"] = \"day\";\r\n})(CalendarView || (CalendarView = {}));\n\nconst validateEvents = (events) => {\r\n    const warn = (...args) => console.warn('angular-calendar', ...args);\r\n    return validateEvents$1(events, warn);\r\n};\r\nfunction isInsideLeftAndRight(outer, inner) {\r\n    return (Math.floor(outer.left) <= Math.ceil(inner.left) &&\r\n        Math.floor(inner.left) <= Math.ceil(outer.right) &&\r\n        Math.floor(outer.left) <= Math.ceil(inner.right) &&\r\n        Math.floor(inner.right) <= Math.ceil(outer.right));\r\n}\r\nfunction isInsideTopAndBottom(outer, inner) {\r\n    return (Math.floor(outer.top) <= Math.ceil(inner.top) &&\r\n        Math.floor(inner.top) <= Math.ceil(outer.bottom) &&\r\n        Math.floor(outer.top) <= Math.ceil(inner.bottom) &&\r\n        Math.floor(inner.bottom) <= Math.ceil(outer.bottom));\r\n}\r\nfunction isInside(outer, inner) {\r\n    return (isInsideLeftAndRight(outer, inner) && isInsideTopAndBottom(outer, inner));\r\n}\r\nfunction roundToNearest(amount, precision) {\r\n    return Math.round(amount / precision) * precision;\r\n}\r\nconst trackByEventId = (index, event) => event.id ? event.id : event;\r\nconst trackByWeekDayHeaderDate = (index, day) => day.date.toISOString();\r\nconst trackByHourSegment = (index, segment) => segment.date.toISOString();\r\nconst trackByHour = (index, hour) => hour.segments[0].date.toISOString();\r\nconst trackByWeekAllDayEvent = (index, weekEvent) => (weekEvent.event.id ? weekEvent.event.id : weekEvent.event);\r\nconst trackByWeekTimeEvent = (index, weekEvent) => (weekEvent.event.id ? weekEvent.event.id : weekEvent.event);\r\nconst MINUTES_IN_HOUR = 60;\r\nfunction getPixelAmountInMinutes(hourSegments, hourSegmentHeight, hourDuration) {\r\n    return (hourDuration || MINUTES_IN_HOUR) / (hourSegments * hourSegmentHeight);\r\n}\r\nfunction getMinutesMoved(movedY, hourSegments, hourSegmentHeight, eventSnapSize, hourDuration) {\r\n    const draggedInPixelsSnapSize = roundToNearest(movedY, eventSnapSize || hourSegmentHeight);\r\n    const pixelAmountInMinutes = getPixelAmountInMinutes(hourSegments, hourSegmentHeight, hourDuration);\r\n    return draggedInPixelsSnapSize * pixelAmountInMinutes;\r\n}\r\nfunction getDefaultEventEnd(dateAdapter, event, minimumMinutes) {\r\n    if (event.end) {\r\n        return event.end;\r\n    }\r\n    else {\r\n        return dateAdapter.addMinutes(event.start, minimumMinutes);\r\n    }\r\n}\r\nfunction addDaysWithExclusions(dateAdapter, date, days, excluded) {\r\n    let daysCounter = 0;\r\n    let daysToAdd = 0;\r\n    const changeDays = days < 0 ? dateAdapter.subDays : dateAdapter.addDays;\r\n    let result = date;\r\n    while (daysToAdd <= Math.abs(days)) {\r\n        result = changeDays(date, daysCounter);\r\n        const day = dateAdapter.getDay(result);\r\n        if (excluded.indexOf(day) === -1) {\r\n            daysToAdd++;\r\n        }\r\n        daysCounter++;\r\n    }\r\n    return result;\r\n}\r\nfunction isDraggedWithinPeriod(newStart, newEnd, period) {\r\n    const end = newEnd || newStart;\r\n    return ((period.start <= newStart && newStart <= period.end) ||\r\n        (period.start <= end && end <= period.end));\r\n}\r\nfunction shouldFireDroppedEvent(dropEvent, date, allDay, calendarId) {\r\n    return (dropEvent.dropData &&\r\n        dropEvent.dropData.event &&\r\n        (dropEvent.dropData.calendarId !== calendarId ||\r\n            (dropEvent.dropData.event.allDay && !allDay) ||\r\n            (!dropEvent.dropData.event.allDay && allDay)));\r\n}\r\nfunction getWeekViewPeriod(dateAdapter, viewDate, weekStartsOn, excluded = [], daysInWeek) {\r\n    let viewStart = daysInWeek\r\n        ? dateAdapter.startOfDay(viewDate)\r\n        : dateAdapter.startOfWeek(viewDate, { weekStartsOn });\r\n    const endOfWeek = dateAdapter.endOfWeek(viewDate, { weekStartsOn });\r\n    while (excluded.indexOf(dateAdapter.getDay(viewStart)) > -1 &&\r\n        viewStart < endOfWeek) {\r\n        viewStart = dateAdapter.addDays(viewStart, 1);\r\n    }\r\n    if (daysInWeek) {\r\n        const viewEnd = dateAdapter.endOfDay(addDaysWithExclusions(dateAdapter, viewStart, daysInWeek - 1, excluded));\r\n        return { viewStart, viewEnd };\r\n    }\r\n    else {\r\n        let viewEnd = endOfWeek;\r\n        while (excluded.indexOf(dateAdapter.getDay(viewEnd)) > -1 &&\r\n            viewEnd > viewStart) {\r\n            viewEnd = dateAdapter.subDays(viewEnd, 1);\r\n        }\r\n        return { viewStart, viewEnd };\r\n    }\r\n}\r\nfunction isWithinThreshold({ x, y }) {\r\n    const DRAG_THRESHOLD = 1;\r\n    return Math.abs(x) > DRAG_THRESHOLD || Math.abs(y) > DRAG_THRESHOLD;\r\n}\n\n/**\r\n * Change the view date to the previous view. For example:\r\n *\r\n * ```typescript\r\n * <button\r\n *  mwlCalendarPreviousView\r\n *  [(viewDate)]=\"viewDate\"\r\n *  [view]=\"view\">\r\n *  Previous\r\n * </button>\r\n * ```\r\n */\r\nclass CalendarPreviousViewDirective {\r\n    constructor(dateAdapter) {\r\n        this.dateAdapter = dateAdapter;\r\n        /**\r\n         * Days to skip when going back by 1 day\r\n         */\r\n        this.excludeDays = [];\r\n        /**\r\n         * Called when the view date is changed\r\n         */\r\n        this.viewDateChange = new EventEmitter();\r\n    }\r\n    /**\r\n     * @hidden\r\n     */\r\n    onClick() {\r\n        const subFn = {\r\n            day: this.dateAdapter.subDays,\r\n            week: this.dateAdapter.subWeeks,\r\n            month: this.dateAdapter.subMonths,\r\n        }[this.view];\r\n        if (this.view === CalendarView.Day) {\r\n            this.viewDateChange.emit(addDaysWithExclusions(this.dateAdapter, this.viewDate, -1, this.excludeDays));\r\n        }\r\n        else if (this.view === CalendarView.Week && this.daysInWeek) {\r\n            this.viewDateChange.emit(addDaysWithExclusions(this.dateAdapter, this.viewDate, -this.daysInWeek, this.excludeDays));\r\n        }\r\n        else {\r\n            this.viewDateChange.emit(subFn(this.viewDate, 1));\r\n        }\r\n    }\r\n}\r\nCalendarPreviousViewDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarPreviousViewDirective, deps: [{ token: DateAdapter }], target: i0.ɵɵFactoryTarget.Directive });\r\nCalendarPreviousViewDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.0.4\", type: CalendarPreviousViewDirective, selector: \"[mwlCalendarPreviousView]\", inputs: { view: \"view\", viewDate: \"viewDate\", excludeDays: \"excludeDays\", daysInWeek: \"daysInWeek\" }, outputs: { viewDateChange: \"viewDateChange\" }, host: { listeners: { \"click\": \"onClick()\" } }, ngImport: i0 });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarPreviousViewDirective, decorators: [{\r\n            type: Directive,\r\n            args: [{\r\n                    selector: '[mwlCalendarPreviousView]',\r\n                }]\r\n        }], ctorParameters: function () { return [{ type: DateAdapter }]; }, propDecorators: { view: [{\r\n                type: Input\r\n            }], viewDate: [{\r\n                type: Input\r\n            }], excludeDays: [{\r\n                type: Input\r\n            }], daysInWeek: [{\r\n                type: Input\r\n            }], viewDateChange: [{\r\n                type: Output\r\n            }], onClick: [{\r\n                type: HostListener,\r\n                args: ['click']\r\n            }] } });\n\n/**\r\n * Change the view date to the next view. For example:\r\n *\r\n * ```typescript\r\n * <button\r\n *  mwlCalendarNextView\r\n *  [(viewDate)]=\"viewDate\"\r\n *  [view]=\"view\">\r\n *  Next\r\n * </button>\r\n * ```\r\n */\r\nclass CalendarNextViewDirective {\r\n    constructor(dateAdapter) {\r\n        this.dateAdapter = dateAdapter;\r\n        /**\r\n         * Days to skip when going forward by 1 day\r\n         */\r\n        this.excludeDays = [];\r\n        /**\r\n         * Called when the view date is changed\r\n         */\r\n        this.viewDateChange = new EventEmitter();\r\n    }\r\n    /**\r\n     * @hidden\r\n     */\r\n    onClick() {\r\n        const addFn = {\r\n            day: this.dateAdapter.addDays,\r\n            week: this.dateAdapter.addWeeks,\r\n            month: this.dateAdapter.addMonths,\r\n        }[this.view];\r\n        if (this.view === CalendarView.Day) {\r\n            this.viewDateChange.emit(addDaysWithExclusions(this.dateAdapter, this.viewDate, 1, this.excludeDays));\r\n        }\r\n        else if (this.view === CalendarView.Week && this.daysInWeek) {\r\n            this.viewDateChange.emit(addDaysWithExclusions(this.dateAdapter, this.viewDate, this.daysInWeek, this.excludeDays));\r\n        }\r\n        else {\r\n            this.viewDateChange.emit(addFn(this.viewDate, 1));\r\n        }\r\n    }\r\n}\r\nCalendarNextViewDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarNextViewDirective, deps: [{ token: DateAdapter }], target: i0.ɵɵFactoryTarget.Directive });\r\nCalendarNextViewDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.0.4\", type: CalendarNextViewDirective, selector: \"[mwlCalendarNextView]\", inputs: { view: \"view\", viewDate: \"viewDate\", excludeDays: \"excludeDays\", daysInWeek: \"daysInWeek\" }, outputs: { viewDateChange: \"viewDateChange\" }, host: { listeners: { \"click\": \"onClick()\" } }, ngImport: i0 });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarNextViewDirective, decorators: [{\r\n            type: Directive,\r\n            args: [{\r\n                    selector: '[mwlCalendarNextView]',\r\n                }]\r\n        }], ctorParameters: function () { return [{ type: DateAdapter }]; }, propDecorators: { view: [{\r\n                type: Input\r\n            }], viewDate: [{\r\n                type: Input\r\n            }], excludeDays: [{\r\n                type: Input\r\n            }], daysInWeek: [{\r\n                type: Input\r\n            }], viewDateChange: [{\r\n                type: Output\r\n            }], onClick: [{\r\n                type: HostListener,\r\n                args: ['click']\r\n            }] } });\n\n/**\r\n * Change the view date to the current day. For example:\r\n *\r\n * ```typescript\r\n * <button\r\n *  mwlCalendarToday\r\n *  [(viewDate)]=\"viewDate\">\r\n *  Today\r\n * </button>\r\n * ```\r\n */\r\nclass CalendarTodayDirective {\r\n    constructor(dateAdapter) {\r\n        this.dateAdapter = dateAdapter;\r\n        /**\r\n         * Called when the view date is changed\r\n         */\r\n        this.viewDateChange = new EventEmitter();\r\n    }\r\n    /**\r\n     * @hidden\r\n     */\r\n    onClick() {\r\n        this.viewDateChange.emit(this.dateAdapter.startOfDay(new Date()));\r\n    }\r\n}\r\nCalendarTodayDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarTodayDirective, deps: [{ token: DateAdapter }], target: i0.ɵɵFactoryTarget.Directive });\r\nCalendarTodayDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.0.4\", type: CalendarTodayDirective, selector: \"[mwlCalendarToday]\", inputs: { viewDate: \"viewDate\" }, outputs: { viewDateChange: \"viewDateChange\" }, host: { listeners: { \"click\": \"onClick()\" } }, ngImport: i0 });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarTodayDirective, decorators: [{\r\n            type: Directive,\r\n            args: [{\r\n                    selector: '[mwlCalendarToday]',\r\n                }]\r\n        }], ctorParameters: function () { return [{ type: DateAdapter }]; }, propDecorators: { viewDate: [{\r\n                type: Input\r\n            }], viewDateChange: [{\r\n                type: Output\r\n            }], onClick: [{\r\n                type: HostListener,\r\n                args: ['click']\r\n            }] } });\n\n/**\r\n * This will use the angular date pipe to do all date formatting. It is the default date formatter used by the calendar.\r\n */\r\nclass CalendarAngularDateFormatter {\r\n    constructor(dateAdapter) {\r\n        this.dateAdapter = dateAdapter;\r\n    }\r\n    /**\r\n     * The month view header week day labels\r\n     */\r\n    monthViewColumnHeader({ date, locale }) {\r\n        return formatDate(date, 'EEEE', locale);\r\n    }\r\n    /**\r\n     * The month view cell day number\r\n     */\r\n    monthViewDayNumber({ date, locale }) {\r\n        return formatDate(date, 'd', locale);\r\n    }\r\n    /**\r\n     * The month view title\r\n     */\r\n    monthViewTitle({ date, locale }) {\r\n        return formatDate(date, 'LLLL y', locale);\r\n    }\r\n    /**\r\n     * The week view header week day labels\r\n     */\r\n    weekViewColumnHeader({ date, locale }) {\r\n        return formatDate(date, 'EEEE', locale);\r\n    }\r\n    /**\r\n     * The week view sub header day and month labels\r\n     */\r\n    weekViewColumnSubHeader({ date, locale, }) {\r\n        return formatDate(date, 'MMM d', locale);\r\n    }\r\n    /**\r\n     * The week view title\r\n     */\r\n    weekViewTitle({ date, locale, weekStartsOn, excludeDays, daysInWeek, }) {\r\n        const { viewStart, viewEnd } = getWeekViewPeriod(this.dateAdapter, date, weekStartsOn, excludeDays, daysInWeek);\r\n        const format = (dateToFormat, showYear) => formatDate(dateToFormat, 'MMM d' + (showYear ? ', yyyy' : ''), locale);\r\n        return `${format(viewStart, viewStart.getUTCFullYear() !== viewEnd.getUTCFullYear())} - ${format(viewEnd, true)}`;\r\n    }\r\n    /**\r\n     * The time formatting down the left hand side of the week view\r\n     */\r\n    weekViewHour({ date, locale }) {\r\n        return formatDate(date, 'h a', locale);\r\n    }\r\n    /**\r\n     * The time formatting down the left hand side of the day view\r\n     */\r\n    dayViewHour({ date, locale }) {\r\n        return formatDate(date, 'h a', locale);\r\n    }\r\n    /**\r\n     * The day view title\r\n     */\r\n    dayViewTitle({ date, locale }) {\r\n        return formatDate(date, 'EEEE, MMMM d, y', locale);\r\n    }\r\n}\r\nCalendarAngularDateFormatter.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarAngularDateFormatter, deps: [{ token: DateAdapter }], target: i0.ɵɵFactoryTarget.Injectable });\r\nCalendarAngularDateFormatter.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarAngularDateFormatter });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarAngularDateFormatter, decorators: [{\r\n            type: Injectable\r\n        }], ctorParameters: function () { return [{ type: DateAdapter }]; } });\n\n/**\r\n * This class is responsible for all formatting of dates. There are 3 implementations available, the `CalendarAngularDateFormatter` (default) which uses the angular date pipe to format dates, the `CalendarNativeDateFormatter` which will use the <a href=\"https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Intl\" target=\"_blank\">Intl</a> API to format dates, or there is the `CalendarMomentDateFormatter` which uses <a href=\"http://momentjs.com/\" target=\"_blank\">moment</a>.\r\n *\r\n * If you wish, you may override any of the defaults via angulars DI. For example:\r\n *\r\n * ```typescript\r\n * import { CalendarDateFormatter, DateFormatterParams } from 'angular-calendar';\r\n * import { formatDate } from '@angular/common';\r\n * import { Injectable } from '@angular/core';\r\n *\r\n * @Injectable()\r\n * class CustomDateFormatter extends CalendarDateFormatter {\r\n *\r\n *   public monthViewColumnHeader({date, locale}: DateFormatterParams): string {\r\n *     return formatDate(date, 'EEE', locale); // use short week days\r\n *   }\r\n *\r\n * }\r\n *\r\n * // in your component that uses the calendar\r\n * providers: [{\r\n *   provide: CalendarDateFormatter,\r\n *   useClass: CustomDateFormatter\r\n * }]\r\n * ```\r\n */\r\nclass CalendarDateFormatter extends CalendarAngularDateFormatter {\r\n}\r\nCalendarDateFormatter.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarDateFormatter, deps: null, target: i0.ɵɵFactoryTarget.Injectable });\r\nCalendarDateFormatter.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarDateFormatter });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarDateFormatter, decorators: [{\r\n            type: Injectable\r\n        }] });\n\n/**\r\n * This pipe is primarily for rendering the current view title. Example usage:\r\n * ```typescript\r\n * // where `viewDate` is a `Date` and view is `'month' | 'week' | 'day'`\r\n * {{ viewDate | calendarDate:(view + 'ViewTitle'):'en' }}\r\n * ```\r\n */\r\nclass CalendarDatePipe {\r\n    constructor(dateFormatter, locale) {\r\n        this.dateFormatter = dateFormatter;\r\n        this.locale = locale;\r\n    }\r\n    transform(date, method, locale = this.locale, weekStartsOn = 0, excludeDays = [], daysInWeek) {\r\n        if (typeof this.dateFormatter[method] === 'undefined') {\r\n            const allowedMethods = Object.getOwnPropertyNames(Object.getPrototypeOf(CalendarDateFormatter.prototype)).filter((iMethod) => iMethod !== 'constructor');\r\n            throw new Error(`${method} is not a valid date formatter. Can only be one of ${allowedMethods.join(', ')}`);\r\n        }\r\n        return this.dateFormatter[method]({\r\n            date,\r\n            locale,\r\n            weekStartsOn,\r\n            excludeDays,\r\n            daysInWeek,\r\n        });\r\n    }\r\n}\r\nCalendarDatePipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarDatePipe, deps: [{ token: CalendarDateFormatter }, { token: LOCALE_ID }], target: i0.ɵɵFactoryTarget.Pipe });\r\nCalendarDatePipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"14.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarDatePipe, name: \"calendarDate\" });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarDatePipe, decorators: [{\r\n            type: Pipe,\r\n            args: [{\r\n                    name: 'calendarDate',\r\n                }]\r\n        }], ctorParameters: function () {\r\n        return [{ type: CalendarDateFormatter }, { type: undefined, decorators: [{\r\n                        type: Inject,\r\n                        args: [LOCALE_ID]\r\n                    }] }];\r\n    } });\n\nclass CalendarUtils {\r\n    constructor(dateAdapter) {\r\n        this.dateAdapter = dateAdapter;\r\n    }\r\n    getMonthView(args) {\r\n        return getMonthView(this.dateAdapter, args);\r\n    }\r\n    getWeekViewHeader(args) {\r\n        return getWeekViewHeader(this.dateAdapter, args);\r\n    }\r\n    getWeekView(args) {\r\n        return getWeekView(this.dateAdapter, args);\r\n    }\r\n}\r\nCalendarUtils.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarUtils, deps: [{ token: DateAdapter }], target: i0.ɵɵFactoryTarget.Injectable });\r\nCalendarUtils.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarUtils });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarUtils, decorators: [{\r\n            type: Injectable\r\n        }], ctorParameters: function () { return [{ type: DateAdapter }]; } });\n\nconst MOMENT = new InjectionToken('Moment');\r\n/**\r\n * This will use <a href=\"http://momentjs.com/\" target=\"_blank\">moment</a> to do all date formatting. To use this class:\r\n *\r\n * ```typescript\r\n * import { CalendarDateFormatter, CalendarMomentDateFormatter, MOMENT } from 'angular-calendar';\r\n * import moment from 'moment';\r\n *\r\n * // in your component\r\n * provide: [{\r\n *   provide: MOMENT, useValue: moment\r\n * }, {\r\n *   provide: CalendarDateFormatter, useClass: CalendarMomentDateFormatter\r\n * }]\r\n *\r\n * ```\r\n */\r\nclass CalendarMomentDateFormatter {\r\n    /**\r\n     * @hidden\r\n     */\r\n    constructor(moment, dateAdapter) {\r\n        this.moment = moment;\r\n        this.dateAdapter = dateAdapter;\r\n    }\r\n    /**\r\n     * The month view header week day labels\r\n     */\r\n    monthViewColumnHeader({ date, locale }) {\r\n        return this.moment(date).locale(locale).format('dddd');\r\n    }\r\n    /**\r\n     * The month view cell day number\r\n     */\r\n    monthViewDayNumber({ date, locale }) {\r\n        return this.moment(date).locale(locale).format('D');\r\n    }\r\n    /**\r\n     * The month view title\r\n     */\r\n    monthViewTitle({ date, locale }) {\r\n        return this.moment(date).locale(locale).format('MMMM YYYY');\r\n    }\r\n    /**\r\n     * The week view header week day labels\r\n     */\r\n    weekViewColumnHeader({ date, locale }) {\r\n        return this.moment(date).locale(locale).format('dddd');\r\n    }\r\n    /**\r\n     * The week view sub header day and month labels\r\n     */\r\n    weekViewColumnSubHeader({ date, locale, }) {\r\n        return this.moment(date).locale(locale).format('MMM D');\r\n    }\r\n    /**\r\n     * The week view title\r\n     */\r\n    weekViewTitle({ date, locale, weekStartsOn, excludeDays, daysInWeek, }) {\r\n        const { viewStart, viewEnd } = getWeekViewPeriod(this.dateAdapter, date, weekStartsOn, excludeDays, daysInWeek);\r\n        const format = (dateToFormat, showYear) => this.moment(dateToFormat)\r\n            .locale(locale)\r\n            .format('MMM D' + (showYear ? ', YYYY' : ''));\r\n        return `${format(viewStart, viewStart.getUTCFullYear() !== viewEnd.getUTCFullYear())} - ${format(viewEnd, true)}`;\r\n    }\r\n    /**\r\n     * The time formatting down the left hand side of the week view\r\n     */\r\n    weekViewHour({ date, locale }) {\r\n        return this.moment(date).locale(locale).format('ha');\r\n    }\r\n    /**\r\n     * The time formatting down the left hand side of the day view\r\n     */\r\n    dayViewHour({ date, locale }) {\r\n        return this.moment(date).locale(locale).format('ha');\r\n    }\r\n    /**\r\n     * The day view title\r\n     */\r\n    dayViewTitle({ date, locale }) {\r\n        return this.moment(date).locale(locale).format('dddd, LL'); // dddd = Thursday\r\n    } // LL = locale-dependent Month Day, Year\r\n}\r\nCalendarMomentDateFormatter.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarMomentDateFormatter, deps: [{ token: MOMENT }, { token: DateAdapter }], target: i0.ɵɵFactoryTarget.Injectable });\r\nCalendarMomentDateFormatter.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarMomentDateFormatter });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarMomentDateFormatter, decorators: [{\r\n            type: Injectable\r\n        }], ctorParameters: function () {\r\n        return [{ type: undefined, decorators: [{\r\n                        type: Inject,\r\n                        args: [MOMENT]\r\n                    }] }, { type: DateAdapter }];\r\n    } });\n\n/**\r\n * This will use <a href=\"https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Intl\" target=\"_blank\">Intl</a> API to do all date formatting.\r\n *\r\n * You will need to include a <a href=\"https://github.com/andyearnshaw/Intl.js/\">polyfill</a> for older browsers.\r\n */\r\nclass CalendarNativeDateFormatter {\r\n    constructor(dateAdapter) {\r\n        this.dateAdapter = dateAdapter;\r\n    }\r\n    /**\r\n     * The month view header week day labels\r\n     */\r\n    monthViewColumnHeader({ date, locale }) {\r\n        return new Intl.DateTimeFormat(locale, { weekday: 'long' }).format(date);\r\n    }\r\n    /**\r\n     * The month view cell day number\r\n     */\r\n    monthViewDayNumber({ date, locale }) {\r\n        return new Intl.DateTimeFormat(locale, { day: 'numeric' }).format(date);\r\n    }\r\n    /**\r\n     * The month view title\r\n     */\r\n    monthViewTitle({ date, locale }) {\r\n        return new Intl.DateTimeFormat(locale, {\r\n            year: 'numeric',\r\n            month: 'long',\r\n        }).format(date);\r\n    }\r\n    /**\r\n     * The week view header week day labels\r\n     */\r\n    weekViewColumnHeader({ date, locale }) {\r\n        return new Intl.DateTimeFormat(locale, { weekday: 'long' }).format(date);\r\n    }\r\n    /**\r\n     * The week view sub header day and month labels\r\n     */\r\n    weekViewColumnSubHeader({ date, locale, }) {\r\n        return new Intl.DateTimeFormat(locale, {\r\n            day: 'numeric',\r\n            month: 'short',\r\n        }).format(date);\r\n    }\r\n    /**\r\n     * The week view title\r\n     */\r\n    weekViewTitle({ date, locale, weekStartsOn, excludeDays, daysInWeek, }) {\r\n        const { viewStart, viewEnd } = getWeekViewPeriod(this.dateAdapter, date, weekStartsOn, excludeDays, daysInWeek);\r\n        const format = (dateToFormat, showYear) => new Intl.DateTimeFormat(locale, {\r\n            day: 'numeric',\r\n            month: 'short',\r\n            year: showYear ? 'numeric' : undefined,\r\n        }).format(dateToFormat);\r\n        return `${format(viewStart, viewStart.getUTCFullYear() !== viewEnd.getUTCFullYear())} - ${format(viewEnd, true)}`;\r\n    }\r\n    /**\r\n     * The time formatting down the left hand side of the week view\r\n     */\r\n    weekViewHour({ date, locale }) {\r\n        return new Intl.DateTimeFormat(locale, { hour: 'numeric' }).format(date);\r\n    }\r\n    /**\r\n     * The time formatting down the left hand side of the day view\r\n     */\r\n    dayViewHour({ date, locale }) {\r\n        return new Intl.DateTimeFormat(locale, { hour: 'numeric' }).format(date);\r\n    }\r\n    /**\r\n     * The day view title\r\n     */\r\n    dayViewTitle({ date, locale }) {\r\n        return new Intl.DateTimeFormat(locale, {\r\n            day: 'numeric',\r\n            month: 'long',\r\n            year: 'numeric',\r\n            weekday: 'long',\r\n        }).format(date);\r\n    }\r\n}\r\nCalendarNativeDateFormatter.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarNativeDateFormatter, deps: [{ token: DateAdapter }], target: i0.ɵɵFactoryTarget.Injectable });\r\nCalendarNativeDateFormatter.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarNativeDateFormatter });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarNativeDateFormatter, decorators: [{\r\n            type: Injectable\r\n        }], ctorParameters: function () { return [{ type: DateAdapter }]; } });\n\nvar CalendarEventTimesChangedEventType;\r\n(function (CalendarEventTimesChangedEventType) {\r\n    CalendarEventTimesChangedEventType[\"Drag\"] = \"drag\";\r\n    CalendarEventTimesChangedEventType[\"Drop\"] = \"drop\";\r\n    CalendarEventTimesChangedEventType[\"Resize\"] = \"resize\";\r\n})(CalendarEventTimesChangedEventType || (CalendarEventTimesChangedEventType = {}));\n\n/**\r\n * Import this module to if you're just using a singular view and want to save on bundle size. Example usage:\r\n *\r\n * ```typescript\r\n * import { CalendarCommonModule, CalendarMonthModule } from 'angular-calendar';\r\n *\r\n * @NgModule({\r\n *   imports: [\r\n *     CalendarCommonModule.forRoot(),\r\n *     CalendarMonthModule\r\n *   ]\r\n * })\r\n * class MyModule {}\r\n * ```\r\n *\r\n */\r\nclass CalendarCommonModule {\r\n    static forRoot(dateAdapter, config = {}) {\r\n        return {\r\n            ngModule: CalendarCommonModule,\r\n            providers: [\r\n                dateAdapter,\r\n                config.eventTitleFormatter || CalendarEventTitleFormatter,\r\n                config.dateFormatter || CalendarDateFormatter,\r\n                config.utils || CalendarUtils,\r\n                config.a11y || CalendarA11y,\r\n            ],\r\n        };\r\n    }\r\n}\r\nCalendarCommonModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarCommonModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\r\nCalendarCommonModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarCommonModule, declarations: [CalendarEventActionsComponent,\r\n        CalendarEventTitleComponent,\r\n        CalendarTooltipWindowComponent,\r\n        CalendarTooltipDirective,\r\n        CalendarPreviousViewDirective,\r\n        CalendarNextViewDirective,\r\n        CalendarTodayDirective,\r\n        CalendarDatePipe,\r\n        CalendarEventTitlePipe,\r\n        CalendarA11yPipe,\r\n        ClickDirective,\r\n        KeydownEnterDirective], imports: [CommonModule], exports: [CalendarEventActionsComponent,\r\n        CalendarEventTitleComponent,\r\n        CalendarTooltipWindowComponent,\r\n        CalendarTooltipDirective,\r\n        CalendarPreviousViewDirective,\r\n        CalendarNextViewDirective,\r\n        CalendarTodayDirective,\r\n        CalendarDatePipe,\r\n        CalendarEventTitlePipe,\r\n        CalendarA11yPipe,\r\n        ClickDirective,\r\n        KeydownEnterDirective] });\r\nCalendarCommonModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarCommonModule, providers: [I18nPluralPipe], imports: [CommonModule] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarCommonModule, decorators: [{\r\n            type: NgModule,\r\n            args: [{\r\n                    declarations: [\r\n                        CalendarEventActionsComponent,\r\n                        CalendarEventTitleComponent,\r\n                        CalendarTooltipWindowComponent,\r\n                        CalendarTooltipDirective,\r\n                        CalendarPreviousViewDirective,\r\n                        CalendarNextViewDirective,\r\n                        CalendarTodayDirective,\r\n                        CalendarDatePipe,\r\n                        CalendarEventTitlePipe,\r\n                        CalendarA11yPipe,\r\n                        ClickDirective,\r\n                        KeydownEnterDirective,\r\n                    ],\r\n                    imports: [CommonModule],\r\n                    exports: [\r\n                        CalendarEventActionsComponent,\r\n                        CalendarEventTitleComponent,\r\n                        CalendarTooltipWindowComponent,\r\n                        CalendarTooltipDirective,\r\n                        CalendarPreviousViewDirective,\r\n                        CalendarNextViewDirective,\r\n                        CalendarTodayDirective,\r\n                        CalendarDatePipe,\r\n                        CalendarEventTitlePipe,\r\n                        CalendarA11yPipe,\r\n                        ClickDirective,\r\n                        KeydownEnterDirective,\r\n                    ],\r\n                    providers: [I18nPluralPipe],\r\n                }]\r\n        }] });\n\nclass CalendarDragHelper {\r\n    constructor(dragContainerElement, draggableElement) {\r\n        this.dragContainerElement = dragContainerElement;\r\n        this.startPosition = draggableElement.getBoundingClientRect();\r\n    }\r\n    validateDrag({ x, y, snapDraggedEvents, dragAlreadyMoved, transform, }) {\r\n        const isDraggedWithinThreshold = isWithinThreshold({ x, y }) || dragAlreadyMoved;\r\n        if (snapDraggedEvents) {\r\n            const inner = Object.assign({}, this.startPosition, {\r\n                left: this.startPosition.left + transform.x,\r\n                right: this.startPosition.right + transform.x,\r\n                top: this.startPosition.top + transform.y,\r\n                bottom: this.startPosition.bottom + transform.y,\r\n            });\r\n            if (isDraggedWithinThreshold) {\r\n                const outer = this.dragContainerElement.getBoundingClientRect();\r\n                const isTopInside = outer.top < inner.top && inner.top < outer.bottom;\r\n                const isBottomInside = outer.top < inner.bottom && inner.bottom < outer.bottom;\r\n                return (isInsideLeftAndRight(outer, inner) && (isTopInside || isBottomInside));\r\n            }\r\n            /* istanbul ignore next */\r\n            return false;\r\n        }\r\n        else {\r\n            return isDraggedWithinThreshold;\r\n        }\r\n    }\r\n}\n\nclass CalendarResizeHelper {\r\n    constructor(resizeContainerElement, minWidth, rtl) {\r\n        this.resizeContainerElement = resizeContainerElement;\r\n        this.minWidth = minWidth;\r\n        this.rtl = rtl;\r\n    }\r\n    validateResize({ rectangle, edges }) {\r\n        if (this.rtl) {\r\n            // TODO - find a way of testing this, for some reason the tests always fail but it does actually work\r\n            /* istanbul ignore next */\r\n            if (typeof edges.left !== 'undefined') {\r\n                rectangle.left -= edges.left;\r\n                rectangle.right += edges.left;\r\n            }\r\n            else if (typeof edges.right !== 'undefined') {\r\n                rectangle.left += edges.right;\r\n                rectangle.right -= edges.right;\r\n            }\r\n            rectangle.width = rectangle.right - rectangle.left;\r\n        }\r\n        if (this.minWidth &&\r\n            Math.ceil(rectangle.width) < Math.ceil(this.minWidth)) {\r\n            return false;\r\n        }\r\n        return isInside(this.resizeContainerElement.getBoundingClientRect(), rectangle);\r\n    }\r\n}\n\nclass CalendarWeekViewHeaderComponent {\r\n    constructor() {\r\n        this.dayHeaderClicked = new EventEmitter();\r\n        this.eventDropped = new EventEmitter();\r\n        this.dragEnter = new EventEmitter();\r\n        this.trackByWeekDayHeaderDate = trackByWeekDayHeaderDate;\r\n    }\r\n}\r\nCalendarWeekViewHeaderComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarWeekViewHeaderComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\r\nCalendarWeekViewHeaderComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.0.4\", type: CalendarWeekViewHeaderComponent, selector: \"mwl-calendar-week-view-header\", inputs: { days: \"days\", locale: \"locale\", customTemplate: \"customTemplate\" }, outputs: { dayHeaderClicked: \"dayHeaderClicked\", eventDropped: \"eventDropped\", dragEnter: \"dragEnter\" }, ngImport: i0, template: `\r\n    <ng-template\r\n      #defaultTemplate\r\n      let-days=\"days\"\r\n      let-locale=\"locale\"\r\n      let-dayHeaderClicked=\"dayHeaderClicked\"\r\n      let-eventDropped=\"eventDropped\"\r\n      let-trackByWeekDayHeaderDate=\"trackByWeekDayHeaderDate\"\r\n      let-dragEnter=\"dragEnter\"\r\n    >\r\n      <div class=\"cal-day-headers\" role=\"row\">\r\n        <div\r\n          class=\"cal-header\"\r\n          *ngFor=\"let day of days; trackBy: trackByWeekDayHeaderDate\"\r\n          [class.cal-past]=\"day.isPast\"\r\n          [class.cal-today]=\"day.isToday\"\r\n          [class.cal-future]=\"day.isFuture\"\r\n          [class.cal-weekend]=\"day.isWeekend\"\r\n          [ngClass]=\"day.cssClass\"\r\n          (mwlClick)=\"dayHeaderClicked.emit({ day: day, sourceEvent: $event })\"\r\n          mwlDroppable\r\n          dragOverClass=\"cal-drag-over\"\r\n          (drop)=\"\r\n            eventDropped.emit({\r\n              event: $event.dropData.event,\r\n              newStart: day.date\r\n            })\r\n          \"\r\n          (dragEnter)=\"dragEnter.emit({ date: day.date })\"\r\n          tabindex=\"0\"\r\n          role=\"columnheader\"\r\n        >\r\n          <b>{{ day.date | calendarDate : 'weekViewColumnHeader' : locale }}</b\r\n          ><br />\r\n          <span>{{\r\n            day.date | calendarDate : 'weekViewColumnSubHeader' : locale\r\n          }}</span>\r\n        </div>\r\n      </div>\r\n    </ng-template>\r\n    <ng-template\r\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\r\n      [ngTemplateOutletContext]=\"{\r\n        days: days,\r\n        locale: locale,\r\n        dayHeaderClicked: dayHeaderClicked,\r\n        eventDropped: eventDropped,\r\n        dragEnter: dragEnter,\r\n        trackByWeekDayHeaderDate: trackByWeekDayHeaderDate\r\n      }\"\r\n    >\r\n    </ng-template>\r\n  `, isInline: true, dependencies: [{ kind: \"directive\", type: i1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i1.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"directive\", type: i2.DroppableDirective, selector: \"[mwlDroppable]\", inputs: [\"dragOverClass\", \"dragActiveClass\", \"validateDrop\"], outputs: [\"dragEnter\", \"dragLeave\", \"dragOver\", \"drop\"] }, { kind: \"directive\", type: ClickDirective, selector: \"[mwlClick]\", inputs: [\"clickListenerDisabled\"], outputs: [\"mwlClick\"] }, { kind: \"pipe\", type: CalendarDatePipe, name: \"calendarDate\" }] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarWeekViewHeaderComponent, decorators: [{\r\n            type: Component,\r\n            args: [{\r\n                    selector: 'mwl-calendar-week-view-header',\r\n                    template: `\r\n    <ng-template\r\n      #defaultTemplate\r\n      let-days=\"days\"\r\n      let-locale=\"locale\"\r\n      let-dayHeaderClicked=\"dayHeaderClicked\"\r\n      let-eventDropped=\"eventDropped\"\r\n      let-trackByWeekDayHeaderDate=\"trackByWeekDayHeaderDate\"\r\n      let-dragEnter=\"dragEnter\"\r\n    >\r\n      <div class=\"cal-day-headers\" role=\"row\">\r\n        <div\r\n          class=\"cal-header\"\r\n          *ngFor=\"let day of days; trackBy: trackByWeekDayHeaderDate\"\r\n          [class.cal-past]=\"day.isPast\"\r\n          [class.cal-today]=\"day.isToday\"\r\n          [class.cal-future]=\"day.isFuture\"\r\n          [class.cal-weekend]=\"day.isWeekend\"\r\n          [ngClass]=\"day.cssClass\"\r\n          (mwlClick)=\"dayHeaderClicked.emit({ day: day, sourceEvent: $event })\"\r\n          mwlDroppable\r\n          dragOverClass=\"cal-drag-over\"\r\n          (drop)=\"\r\n            eventDropped.emit({\r\n              event: $event.dropData.event,\r\n              newStart: day.date\r\n            })\r\n          \"\r\n          (dragEnter)=\"dragEnter.emit({ date: day.date })\"\r\n          tabindex=\"0\"\r\n          role=\"columnheader\"\r\n        >\r\n          <b>{{ day.date | calendarDate : 'weekViewColumnHeader' : locale }}</b\r\n          ><br />\r\n          <span>{{\r\n            day.date | calendarDate : 'weekViewColumnSubHeader' : locale\r\n          }}</span>\r\n        </div>\r\n      </div>\r\n    </ng-template>\r\n    <ng-template\r\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\r\n      [ngTemplateOutletContext]=\"{\r\n        days: days,\r\n        locale: locale,\r\n        dayHeaderClicked: dayHeaderClicked,\r\n        eventDropped: eventDropped,\r\n        dragEnter: dragEnter,\r\n        trackByWeekDayHeaderDate: trackByWeekDayHeaderDate\r\n      }\"\r\n    >\r\n    </ng-template>\r\n  `,\r\n                }]\r\n        }], propDecorators: { days: [{\r\n                type: Input\r\n            }], locale: [{\r\n                type: Input\r\n            }], customTemplate: [{\r\n                type: Input\r\n            }], dayHeaderClicked: [{\r\n                type: Output\r\n            }], eventDropped: [{\r\n                type: Output\r\n            }], dragEnter: [{\r\n                type: Output\r\n            }] } });\n\nclass CalendarWeekViewEventComponent {\r\n    constructor() {\r\n        this.eventClicked = new EventEmitter();\r\n    }\r\n}\r\nCalendarWeekViewEventComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarWeekViewEventComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\r\nCalendarWeekViewEventComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.0.4\", type: CalendarWeekViewEventComponent, selector: \"mwl-calendar-week-view-event\", inputs: { locale: \"locale\", weekEvent: \"weekEvent\", tooltipPlacement: \"tooltipPlacement\", tooltipAppendToBody: \"tooltipAppendToBody\", tooltipDisabled: \"tooltipDisabled\", tooltipDelay: \"tooltipDelay\", customTemplate: \"customTemplate\", eventTitleTemplate: \"eventTitleTemplate\", eventActionsTemplate: \"eventActionsTemplate\", tooltipTemplate: \"tooltipTemplate\", column: \"column\", daysInWeek: \"daysInWeek\" }, outputs: { eventClicked: \"eventClicked\" }, ngImport: i0, template: `\r\n    <ng-template\r\n      #defaultTemplate\r\n      let-weekEvent=\"weekEvent\"\r\n      let-tooltipPlacement=\"tooltipPlacement\"\r\n      let-eventClicked=\"eventClicked\"\r\n      let-tooltipTemplate=\"tooltipTemplate\"\r\n      let-tooltipAppendToBody=\"tooltipAppendToBody\"\r\n      let-tooltipDisabled=\"tooltipDisabled\"\r\n      let-tooltipDelay=\"tooltipDelay\"\r\n      let-column=\"column\"\r\n      let-daysInWeek=\"daysInWeek\"\r\n    >\r\n      <div\r\n        class=\"cal-event\"\r\n        [ngStyle]=\"{\r\n          color: weekEvent.event.color?.secondaryText,\r\n          backgroundColor: weekEvent.event.color?.secondary,\r\n          borderColor: weekEvent.event.color?.primary\r\n        }\"\r\n        [mwlCalendarTooltip]=\"\r\n          !tooltipDisabled\r\n            ? (weekEvent.event.title\r\n              | calendarEventTitle\r\n                : (daysInWeek === 1 ? 'dayTooltip' : 'weekTooltip')\r\n                : weekEvent.tempEvent || weekEvent.event)\r\n            : ''\r\n        \"\r\n        [tooltipPlacement]=\"tooltipPlacement\"\r\n        [tooltipEvent]=\"weekEvent.tempEvent || weekEvent.event\"\r\n        [tooltipTemplate]=\"tooltipTemplate\"\r\n        [tooltipAppendToBody]=\"tooltipAppendToBody\"\r\n        [tooltipDelay]=\"tooltipDelay\"\r\n        (mwlClick)=\"eventClicked.emit({ sourceEvent: $event })\"\r\n        (mwlKeydownEnter)=\"eventClicked.emit({ sourceEvent: $event })\"\r\n        tabindex=\"0\"\r\n        role=\"application\"\r\n        [attr.aria-label]=\"\r\n          { event: weekEvent.tempEvent || weekEvent.event, locale: locale }\r\n            | calendarA11y : 'eventDescription'\r\n        \"\r\n      >\r\n        <mwl-calendar-event-actions\r\n          [event]=\"weekEvent.tempEvent || weekEvent.event\"\r\n          [customTemplate]=\"eventActionsTemplate\"\r\n        >\r\n        </mwl-calendar-event-actions>\r\n        &ngsp;\r\n        <mwl-calendar-event-title\r\n          [event]=\"weekEvent.tempEvent || weekEvent.event\"\r\n          [customTemplate]=\"eventTitleTemplate\"\r\n          [view]=\"daysInWeek === 1 ? 'day' : 'week'\"\r\n        >\r\n        </mwl-calendar-event-title>\r\n      </div>\r\n    </ng-template>\r\n    <ng-template\r\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\r\n      [ngTemplateOutletContext]=\"{\r\n        weekEvent: weekEvent,\r\n        tooltipPlacement: tooltipPlacement,\r\n        eventClicked: eventClicked,\r\n        tooltipTemplate: tooltipTemplate,\r\n        tooltipAppendToBody: tooltipAppendToBody,\r\n        tooltipDisabled: tooltipDisabled,\r\n        tooltipDelay: tooltipDelay,\r\n        column: column,\r\n        daysInWeek: daysInWeek\r\n      }\"\r\n    >\r\n    </ng-template>\r\n  `, isInline: true, dependencies: [{ kind: \"directive\", type: i1.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"directive\", type: i1.NgStyle, selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }, { kind: \"component\", type: CalendarEventActionsComponent, selector: \"mwl-calendar-event-actions\", inputs: [\"event\", \"customTemplate\"] }, { kind: \"component\", type: CalendarEventTitleComponent, selector: \"mwl-calendar-event-title\", inputs: [\"event\", \"customTemplate\", \"view\"] }, { kind: \"directive\", type: CalendarTooltipDirective, selector: \"[mwlCalendarTooltip]\", inputs: [\"mwlCalendarTooltip\", \"tooltipPlacement\", \"tooltipTemplate\", \"tooltipEvent\", \"tooltipAppendToBody\", \"tooltipDelay\"] }, { kind: \"directive\", type: ClickDirective, selector: \"[mwlClick]\", inputs: [\"clickListenerDisabled\"], outputs: [\"mwlClick\"] }, { kind: \"directive\", type: KeydownEnterDirective, selector: \"[mwlKeydownEnter]\", outputs: [\"mwlKeydownEnter\"] }, { kind: \"pipe\", type: CalendarEventTitlePipe, name: \"calendarEventTitle\" }, { kind: \"pipe\", type: CalendarA11yPipe, name: \"calendarA11y\" }] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarWeekViewEventComponent, decorators: [{\r\n            type: Component,\r\n            args: [{\r\n                    selector: 'mwl-calendar-week-view-event',\r\n                    template: `\r\n    <ng-template\r\n      #defaultTemplate\r\n      let-weekEvent=\"weekEvent\"\r\n      let-tooltipPlacement=\"tooltipPlacement\"\r\n      let-eventClicked=\"eventClicked\"\r\n      let-tooltipTemplate=\"tooltipTemplate\"\r\n      let-tooltipAppendToBody=\"tooltipAppendToBody\"\r\n      let-tooltipDisabled=\"tooltipDisabled\"\r\n      let-tooltipDelay=\"tooltipDelay\"\r\n      let-column=\"column\"\r\n      let-daysInWeek=\"daysInWeek\"\r\n    >\r\n      <div\r\n        class=\"cal-event\"\r\n        [ngStyle]=\"{\r\n          color: weekEvent.event.color?.secondaryText,\r\n          backgroundColor: weekEvent.event.color?.secondary,\r\n          borderColor: weekEvent.event.color?.primary\r\n        }\"\r\n        [mwlCalendarTooltip]=\"\r\n          !tooltipDisabled\r\n            ? (weekEvent.event.title\r\n              | calendarEventTitle\r\n                : (daysInWeek === 1 ? 'dayTooltip' : 'weekTooltip')\r\n                : weekEvent.tempEvent || weekEvent.event)\r\n            : ''\r\n        \"\r\n        [tooltipPlacement]=\"tooltipPlacement\"\r\n        [tooltipEvent]=\"weekEvent.tempEvent || weekEvent.event\"\r\n        [tooltipTemplate]=\"tooltipTemplate\"\r\n        [tooltipAppendToBody]=\"tooltipAppendToBody\"\r\n        [tooltipDelay]=\"tooltipDelay\"\r\n        (mwlClick)=\"eventClicked.emit({ sourceEvent: $event })\"\r\n        (mwlKeydownEnter)=\"eventClicked.emit({ sourceEvent: $event })\"\r\n        tabindex=\"0\"\r\n        role=\"application\"\r\n        [attr.aria-label]=\"\r\n          { event: weekEvent.tempEvent || weekEvent.event, locale: locale }\r\n            | calendarA11y : 'eventDescription'\r\n        \"\r\n      >\r\n        <mwl-calendar-event-actions\r\n          [event]=\"weekEvent.tempEvent || weekEvent.event\"\r\n          [customTemplate]=\"eventActionsTemplate\"\r\n        >\r\n        </mwl-calendar-event-actions>\r\n        &ngsp;\r\n        <mwl-calendar-event-title\r\n          [event]=\"weekEvent.tempEvent || weekEvent.event\"\r\n          [customTemplate]=\"eventTitleTemplate\"\r\n          [view]=\"daysInWeek === 1 ? 'day' : 'week'\"\r\n        >\r\n        </mwl-calendar-event-title>\r\n      </div>\r\n    </ng-template>\r\n    <ng-template\r\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\r\n      [ngTemplateOutletContext]=\"{\r\n        weekEvent: weekEvent,\r\n        tooltipPlacement: tooltipPlacement,\r\n        eventClicked: eventClicked,\r\n        tooltipTemplate: tooltipTemplate,\r\n        tooltipAppendToBody: tooltipAppendToBody,\r\n        tooltipDisabled: tooltipDisabled,\r\n        tooltipDelay: tooltipDelay,\r\n        column: column,\r\n        daysInWeek: daysInWeek\r\n      }\"\r\n    >\r\n    </ng-template>\r\n  `,\r\n                }]\r\n        }], propDecorators: { locale: [{\r\n                type: Input\r\n            }], weekEvent: [{\r\n                type: Input\r\n            }], tooltipPlacement: [{\r\n                type: Input\r\n            }], tooltipAppendToBody: [{\r\n                type: Input\r\n            }], tooltipDisabled: [{\r\n                type: Input\r\n            }], tooltipDelay: [{\r\n                type: Input\r\n            }], customTemplate: [{\r\n                type: Input\r\n            }], eventTitleTemplate: [{\r\n                type: Input\r\n            }], eventActionsTemplate: [{\r\n                type: Input\r\n            }], tooltipTemplate: [{\r\n                type: Input\r\n            }], column: [{\r\n                type: Input\r\n            }], daysInWeek: [{\r\n                type: Input\r\n            }], eventClicked: [{\r\n                type: Output\r\n            }] } });\n\nclass CalendarWeekViewHourSegmentComponent {\r\n}\r\nCalendarWeekViewHourSegmentComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarWeekViewHourSegmentComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\r\nCalendarWeekViewHourSegmentComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.0.4\", type: CalendarWeekViewHourSegmentComponent, selector: \"mwl-calendar-week-view-hour-segment\", inputs: { segment: \"segment\", segmentHeight: \"segmentHeight\", locale: \"locale\", isTimeLabel: \"isTimeLabel\", daysInWeek: \"daysInWeek\", customTemplate: \"customTemplate\" }, ngImport: i0, template: `\r\n    <ng-template\r\n      #defaultTemplate\r\n      let-segment=\"segment\"\r\n      let-locale=\"locale\"\r\n      let-segmentHeight=\"segmentHeight\"\r\n      let-isTimeLabel=\"isTimeLabel\"\r\n      let-daysInWeek=\"daysInWeek\"\r\n    >\r\n      <div\r\n        [attr.aria-hidden]=\"\r\n          {}\r\n            | calendarA11y\r\n              : (daysInWeek === 1\r\n                  ? 'hideDayHourSegment'\r\n                  : 'hideWeekHourSegment')\r\n        \"\r\n        class=\"cal-hour-segment\"\r\n        [style.height.px]=\"segmentHeight\"\r\n        [class.cal-hour-start]=\"segment.isStart\"\r\n        [class.cal-after-hour-start]=\"!segment.isStart\"\r\n        [ngClass]=\"segment.cssClass\"\r\n      >\r\n        <div class=\"cal-time\" *ngIf=\"isTimeLabel\">\r\n          {{\r\n            segment.displayDate\r\n              | calendarDate\r\n                : (daysInWeek === 1 ? 'dayViewHour' : 'weekViewHour')\r\n                : locale\r\n          }}\r\n        </div>\r\n      </div>\r\n    </ng-template>\r\n    <ng-template\r\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\r\n      [ngTemplateOutletContext]=\"{\r\n        segment: segment,\r\n        locale: locale,\r\n        segmentHeight: segmentHeight,\r\n        isTimeLabel: isTimeLabel,\r\n        daysInWeek: daysInWeek\r\n      }\"\r\n    >\r\n    </ng-template>\r\n  `, isInline: true, dependencies: [{ kind: \"directive\", type: i1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i1.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"pipe\", type: CalendarDatePipe, name: \"calendarDate\" }, { kind: \"pipe\", type: CalendarA11yPipe, name: \"calendarA11y\" }] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarWeekViewHourSegmentComponent, decorators: [{\r\n            type: Component,\r\n            args: [{\r\n                    selector: 'mwl-calendar-week-view-hour-segment',\r\n                    template: `\r\n    <ng-template\r\n      #defaultTemplate\r\n      let-segment=\"segment\"\r\n      let-locale=\"locale\"\r\n      let-segmentHeight=\"segmentHeight\"\r\n      let-isTimeLabel=\"isTimeLabel\"\r\n      let-daysInWeek=\"daysInWeek\"\r\n    >\r\n      <div\r\n        [attr.aria-hidden]=\"\r\n          {}\r\n            | calendarA11y\r\n              : (daysInWeek === 1\r\n                  ? 'hideDayHourSegment'\r\n                  : 'hideWeekHourSegment')\r\n        \"\r\n        class=\"cal-hour-segment\"\r\n        [style.height.px]=\"segmentHeight\"\r\n        [class.cal-hour-start]=\"segment.isStart\"\r\n        [class.cal-after-hour-start]=\"!segment.isStart\"\r\n        [ngClass]=\"segment.cssClass\"\r\n      >\r\n        <div class=\"cal-time\" *ngIf=\"isTimeLabel\">\r\n          {{\r\n            segment.displayDate\r\n              | calendarDate\r\n                : (daysInWeek === 1 ? 'dayViewHour' : 'weekViewHour')\r\n                : locale\r\n          }}\r\n        </div>\r\n      </div>\r\n    </ng-template>\r\n    <ng-template\r\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\r\n      [ngTemplateOutletContext]=\"{\r\n        segment: segment,\r\n        locale: locale,\r\n        segmentHeight: segmentHeight,\r\n        isTimeLabel: isTimeLabel,\r\n        daysInWeek: daysInWeek\r\n      }\"\r\n    >\r\n    </ng-template>\r\n  `,\r\n                }]\r\n        }], propDecorators: { segment: [{\r\n                type: Input\r\n            }], segmentHeight: [{\r\n                type: Input\r\n            }], locale: [{\r\n                type: Input\r\n            }], isTimeLabel: [{\r\n                type: Input\r\n            }], daysInWeek: [{\r\n                type: Input\r\n            }], customTemplate: [{\r\n                type: Input\r\n            }] } });\n\nclass CalendarWeekViewCurrentTimeMarkerComponent {\r\n    constructor(dateAdapter, zone) {\r\n        this.dateAdapter = dateAdapter;\r\n        this.zone = zone;\r\n        this.columnDate$ = new BehaviorSubject(undefined);\r\n        this.marker$ = this.zone.onStable.pipe(switchMap(() => interval(60 * 1000)), startWith(0), switchMapTo(this.columnDate$), map((columnDate) => {\r\n            const startOfDay = this.dateAdapter.setMinutes(this.dateAdapter.setHours(columnDate, this.dayStartHour), this.dayStartMinute);\r\n            const endOfDay = this.dateAdapter.setMinutes(this.dateAdapter.setHours(columnDate, this.dayEndHour), this.dayEndMinute);\r\n            const hourHeightModifier = (this.hourSegments * this.hourSegmentHeight) /\r\n                (this.hourDuration || 60);\r\n            const now = new Date();\r\n            return {\r\n                isVisible: this.dateAdapter.isSameDay(columnDate, now) &&\r\n                    now >= startOfDay &&\r\n                    now <= endOfDay,\r\n                top: this.dateAdapter.differenceInMinutes(now, startOfDay) *\r\n                    hourHeightModifier,\r\n            };\r\n        }));\r\n    }\r\n    ngOnChanges(changes) {\r\n        if (changes.columnDate) {\r\n            this.columnDate$.next(changes.columnDate.currentValue);\r\n        }\r\n    }\r\n}\r\nCalendarWeekViewCurrentTimeMarkerComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarWeekViewCurrentTimeMarkerComponent, deps: [{ token: DateAdapter }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\r\nCalendarWeekViewCurrentTimeMarkerComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.0.4\", type: CalendarWeekViewCurrentTimeMarkerComponent, selector: \"mwl-calendar-week-view-current-time-marker\", inputs: { columnDate: \"columnDate\", dayStartHour: \"dayStartHour\", dayStartMinute: \"dayStartMinute\", dayEndHour: \"dayEndHour\", dayEndMinute: \"dayEndMinute\", hourSegments: \"hourSegments\", hourDuration: \"hourDuration\", hourSegmentHeight: \"hourSegmentHeight\", customTemplate: \"customTemplate\" }, usesOnChanges: true, ngImport: i0, template: `\r\n    <ng-template\r\n      #defaultTemplate\r\n      let-columnDate=\"columnDate\"\r\n      let-dayStartHour=\"dayStartHour\"\r\n      let-dayStartMinute=\"dayStartMinute\"\r\n      let-dayEndHour=\"dayEndHour\"\r\n      let-dayEndMinute=\"dayEndMinute\"\r\n      let-isVisible=\"isVisible\"\r\n      let-topPx=\"topPx\"\r\n    >\r\n      <div\r\n        class=\"cal-current-time-marker\"\r\n        *ngIf=\"isVisible\"\r\n        [style.top.px]=\"topPx\"\r\n      ></div>\r\n    </ng-template>\r\n    <ng-template\r\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\r\n      [ngTemplateOutletContext]=\"{\r\n        columnDate: columnDate,\r\n        dayStartHour: dayStartHour,\r\n        dayStartMinute: dayStartMinute,\r\n        dayEndHour: dayEndHour,\r\n        dayEndMinute: dayEndMinute,\r\n        isVisible: (marker$ | async)?.isVisible,\r\n        topPx: (marker$ | async)?.top\r\n      }\"\r\n    >\r\n    </ng-template>\r\n  `, isInline: true, dependencies: [{ kind: \"directive\", type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i1.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"pipe\", type: i1.AsyncPipe, name: \"async\" }] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarWeekViewCurrentTimeMarkerComponent, decorators: [{\r\n            type: Component,\r\n            args: [{\r\n                    selector: 'mwl-calendar-week-view-current-time-marker',\r\n                    template: `\r\n    <ng-template\r\n      #defaultTemplate\r\n      let-columnDate=\"columnDate\"\r\n      let-dayStartHour=\"dayStartHour\"\r\n      let-dayStartMinute=\"dayStartMinute\"\r\n      let-dayEndHour=\"dayEndHour\"\r\n      let-dayEndMinute=\"dayEndMinute\"\r\n      let-isVisible=\"isVisible\"\r\n      let-topPx=\"topPx\"\r\n    >\r\n      <div\r\n        class=\"cal-current-time-marker\"\r\n        *ngIf=\"isVisible\"\r\n        [style.top.px]=\"topPx\"\r\n      ></div>\r\n    </ng-template>\r\n    <ng-template\r\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\r\n      [ngTemplateOutletContext]=\"{\r\n        columnDate: columnDate,\r\n        dayStartHour: dayStartHour,\r\n        dayStartMinute: dayStartMinute,\r\n        dayEndHour: dayEndHour,\r\n        dayEndMinute: dayEndMinute,\r\n        isVisible: (marker$ | async)?.isVisible,\r\n        topPx: (marker$ | async)?.top\r\n      }\"\r\n    >\r\n    </ng-template>\r\n  `,\r\n                }]\r\n        }], ctorParameters: function () { return [{ type: DateAdapter }, { type: i0.NgZone }]; }, propDecorators: { columnDate: [{\r\n                type: Input\r\n            }], dayStartHour: [{\r\n                type: Input\r\n            }], dayStartMinute: [{\r\n                type: Input\r\n            }], dayEndHour: [{\r\n                type: Input\r\n            }], dayEndMinute: [{\r\n                type: Input\r\n            }], hourSegments: [{\r\n                type: Input\r\n            }], hourDuration: [{\r\n                type: Input\r\n            }], hourSegmentHeight: [{\r\n                type: Input\r\n            }], customTemplate: [{\r\n                type: Input\r\n            }] } });\n\n/**\r\n * Shows all events on a given week. Example usage:\r\n *\r\n * ```typescript\r\n * <mwl-calendar-week-view\r\n *  [viewDate]=\"viewDate\"\r\n *  [events]=\"events\">\r\n * </mwl-calendar-week-view>\r\n * ```\r\n */\r\nclass CalendarWeekViewComponent {\r\n    /**\r\n     * @hidden\r\n     */\r\n    constructor(cdr, utils, locale, dateAdapter, element) {\r\n        this.cdr = cdr;\r\n        this.utils = utils;\r\n        this.dateAdapter = dateAdapter;\r\n        this.element = element;\r\n        /**\r\n         * An array of events to display on view\r\n         * The schema is available here: https://github.com/mattlewis92/calendar-utils/blob/c51689985f59a271940e30bc4e2c4e1fee3fcb5c/src/calendarUtils.ts#L49-L63\r\n         */\r\n        this.events = [];\r\n        /**\r\n         * An array of day indexes (0 = sunday, 1 = monday etc) that will be hidden on the view\r\n         */\r\n        this.excludeDays = [];\r\n        /**\r\n         * The placement of the event tooltip\r\n         */\r\n        this.tooltipPlacement = 'auto';\r\n        /**\r\n         * Whether to append tooltips to the body or next to the trigger element\r\n         */\r\n        this.tooltipAppendToBody = true;\r\n        /**\r\n         * The delay in milliseconds before the tooltip should be displayed. If not provided the tooltip\r\n         * will be displayed immediately.\r\n         */\r\n        this.tooltipDelay = null;\r\n        /**\r\n         * The precision to display events.\r\n         * `days` will round event start and end dates to the nearest day and `minutes` will not do this rounding\r\n         */\r\n        this.precision = 'days';\r\n        /**\r\n         * Whether to snap events to a grid when dragging\r\n         */\r\n        this.snapDraggedEvents = true;\r\n        /**\r\n         * The number of segments in an hour. Must divide equally into 60.\r\n         */\r\n        this.hourSegments = 2;\r\n        /**\r\n         * The height in pixels of each hour segment\r\n         */\r\n        this.hourSegmentHeight = 30;\r\n        /**\r\n         * The minimum height in pixels of each event\r\n         */\r\n        this.minimumEventHeight = 30;\r\n        /**\r\n         * The day start hours in 24 hour time. Must be 0-23\r\n         */\r\n        this.dayStartHour = 0;\r\n        /**\r\n         * The day start minutes. Must be 0-59\r\n         */\r\n        this.dayStartMinute = 0;\r\n        /**\r\n         * The day end hours in 24 hour time. Must be 0-23\r\n         */\r\n        this.dayEndHour = 23;\r\n        /**\r\n         * The day end minutes. Must be 0-59\r\n         */\r\n        this.dayEndMinute = 59;\r\n        /**\r\n         * Called when a header week day is clicked. Adding a `cssClass` property on `$event.day` will add that class to the header element\r\n         */\r\n        this.dayHeaderClicked = new EventEmitter();\r\n        /**\r\n         * Called when an event title is clicked\r\n         */\r\n        this.eventClicked = new EventEmitter();\r\n        /**\r\n         * Called when an event is resized or dragged and dropped\r\n         */\r\n        this.eventTimesChanged = new EventEmitter();\r\n        /**\r\n         * An output that will be called before the view is rendered for the current week.\r\n         * If you add the `cssClass` property to a day in the header it will add that class to the cell element in the template\r\n         */\r\n        this.beforeViewRender = new EventEmitter();\r\n        /**\r\n         * Called when an hour segment is clicked\r\n         */\r\n        this.hourSegmentClicked = new EventEmitter();\r\n        /**\r\n         * @hidden\r\n         */\r\n        this.allDayEventResizes = new Map();\r\n        /**\r\n         * @hidden\r\n         */\r\n        this.timeEventResizes = new Map();\r\n        /**\r\n         * @hidden\r\n         */\r\n        this.eventDragEnterByType = {\r\n            allDay: 0,\r\n            time: 0,\r\n        };\r\n        /**\r\n         * @hidden\r\n         */\r\n        this.dragActive = false;\r\n        /**\r\n         * @hidden\r\n         */\r\n        this.dragAlreadyMoved = false;\r\n        /**\r\n         * @hidden\r\n         */\r\n        this.calendarId = Symbol('angular calendar week view id');\r\n        /**\r\n         * @hidden\r\n         */\r\n        this.rtl = false;\r\n        /**\r\n         * @hidden\r\n         */\r\n        this.trackByWeekDayHeaderDate = trackByWeekDayHeaderDate;\r\n        /**\r\n         * @hidden\r\n         */\r\n        this.trackByHourSegment = trackByHourSegment;\r\n        /**\r\n         * @hidden\r\n         */\r\n        this.trackByHour = trackByHour;\r\n        /**\r\n         * @hidden\r\n         */\r\n        this.trackByWeekAllDayEvent = trackByWeekAllDayEvent;\r\n        /**\r\n         * @hidden\r\n         */\r\n        this.trackByWeekTimeEvent = trackByWeekTimeEvent;\r\n        /**\r\n         * @hidden\r\n         */\r\n        this.trackByHourColumn = (index, column) => column.hours[0] ? column.hours[0].segments[0].date.toISOString() : column;\r\n        /**\r\n         * @hidden\r\n         */\r\n        this.trackById = (index, row) => row.id;\r\n        this.locale = locale;\r\n    }\r\n    /**\r\n     * @hidden\r\n     */\r\n    ngOnInit() {\r\n        if (this.refresh) {\r\n            this.refreshSubscription = this.refresh.subscribe(() => {\r\n                this.refreshAll();\r\n                this.cdr.markForCheck();\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * @hidden\r\n     */\r\n    ngOnChanges(changes) {\r\n        const refreshHeader = changes.viewDate ||\r\n            changes.excludeDays ||\r\n            changes.weekendDays ||\r\n            changes.daysInWeek ||\r\n            changes.weekStartsOn;\r\n        const refreshBody = changes.viewDate ||\r\n            changes.dayStartHour ||\r\n            changes.dayStartMinute ||\r\n            changes.dayEndHour ||\r\n            changes.dayEndMinute ||\r\n            changes.hourSegments ||\r\n            changes.hourDuration ||\r\n            changes.weekStartsOn ||\r\n            changes.weekendDays ||\r\n            changes.excludeDays ||\r\n            changes.hourSegmentHeight ||\r\n            changes.events ||\r\n            changes.daysInWeek ||\r\n            changes.minimumEventHeight;\r\n        if (refreshHeader) {\r\n            this.refreshHeader();\r\n        }\r\n        if (changes.events) {\r\n            validateEvents(this.events);\r\n        }\r\n        if (refreshBody) {\r\n            this.refreshBody();\r\n        }\r\n        if (refreshHeader || refreshBody) {\r\n            this.emitBeforeViewRender();\r\n        }\r\n    }\r\n    /**\r\n     * @hidden\r\n     */\r\n    ngOnDestroy() {\r\n        if (this.refreshSubscription) {\r\n            this.refreshSubscription.unsubscribe();\r\n        }\r\n    }\r\n    /**\r\n     * @hidden\r\n     */\r\n    ngAfterViewInit() {\r\n        this.rtl =\r\n            typeof window !== 'undefined' &&\r\n                getComputedStyle(this.element.nativeElement).direction === 'rtl';\r\n        this.cdr.detectChanges();\r\n    }\r\n    /**\r\n     * @hidden\r\n     */\r\n    timeEventResizeStarted(eventsContainer, timeEvent, resizeEvent) {\r\n        this.timeEventResizes.set(timeEvent.event, resizeEvent);\r\n        this.resizeStarted(eventsContainer, timeEvent);\r\n    }\r\n    /**\r\n     * @hidden\r\n     */\r\n    timeEventResizing(timeEvent, resizeEvent) {\r\n        this.timeEventResizes.set(timeEvent.event, resizeEvent);\r\n        const adjustedEvents = new Map();\r\n        const tempEvents = [...this.events];\r\n        this.timeEventResizes.forEach((lastResizeEvent, event) => {\r\n            const newEventDates = this.getTimeEventResizedDates(event, lastResizeEvent);\r\n            const adjustedEvent = Object.assign(Object.assign({}, event), newEventDates);\r\n            adjustedEvents.set(adjustedEvent, event);\r\n            const eventIndex = tempEvents.indexOf(event);\r\n            tempEvents[eventIndex] = adjustedEvent;\r\n        });\r\n        this.restoreOriginalEvents(tempEvents, adjustedEvents, true);\r\n    }\r\n    /**\r\n     * @hidden\r\n     */\r\n    timeEventResizeEnded(timeEvent) {\r\n        this.view = this.getWeekView(this.events);\r\n        const lastResizeEvent = this.timeEventResizes.get(timeEvent.event);\r\n        if (lastResizeEvent) {\r\n            this.timeEventResizes.delete(timeEvent.event);\r\n            const newEventDates = this.getTimeEventResizedDates(timeEvent.event, lastResizeEvent);\r\n            this.eventTimesChanged.emit({\r\n                newStart: newEventDates.start,\r\n                newEnd: newEventDates.end,\r\n                event: timeEvent.event,\r\n                type: CalendarEventTimesChangedEventType.Resize,\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * @hidden\r\n     */\r\n    allDayEventResizeStarted(allDayEventsContainer, allDayEvent, resizeEvent) {\r\n        this.allDayEventResizes.set(allDayEvent, {\r\n            originalOffset: allDayEvent.offset,\r\n            originalSpan: allDayEvent.span,\r\n            edge: typeof resizeEvent.edges.left !== 'undefined' ? 'left' : 'right',\r\n        });\r\n        this.resizeStarted(allDayEventsContainer, allDayEvent, this.getDayColumnWidth(allDayEventsContainer));\r\n    }\r\n    /**\r\n     * @hidden\r\n     */\r\n    allDayEventResizing(allDayEvent, resizeEvent, dayWidth) {\r\n        const currentResize = this.allDayEventResizes.get(allDayEvent);\r\n        const modifier = this.rtl ? -1 : 1;\r\n        if (typeof resizeEvent.edges.left !== 'undefined') {\r\n            const diff = Math.round(+resizeEvent.edges.left / dayWidth) * modifier;\r\n            allDayEvent.offset = currentResize.originalOffset + diff;\r\n            allDayEvent.span = currentResize.originalSpan - diff;\r\n        }\r\n        else if (typeof resizeEvent.edges.right !== 'undefined') {\r\n            const diff = Math.round(+resizeEvent.edges.right / dayWidth) * modifier;\r\n            allDayEvent.span = currentResize.originalSpan + diff;\r\n        }\r\n    }\r\n    /**\r\n     * @hidden\r\n     */\r\n    allDayEventResizeEnded(allDayEvent) {\r\n        const currentResize = this.allDayEventResizes.get(allDayEvent);\r\n        if (currentResize) {\r\n            const allDayEventResizingBeforeStart = currentResize.edge === 'left';\r\n            let daysDiff;\r\n            if (allDayEventResizingBeforeStart) {\r\n                daysDiff = allDayEvent.offset - currentResize.originalOffset;\r\n            }\r\n            else {\r\n                daysDiff = allDayEvent.span - currentResize.originalSpan;\r\n            }\r\n            allDayEvent.offset = currentResize.originalOffset;\r\n            allDayEvent.span = currentResize.originalSpan;\r\n            const newDates = this.getAllDayEventResizedDates(allDayEvent.event, daysDiff, allDayEventResizingBeforeStart);\r\n            this.eventTimesChanged.emit({\r\n                newStart: newDates.start,\r\n                newEnd: newDates.end,\r\n                event: allDayEvent.event,\r\n                type: CalendarEventTimesChangedEventType.Resize,\r\n            });\r\n            this.allDayEventResizes.delete(allDayEvent);\r\n        }\r\n    }\r\n    /**\r\n     * @hidden\r\n     */\r\n    getDayColumnWidth(eventRowContainer) {\r\n        return Math.floor(eventRowContainer.offsetWidth / this.days.length);\r\n    }\r\n    /**\r\n     * @hidden\r\n     */\r\n    dateDragEnter(date) {\r\n        this.lastDragEnterDate = date;\r\n    }\r\n    /**\r\n     * @hidden\r\n     */\r\n    eventDropped(dropEvent, date, allDay) {\r\n        if (shouldFireDroppedEvent(dropEvent, date, allDay, this.calendarId) &&\r\n            this.lastDragEnterDate.getTime() === date.getTime() &&\r\n            (!this.snapDraggedEvents ||\r\n                dropEvent.dropData.event !== this.lastDraggedEvent)) {\r\n            this.eventTimesChanged.emit({\r\n                type: CalendarEventTimesChangedEventType.Drop,\r\n                event: dropEvent.dropData.event,\r\n                newStart: date,\r\n                allDay,\r\n            });\r\n        }\r\n        this.lastDraggedEvent = null;\r\n    }\r\n    /**\r\n     * @hidden\r\n     */\r\n    dragEnter(type) {\r\n        this.eventDragEnterByType[type]++;\r\n    }\r\n    /**\r\n     * @hidden\r\n     */\r\n    dragLeave(type) {\r\n        this.eventDragEnterByType[type]--;\r\n    }\r\n    /**\r\n     * @hidden\r\n     */\r\n    dragStarted(eventsContainerElement, eventElement, event, useY) {\r\n        this.dayColumnWidth = this.getDayColumnWidth(eventsContainerElement);\r\n        const dragHelper = new CalendarDragHelper(eventsContainerElement, eventElement);\r\n        this.validateDrag = ({ x, y, transform }) => {\r\n            const isAllowed = this.allDayEventResizes.size === 0 &&\r\n                this.timeEventResizes.size === 0 &&\r\n                dragHelper.validateDrag({\r\n                    x,\r\n                    y,\r\n                    snapDraggedEvents: this.snapDraggedEvents,\r\n                    dragAlreadyMoved: this.dragAlreadyMoved,\r\n                    transform,\r\n                });\r\n            if (isAllowed && this.validateEventTimesChanged) {\r\n                const newEventTimes = this.getDragMovedEventTimes(event, { x, y }, this.dayColumnWidth, useY);\r\n                return this.validateEventTimesChanged({\r\n                    type: CalendarEventTimesChangedEventType.Drag,\r\n                    event: event.event,\r\n                    newStart: newEventTimes.start,\r\n                    newEnd: newEventTimes.end,\r\n                });\r\n            }\r\n            return isAllowed;\r\n        };\r\n        this.dragActive = true;\r\n        this.dragAlreadyMoved = false;\r\n        this.lastDraggedEvent = null;\r\n        this.eventDragEnterByType = {\r\n            allDay: 0,\r\n            time: 0,\r\n        };\r\n        if (!this.snapDraggedEvents && useY) {\r\n            this.view.hourColumns.forEach((column) => {\r\n                const linkedEvent = column.events.find((columnEvent) => columnEvent.event === event.event && columnEvent !== event);\r\n                // hide any linked events while dragging\r\n                if (linkedEvent) {\r\n                    linkedEvent.width = 0;\r\n                    linkedEvent.height = 0;\r\n                }\r\n            });\r\n        }\r\n        this.cdr.markForCheck();\r\n    }\r\n    /**\r\n     * @hidden\r\n     */\r\n    dragMove(dayEvent, dragEvent) {\r\n        const newEventTimes = this.getDragMovedEventTimes(dayEvent, dragEvent, this.dayColumnWidth, true);\r\n        const originalEvent = dayEvent.event;\r\n        const adjustedEvent = Object.assign(Object.assign({}, originalEvent), newEventTimes);\r\n        const tempEvents = this.events.map((event) => {\r\n            if (event === originalEvent) {\r\n                return adjustedEvent;\r\n            }\r\n            return event;\r\n        });\r\n        this.restoreOriginalEvents(tempEvents, new Map([[adjustedEvent, originalEvent]]), this.snapDraggedEvents);\r\n        this.dragAlreadyMoved = true;\r\n    }\r\n    /**\r\n     * @hidden\r\n     */\r\n    allDayEventDragMove() {\r\n        this.dragAlreadyMoved = true;\r\n    }\r\n    /**\r\n     * @hidden\r\n     */\r\n    dragEnded(weekEvent, dragEndEvent, dayWidth, useY = false) {\r\n        this.view = this.getWeekView(this.events);\r\n        this.dragActive = false;\r\n        this.validateDrag = null;\r\n        const { start, end } = this.getDragMovedEventTimes(weekEvent, dragEndEvent, dayWidth, useY);\r\n        if ((this.snapDraggedEvents ||\r\n            this.eventDragEnterByType[useY ? 'time' : 'allDay'] > 0) &&\r\n            isDraggedWithinPeriod(start, end, this.view.period)) {\r\n            this.lastDraggedEvent = weekEvent.event;\r\n            this.eventTimesChanged.emit({\r\n                newStart: start,\r\n                newEnd: end,\r\n                event: weekEvent.event,\r\n                type: CalendarEventTimesChangedEventType.Drag,\r\n                allDay: !useY,\r\n            });\r\n        }\r\n    }\r\n    refreshHeader() {\r\n        this.days = this.utils.getWeekViewHeader(Object.assign({ viewDate: this.viewDate, weekStartsOn: this.weekStartsOn, excluded: this.excludeDays, weekendDays: this.weekendDays }, getWeekViewPeriod(this.dateAdapter, this.viewDate, this.weekStartsOn, this.excludeDays, this.daysInWeek)));\r\n    }\r\n    refreshBody() {\r\n        this.view = this.getWeekView(this.events);\r\n    }\r\n    refreshAll() {\r\n        this.refreshHeader();\r\n        this.refreshBody();\r\n        this.emitBeforeViewRender();\r\n    }\r\n    emitBeforeViewRender() {\r\n        if (this.days && this.view) {\r\n            this.beforeViewRender.emit(Object.assign({ header: this.days }, this.view));\r\n        }\r\n    }\r\n    getWeekView(events) {\r\n        return this.utils.getWeekView(Object.assign({ events, viewDate: this.viewDate, weekStartsOn: this.weekStartsOn, excluded: this.excludeDays, precision: this.precision, absolutePositionedEvents: true, hourSegments: this.hourSegments, hourDuration: this.hourDuration, dayStart: {\r\n                hour: this.dayStartHour,\r\n                minute: this.dayStartMinute,\r\n            }, dayEnd: {\r\n                hour: this.dayEndHour,\r\n                minute: this.dayEndMinute,\r\n            }, segmentHeight: this.hourSegmentHeight, weekendDays: this.weekendDays, minimumEventHeight: this.minimumEventHeight }, getWeekViewPeriod(this.dateAdapter, this.viewDate, this.weekStartsOn, this.excludeDays, this.daysInWeek)));\r\n    }\r\n    getDragMovedEventTimes(weekEvent, dragEndEvent, dayWidth, useY) {\r\n        const daysDragged = (roundToNearest(dragEndEvent.x, dayWidth) / dayWidth) *\r\n            (this.rtl ? -1 : 1);\r\n        const minutesMoved = useY\r\n            ? getMinutesMoved(dragEndEvent.y, this.hourSegments, this.hourSegmentHeight, this.eventSnapSize, this.hourDuration)\r\n            : 0;\r\n        const start = this.dateAdapter.addMinutes(addDaysWithExclusions(this.dateAdapter, weekEvent.event.start, daysDragged, this.excludeDays), minutesMoved);\r\n        let end;\r\n        if (weekEvent.event.end) {\r\n            end = this.dateAdapter.addMinutes(addDaysWithExclusions(this.dateAdapter, weekEvent.event.end, daysDragged, this.excludeDays), minutesMoved);\r\n        }\r\n        return { start, end };\r\n    }\r\n    restoreOriginalEvents(tempEvents, adjustedEvents, snapDraggedEvents = true) {\r\n        const previousView = this.view;\r\n        if (snapDraggedEvents) {\r\n            this.view = this.getWeekView(tempEvents);\r\n        }\r\n        const adjustedEventsArray = tempEvents.filter((event) => adjustedEvents.has(event));\r\n        this.view.hourColumns.forEach((column, columnIndex) => {\r\n            previousView.hourColumns[columnIndex].hours.forEach((hour, hourIndex) => {\r\n                hour.segments.forEach((segment, segmentIndex) => {\r\n                    column.hours[hourIndex].segments[segmentIndex].cssClass =\r\n                        segment.cssClass;\r\n                });\r\n            });\r\n            adjustedEventsArray.forEach((adjustedEvent) => {\r\n                const originalEvent = adjustedEvents.get(adjustedEvent);\r\n                const existingColumnEvent = column.events.find((columnEvent) => columnEvent.event ===\r\n                    (snapDraggedEvents ? adjustedEvent : originalEvent));\r\n                if (existingColumnEvent) {\r\n                    // restore the original event so trackBy kicks in and the dom isn't changed\r\n                    existingColumnEvent.event = originalEvent;\r\n                    existingColumnEvent['tempEvent'] = adjustedEvent;\r\n                    if (!snapDraggedEvents) {\r\n                        existingColumnEvent.height = 0;\r\n                        existingColumnEvent.width = 0;\r\n                    }\r\n                }\r\n                else {\r\n                    // add a dummy event to the drop so if the event was removed from the original column the drag doesn't end early\r\n                    const event = {\r\n                        event: originalEvent,\r\n                        left: 0,\r\n                        top: 0,\r\n                        height: 0,\r\n                        width: 0,\r\n                        startsBeforeDay: false,\r\n                        endsAfterDay: false,\r\n                        tempEvent: adjustedEvent,\r\n                    };\r\n                    column.events.push(event);\r\n                }\r\n            });\r\n        });\r\n        adjustedEvents.clear();\r\n    }\r\n    getTimeEventResizedDates(calendarEvent, resizeEvent) {\r\n        const newEventDates = {\r\n            start: calendarEvent.start,\r\n            end: getDefaultEventEnd(this.dateAdapter, calendarEvent, this.minimumEventHeight),\r\n        };\r\n        const { end } = calendarEvent, eventWithoutEnd = __rest(calendarEvent, [\"end\"]);\r\n        const smallestResizes = {\r\n            start: this.dateAdapter.addMinutes(newEventDates.end, this.minimumEventHeight * -1),\r\n            end: getDefaultEventEnd(this.dateAdapter, eventWithoutEnd, this.minimumEventHeight),\r\n        };\r\n        const modifier = this.rtl ? -1 : 1;\r\n        if (typeof resizeEvent.edges.left !== 'undefined') {\r\n            const daysDiff = Math.round(+resizeEvent.edges.left / this.dayColumnWidth) * modifier;\r\n            const newStart = addDaysWithExclusions(this.dateAdapter, newEventDates.start, daysDiff, this.excludeDays);\r\n            if (newStart < smallestResizes.start) {\r\n                newEventDates.start = newStart;\r\n            }\r\n            else {\r\n                newEventDates.start = smallestResizes.start;\r\n            }\r\n        }\r\n        else if (typeof resizeEvent.edges.right !== 'undefined') {\r\n            const daysDiff = Math.round(+resizeEvent.edges.right / this.dayColumnWidth) * modifier;\r\n            const newEnd = addDaysWithExclusions(this.dateAdapter, newEventDates.end, daysDiff, this.excludeDays);\r\n            if (newEnd > smallestResizes.end) {\r\n                newEventDates.end = newEnd;\r\n            }\r\n            else {\r\n                newEventDates.end = smallestResizes.end;\r\n            }\r\n        }\r\n        if (typeof resizeEvent.edges.top !== 'undefined') {\r\n            const minutesMoved = getMinutesMoved(resizeEvent.edges.top, this.hourSegments, this.hourSegmentHeight, this.eventSnapSize, this.hourDuration);\r\n            const newStart = this.dateAdapter.addMinutes(newEventDates.start, minutesMoved);\r\n            if (newStart < smallestResizes.start) {\r\n                newEventDates.start = newStart;\r\n            }\r\n            else {\r\n                newEventDates.start = smallestResizes.start;\r\n            }\r\n        }\r\n        else if (typeof resizeEvent.edges.bottom !== 'undefined') {\r\n            const minutesMoved = getMinutesMoved(resizeEvent.edges.bottom, this.hourSegments, this.hourSegmentHeight, this.eventSnapSize, this.hourDuration);\r\n            const newEnd = this.dateAdapter.addMinutes(newEventDates.end, minutesMoved);\r\n            if (newEnd > smallestResizes.end) {\r\n                newEventDates.end = newEnd;\r\n            }\r\n            else {\r\n                newEventDates.end = smallestResizes.end;\r\n            }\r\n        }\r\n        return newEventDates;\r\n    }\r\n    resizeStarted(eventsContainer, event, dayWidth) {\r\n        this.dayColumnWidth = this.getDayColumnWidth(eventsContainer);\r\n        const resizeHelper = new CalendarResizeHelper(eventsContainer, dayWidth, this.rtl);\r\n        this.validateResize = ({ rectangle, edges }) => {\r\n            const isWithinBoundary = resizeHelper.validateResize({\r\n                rectangle: Object.assign({}, rectangle),\r\n                edges,\r\n            });\r\n            if (isWithinBoundary && this.validateEventTimesChanged) {\r\n                let newEventDates;\r\n                if (!dayWidth) {\r\n                    newEventDates = this.getTimeEventResizedDates(event.event, {\r\n                        rectangle,\r\n                        edges,\r\n                    });\r\n                }\r\n                else {\r\n                    const modifier = this.rtl ? -1 : 1;\r\n                    if (typeof edges.left !== 'undefined') {\r\n                        const diff = Math.round(+edges.left / dayWidth) * modifier;\r\n                        newEventDates = this.getAllDayEventResizedDates(event.event, diff, !this.rtl);\r\n                    }\r\n                    else {\r\n                        const diff = Math.round(+edges.right / dayWidth) * modifier;\r\n                        newEventDates = this.getAllDayEventResizedDates(event.event, diff, this.rtl);\r\n                    }\r\n                }\r\n                return this.validateEventTimesChanged({\r\n                    type: CalendarEventTimesChangedEventType.Resize,\r\n                    event: event.event,\r\n                    newStart: newEventDates.start,\r\n                    newEnd: newEventDates.end,\r\n                });\r\n            }\r\n            return isWithinBoundary;\r\n        };\r\n        this.cdr.markForCheck();\r\n    }\r\n    /**\r\n     * @hidden\r\n     */\r\n    getAllDayEventResizedDates(event, daysDiff, beforeStart) {\r\n        let start = event.start;\r\n        let end = event.end || event.start;\r\n        if (beforeStart) {\r\n            start = addDaysWithExclusions(this.dateAdapter, start, daysDiff, this.excludeDays);\r\n        }\r\n        else {\r\n            end = addDaysWithExclusions(this.dateAdapter, end, daysDiff, this.excludeDays);\r\n        }\r\n        return { start, end };\r\n    }\r\n}\r\nCalendarWeekViewComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarWeekViewComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: CalendarUtils }, { token: LOCALE_ID }, { token: DateAdapter }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });\r\nCalendarWeekViewComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.0.4\", type: CalendarWeekViewComponent, selector: \"mwl-calendar-week-view\", inputs: { viewDate: \"viewDate\", events: \"events\", excludeDays: \"excludeDays\", refresh: \"refresh\", locale: \"locale\", tooltipPlacement: \"tooltipPlacement\", tooltipTemplate: \"tooltipTemplate\", tooltipAppendToBody: \"tooltipAppendToBody\", tooltipDelay: \"tooltipDelay\", weekStartsOn: \"weekStartsOn\", headerTemplate: \"headerTemplate\", eventTemplate: \"eventTemplate\", eventTitleTemplate: \"eventTitleTemplate\", eventActionsTemplate: \"eventActionsTemplate\", precision: \"precision\", weekendDays: \"weekendDays\", snapDraggedEvents: \"snapDraggedEvents\", hourSegments: \"hourSegments\", hourDuration: \"hourDuration\", hourSegmentHeight: \"hourSegmentHeight\", minimumEventHeight: \"minimumEventHeight\", dayStartHour: \"dayStartHour\", dayStartMinute: \"dayStartMinute\", dayEndHour: \"dayEndHour\", dayEndMinute: \"dayEndMinute\", hourSegmentTemplate: \"hourSegmentTemplate\", eventSnapSize: \"eventSnapSize\", allDayEventsLabelTemplate: \"allDayEventsLabelTemplate\", daysInWeek: \"daysInWeek\", currentTimeMarkerTemplate: \"currentTimeMarkerTemplate\", validateEventTimesChanged: \"validateEventTimesChanged\", resizeCursors: \"resizeCursors\" }, outputs: { dayHeaderClicked: \"dayHeaderClicked\", eventClicked: \"eventClicked\", eventTimesChanged: \"eventTimesChanged\", beforeViewRender: \"beforeViewRender\", hourSegmentClicked: \"hourSegmentClicked\" }, usesOnChanges: true, ngImport: i0, template: `\r\n    <div class=\"cal-week-view\" role=\"grid\">\r\n      <mwl-calendar-week-view-header\r\n        [days]=\"days\"\r\n        [locale]=\"locale\"\r\n        [customTemplate]=\"headerTemplate\"\r\n        (dayHeaderClicked)=\"dayHeaderClicked.emit($event)\"\r\n        (eventDropped)=\"\r\n          eventDropped({ dropData: $event }, $event.newStart, true)\r\n        \"\r\n        (dragEnter)=\"dateDragEnter($event.date)\"\r\n      >\r\n      </mwl-calendar-week-view-header>\r\n      <div\r\n        class=\"cal-all-day-events\"\r\n        #allDayEventsContainer\r\n        *ngIf=\"view.allDayEventRows.length > 0\"\r\n        mwlDroppable\r\n        (dragEnter)=\"dragEnter('allDay')\"\r\n        (dragLeave)=\"dragLeave('allDay')\"\r\n      >\r\n        <div class=\"cal-day-columns\">\r\n          <div\r\n            class=\"cal-time-label-column\"\r\n            [ngTemplateOutlet]=\"allDayEventsLabelTemplate\"\r\n          ></div>\r\n          <div\r\n            class=\"cal-day-column\"\r\n            *ngFor=\"let day of days; trackBy: trackByWeekDayHeaderDate\"\r\n            mwlDroppable\r\n            dragOverClass=\"cal-drag-over\"\r\n            (drop)=\"eventDropped($event, day.date, true)\"\r\n            (dragEnter)=\"dateDragEnter(day.date)\"\r\n          ></div>\r\n        </div>\r\n        <div\r\n          *ngFor=\"let eventRow of view.allDayEventRows; trackBy: trackById\"\r\n          #eventRowContainer\r\n          class=\"cal-events-row\"\r\n        >\r\n          <div\r\n            *ngFor=\"\r\n              let allDayEvent of eventRow.row;\r\n              trackBy: trackByWeekAllDayEvent\r\n            \"\r\n            #event\r\n            class=\"cal-event-container\"\r\n            [class.cal-draggable]=\"\r\n              allDayEvent.event.draggable && allDayEventResizes.size === 0\r\n            \"\r\n            [class.cal-starts-within-week]=\"!allDayEvent.startsBeforeWeek\"\r\n            [class.cal-ends-within-week]=\"!allDayEvent.endsAfterWeek\"\r\n            [ngClass]=\"allDayEvent.event?.cssClass\"\r\n            [style.width.%]=\"(100 / days.length) * allDayEvent.span\"\r\n            [style.marginLeft.%]=\"\r\n              rtl ? null : (100 / days.length) * allDayEvent.offset\r\n            \"\r\n            [style.marginRight.%]=\"\r\n              rtl ? (100 / days.length) * allDayEvent.offset : null\r\n            \"\r\n            mwlResizable\r\n            [resizeCursors]=\"resizeCursors\"\r\n            [resizeSnapGrid]=\"{ left: dayColumnWidth, right: dayColumnWidth }\"\r\n            [validateResize]=\"validateResize\"\r\n            (resizeStart)=\"\r\n              allDayEventResizeStarted(eventRowContainer, allDayEvent, $event)\r\n            \"\r\n            (resizing)=\"\r\n              allDayEventResizing(allDayEvent, $event, dayColumnWidth)\r\n            \"\r\n            (resizeEnd)=\"allDayEventResizeEnded(allDayEvent)\"\r\n            mwlDraggable\r\n            dragActiveClass=\"cal-drag-active\"\r\n            [dropData]=\"{ event: allDayEvent.event, calendarId: calendarId }\"\r\n            [dragAxis]=\"{\r\n              x: allDayEvent.event.draggable && allDayEventResizes.size === 0,\r\n              y:\r\n                !snapDraggedEvents &&\r\n                allDayEvent.event.draggable &&\r\n                allDayEventResizes.size === 0\r\n            }\"\r\n            [dragSnapGrid]=\"snapDraggedEvents ? { x: dayColumnWidth } : {}\"\r\n            [validateDrag]=\"validateDrag\"\r\n            [touchStartLongPress]=\"{ delay: 300, delta: 30 }\"\r\n            (dragStart)=\"\r\n              dragStarted(eventRowContainer, event, allDayEvent, false)\r\n            \"\r\n            (dragging)=\"allDayEventDragMove()\"\r\n            (dragEnd)=\"dragEnded(allDayEvent, $event, dayColumnWidth)\"\r\n          >\r\n            <div\r\n              class=\"cal-resize-handle cal-resize-handle-before-start\"\r\n              *ngIf=\"\r\n                allDayEvent.event?.resizable?.beforeStart &&\r\n                !allDayEvent.startsBeforeWeek\r\n              \"\r\n              mwlResizeHandle\r\n              [resizeEdges]=\"{ left: true }\"\r\n            ></div>\r\n            <mwl-calendar-week-view-event\r\n              [locale]=\"locale\"\r\n              [weekEvent]=\"allDayEvent\"\r\n              [tooltipPlacement]=\"tooltipPlacement\"\r\n              [tooltipTemplate]=\"tooltipTemplate\"\r\n              [tooltipAppendToBody]=\"tooltipAppendToBody\"\r\n              [tooltipDelay]=\"tooltipDelay\"\r\n              [customTemplate]=\"eventTemplate\"\r\n              [eventTitleTemplate]=\"eventTitleTemplate\"\r\n              [eventActionsTemplate]=\"eventActionsTemplate\"\r\n              [daysInWeek]=\"daysInWeek\"\r\n              (eventClicked)=\"\r\n                eventClicked.emit({\r\n                  event: allDayEvent.event,\r\n                  sourceEvent: $event.sourceEvent\r\n                })\r\n              \"\r\n            >\r\n            </mwl-calendar-week-view-event>\r\n            <div\r\n              class=\"cal-resize-handle cal-resize-handle-after-end\"\r\n              *ngIf=\"\r\n                allDayEvent.event?.resizable?.afterEnd &&\r\n                !allDayEvent.endsAfterWeek\r\n              \"\r\n              mwlResizeHandle\r\n              [resizeEdges]=\"{ right: true }\"\r\n            ></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div\r\n        class=\"cal-time-events\"\r\n        mwlDroppable\r\n        (dragEnter)=\"dragEnter('time')\"\r\n        (dragLeave)=\"dragLeave('time')\"\r\n      >\r\n        <div\r\n          class=\"cal-time-label-column\"\r\n          *ngIf=\"view.hourColumns.length > 0 && daysInWeek !== 1\"\r\n        >\r\n          <div\r\n            *ngFor=\"\r\n              let hour of view.hourColumns[0].hours;\r\n              trackBy: trackByHour;\r\n              let odd = odd\r\n            \"\r\n            class=\"cal-hour\"\r\n            [class.cal-hour-odd]=\"odd\"\r\n          >\r\n            <mwl-calendar-week-view-hour-segment\r\n              *ngFor=\"let segment of hour.segments; trackBy: trackByHourSegment\"\r\n              [style.height.px]=\"hourSegmentHeight\"\r\n              [segment]=\"segment\"\r\n              [segmentHeight]=\"hourSegmentHeight\"\r\n              [locale]=\"locale\"\r\n              [customTemplate]=\"hourSegmentTemplate\"\r\n              [isTimeLabel]=\"true\"\r\n              [daysInWeek]=\"daysInWeek\"\r\n            >\r\n            </mwl-calendar-week-view-hour-segment>\r\n          </div>\r\n        </div>\r\n        <div\r\n          class=\"cal-day-columns\"\r\n          [class.cal-resize-active]=\"timeEventResizes.size > 0\"\r\n          #dayColumns\r\n        >\r\n          <div\r\n            class=\"cal-day-column\"\r\n            *ngFor=\"let column of view.hourColumns; trackBy: trackByHourColumn\"\r\n          >\r\n            <mwl-calendar-week-view-current-time-marker\r\n              [columnDate]=\"column.date\"\r\n              [dayStartHour]=\"dayStartHour\"\r\n              [dayStartMinute]=\"dayStartMinute\"\r\n              [dayEndHour]=\"dayEndHour\"\r\n              [dayEndMinute]=\"dayEndMinute\"\r\n              [hourSegments]=\"hourSegments\"\r\n              [hourDuration]=\"hourDuration\"\r\n              [hourSegmentHeight]=\"hourSegmentHeight\"\r\n              [customTemplate]=\"currentTimeMarkerTemplate\"\r\n            ></mwl-calendar-week-view-current-time-marker>\r\n            <div class=\"cal-events-container\">\r\n              <div\r\n                *ngFor=\"\r\n                  let timeEvent of column.events;\r\n                  trackBy: trackByWeekTimeEvent\r\n                \"\r\n                #event\r\n                class=\"cal-event-container\"\r\n                [class.cal-draggable]=\"\r\n                  timeEvent.event.draggable && timeEventResizes.size === 0\r\n                \"\r\n                [class.cal-starts-within-day]=\"!timeEvent.startsBeforeDay\"\r\n                [class.cal-ends-within-day]=\"!timeEvent.endsAfterDay\"\r\n                [ngClass]=\"timeEvent.event.cssClass\"\r\n                [hidden]=\"timeEvent.height === 0 && timeEvent.width === 0\"\r\n                [style.top.px]=\"timeEvent.top\"\r\n                [style.height.px]=\"timeEvent.height\"\r\n                [style.left.%]=\"timeEvent.left\"\r\n                [style.width.%]=\"timeEvent.width\"\r\n                mwlResizable\r\n                [resizeCursors]=\"resizeCursors\"\r\n                [resizeSnapGrid]=\"{\r\n                  left: dayColumnWidth,\r\n                  right: dayColumnWidth,\r\n                  top: eventSnapSize || hourSegmentHeight,\r\n                  bottom: eventSnapSize || hourSegmentHeight\r\n                }\"\r\n                [validateResize]=\"validateResize\"\r\n                [allowNegativeResizes]=\"true\"\r\n                (resizeStart)=\"\r\n                  timeEventResizeStarted(dayColumns, timeEvent, $event)\r\n                \"\r\n                (resizing)=\"timeEventResizing(timeEvent, $event)\"\r\n                (resizeEnd)=\"timeEventResizeEnded(timeEvent)\"\r\n                mwlDraggable\r\n                dragActiveClass=\"cal-drag-active\"\r\n                [dropData]=\"{ event: timeEvent.event, calendarId: calendarId }\"\r\n                [dragAxis]=\"{\r\n                  x: timeEvent.event.draggable && timeEventResizes.size === 0,\r\n                  y: timeEvent.event.draggable && timeEventResizes.size === 0\r\n                }\"\r\n                [dragSnapGrid]=\"\r\n                  snapDraggedEvents\r\n                    ? {\r\n                        x: dayColumnWidth,\r\n                        y: eventSnapSize || hourSegmentHeight\r\n                      }\r\n                    : {}\r\n                \"\r\n                [touchStartLongPress]=\"{ delay: 300, delta: 30 }\"\r\n                [ghostDragEnabled]=\"!snapDraggedEvents\"\r\n                [ghostElementTemplate]=\"weekEventTemplate\"\r\n                [validateDrag]=\"validateDrag\"\r\n                (dragStart)=\"dragStarted(dayColumns, event, timeEvent, true)\"\r\n                (dragging)=\"dragMove(timeEvent, $event)\"\r\n                (dragEnd)=\"dragEnded(timeEvent, $event, dayColumnWidth, true)\"\r\n              >\r\n                <div\r\n                  class=\"cal-resize-handle cal-resize-handle-before-start\"\r\n                  *ngIf=\"\r\n                    timeEvent.event?.resizable?.beforeStart &&\r\n                    !timeEvent.startsBeforeDay\r\n                  \"\r\n                  mwlResizeHandle\r\n                  [resizeEdges]=\"{\r\n                    left: true,\r\n                    top: true\r\n                  }\"\r\n                ></div>\r\n                <ng-template\r\n                  [ngTemplateOutlet]=\"weekEventTemplate\"\r\n                ></ng-template>\r\n                <ng-template #weekEventTemplate>\r\n                  <mwl-calendar-week-view-event\r\n                    [locale]=\"locale\"\r\n                    [weekEvent]=\"timeEvent\"\r\n                    [tooltipPlacement]=\"tooltipPlacement\"\r\n                    [tooltipTemplate]=\"tooltipTemplate\"\r\n                    [tooltipAppendToBody]=\"tooltipAppendToBody\"\r\n                    [tooltipDisabled]=\"dragActive || timeEventResizes.size > 0\"\r\n                    [tooltipDelay]=\"tooltipDelay\"\r\n                    [customTemplate]=\"eventTemplate\"\r\n                    [eventTitleTemplate]=\"eventTitleTemplate\"\r\n                    [eventActionsTemplate]=\"eventActionsTemplate\"\r\n                    [column]=\"column\"\r\n                    [daysInWeek]=\"daysInWeek\"\r\n                    (eventClicked)=\"\r\n                      eventClicked.emit({\r\n                        event: timeEvent.event,\r\n                        sourceEvent: $event.sourceEvent\r\n                      })\r\n                    \"\r\n                  >\r\n                  </mwl-calendar-week-view-event>\r\n                </ng-template>\r\n                <div\r\n                  class=\"cal-resize-handle cal-resize-handle-after-end\"\r\n                  *ngIf=\"\r\n                    timeEvent.event?.resizable?.afterEnd &&\r\n                    !timeEvent.endsAfterDay\r\n                  \"\r\n                  mwlResizeHandle\r\n                  [resizeEdges]=\"{\r\n                    right: true,\r\n                    bottom: true\r\n                  }\"\r\n                ></div>\r\n              </div>\r\n            </div>\r\n\r\n            <div\r\n              *ngFor=\"\r\n                let hour of column.hours;\r\n                trackBy: trackByHour;\r\n                let odd = odd\r\n              \"\r\n              class=\"cal-hour\"\r\n              [class.cal-hour-odd]=\"odd\"\r\n            >\r\n              <mwl-calendar-week-view-hour-segment\r\n                *ngFor=\"\r\n                  let segment of hour.segments;\r\n                  trackBy: trackByHourSegment\r\n                \"\r\n                [style.height.px]=\"hourSegmentHeight\"\r\n                [segment]=\"segment\"\r\n                [segmentHeight]=\"hourSegmentHeight\"\r\n                [locale]=\"locale\"\r\n                [customTemplate]=\"hourSegmentTemplate\"\r\n                [daysInWeek]=\"daysInWeek\"\r\n                (mwlClick)=\"\r\n                  hourSegmentClicked.emit({\r\n                    date: segment.date,\r\n                    sourceEvent: $event\r\n                  })\r\n                \"\r\n                [clickListenerDisabled]=\"\r\n                  hourSegmentClicked.observers.length === 0\r\n                \"\r\n                mwlDroppable\r\n                [dragOverClass]=\"\r\n                  !dragActive || !snapDraggedEvents ? 'cal-drag-over' : null\r\n                \"\r\n                dragActiveClass=\"cal-drag-active\"\r\n                (drop)=\"eventDropped($event, segment.date, false)\"\r\n                (dragEnter)=\"dateDragEnter(segment.date)\"\r\n                [isTimeLabel]=\"daysInWeek === 1\"\r\n              >\r\n              </mwl-calendar-week-view-hour-segment>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  `, isInline: true, dependencies: [{ kind: \"directive\", type: i1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i1.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"directive\", type: i4.ResizableDirective, selector: \"[mwlResizable]\", inputs: [\"validateResize\", \"enableGhostResize\", \"resizeSnapGrid\", \"resizeCursors\", \"ghostElementPositioning\", \"allowNegativeResizes\", \"mouseMoveThrottleMS\"], outputs: [\"resizeStart\", \"resizing\", \"resizeEnd\"], exportAs: [\"mwlResizable\"] }, { kind: \"directive\", type: i4.ResizeHandleDirective, selector: \"[mwlResizeHandle]\", inputs: [\"resizeEdges\", \"resizableContainer\"] }, { kind: \"directive\", type: i2.DraggableDirective, selector: \"[mwlDraggable]\", inputs: [\"dropData\", \"dragAxis\", \"dragSnapGrid\", \"ghostDragEnabled\", \"showOriginalElementWhileDragging\", \"validateDrag\", \"dragCursor\", \"dragActiveClass\", \"ghostElementAppendTo\", \"ghostElementTemplate\", \"touchStartLongPress\", \"autoScroll\"], outputs: [\"dragPointerDown\", \"dragStart\", \"ghostElementCreated\", \"dragging\", \"dragEnd\"] }, { kind: \"directive\", type: i2.DroppableDirective, selector: \"[mwlDroppable]\", inputs: [\"dragOverClass\", \"dragActiveClass\", \"validateDrop\"], outputs: [\"dragEnter\", \"dragLeave\", \"dragOver\", \"drop\"] }, { kind: \"directive\", type: ClickDirective, selector: \"[mwlClick]\", inputs: [\"clickListenerDisabled\"], outputs: [\"mwlClick\"] }, { kind: \"component\", type: CalendarWeekViewHeaderComponent, selector: \"mwl-calendar-week-view-header\", inputs: [\"days\", \"locale\", \"customTemplate\"], outputs: [\"dayHeaderClicked\", \"eventDropped\", \"dragEnter\"] }, { kind: \"component\", type: CalendarWeekViewEventComponent, selector: \"mwl-calendar-week-view-event\", inputs: [\"locale\", \"weekEvent\", \"tooltipPlacement\", \"tooltipAppendToBody\", \"tooltipDisabled\", \"tooltipDelay\", \"customTemplate\", \"eventTitleTemplate\", \"eventActionsTemplate\", \"tooltipTemplate\", \"column\", \"daysInWeek\"], outputs: [\"eventClicked\"] }, { kind: \"component\", type: CalendarWeekViewHourSegmentComponent, selector: \"mwl-calendar-week-view-hour-segment\", inputs: [\"segment\", \"segmentHeight\", \"locale\", \"isTimeLabel\", \"daysInWeek\", \"customTemplate\"] }, { kind: \"component\", type: CalendarWeekViewCurrentTimeMarkerComponent, selector: \"mwl-calendar-week-view-current-time-marker\", inputs: [\"columnDate\", \"dayStartHour\", \"dayStartMinute\", \"dayEndHour\", \"dayEndMinute\", \"hourSegments\", \"hourDuration\", \"hourSegmentHeight\", \"customTemplate\"] }] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarWeekViewComponent, decorators: [{\r\n            type: Component,\r\n            args: [{\r\n                    selector: 'mwl-calendar-week-view',\r\n                    template: `\r\n    <div class=\"cal-week-view\" role=\"grid\">\r\n      <mwl-calendar-week-view-header\r\n        [days]=\"days\"\r\n        [locale]=\"locale\"\r\n        [customTemplate]=\"headerTemplate\"\r\n        (dayHeaderClicked)=\"dayHeaderClicked.emit($event)\"\r\n        (eventDropped)=\"\r\n          eventDropped({ dropData: $event }, $event.newStart, true)\r\n        \"\r\n        (dragEnter)=\"dateDragEnter($event.date)\"\r\n      >\r\n      </mwl-calendar-week-view-header>\r\n      <div\r\n        class=\"cal-all-day-events\"\r\n        #allDayEventsContainer\r\n        *ngIf=\"view.allDayEventRows.length > 0\"\r\n        mwlDroppable\r\n        (dragEnter)=\"dragEnter('allDay')\"\r\n        (dragLeave)=\"dragLeave('allDay')\"\r\n      >\r\n        <div class=\"cal-day-columns\">\r\n          <div\r\n            class=\"cal-time-label-column\"\r\n            [ngTemplateOutlet]=\"allDayEventsLabelTemplate\"\r\n          ></div>\r\n          <div\r\n            class=\"cal-day-column\"\r\n            *ngFor=\"let day of days; trackBy: trackByWeekDayHeaderDate\"\r\n            mwlDroppable\r\n            dragOverClass=\"cal-drag-over\"\r\n            (drop)=\"eventDropped($event, day.date, true)\"\r\n            (dragEnter)=\"dateDragEnter(day.date)\"\r\n          ></div>\r\n        </div>\r\n        <div\r\n          *ngFor=\"let eventRow of view.allDayEventRows; trackBy: trackById\"\r\n          #eventRowContainer\r\n          class=\"cal-events-row\"\r\n        >\r\n          <div\r\n            *ngFor=\"\r\n              let allDayEvent of eventRow.row;\r\n              trackBy: trackByWeekAllDayEvent\r\n            \"\r\n            #event\r\n            class=\"cal-event-container\"\r\n            [class.cal-draggable]=\"\r\n              allDayEvent.event.draggable && allDayEventResizes.size === 0\r\n            \"\r\n            [class.cal-starts-within-week]=\"!allDayEvent.startsBeforeWeek\"\r\n            [class.cal-ends-within-week]=\"!allDayEvent.endsAfterWeek\"\r\n            [ngClass]=\"allDayEvent.event?.cssClass\"\r\n            [style.width.%]=\"(100 / days.length) * allDayEvent.span\"\r\n            [style.marginLeft.%]=\"\r\n              rtl ? null : (100 / days.length) * allDayEvent.offset\r\n            \"\r\n            [style.marginRight.%]=\"\r\n              rtl ? (100 / days.length) * allDayEvent.offset : null\r\n            \"\r\n            mwlResizable\r\n            [resizeCursors]=\"resizeCursors\"\r\n            [resizeSnapGrid]=\"{ left: dayColumnWidth, right: dayColumnWidth }\"\r\n            [validateResize]=\"validateResize\"\r\n            (resizeStart)=\"\r\n              allDayEventResizeStarted(eventRowContainer, allDayEvent, $event)\r\n            \"\r\n            (resizing)=\"\r\n              allDayEventResizing(allDayEvent, $event, dayColumnWidth)\r\n            \"\r\n            (resizeEnd)=\"allDayEventResizeEnded(allDayEvent)\"\r\n            mwlDraggable\r\n            dragActiveClass=\"cal-drag-active\"\r\n            [dropData]=\"{ event: allDayEvent.event, calendarId: calendarId }\"\r\n            [dragAxis]=\"{\r\n              x: allDayEvent.event.draggable && allDayEventResizes.size === 0,\r\n              y:\r\n                !snapDraggedEvents &&\r\n                allDayEvent.event.draggable &&\r\n                allDayEventResizes.size === 0\r\n            }\"\r\n            [dragSnapGrid]=\"snapDraggedEvents ? { x: dayColumnWidth } : {}\"\r\n            [validateDrag]=\"validateDrag\"\r\n            [touchStartLongPress]=\"{ delay: 300, delta: 30 }\"\r\n            (dragStart)=\"\r\n              dragStarted(eventRowContainer, event, allDayEvent, false)\r\n            \"\r\n            (dragging)=\"allDayEventDragMove()\"\r\n            (dragEnd)=\"dragEnded(allDayEvent, $event, dayColumnWidth)\"\r\n          >\r\n            <div\r\n              class=\"cal-resize-handle cal-resize-handle-before-start\"\r\n              *ngIf=\"\r\n                allDayEvent.event?.resizable?.beforeStart &&\r\n                !allDayEvent.startsBeforeWeek\r\n              \"\r\n              mwlResizeHandle\r\n              [resizeEdges]=\"{ left: true }\"\r\n            ></div>\r\n            <mwl-calendar-week-view-event\r\n              [locale]=\"locale\"\r\n              [weekEvent]=\"allDayEvent\"\r\n              [tooltipPlacement]=\"tooltipPlacement\"\r\n              [tooltipTemplate]=\"tooltipTemplate\"\r\n              [tooltipAppendToBody]=\"tooltipAppendToBody\"\r\n              [tooltipDelay]=\"tooltipDelay\"\r\n              [customTemplate]=\"eventTemplate\"\r\n              [eventTitleTemplate]=\"eventTitleTemplate\"\r\n              [eventActionsTemplate]=\"eventActionsTemplate\"\r\n              [daysInWeek]=\"daysInWeek\"\r\n              (eventClicked)=\"\r\n                eventClicked.emit({\r\n                  event: allDayEvent.event,\r\n                  sourceEvent: $event.sourceEvent\r\n                })\r\n              \"\r\n            >\r\n            </mwl-calendar-week-view-event>\r\n            <div\r\n              class=\"cal-resize-handle cal-resize-handle-after-end\"\r\n              *ngIf=\"\r\n                allDayEvent.event?.resizable?.afterEnd &&\r\n                !allDayEvent.endsAfterWeek\r\n              \"\r\n              mwlResizeHandle\r\n              [resizeEdges]=\"{ right: true }\"\r\n            ></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div\r\n        class=\"cal-time-events\"\r\n        mwlDroppable\r\n        (dragEnter)=\"dragEnter('time')\"\r\n        (dragLeave)=\"dragLeave('time')\"\r\n      >\r\n        <div\r\n          class=\"cal-time-label-column\"\r\n          *ngIf=\"view.hourColumns.length > 0 && daysInWeek !== 1\"\r\n        >\r\n          <div\r\n            *ngFor=\"\r\n              let hour of view.hourColumns[0].hours;\r\n              trackBy: trackByHour;\r\n              let odd = odd\r\n            \"\r\n            class=\"cal-hour\"\r\n            [class.cal-hour-odd]=\"odd\"\r\n          >\r\n            <mwl-calendar-week-view-hour-segment\r\n              *ngFor=\"let segment of hour.segments; trackBy: trackByHourSegment\"\r\n              [style.height.px]=\"hourSegmentHeight\"\r\n              [segment]=\"segment\"\r\n              [segmentHeight]=\"hourSegmentHeight\"\r\n              [locale]=\"locale\"\r\n              [customTemplate]=\"hourSegmentTemplate\"\r\n              [isTimeLabel]=\"true\"\r\n              [daysInWeek]=\"daysInWeek\"\r\n            >\r\n            </mwl-calendar-week-view-hour-segment>\r\n          </div>\r\n        </div>\r\n        <div\r\n          class=\"cal-day-columns\"\r\n          [class.cal-resize-active]=\"timeEventResizes.size > 0\"\r\n          #dayColumns\r\n        >\r\n          <div\r\n            class=\"cal-day-column\"\r\n            *ngFor=\"let column of view.hourColumns; trackBy: trackByHourColumn\"\r\n          >\r\n            <mwl-calendar-week-view-current-time-marker\r\n              [columnDate]=\"column.date\"\r\n              [dayStartHour]=\"dayStartHour\"\r\n              [dayStartMinute]=\"dayStartMinute\"\r\n              [dayEndHour]=\"dayEndHour\"\r\n              [dayEndMinute]=\"dayEndMinute\"\r\n              [hourSegments]=\"hourSegments\"\r\n              [hourDuration]=\"hourDuration\"\r\n              [hourSegmentHeight]=\"hourSegmentHeight\"\r\n              [customTemplate]=\"currentTimeMarkerTemplate\"\r\n            ></mwl-calendar-week-view-current-time-marker>\r\n            <div class=\"cal-events-container\">\r\n              <div\r\n                *ngFor=\"\r\n                  let timeEvent of column.events;\r\n                  trackBy: trackByWeekTimeEvent\r\n                \"\r\n                #event\r\n                class=\"cal-event-container\"\r\n                [class.cal-draggable]=\"\r\n                  timeEvent.event.draggable && timeEventResizes.size === 0\r\n                \"\r\n                [class.cal-starts-within-day]=\"!timeEvent.startsBeforeDay\"\r\n                [class.cal-ends-within-day]=\"!timeEvent.endsAfterDay\"\r\n                [ngClass]=\"timeEvent.event.cssClass\"\r\n                [hidden]=\"timeEvent.height === 0 && timeEvent.width === 0\"\r\n                [style.top.px]=\"timeEvent.top\"\r\n                [style.height.px]=\"timeEvent.height\"\r\n                [style.left.%]=\"timeEvent.left\"\r\n                [style.width.%]=\"timeEvent.width\"\r\n                mwlResizable\r\n                [resizeCursors]=\"resizeCursors\"\r\n                [resizeSnapGrid]=\"{\r\n                  left: dayColumnWidth,\r\n                  right: dayColumnWidth,\r\n                  top: eventSnapSize || hourSegmentHeight,\r\n                  bottom: eventSnapSize || hourSegmentHeight\r\n                }\"\r\n                [validateResize]=\"validateResize\"\r\n                [allowNegativeResizes]=\"true\"\r\n                (resizeStart)=\"\r\n                  timeEventResizeStarted(dayColumns, timeEvent, $event)\r\n                \"\r\n                (resizing)=\"timeEventResizing(timeEvent, $event)\"\r\n                (resizeEnd)=\"timeEventResizeEnded(timeEvent)\"\r\n                mwlDraggable\r\n                dragActiveClass=\"cal-drag-active\"\r\n                [dropData]=\"{ event: timeEvent.event, calendarId: calendarId }\"\r\n                [dragAxis]=\"{\r\n                  x: timeEvent.event.draggable && timeEventResizes.size === 0,\r\n                  y: timeEvent.event.draggable && timeEventResizes.size === 0\r\n                }\"\r\n                [dragSnapGrid]=\"\r\n                  snapDraggedEvents\r\n                    ? {\r\n                        x: dayColumnWidth,\r\n                        y: eventSnapSize || hourSegmentHeight\r\n                      }\r\n                    : {}\r\n                \"\r\n                [touchStartLongPress]=\"{ delay: 300, delta: 30 }\"\r\n                [ghostDragEnabled]=\"!snapDraggedEvents\"\r\n                [ghostElementTemplate]=\"weekEventTemplate\"\r\n                [validateDrag]=\"validateDrag\"\r\n                (dragStart)=\"dragStarted(dayColumns, event, timeEvent, true)\"\r\n                (dragging)=\"dragMove(timeEvent, $event)\"\r\n                (dragEnd)=\"dragEnded(timeEvent, $event, dayColumnWidth, true)\"\r\n              >\r\n                <div\r\n                  class=\"cal-resize-handle cal-resize-handle-before-start\"\r\n                  *ngIf=\"\r\n                    timeEvent.event?.resizable?.beforeStart &&\r\n                    !timeEvent.startsBeforeDay\r\n                  \"\r\n                  mwlResizeHandle\r\n                  [resizeEdges]=\"{\r\n                    left: true,\r\n                    top: true\r\n                  }\"\r\n                ></div>\r\n                <ng-template\r\n                  [ngTemplateOutlet]=\"weekEventTemplate\"\r\n                ></ng-template>\r\n                <ng-template #weekEventTemplate>\r\n                  <mwl-calendar-week-view-event\r\n                    [locale]=\"locale\"\r\n                    [weekEvent]=\"timeEvent\"\r\n                    [tooltipPlacement]=\"tooltipPlacement\"\r\n                    [tooltipTemplate]=\"tooltipTemplate\"\r\n                    [tooltipAppendToBody]=\"tooltipAppendToBody\"\r\n                    [tooltipDisabled]=\"dragActive || timeEventResizes.size > 0\"\r\n                    [tooltipDelay]=\"tooltipDelay\"\r\n                    [customTemplate]=\"eventTemplate\"\r\n                    [eventTitleTemplate]=\"eventTitleTemplate\"\r\n                    [eventActionsTemplate]=\"eventActionsTemplate\"\r\n                    [column]=\"column\"\r\n                    [daysInWeek]=\"daysInWeek\"\r\n                    (eventClicked)=\"\r\n                      eventClicked.emit({\r\n                        event: timeEvent.event,\r\n                        sourceEvent: $event.sourceEvent\r\n                      })\r\n                    \"\r\n                  >\r\n                  </mwl-calendar-week-view-event>\r\n                </ng-template>\r\n                <div\r\n                  class=\"cal-resize-handle cal-resize-handle-after-end\"\r\n                  *ngIf=\"\r\n                    timeEvent.event?.resizable?.afterEnd &&\r\n                    !timeEvent.endsAfterDay\r\n                  \"\r\n                  mwlResizeHandle\r\n                  [resizeEdges]=\"{\r\n                    right: true,\r\n                    bottom: true\r\n                  }\"\r\n                ></div>\r\n              </div>\r\n            </div>\r\n\r\n            <div\r\n              *ngFor=\"\r\n                let hour of column.hours;\r\n                trackBy: trackByHour;\r\n                let odd = odd\r\n              \"\r\n              class=\"cal-hour\"\r\n              [class.cal-hour-odd]=\"odd\"\r\n            >\r\n              <mwl-calendar-week-view-hour-segment\r\n                *ngFor=\"\r\n                  let segment of hour.segments;\r\n                  trackBy: trackByHourSegment\r\n                \"\r\n                [style.height.px]=\"hourSegmentHeight\"\r\n                [segment]=\"segment\"\r\n                [segmentHeight]=\"hourSegmentHeight\"\r\n                [locale]=\"locale\"\r\n                [customTemplate]=\"hourSegmentTemplate\"\r\n                [daysInWeek]=\"daysInWeek\"\r\n                (mwlClick)=\"\r\n                  hourSegmentClicked.emit({\r\n                    date: segment.date,\r\n                    sourceEvent: $event\r\n                  })\r\n                \"\r\n                [clickListenerDisabled]=\"\r\n                  hourSegmentClicked.observers.length === 0\r\n                \"\r\n                mwlDroppable\r\n                [dragOverClass]=\"\r\n                  !dragActive || !snapDraggedEvents ? 'cal-drag-over' : null\r\n                \"\r\n                dragActiveClass=\"cal-drag-active\"\r\n                (drop)=\"eventDropped($event, segment.date, false)\"\r\n                (dragEnter)=\"dateDragEnter(segment.date)\"\r\n                [isTimeLabel]=\"daysInWeek === 1\"\r\n              >\r\n              </mwl-calendar-week-view-hour-segment>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  `,\r\n                }]\r\n        }], ctorParameters: function () {\r\n        return [{ type: i0.ChangeDetectorRef }, { type: CalendarUtils }, { type: undefined, decorators: [{\r\n                        type: Inject,\r\n                        args: [LOCALE_ID]\r\n                    }] }, { type: DateAdapter }, { type: i0.ElementRef }];\r\n    }, propDecorators: { viewDate: [{\r\n                type: Input\r\n            }], events: [{\r\n                type: Input\r\n            }], excludeDays: [{\r\n                type: Input\r\n            }], refresh: [{\r\n                type: Input\r\n            }], locale: [{\r\n                type: Input\r\n            }], tooltipPlacement: [{\r\n                type: Input\r\n            }], tooltipTemplate: [{\r\n                type: Input\r\n            }], tooltipAppendToBody: [{\r\n                type: Input\r\n            }], tooltipDelay: [{\r\n                type: Input\r\n            }], weekStartsOn: [{\r\n                type: Input\r\n            }], headerTemplate: [{\r\n                type: Input\r\n            }], eventTemplate: [{\r\n                type: Input\r\n            }], eventTitleTemplate: [{\r\n                type: Input\r\n            }], eventActionsTemplate: [{\r\n                type: Input\r\n            }], precision: [{\r\n                type: Input\r\n            }], weekendDays: [{\r\n                type: Input\r\n            }], snapDraggedEvents: [{\r\n                type: Input\r\n            }], hourSegments: [{\r\n                type: Input\r\n            }], hourDuration: [{\r\n                type: Input\r\n            }], hourSegmentHeight: [{\r\n                type: Input\r\n            }], minimumEventHeight: [{\r\n                type: Input\r\n            }], dayStartHour: [{\r\n                type: Input\r\n            }], dayStartMinute: [{\r\n                type: Input\r\n            }], dayEndHour: [{\r\n                type: Input\r\n            }], dayEndMinute: [{\r\n                type: Input\r\n            }], hourSegmentTemplate: [{\r\n                type: Input\r\n            }], eventSnapSize: [{\r\n                type: Input\r\n            }], allDayEventsLabelTemplate: [{\r\n                type: Input\r\n            }], daysInWeek: [{\r\n                type: Input\r\n            }], currentTimeMarkerTemplate: [{\r\n                type: Input\r\n            }], validateEventTimesChanged: [{\r\n                type: Input\r\n            }], resizeCursors: [{\r\n                type: Input\r\n            }], dayHeaderClicked: [{\r\n                type: Output\r\n            }], eventClicked: [{\r\n                type: Output\r\n            }], eventTimesChanged: [{\r\n                type: Output\r\n            }], beforeViewRender: [{\r\n                type: Output\r\n            }], hourSegmentClicked: [{\r\n                type: Output\r\n            }] } });\n\n/**\r\n * Shows all events on a given day. Example usage:\r\n *\r\n * ```typescript\r\n * <mwl-calendar-day-view\r\n *  [viewDate]=\"viewDate\"\r\n *  [events]=\"events\">\r\n * </mwl-calendar-day-view>\r\n * ```\r\n */\r\nclass CalendarDayViewComponent {\r\n    constructor() {\r\n        /**\r\n         * An array of events to display on view\r\n         * The schema is available here: https://github.com/mattlewis92/calendar-utils/blob/c51689985f59a271940e30bc4e2c4e1fee3fcb5c/src/calendarUtils.ts#L49-L63\r\n         */\r\n        this.events = [];\r\n        /**\r\n         * The number of segments in an hour. Must divide equally into 60.\r\n         */\r\n        this.hourSegments = 2;\r\n        /**\r\n         * The height in pixels of each hour segment\r\n         */\r\n        this.hourSegmentHeight = 30;\r\n        /**\r\n         * The minimum height in pixels of each event\r\n         */\r\n        this.minimumEventHeight = 30;\r\n        /**\r\n         * The day start hours in 24 hour time. Must be 0-23\r\n         */\r\n        this.dayStartHour = 0;\r\n        /**\r\n         * The day start minutes. Must be 0-59\r\n         */\r\n        this.dayStartMinute = 0;\r\n        /**\r\n         * The day end hours in 24 hour time. Must be 0-23\r\n         */\r\n        this.dayEndHour = 23;\r\n        /**\r\n         * The day end minutes. Must be 0-59\r\n         */\r\n        this.dayEndMinute = 59;\r\n        /**\r\n         * The placement of the event tooltip\r\n         */\r\n        this.tooltipPlacement = 'auto';\r\n        /**\r\n         * Whether to append tooltips to the body or next to the trigger element\r\n         */\r\n        this.tooltipAppendToBody = true;\r\n        /**\r\n         * The delay in milliseconds before the tooltip should be displayed. If not provided the tooltip\r\n         * will be displayed immediately.\r\n         */\r\n        this.tooltipDelay = null;\r\n        /**\r\n         * Whether to snap events to a grid when dragging\r\n         */\r\n        this.snapDraggedEvents = true;\r\n        /**\r\n         * Called when an event title is clicked\r\n         */\r\n        this.eventClicked = new EventEmitter();\r\n        /**\r\n         * Called when an hour segment is clicked\r\n         */\r\n        this.hourSegmentClicked = new EventEmitter();\r\n        /**\r\n         * Called when an event is resized or dragged and dropped\r\n         */\r\n        this.eventTimesChanged = new EventEmitter();\r\n        /**\r\n         * An output that will be called before the view is rendered for the current day.\r\n         * If you add the `cssClass` property to an hour grid segment it will add that class to the hour segment in the template\r\n         */\r\n        this.beforeViewRender = new EventEmitter();\r\n    }\r\n}\r\nCalendarDayViewComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarDayViewComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\r\nCalendarDayViewComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.0.4\", type: CalendarDayViewComponent, selector: \"mwl-calendar-day-view\", inputs: { viewDate: \"viewDate\", events: \"events\", hourSegments: \"hourSegments\", hourSegmentHeight: \"hourSegmentHeight\", hourDuration: \"hourDuration\", minimumEventHeight: \"minimumEventHeight\", dayStartHour: \"dayStartHour\", dayStartMinute: \"dayStartMinute\", dayEndHour: \"dayEndHour\", dayEndMinute: \"dayEndMinute\", refresh: \"refresh\", locale: \"locale\", eventSnapSize: \"eventSnapSize\", tooltipPlacement: \"tooltipPlacement\", tooltipTemplate: \"tooltipTemplate\", tooltipAppendToBody: \"tooltipAppendToBody\", tooltipDelay: \"tooltipDelay\", hourSegmentTemplate: \"hourSegmentTemplate\", eventTemplate: \"eventTemplate\", eventTitleTemplate: \"eventTitleTemplate\", eventActionsTemplate: \"eventActionsTemplate\", snapDraggedEvents: \"snapDraggedEvents\", allDayEventsLabelTemplate: \"allDayEventsLabelTemplate\", currentTimeMarkerTemplate: \"currentTimeMarkerTemplate\", validateEventTimesChanged: \"validateEventTimesChanged\", resizeCursors: \"resizeCursors\" }, outputs: { eventClicked: \"eventClicked\", hourSegmentClicked: \"hourSegmentClicked\", eventTimesChanged: \"eventTimesChanged\", beforeViewRender: \"beforeViewRender\" }, ngImport: i0, template: `\r\n    <mwl-calendar-week-view\r\n      class=\"cal-day-view\"\r\n      [daysInWeek]=\"1\"\r\n      [viewDate]=\"viewDate\"\r\n      [events]=\"events\"\r\n      [hourSegments]=\"hourSegments\"\r\n      [hourDuration]=\"hourDuration\"\r\n      [hourSegmentHeight]=\"hourSegmentHeight\"\r\n      [minimumEventHeight]=\"minimumEventHeight\"\r\n      [dayStartHour]=\"dayStartHour\"\r\n      [dayStartMinute]=\"dayStartMinute\"\r\n      [dayEndHour]=\"dayEndHour\"\r\n      [dayEndMinute]=\"dayEndMinute\"\r\n      [refresh]=\"refresh\"\r\n      [locale]=\"locale\"\r\n      [eventSnapSize]=\"eventSnapSize\"\r\n      [tooltipPlacement]=\"tooltipPlacement\"\r\n      [tooltipTemplate]=\"tooltipTemplate\"\r\n      [tooltipAppendToBody]=\"tooltipAppendToBody\"\r\n      [tooltipDelay]=\"tooltipDelay\"\r\n      [resizeCursors]=\"resizeCursors\"\r\n      [hourSegmentTemplate]=\"hourSegmentTemplate\"\r\n      [eventTemplate]=\"eventTemplate\"\r\n      [eventTitleTemplate]=\"eventTitleTemplate\"\r\n      [eventActionsTemplate]=\"eventActionsTemplate\"\r\n      [snapDraggedEvents]=\"snapDraggedEvents\"\r\n      [allDayEventsLabelTemplate]=\"allDayEventsLabelTemplate\"\r\n      [currentTimeMarkerTemplate]=\"currentTimeMarkerTemplate\"\r\n      [validateEventTimesChanged]=\"validateEventTimesChanged\"\r\n      (eventClicked)=\"eventClicked.emit($event)\"\r\n      (hourSegmentClicked)=\"hourSegmentClicked.emit($event)\"\r\n      (eventTimesChanged)=\"eventTimesChanged.emit($event)\"\r\n      (beforeViewRender)=\"beforeViewRender.emit($event)\"\r\n    ></mwl-calendar-week-view>\r\n  `, isInline: true, dependencies: [{ kind: \"component\", type: CalendarWeekViewComponent, selector: \"mwl-calendar-week-view\", inputs: [\"viewDate\", \"events\", \"excludeDays\", \"refresh\", \"locale\", \"tooltipPlacement\", \"tooltipTemplate\", \"tooltipAppendToBody\", \"tooltipDelay\", \"weekStartsOn\", \"headerTemplate\", \"eventTemplate\", \"eventTitleTemplate\", \"eventActionsTemplate\", \"precision\", \"weekendDays\", \"snapDraggedEvents\", \"hourSegments\", \"hourDuration\", \"hourSegmentHeight\", \"minimumEventHeight\", \"dayStartHour\", \"dayStartMinute\", \"dayEndHour\", \"dayEndMinute\", \"hourSegmentTemplate\", \"eventSnapSize\", \"allDayEventsLabelTemplate\", \"daysInWeek\", \"currentTimeMarkerTemplate\", \"validateEventTimesChanged\", \"resizeCursors\"], outputs: [\"dayHeaderClicked\", \"eventClicked\", \"eventTimesChanged\", \"beforeViewRender\", \"hourSegmentClicked\"] }] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarDayViewComponent, decorators: [{\r\n            type: Component,\r\n            args: [{\r\n                    selector: 'mwl-calendar-day-view',\r\n                    template: `\r\n    <mwl-calendar-week-view\r\n      class=\"cal-day-view\"\r\n      [daysInWeek]=\"1\"\r\n      [viewDate]=\"viewDate\"\r\n      [events]=\"events\"\r\n      [hourSegments]=\"hourSegments\"\r\n      [hourDuration]=\"hourDuration\"\r\n      [hourSegmentHeight]=\"hourSegmentHeight\"\r\n      [minimumEventHeight]=\"minimumEventHeight\"\r\n      [dayStartHour]=\"dayStartHour\"\r\n      [dayStartMinute]=\"dayStartMinute\"\r\n      [dayEndHour]=\"dayEndHour\"\r\n      [dayEndMinute]=\"dayEndMinute\"\r\n      [refresh]=\"refresh\"\r\n      [locale]=\"locale\"\r\n      [eventSnapSize]=\"eventSnapSize\"\r\n      [tooltipPlacement]=\"tooltipPlacement\"\r\n      [tooltipTemplate]=\"tooltipTemplate\"\r\n      [tooltipAppendToBody]=\"tooltipAppendToBody\"\r\n      [tooltipDelay]=\"tooltipDelay\"\r\n      [resizeCursors]=\"resizeCursors\"\r\n      [hourSegmentTemplate]=\"hourSegmentTemplate\"\r\n      [eventTemplate]=\"eventTemplate\"\r\n      [eventTitleTemplate]=\"eventTitleTemplate\"\r\n      [eventActionsTemplate]=\"eventActionsTemplate\"\r\n      [snapDraggedEvents]=\"snapDraggedEvents\"\r\n      [allDayEventsLabelTemplate]=\"allDayEventsLabelTemplate\"\r\n      [currentTimeMarkerTemplate]=\"currentTimeMarkerTemplate\"\r\n      [validateEventTimesChanged]=\"validateEventTimesChanged\"\r\n      (eventClicked)=\"eventClicked.emit($event)\"\r\n      (hourSegmentClicked)=\"hourSegmentClicked.emit($event)\"\r\n      (eventTimesChanged)=\"eventTimesChanged.emit($event)\"\r\n      (beforeViewRender)=\"beforeViewRender.emit($event)\"\r\n    ></mwl-calendar-week-view>\r\n  `,\r\n                }]\r\n        }], propDecorators: { viewDate: [{\r\n                type: Input\r\n            }], events: [{\r\n                type: Input\r\n            }], hourSegments: [{\r\n                type: Input\r\n            }], hourSegmentHeight: [{\r\n                type: Input\r\n            }], hourDuration: [{\r\n                type: Input\r\n            }], minimumEventHeight: [{\r\n                type: Input\r\n            }], dayStartHour: [{\r\n                type: Input\r\n            }], dayStartMinute: [{\r\n                type: Input\r\n            }], dayEndHour: [{\r\n                type: Input\r\n            }], dayEndMinute: [{\r\n                type: Input\r\n            }], refresh: [{\r\n                type: Input\r\n            }], locale: [{\r\n                type: Input\r\n            }], eventSnapSize: [{\r\n                type: Input\r\n            }], tooltipPlacement: [{\r\n                type: Input\r\n            }], tooltipTemplate: [{\r\n                type: Input\r\n            }], tooltipAppendToBody: [{\r\n                type: Input\r\n            }], tooltipDelay: [{\r\n                type: Input\r\n            }], hourSegmentTemplate: [{\r\n                type: Input\r\n            }], eventTemplate: [{\r\n                type: Input\r\n            }], eventTitleTemplate: [{\r\n                type: Input\r\n            }], eventActionsTemplate: [{\r\n                type: Input\r\n            }], snapDraggedEvents: [{\r\n                type: Input\r\n            }], allDayEventsLabelTemplate: [{\r\n                type: Input\r\n            }], currentTimeMarkerTemplate: [{\r\n                type: Input\r\n            }], validateEventTimesChanged: [{\r\n                type: Input\r\n            }], resizeCursors: [{\r\n                type: Input\r\n            }], eventClicked: [{\r\n                type: Output\r\n            }], hourSegmentClicked: [{\r\n                type: Output\r\n            }], eventTimesChanged: [{\r\n                type: Output\r\n            }], beforeViewRender: [{\r\n                type: Output\r\n            }] } });\n\nclass CalendarWeekModule {\r\n}\r\nCalendarWeekModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarWeekModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\r\nCalendarWeekModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarWeekModule, declarations: [CalendarWeekViewComponent,\r\n        CalendarWeekViewHeaderComponent,\r\n        CalendarWeekViewEventComponent,\r\n        CalendarWeekViewHourSegmentComponent,\r\n        CalendarWeekViewCurrentTimeMarkerComponent], imports: [CommonModule,\r\n        ResizableModule,\r\n        DragAndDropModule,\r\n        CalendarCommonModule], exports: [ResizableModule,\r\n        DragAndDropModule,\r\n        CalendarWeekViewComponent,\r\n        CalendarWeekViewHeaderComponent,\r\n        CalendarWeekViewEventComponent,\r\n        CalendarWeekViewHourSegmentComponent,\r\n        CalendarWeekViewCurrentTimeMarkerComponent] });\r\nCalendarWeekModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarWeekModule, imports: [CommonModule,\r\n        ResizableModule,\r\n        DragAndDropModule,\r\n        CalendarCommonModule, ResizableModule,\r\n        DragAndDropModule] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarWeekModule, decorators: [{\r\n            type: NgModule,\r\n            args: [{\r\n                    imports: [\r\n                        CommonModule,\r\n                        ResizableModule,\r\n                        DragAndDropModule,\r\n                        CalendarCommonModule,\r\n                    ],\r\n                    declarations: [\r\n                        CalendarWeekViewComponent,\r\n                        CalendarWeekViewHeaderComponent,\r\n                        CalendarWeekViewEventComponent,\r\n                        CalendarWeekViewHourSegmentComponent,\r\n                        CalendarWeekViewCurrentTimeMarkerComponent,\r\n                    ],\r\n                    exports: [\r\n                        ResizableModule,\r\n                        DragAndDropModule,\r\n                        CalendarWeekViewComponent,\r\n                        CalendarWeekViewHeaderComponent,\r\n                        CalendarWeekViewEventComponent,\r\n                        CalendarWeekViewHourSegmentComponent,\r\n                        CalendarWeekViewCurrentTimeMarkerComponent,\r\n                    ],\r\n                }]\r\n        }] });\n\nclass CalendarDayModule {\r\n}\r\nCalendarDayModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarDayModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\r\nCalendarDayModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarDayModule, declarations: [CalendarDayViewComponent], imports: [CommonModule, CalendarCommonModule, CalendarWeekModule], exports: [CalendarDayViewComponent] });\r\nCalendarDayModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarDayModule, imports: [CommonModule, CalendarCommonModule, CalendarWeekModule] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarDayModule, decorators: [{\r\n            type: NgModule,\r\n            args: [{\r\n                    imports: [CommonModule, CalendarCommonModule, CalendarWeekModule],\r\n                    declarations: [CalendarDayViewComponent],\r\n                    exports: [CalendarDayViewComponent],\r\n                }]\r\n        }] });\n\nclass CalendarMonthCellComponent {\r\n    constructor() {\r\n        this.highlightDay = new EventEmitter();\r\n        this.unhighlightDay = new EventEmitter();\r\n        this.eventClicked = new EventEmitter();\r\n        this.trackByEventId = trackByEventId;\r\n        this.validateDrag = isWithinThreshold;\r\n    }\r\n}\r\nCalendarMonthCellComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarMonthCellComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\r\nCalendarMonthCellComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.0.4\", type: CalendarMonthCellComponent, selector: \"mwl-calendar-month-cell\", inputs: { day: \"day\", openDay: \"openDay\", locale: \"locale\", tooltipPlacement: \"tooltipPlacement\", tooltipAppendToBody: \"tooltipAppendToBody\", customTemplate: \"customTemplate\", tooltipTemplate: \"tooltipTemplate\", tooltipDelay: \"tooltipDelay\" }, outputs: { highlightDay: \"highlightDay\", unhighlightDay: \"unhighlightDay\", eventClicked: \"eventClicked\" }, host: { properties: { \"class.cal-past\": \"day.isPast\", \"class.cal-today\": \"day.isToday\", \"class.cal-future\": \"day.isFuture\", \"class.cal-weekend\": \"day.isWeekend\", \"class.cal-in-month\": \"day.inMonth\", \"class.cal-out-month\": \"!day.inMonth\", \"class.cal-has-events\": \"day.events.length > 0\", \"class.cal-open\": \"day === openDay\", \"class.cal-event-highlight\": \"!!day.backgroundColor\" }, classAttribute: \"cal-cell cal-day-cell\" }, ngImport: i0, template: `\r\n    <ng-template\r\n      #defaultTemplate\r\n      let-day=\"day\"\r\n      let-openDay=\"openDay\"\r\n      let-locale=\"locale\"\r\n      let-tooltipPlacement=\"tooltipPlacement\"\r\n      let-highlightDay=\"highlightDay\"\r\n      let-unhighlightDay=\"unhighlightDay\"\r\n      let-eventClicked=\"eventClicked\"\r\n      let-tooltipTemplate=\"tooltipTemplate\"\r\n      let-tooltipAppendToBody=\"tooltipAppendToBody\"\r\n      let-tooltipDelay=\"tooltipDelay\"\r\n      let-trackByEventId=\"trackByEventId\"\r\n      let-validateDrag=\"validateDrag\"\r\n    >\r\n      <div\r\n        class=\"cal-cell-top\"\r\n        [attr.aria-label]=\"\r\n          { day: day, locale: locale } | calendarA11y : 'monthCell'\r\n        \"\r\n      >\r\n        <span aria-hidden=\"true\">\r\n          <span class=\"cal-day-badge\" *ngIf=\"day.badgeTotal > 0\">{{\r\n            day.badgeTotal\r\n          }}</span>\r\n          <span class=\"cal-day-number\">{{\r\n            day.date | calendarDate : 'monthViewDayNumber' : locale\r\n          }}</span>\r\n        </span>\r\n      </div>\r\n      <div class=\"cal-events\" *ngIf=\"day.events.length > 0\">\r\n        <div\r\n          class=\"cal-event\"\r\n          *ngFor=\"let event of day.events; trackBy: trackByEventId\"\r\n          [ngStyle]=\"{ backgroundColor: event.color?.primary }\"\r\n          [ngClass]=\"event?.cssClass\"\r\n          (mouseenter)=\"highlightDay.emit({ event: event })\"\r\n          (mouseleave)=\"unhighlightDay.emit({ event: event })\"\r\n          [mwlCalendarTooltip]=\"\r\n            event.title | calendarEventTitle : 'monthTooltip' : event\r\n          \"\r\n          [tooltipPlacement]=\"tooltipPlacement\"\r\n          [tooltipEvent]=\"event\"\r\n          [tooltipTemplate]=\"tooltipTemplate\"\r\n          [tooltipAppendToBody]=\"tooltipAppendToBody\"\r\n          [tooltipDelay]=\"tooltipDelay\"\r\n          mwlDraggable\r\n          [class.cal-draggable]=\"event.draggable\"\r\n          dragActiveClass=\"cal-drag-active\"\r\n          [dropData]=\"{ event: event, draggedFrom: day }\"\r\n          [dragAxis]=\"{ x: event.draggable, y: event.draggable }\"\r\n          [validateDrag]=\"validateDrag\"\r\n          [touchStartLongPress]=\"{ delay: 300, delta: 30 }\"\r\n          (mwlClick)=\"eventClicked.emit({ event: event, sourceEvent: $event })\"\r\n          [attr.aria-hidden]=\"{} | calendarA11y : 'hideMonthCellEvents'\"\r\n        ></div>\r\n      </div>\r\n    </ng-template>\r\n    <ng-template\r\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\r\n      [ngTemplateOutletContext]=\"{\r\n        day: day,\r\n        openDay: openDay,\r\n        locale: locale,\r\n        tooltipPlacement: tooltipPlacement,\r\n        highlightDay: highlightDay,\r\n        unhighlightDay: unhighlightDay,\r\n        eventClicked: eventClicked,\r\n        tooltipTemplate: tooltipTemplate,\r\n        tooltipAppendToBody: tooltipAppendToBody,\r\n        tooltipDelay: tooltipDelay,\r\n        trackByEventId: trackByEventId,\r\n        validateDrag: validateDrag\r\n      }\"\r\n    >\r\n    </ng-template>\r\n  `, isInline: true, dependencies: [{ kind: \"directive\", type: i1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i1.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"directive\", type: i1.NgStyle, selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }, { kind: \"directive\", type: i2.DraggableDirective, selector: \"[mwlDraggable]\", inputs: [\"dropData\", \"dragAxis\", \"dragSnapGrid\", \"ghostDragEnabled\", \"showOriginalElementWhileDragging\", \"validateDrag\", \"dragCursor\", \"dragActiveClass\", \"ghostElementAppendTo\", \"ghostElementTemplate\", \"touchStartLongPress\", \"autoScroll\"], outputs: [\"dragPointerDown\", \"dragStart\", \"ghostElementCreated\", \"dragging\", \"dragEnd\"] }, { kind: \"directive\", type: CalendarTooltipDirective, selector: \"[mwlCalendarTooltip]\", inputs: [\"mwlCalendarTooltip\", \"tooltipPlacement\", \"tooltipTemplate\", \"tooltipEvent\", \"tooltipAppendToBody\", \"tooltipDelay\"] }, { kind: \"directive\", type: ClickDirective, selector: \"[mwlClick]\", inputs: [\"clickListenerDisabled\"], outputs: [\"mwlClick\"] }, { kind: \"pipe\", type: CalendarDatePipe, name: \"calendarDate\" }, { kind: \"pipe\", type: CalendarEventTitlePipe, name: \"calendarEventTitle\" }, { kind: \"pipe\", type: CalendarA11yPipe, name: \"calendarA11y\" }] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarMonthCellComponent, decorators: [{\r\n            type: Component,\r\n            args: [{\r\n                    selector: 'mwl-calendar-month-cell',\r\n                    template: `\r\n    <ng-template\r\n      #defaultTemplate\r\n      let-day=\"day\"\r\n      let-openDay=\"openDay\"\r\n      let-locale=\"locale\"\r\n      let-tooltipPlacement=\"tooltipPlacement\"\r\n      let-highlightDay=\"highlightDay\"\r\n      let-unhighlightDay=\"unhighlightDay\"\r\n      let-eventClicked=\"eventClicked\"\r\n      let-tooltipTemplate=\"tooltipTemplate\"\r\n      let-tooltipAppendToBody=\"tooltipAppendToBody\"\r\n      let-tooltipDelay=\"tooltipDelay\"\r\n      let-trackByEventId=\"trackByEventId\"\r\n      let-validateDrag=\"validateDrag\"\r\n    >\r\n      <div\r\n        class=\"cal-cell-top\"\r\n        [attr.aria-label]=\"\r\n          { day: day, locale: locale } | calendarA11y : 'monthCell'\r\n        \"\r\n      >\r\n        <span aria-hidden=\"true\">\r\n          <span class=\"cal-day-badge\" *ngIf=\"day.badgeTotal > 0\">{{\r\n            day.badgeTotal\r\n          }}</span>\r\n          <span class=\"cal-day-number\">{{\r\n            day.date | calendarDate : 'monthViewDayNumber' : locale\r\n          }}</span>\r\n        </span>\r\n      </div>\r\n      <div class=\"cal-events\" *ngIf=\"day.events.length > 0\">\r\n        <div\r\n          class=\"cal-event\"\r\n          *ngFor=\"let event of day.events; trackBy: trackByEventId\"\r\n          [ngStyle]=\"{ backgroundColor: event.color?.primary }\"\r\n          [ngClass]=\"event?.cssClass\"\r\n          (mouseenter)=\"highlightDay.emit({ event: event })\"\r\n          (mouseleave)=\"unhighlightDay.emit({ event: event })\"\r\n          [mwlCalendarTooltip]=\"\r\n            event.title | calendarEventTitle : 'monthTooltip' : event\r\n          \"\r\n          [tooltipPlacement]=\"tooltipPlacement\"\r\n          [tooltipEvent]=\"event\"\r\n          [tooltipTemplate]=\"tooltipTemplate\"\r\n          [tooltipAppendToBody]=\"tooltipAppendToBody\"\r\n          [tooltipDelay]=\"tooltipDelay\"\r\n          mwlDraggable\r\n          [class.cal-draggable]=\"event.draggable\"\r\n          dragActiveClass=\"cal-drag-active\"\r\n          [dropData]=\"{ event: event, draggedFrom: day }\"\r\n          [dragAxis]=\"{ x: event.draggable, y: event.draggable }\"\r\n          [validateDrag]=\"validateDrag\"\r\n          [touchStartLongPress]=\"{ delay: 300, delta: 30 }\"\r\n          (mwlClick)=\"eventClicked.emit({ event: event, sourceEvent: $event })\"\r\n          [attr.aria-hidden]=\"{} | calendarA11y : 'hideMonthCellEvents'\"\r\n        ></div>\r\n      </div>\r\n    </ng-template>\r\n    <ng-template\r\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\r\n      [ngTemplateOutletContext]=\"{\r\n        day: day,\r\n        openDay: openDay,\r\n        locale: locale,\r\n        tooltipPlacement: tooltipPlacement,\r\n        highlightDay: highlightDay,\r\n        unhighlightDay: unhighlightDay,\r\n        eventClicked: eventClicked,\r\n        tooltipTemplate: tooltipTemplate,\r\n        tooltipAppendToBody: tooltipAppendToBody,\r\n        tooltipDelay: tooltipDelay,\r\n        trackByEventId: trackByEventId,\r\n        validateDrag: validateDrag\r\n      }\"\r\n    >\r\n    </ng-template>\r\n  `,\r\n                    // eslint-disable-next-line @angular-eslint/no-host-metadata-property\r\n                    host: {\r\n                        class: 'cal-cell cal-day-cell',\r\n                        '[class.cal-past]': 'day.isPast',\r\n                        '[class.cal-today]': 'day.isToday',\r\n                        '[class.cal-future]': 'day.isFuture',\r\n                        '[class.cal-weekend]': 'day.isWeekend',\r\n                        '[class.cal-in-month]': 'day.inMonth',\r\n                        '[class.cal-out-month]': '!day.inMonth',\r\n                        '[class.cal-has-events]': 'day.events.length > 0',\r\n                        '[class.cal-open]': 'day === openDay',\r\n                        '[class.cal-event-highlight]': '!!day.backgroundColor',\r\n                    },\r\n                }]\r\n        }], propDecorators: { day: [{\r\n                type: Input\r\n            }], openDay: [{\r\n                type: Input\r\n            }], locale: [{\r\n                type: Input\r\n            }], tooltipPlacement: [{\r\n                type: Input\r\n            }], tooltipAppendToBody: [{\r\n                type: Input\r\n            }], customTemplate: [{\r\n                type: Input\r\n            }], tooltipTemplate: [{\r\n                type: Input\r\n            }], tooltipDelay: [{\r\n                type: Input\r\n            }], highlightDay: [{\r\n                type: Output\r\n            }], unhighlightDay: [{\r\n                type: Output\r\n            }], eventClicked: [{\r\n                type: Output\r\n            }] } });\n\nconst collapseAnimation = trigger('collapse', [\r\n    state('void', style({\r\n        height: 0,\r\n        overflow: 'hidden',\r\n        'padding-top': 0,\r\n        'padding-bottom': 0,\r\n    })),\r\n    state('*', style({\r\n        height: '*',\r\n        overflow: 'hidden',\r\n        'padding-top': '*',\r\n        'padding-bottom': '*',\r\n    })),\r\n    transition('* => void', animate('150ms ease-out')),\r\n    transition('void => *', animate('150ms ease-in')),\r\n]);\r\nclass CalendarOpenDayEventsComponent {\r\n    constructor() {\r\n        this.isOpen = false;\r\n        this.eventClicked = new EventEmitter();\r\n        this.trackByEventId = trackByEventId;\r\n        this.validateDrag = isWithinThreshold;\r\n    }\r\n}\r\nCalendarOpenDayEventsComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarOpenDayEventsComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\r\nCalendarOpenDayEventsComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.0.4\", type: CalendarOpenDayEventsComponent, selector: \"mwl-calendar-open-day-events\", inputs: { locale: \"locale\", isOpen: \"isOpen\", events: \"events\", customTemplate: \"customTemplate\", eventTitleTemplate: \"eventTitleTemplate\", eventActionsTemplate: \"eventActionsTemplate\", date: \"date\" }, outputs: { eventClicked: \"eventClicked\" }, ngImport: i0, template: `\r\n    <ng-template\r\n      #defaultTemplate\r\n      let-events=\"events\"\r\n      let-eventClicked=\"eventClicked\"\r\n      let-isOpen=\"isOpen\"\r\n      let-trackByEventId=\"trackByEventId\"\r\n      let-validateDrag=\"validateDrag\"\r\n    >\r\n      <div\r\n        class=\"cal-open-day-events\"\r\n        [@collapse]\r\n        *ngIf=\"isOpen\"\r\n        role=\"application\"\r\n      >\r\n        <span\r\n          tabindex=\"-1\"\r\n          role=\"alert\"\r\n          [attr.aria-label]=\"\r\n            { date: date, locale: locale } | calendarA11y : 'openDayEventsAlert'\r\n          \"\r\n        ></span>\r\n        <span\r\n          tabindex=\"0\"\r\n          role=\"landmark\"\r\n          [attr.aria-label]=\"\r\n            { date: date, locale: locale }\r\n              | calendarA11y : 'openDayEventsLandmark'\r\n          \"\r\n        ></span>\r\n        <div\r\n          *ngFor=\"let event of events; trackBy: trackByEventId\"\r\n          [ngClass]=\"event?.cssClass\"\r\n          mwlDraggable\r\n          [class.cal-draggable]=\"event.draggable\"\r\n          dragActiveClass=\"cal-drag-active\"\r\n          [dropData]=\"{ event: event }\"\r\n          [dragAxis]=\"{ x: event.draggable, y: event.draggable }\"\r\n          [validateDrag]=\"validateDrag\"\r\n          [touchStartLongPress]=\"{ delay: 300, delta: 30 }\"\r\n        >\r\n          <span\r\n            class=\"cal-event\"\r\n            [ngStyle]=\"{ backgroundColor: event.color?.primary }\"\r\n          >\r\n          </span>\r\n          &ngsp;\r\n          <mwl-calendar-event-title\r\n            [event]=\"event\"\r\n            [customTemplate]=\"eventTitleTemplate\"\r\n            view=\"month\"\r\n            (mwlClick)=\"\r\n              eventClicked.emit({ event: event, sourceEvent: $event })\r\n            \"\r\n            (mwlKeydownEnter)=\"\r\n              eventClicked.emit({ event: event, sourceEvent: $event })\r\n            \"\r\n            tabindex=\"0\"\r\n            [attr.aria-label]=\"\r\n              { event: event, locale: locale }\r\n                | calendarA11y : 'eventDescription'\r\n            \"\r\n          >\r\n          </mwl-calendar-event-title>\r\n          &ngsp;\r\n          <mwl-calendar-event-actions\r\n            [event]=\"event\"\r\n            [customTemplate]=\"eventActionsTemplate\"\r\n          >\r\n          </mwl-calendar-event-actions>\r\n        </div>\r\n      </div>\r\n    </ng-template>\r\n    <ng-template\r\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\r\n      [ngTemplateOutletContext]=\"{\r\n        events: events,\r\n        eventClicked: eventClicked,\r\n        isOpen: isOpen,\r\n        trackByEventId: trackByEventId,\r\n        validateDrag: validateDrag\r\n      }\"\r\n    >\r\n    </ng-template>\r\n  `, isInline: true, dependencies: [{ kind: \"directive\", type: i1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i1.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"directive\", type: i1.NgStyle, selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }, { kind: \"directive\", type: i2.DraggableDirective, selector: \"[mwlDraggable]\", inputs: [\"dropData\", \"dragAxis\", \"dragSnapGrid\", \"ghostDragEnabled\", \"showOriginalElementWhileDragging\", \"validateDrag\", \"dragCursor\", \"dragActiveClass\", \"ghostElementAppendTo\", \"ghostElementTemplate\", \"touchStartLongPress\", \"autoScroll\"], outputs: [\"dragPointerDown\", \"dragStart\", \"ghostElementCreated\", \"dragging\", \"dragEnd\"] }, { kind: \"component\", type: CalendarEventActionsComponent, selector: \"mwl-calendar-event-actions\", inputs: [\"event\", \"customTemplate\"] }, { kind: \"component\", type: CalendarEventTitleComponent, selector: \"mwl-calendar-event-title\", inputs: [\"event\", \"customTemplate\", \"view\"] }, { kind: \"directive\", type: ClickDirective, selector: \"[mwlClick]\", inputs: [\"clickListenerDisabled\"], outputs: [\"mwlClick\"] }, { kind: \"directive\", type: KeydownEnterDirective, selector: \"[mwlKeydownEnter]\", outputs: [\"mwlKeydownEnter\"] }, { kind: \"pipe\", type: CalendarA11yPipe, name: \"calendarA11y\" }], animations: [collapseAnimation] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarOpenDayEventsComponent, decorators: [{\r\n            type: Component,\r\n            args: [{\r\n                    selector: 'mwl-calendar-open-day-events',\r\n                    template: `\r\n    <ng-template\r\n      #defaultTemplate\r\n      let-events=\"events\"\r\n      let-eventClicked=\"eventClicked\"\r\n      let-isOpen=\"isOpen\"\r\n      let-trackByEventId=\"trackByEventId\"\r\n      let-validateDrag=\"validateDrag\"\r\n    >\r\n      <div\r\n        class=\"cal-open-day-events\"\r\n        [@collapse]\r\n        *ngIf=\"isOpen\"\r\n        role=\"application\"\r\n      >\r\n        <span\r\n          tabindex=\"-1\"\r\n          role=\"alert\"\r\n          [attr.aria-label]=\"\r\n            { date: date, locale: locale } | calendarA11y : 'openDayEventsAlert'\r\n          \"\r\n        ></span>\r\n        <span\r\n          tabindex=\"0\"\r\n          role=\"landmark\"\r\n          [attr.aria-label]=\"\r\n            { date: date, locale: locale }\r\n              | calendarA11y : 'openDayEventsLandmark'\r\n          \"\r\n        ></span>\r\n        <div\r\n          *ngFor=\"let event of events; trackBy: trackByEventId\"\r\n          [ngClass]=\"event?.cssClass\"\r\n          mwlDraggable\r\n          [class.cal-draggable]=\"event.draggable\"\r\n          dragActiveClass=\"cal-drag-active\"\r\n          [dropData]=\"{ event: event }\"\r\n          [dragAxis]=\"{ x: event.draggable, y: event.draggable }\"\r\n          [validateDrag]=\"validateDrag\"\r\n          [touchStartLongPress]=\"{ delay: 300, delta: 30 }\"\r\n        >\r\n          <span\r\n            class=\"cal-event\"\r\n            [ngStyle]=\"{ backgroundColor: event.color?.primary }\"\r\n          >\r\n          </span>\r\n          &ngsp;\r\n          <mwl-calendar-event-title\r\n            [event]=\"event\"\r\n            [customTemplate]=\"eventTitleTemplate\"\r\n            view=\"month\"\r\n            (mwlClick)=\"\r\n              eventClicked.emit({ event: event, sourceEvent: $event })\r\n            \"\r\n            (mwlKeydownEnter)=\"\r\n              eventClicked.emit({ event: event, sourceEvent: $event })\r\n            \"\r\n            tabindex=\"0\"\r\n            [attr.aria-label]=\"\r\n              { event: event, locale: locale }\r\n                | calendarA11y : 'eventDescription'\r\n            \"\r\n          >\r\n          </mwl-calendar-event-title>\r\n          &ngsp;\r\n          <mwl-calendar-event-actions\r\n            [event]=\"event\"\r\n            [customTemplate]=\"eventActionsTemplate\"\r\n          >\r\n          </mwl-calendar-event-actions>\r\n        </div>\r\n      </div>\r\n    </ng-template>\r\n    <ng-template\r\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\r\n      [ngTemplateOutletContext]=\"{\r\n        events: events,\r\n        eventClicked: eventClicked,\r\n        isOpen: isOpen,\r\n        trackByEventId: trackByEventId,\r\n        validateDrag: validateDrag\r\n      }\"\r\n    >\r\n    </ng-template>\r\n  `,\r\n                    animations: [collapseAnimation],\r\n                }]\r\n        }], propDecorators: { locale: [{\r\n                type: Input\r\n            }], isOpen: [{\r\n                type: Input\r\n            }], events: [{\r\n                type: Input\r\n            }], customTemplate: [{\r\n                type: Input\r\n            }], eventTitleTemplate: [{\r\n                type: Input\r\n            }], eventActionsTemplate: [{\r\n                type: Input\r\n            }], date: [{\r\n                type: Input\r\n            }], eventClicked: [{\r\n                type: Output\r\n            }] } });\n\nclass CalendarMonthViewHeaderComponent {\r\n    constructor() {\r\n        this.columnHeaderClicked = new EventEmitter();\r\n        this.trackByWeekDayHeaderDate = trackByWeekDayHeaderDate;\r\n    }\r\n}\r\nCalendarMonthViewHeaderComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarMonthViewHeaderComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\r\nCalendarMonthViewHeaderComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.0.4\", type: CalendarMonthViewHeaderComponent, selector: \"mwl-calendar-month-view-header\", inputs: { days: \"days\", locale: \"locale\", customTemplate: \"customTemplate\" }, outputs: { columnHeaderClicked: \"columnHeaderClicked\" }, ngImport: i0, template: `\r\n    <ng-template\r\n      #defaultTemplate\r\n      let-days=\"days\"\r\n      let-locale=\"locale\"\r\n      let-trackByWeekDayHeaderDate=\"trackByWeekDayHeaderDate\"\r\n    >\r\n      <div class=\"cal-cell-row cal-header\" role=\"row\">\r\n        <div\r\n          class=\"cal-cell\"\r\n          *ngFor=\"let day of days; trackBy: trackByWeekDayHeaderDate\"\r\n          [class.cal-past]=\"day.isPast\"\r\n          [class.cal-today]=\"day.isToday\"\r\n          [class.cal-future]=\"day.isFuture\"\r\n          [class.cal-weekend]=\"day.isWeekend\"\r\n          (click)=\"\r\n            columnHeaderClicked.emit({\r\n              isoDayNumber: day.day,\r\n              sourceEvent: $event\r\n            })\r\n          \"\r\n          [ngClass]=\"day.cssClass\"\r\n          tabindex=\"0\"\r\n          role=\"columnheader\"\r\n        >\r\n          {{ day.date | calendarDate : 'monthViewColumnHeader' : locale }}\r\n        </div>\r\n      </div>\r\n    </ng-template>\r\n    <ng-template\r\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\r\n      [ngTemplateOutletContext]=\"{\r\n        days: days,\r\n        locale: locale,\r\n        trackByWeekDayHeaderDate: trackByWeekDayHeaderDate\r\n      }\"\r\n    >\r\n    </ng-template>\r\n  `, isInline: true, dependencies: [{ kind: \"directive\", type: i1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i1.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"pipe\", type: CalendarDatePipe, name: \"calendarDate\" }] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarMonthViewHeaderComponent, decorators: [{\r\n            type: Component,\r\n            args: [{\r\n                    selector: 'mwl-calendar-month-view-header',\r\n                    template: `\r\n    <ng-template\r\n      #defaultTemplate\r\n      let-days=\"days\"\r\n      let-locale=\"locale\"\r\n      let-trackByWeekDayHeaderDate=\"trackByWeekDayHeaderDate\"\r\n    >\r\n      <div class=\"cal-cell-row cal-header\" role=\"row\">\r\n        <div\r\n          class=\"cal-cell\"\r\n          *ngFor=\"let day of days; trackBy: trackByWeekDayHeaderDate\"\r\n          [class.cal-past]=\"day.isPast\"\r\n          [class.cal-today]=\"day.isToday\"\r\n          [class.cal-future]=\"day.isFuture\"\r\n          [class.cal-weekend]=\"day.isWeekend\"\r\n          (click)=\"\r\n            columnHeaderClicked.emit({\r\n              isoDayNumber: day.day,\r\n              sourceEvent: $event\r\n            })\r\n          \"\r\n          [ngClass]=\"day.cssClass\"\r\n          tabindex=\"0\"\r\n          role=\"columnheader\"\r\n        >\r\n          {{ day.date | calendarDate : 'monthViewColumnHeader' : locale }}\r\n        </div>\r\n      </div>\r\n    </ng-template>\r\n    <ng-template\r\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\r\n      [ngTemplateOutletContext]=\"{\r\n        days: days,\r\n        locale: locale,\r\n        trackByWeekDayHeaderDate: trackByWeekDayHeaderDate\r\n      }\"\r\n    >\r\n    </ng-template>\r\n  `,\r\n                }]\r\n        }], propDecorators: { days: [{\r\n                type: Input\r\n            }], locale: [{\r\n                type: Input\r\n            }], customTemplate: [{\r\n                type: Input\r\n            }], columnHeaderClicked: [{\r\n                type: Output\r\n            }] } });\n\n/**\r\n * Shows all events on a given month. Example usage:\r\n *\r\n * ```typescript\r\n * <mwl-calendar-month-view\r\n *  [viewDate]=\"viewDate\"\r\n *  [events]=\"events\">\r\n * </mwl-calendar-month-view>\r\n * ```\r\n */\r\nclass CalendarMonthViewComponent {\r\n    /**\r\n     * @hidden\r\n     */\r\n    constructor(cdr, utils, locale, dateAdapter) {\r\n        this.cdr = cdr;\r\n        this.utils = utils;\r\n        this.dateAdapter = dateAdapter;\r\n        /**\r\n         * An array of events to display on view.\r\n         * The schema is available here: https://github.com/mattlewis92/calendar-utils/blob/c51689985f59a271940e30bc4e2c4e1fee3fcb5c/src/calendarUtils.ts#L49-L63\r\n         */\r\n        this.events = [];\r\n        /**\r\n         * An array of day indexes (0 = sunday, 1 = monday etc) that will be hidden on the view\r\n         */\r\n        this.excludeDays = [];\r\n        /**\r\n         * Whether the events list for the day of the `viewDate` option is visible or not\r\n         */\r\n        this.activeDayIsOpen = false;\r\n        /**\r\n         * The placement of the event tooltip\r\n         */\r\n        this.tooltipPlacement = 'auto';\r\n        /**\r\n         * Whether to append tooltips to the body or next to the trigger element\r\n         */\r\n        this.tooltipAppendToBody = true;\r\n        /**\r\n         * The delay in milliseconds before the tooltip should be displayed. If not provided the tooltip\r\n         * will be displayed immediately.\r\n         */\r\n        this.tooltipDelay = null;\r\n        /**\r\n         * An output that will be called before the view is rendered for the current month.\r\n         * If you add the `cssClass` property to a day in the body it will add that class to the cell element in the template\r\n         */\r\n        this.beforeViewRender = new EventEmitter();\r\n        /**\r\n         * Called when the day cell is clicked\r\n         */\r\n        this.dayClicked = new EventEmitter();\r\n        /**\r\n         * Called when the event title is clicked\r\n         */\r\n        this.eventClicked = new EventEmitter();\r\n        /**\r\n         * Called when a header week day is clicked. Returns ISO day number.\r\n         */\r\n        this.columnHeaderClicked = new EventEmitter();\r\n        /**\r\n         * Called when an event is dragged and dropped\r\n         */\r\n        this.eventTimesChanged = new EventEmitter();\r\n        /**\r\n         * @hidden\r\n         */\r\n        this.trackByRowOffset = (index, offset) => this.view.days\r\n            .slice(offset, this.view.totalDaysVisibleInWeek)\r\n            .map((day) => day.date.toISOString())\r\n            .join('-');\r\n        /**\r\n         * @hidden\r\n         */\r\n        this.trackByDate = (index, day) => day.date.toISOString();\r\n        this.locale = locale;\r\n    }\r\n    /**\r\n     * @hidden\r\n     */\r\n    ngOnInit() {\r\n        if (this.refresh) {\r\n            this.refreshSubscription = this.refresh.subscribe(() => {\r\n                this.refreshAll();\r\n                this.cdr.markForCheck();\r\n            });\r\n        }\r\n    }\r\n    /**\r\n     * @hidden\r\n     */\r\n    ngOnChanges(changes) {\r\n        const refreshHeader = changes.viewDate || changes.excludeDays || changes.weekendDays;\r\n        const refreshBody = changes.viewDate ||\r\n            changes.events ||\r\n            changes.excludeDays ||\r\n            changes.weekendDays;\r\n        if (refreshHeader) {\r\n            this.refreshHeader();\r\n        }\r\n        if (changes.events) {\r\n            validateEvents(this.events);\r\n        }\r\n        if (refreshBody) {\r\n            this.refreshBody();\r\n        }\r\n        if (refreshHeader || refreshBody) {\r\n            this.emitBeforeViewRender();\r\n        }\r\n        if (changes.activeDayIsOpen ||\r\n            changes.viewDate ||\r\n            changes.events ||\r\n            changes.excludeDays ||\r\n            changes.activeDay) {\r\n            this.checkActiveDayIsOpen();\r\n        }\r\n    }\r\n    /**\r\n     * @hidden\r\n     */\r\n    ngOnDestroy() {\r\n        if (this.refreshSubscription) {\r\n            this.refreshSubscription.unsubscribe();\r\n        }\r\n    }\r\n    /**\r\n     * @hidden\r\n     */\r\n    toggleDayHighlight(event, isHighlighted) {\r\n        this.view.days.forEach((day) => {\r\n            if (isHighlighted && day.events.indexOf(event) > -1) {\r\n                day.backgroundColor =\r\n                    (event.color && event.color.secondary) || '#D1E8FF';\r\n            }\r\n            else {\r\n                delete day.backgroundColor;\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * @hidden\r\n     */\r\n    eventDropped(droppedOn, event, draggedFrom) {\r\n        if (droppedOn !== draggedFrom) {\r\n            const year = this.dateAdapter.getYear(droppedOn.date);\r\n            const month = this.dateAdapter.getMonth(droppedOn.date);\r\n            const date = this.dateAdapter.getDate(droppedOn.date);\r\n            const newStart = this.dateAdapter.setDate(this.dateAdapter.setMonth(this.dateAdapter.setYear(event.start, year), month), date);\r\n            let newEnd;\r\n            if (event.end) {\r\n                const secondsDiff = this.dateAdapter.differenceInSeconds(newStart, event.start);\r\n                newEnd = this.dateAdapter.addSeconds(event.end, secondsDiff);\r\n            }\r\n            this.eventTimesChanged.emit({\r\n                event,\r\n                newStart,\r\n                newEnd,\r\n                day: droppedOn,\r\n                type: CalendarEventTimesChangedEventType.Drop,\r\n            });\r\n        }\r\n    }\r\n    refreshHeader() {\r\n        this.columnHeaders = this.utils.getWeekViewHeader({\r\n            viewDate: this.viewDate,\r\n            weekStartsOn: this.weekStartsOn,\r\n            excluded: this.excludeDays,\r\n            weekendDays: this.weekendDays,\r\n        });\r\n    }\r\n    refreshBody() {\r\n        this.view = this.utils.getMonthView({\r\n            events: this.events,\r\n            viewDate: this.viewDate,\r\n            weekStartsOn: this.weekStartsOn,\r\n            excluded: this.excludeDays,\r\n            weekendDays: this.weekendDays,\r\n        });\r\n    }\r\n    checkActiveDayIsOpen() {\r\n        if (this.activeDayIsOpen === true) {\r\n            const activeDay = this.activeDay || this.viewDate;\r\n            this.openDay = this.view.days.find((day) => this.dateAdapter.isSameDay(day.date, activeDay));\r\n            const index = this.view.days.indexOf(this.openDay);\r\n            this.openRowIndex =\r\n                Math.floor(index / this.view.totalDaysVisibleInWeek) *\r\n                    this.view.totalDaysVisibleInWeek;\r\n        }\r\n        else {\r\n            this.openRowIndex = null;\r\n            this.openDay = null;\r\n        }\r\n    }\r\n    refreshAll() {\r\n        this.refreshHeader();\r\n        this.refreshBody();\r\n        this.emitBeforeViewRender();\r\n        this.checkActiveDayIsOpen();\r\n    }\r\n    emitBeforeViewRender() {\r\n        if (this.columnHeaders && this.view) {\r\n            this.beforeViewRender.emit({\r\n                header: this.columnHeaders,\r\n                body: this.view.days,\r\n                period: this.view.period,\r\n            });\r\n        }\r\n    }\r\n}\r\nCalendarMonthViewComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarMonthViewComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: CalendarUtils }, { token: LOCALE_ID }, { token: DateAdapter }], target: i0.ɵɵFactoryTarget.Component });\r\nCalendarMonthViewComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.0.4\", type: CalendarMonthViewComponent, selector: \"mwl-calendar-month-view\", inputs: { viewDate: \"viewDate\", events: \"events\", excludeDays: \"excludeDays\", activeDayIsOpen: \"activeDayIsOpen\", activeDay: \"activeDay\", refresh: \"refresh\", locale: \"locale\", tooltipPlacement: \"tooltipPlacement\", tooltipTemplate: \"tooltipTemplate\", tooltipAppendToBody: \"tooltipAppendToBody\", tooltipDelay: \"tooltipDelay\", weekStartsOn: \"weekStartsOn\", headerTemplate: \"headerTemplate\", cellTemplate: \"cellTemplate\", openDayEventsTemplate: \"openDayEventsTemplate\", eventTitleTemplate: \"eventTitleTemplate\", eventActionsTemplate: \"eventActionsTemplate\", weekendDays: \"weekendDays\" }, outputs: { beforeViewRender: \"beforeViewRender\", dayClicked: \"dayClicked\", eventClicked: \"eventClicked\", columnHeaderClicked: \"columnHeaderClicked\", eventTimesChanged: \"eventTimesChanged\" }, usesOnChanges: true, ngImport: i0, template: `\r\n    <div class=\"cal-month-view\" role=\"grid\">\r\n      <mwl-calendar-month-view-header\r\n        [days]=\"columnHeaders\"\r\n        [locale]=\"locale\"\r\n        (columnHeaderClicked)=\"columnHeaderClicked.emit($event)\"\r\n        [customTemplate]=\"headerTemplate\"\r\n      >\r\n      </mwl-calendar-month-view-header>\r\n      <div class=\"cal-days\">\r\n        <div\r\n          *ngFor=\"let rowIndex of view.rowOffsets; trackBy: trackByRowOffset\"\r\n        >\r\n          <div role=\"row\" class=\"cal-cell-row\">\r\n            <mwl-calendar-month-cell\r\n              role=\"gridcell\"\r\n              *ngFor=\"\r\n                let day of view.days\r\n                  | slice : rowIndex : rowIndex + view.totalDaysVisibleInWeek;\r\n                trackBy: trackByDate\r\n              \"\r\n              [ngClass]=\"day?.cssClass\"\r\n              [day]=\"day\"\r\n              [openDay]=\"openDay\"\r\n              [locale]=\"locale\"\r\n              [tooltipPlacement]=\"tooltipPlacement\"\r\n              [tooltipAppendToBody]=\"tooltipAppendToBody\"\r\n              [tooltipTemplate]=\"tooltipTemplate\"\r\n              [tooltipDelay]=\"tooltipDelay\"\r\n              [customTemplate]=\"cellTemplate\"\r\n              [ngStyle]=\"{ backgroundColor: day.backgroundColor }\"\r\n              (mwlClick)=\"dayClicked.emit({ day: day, sourceEvent: $event })\"\r\n              [clickListenerDisabled]=\"dayClicked.observers.length === 0\"\r\n              (mwlKeydownEnter)=\"\r\n                dayClicked.emit({ day: day, sourceEvent: $event })\r\n              \"\r\n              (highlightDay)=\"toggleDayHighlight($event.event, true)\"\r\n              (unhighlightDay)=\"toggleDayHighlight($event.event, false)\"\r\n              mwlDroppable\r\n              dragOverClass=\"cal-drag-over\"\r\n              (drop)=\"\r\n                eventDropped(\r\n                  day,\r\n                  $event.dropData.event,\r\n                  $event.dropData.draggedFrom\r\n                )\r\n              \"\r\n              (eventClicked)=\"\r\n                eventClicked.emit({\r\n                  event: $event.event,\r\n                  sourceEvent: $event.sourceEvent\r\n                })\r\n              \"\r\n              [attr.tabindex]=\"{} | calendarA11y : 'monthCellTabIndex'\"\r\n            >\r\n            </mwl-calendar-month-cell>\r\n          </div>\r\n          <mwl-calendar-open-day-events\r\n            [locale]=\"locale\"\r\n            [isOpen]=\"openRowIndex === rowIndex\"\r\n            [events]=\"openDay?.events\"\r\n            [date]=\"openDay?.date\"\r\n            [customTemplate]=\"openDayEventsTemplate\"\r\n            [eventTitleTemplate]=\"eventTitleTemplate\"\r\n            [eventActionsTemplate]=\"eventActionsTemplate\"\r\n            (eventClicked)=\"\r\n              eventClicked.emit({\r\n                event: $event.event,\r\n                sourceEvent: $event.sourceEvent\r\n              })\r\n            \"\r\n            mwlDroppable\r\n            dragOverClass=\"cal-drag-over\"\r\n            (drop)=\"\r\n              eventDropped(\r\n                openDay,\r\n                $event.dropData.event,\r\n                $event.dropData.draggedFrom\r\n              )\r\n            \"\r\n          >\r\n          </mwl-calendar-open-day-events>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  `, isInline: true, dependencies: [{ kind: \"directive\", type: i1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i1.NgStyle, selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }, { kind: \"directive\", type: i2.DroppableDirective, selector: \"[mwlDroppable]\", inputs: [\"dragOverClass\", \"dragActiveClass\", \"validateDrop\"], outputs: [\"dragEnter\", \"dragLeave\", \"dragOver\", \"drop\"] }, { kind: \"directive\", type: ClickDirective, selector: \"[mwlClick]\", inputs: [\"clickListenerDisabled\"], outputs: [\"mwlClick\"] }, { kind: \"directive\", type: KeydownEnterDirective, selector: \"[mwlKeydownEnter]\", outputs: [\"mwlKeydownEnter\"] }, { kind: \"component\", type: CalendarMonthCellComponent, selector: \"mwl-calendar-month-cell\", inputs: [\"day\", \"openDay\", \"locale\", \"tooltipPlacement\", \"tooltipAppendToBody\", \"customTemplate\", \"tooltipTemplate\", \"tooltipDelay\"], outputs: [\"highlightDay\", \"unhighlightDay\", \"eventClicked\"] }, { kind: \"component\", type: CalendarOpenDayEventsComponent, selector: \"mwl-calendar-open-day-events\", inputs: [\"locale\", \"isOpen\", \"events\", \"customTemplate\", \"eventTitleTemplate\", \"eventActionsTemplate\", \"date\"], outputs: [\"eventClicked\"] }, { kind: \"component\", type: CalendarMonthViewHeaderComponent, selector: \"mwl-calendar-month-view-header\", inputs: [\"days\", \"locale\", \"customTemplate\"], outputs: [\"columnHeaderClicked\"] }, { kind: \"pipe\", type: i1.SlicePipe, name: \"slice\" }, { kind: \"pipe\", type: CalendarA11yPipe, name: \"calendarA11y\" }] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarMonthViewComponent, decorators: [{\r\n            type: Component,\r\n            args: [{\r\n                    selector: 'mwl-calendar-month-view',\r\n                    template: `\r\n    <div class=\"cal-month-view\" role=\"grid\">\r\n      <mwl-calendar-month-view-header\r\n        [days]=\"columnHeaders\"\r\n        [locale]=\"locale\"\r\n        (columnHeaderClicked)=\"columnHeaderClicked.emit($event)\"\r\n        [customTemplate]=\"headerTemplate\"\r\n      >\r\n      </mwl-calendar-month-view-header>\r\n      <div class=\"cal-days\">\r\n        <div\r\n          *ngFor=\"let rowIndex of view.rowOffsets; trackBy: trackByRowOffset\"\r\n        >\r\n          <div role=\"row\" class=\"cal-cell-row\">\r\n            <mwl-calendar-month-cell\r\n              role=\"gridcell\"\r\n              *ngFor=\"\r\n                let day of view.days\r\n                  | slice : rowIndex : rowIndex + view.totalDaysVisibleInWeek;\r\n                trackBy: trackByDate\r\n              \"\r\n              [ngClass]=\"day?.cssClass\"\r\n              [day]=\"day\"\r\n              [openDay]=\"openDay\"\r\n              [locale]=\"locale\"\r\n              [tooltipPlacement]=\"tooltipPlacement\"\r\n              [tooltipAppendToBody]=\"tooltipAppendToBody\"\r\n              [tooltipTemplate]=\"tooltipTemplate\"\r\n              [tooltipDelay]=\"tooltipDelay\"\r\n              [customTemplate]=\"cellTemplate\"\r\n              [ngStyle]=\"{ backgroundColor: day.backgroundColor }\"\r\n              (mwlClick)=\"dayClicked.emit({ day: day, sourceEvent: $event })\"\r\n              [clickListenerDisabled]=\"dayClicked.observers.length === 0\"\r\n              (mwlKeydownEnter)=\"\r\n                dayClicked.emit({ day: day, sourceEvent: $event })\r\n              \"\r\n              (highlightDay)=\"toggleDayHighlight($event.event, true)\"\r\n              (unhighlightDay)=\"toggleDayHighlight($event.event, false)\"\r\n              mwlDroppable\r\n              dragOverClass=\"cal-drag-over\"\r\n              (drop)=\"\r\n                eventDropped(\r\n                  day,\r\n                  $event.dropData.event,\r\n                  $event.dropData.draggedFrom\r\n                )\r\n              \"\r\n              (eventClicked)=\"\r\n                eventClicked.emit({\r\n                  event: $event.event,\r\n                  sourceEvent: $event.sourceEvent\r\n                })\r\n              \"\r\n              [attr.tabindex]=\"{} | calendarA11y : 'monthCellTabIndex'\"\r\n            >\r\n            </mwl-calendar-month-cell>\r\n          </div>\r\n          <mwl-calendar-open-day-events\r\n            [locale]=\"locale\"\r\n            [isOpen]=\"openRowIndex === rowIndex\"\r\n            [events]=\"openDay?.events\"\r\n            [date]=\"openDay?.date\"\r\n            [customTemplate]=\"openDayEventsTemplate\"\r\n            [eventTitleTemplate]=\"eventTitleTemplate\"\r\n            [eventActionsTemplate]=\"eventActionsTemplate\"\r\n            (eventClicked)=\"\r\n              eventClicked.emit({\r\n                event: $event.event,\r\n                sourceEvent: $event.sourceEvent\r\n              })\r\n            \"\r\n            mwlDroppable\r\n            dragOverClass=\"cal-drag-over\"\r\n            (drop)=\"\r\n              eventDropped(\r\n                openDay,\r\n                $event.dropData.event,\r\n                $event.dropData.draggedFrom\r\n              )\r\n            \"\r\n          >\r\n          </mwl-calendar-open-day-events>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  `,\r\n                }]\r\n        }], ctorParameters: function () {\r\n        return [{ type: i0.ChangeDetectorRef }, { type: CalendarUtils }, { type: undefined, decorators: [{\r\n                        type: Inject,\r\n                        args: [LOCALE_ID]\r\n                    }] }, { type: DateAdapter }];\r\n    }, propDecorators: { viewDate: [{\r\n                type: Input\r\n            }], events: [{\r\n                type: Input\r\n            }], excludeDays: [{\r\n                type: Input\r\n            }], activeDayIsOpen: [{\r\n                type: Input\r\n            }], activeDay: [{\r\n                type: Input\r\n            }], refresh: [{\r\n                type: Input\r\n            }], locale: [{\r\n                type: Input\r\n            }], tooltipPlacement: [{\r\n                type: Input\r\n            }], tooltipTemplate: [{\r\n                type: Input\r\n            }], tooltipAppendToBody: [{\r\n                type: Input\r\n            }], tooltipDelay: [{\r\n                type: Input\r\n            }], weekStartsOn: [{\r\n                type: Input\r\n            }], headerTemplate: [{\r\n                type: Input\r\n            }], cellTemplate: [{\r\n                type: Input\r\n            }], openDayEventsTemplate: [{\r\n                type: Input\r\n            }], eventTitleTemplate: [{\r\n                type: Input\r\n            }], eventActionsTemplate: [{\r\n                type: Input\r\n            }], weekendDays: [{\r\n                type: Input\r\n            }], beforeViewRender: [{\r\n                type: Output\r\n            }], dayClicked: [{\r\n                type: Output\r\n            }], eventClicked: [{\r\n                type: Output\r\n            }], columnHeaderClicked: [{\r\n                type: Output\r\n            }], eventTimesChanged: [{\r\n                type: Output\r\n            }] } });\n\nclass CalendarMonthModule {\r\n}\r\nCalendarMonthModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarMonthModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\r\nCalendarMonthModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarMonthModule, declarations: [CalendarMonthViewComponent,\r\n        CalendarMonthCellComponent,\r\n        CalendarOpenDayEventsComponent,\r\n        CalendarMonthViewHeaderComponent], imports: [CommonModule, DragAndDropModule, CalendarCommonModule], exports: [DragAndDropModule,\r\n        CalendarMonthViewComponent,\r\n        CalendarMonthCellComponent,\r\n        CalendarOpenDayEventsComponent,\r\n        CalendarMonthViewHeaderComponent] });\r\nCalendarMonthModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarMonthModule, imports: [CommonModule, DragAndDropModule, CalendarCommonModule, DragAndDropModule] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarMonthModule, decorators: [{\r\n            type: NgModule,\r\n            args: [{\r\n                    imports: [CommonModule, DragAndDropModule, CalendarCommonModule],\r\n                    declarations: [\r\n                        CalendarMonthViewComponent,\r\n                        CalendarMonthCellComponent,\r\n                        CalendarOpenDayEventsComponent,\r\n                        CalendarMonthViewHeaderComponent,\r\n                    ],\r\n                    exports: [\r\n                        DragAndDropModule,\r\n                        CalendarMonthViewComponent,\r\n                        CalendarMonthCellComponent,\r\n                        CalendarOpenDayEventsComponent,\r\n                        CalendarMonthViewHeaderComponent,\r\n                    ],\r\n                }]\r\n        }] });\n\nclass CalendarComponent {\r\n    constructor() { }\r\n    ngOnInit() { }\r\n}\r\nCalendarComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\r\nCalendarComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.0.4\", type: CalendarComponent, selector: \"calendar-name\", ngImport: i0, template: \"\", styles: [\"@charset \\\"UTF-8\\\";.cal-month-view .cal-header{text-align:center;font-weight:bolder}.cal-month-view .cal-header .cal-cell{padding:5px 0;overflow:hidden;text-overflow:ellipsis;display:block;white-space:nowrap}.cal-month-view .cal-days{border:1px solid;border-bottom:0}.cal-month-view .cal-cell-top{min-height:78px;flex:1}.cal-month-view .cal-cell-row{display:flex}.cal-month-view .cal-cell{float:left;flex:1;display:flex;flex-direction:column;align-items:stretch}.cal-month-view .cal-cell .cal-event{pointer-events:all!important}.cal-month-view .cal-day-cell{min-height:100px}.cal-month-view .cal-day-cell:not(:last-child){border-right:1px solid}[dir=rtl] .cal-month-view .cal-day-cell:not(:last-child){border-right:initial;border-left:1px solid}.cal-month-view .cal-days .cal-cell-row{border-bottom:1px solid}.cal-month-view .cal-day-badge{margin-top:18px;margin-left:10px;display:inline-block;min-width:10px;padding:3px 7px;font-size:12px;font-weight:700;line-height:1;text-align:center;white-space:nowrap;vertical-align:middle;border-radius:10px;float:left}.cal-month-view .cal-day-number{font-size:1.2em;font-weight:400;opacity:.5;margin-top:15px;margin-right:15px;float:right;margin-bottom:10px}.cal-month-view .cal-events{flex:1;align-items:flex-end;margin:3px;line-height:10px;display:flex;flex-wrap:wrap}.cal-month-view .cal-event{width:10px;height:10px;border-radius:50%;display:inline-block;margin:2px}.cal-month-view .cal-day-cell.cal-in-month.cal-has-events{cursor:pointer}.cal-month-view .cal-day-cell.cal-out-month .cal-day-number{opacity:.1;cursor:default}.cal-month-view .cal-day-cell.cal-today .cal-day-number{font-size:1.9em}.cal-month-view .cal-open-day-events{padding:15px}.cal-month-view .cal-open-day-events .cal-event{position:relative;top:2px}.cal-month-view .cal-out-month .cal-day-badge,.cal-month-view .cal-out-month .cal-event{opacity:.3}.cal-month-view .cal-draggable{cursor:move}.cal-month-view .cal-drag-active *{pointer-events:none}.cal-month-view .cal-event-title{cursor:pointer}.cal-month-view .cal-event-title:hover{text-decoration:underline}.cal-month-view{background-color:#fff}.cal-month-view .cal-cell-row:hover{background-color:#fafafa}.cal-month-view .cal-cell-row .cal-cell:hover,.cal-month-view .cal-cell.cal-has-events.cal-open{background-color:#ededed}.cal-month-view .cal-days{border-color:#e1e1e1}.cal-month-view .cal-day-cell:not(:last-child){border-right-color:#e1e1e1}[dir=rtl] .cal-month-view .cal-day-cell:not(:last-child){border-right-color:initial;border-left-color:#e1e1e1}.cal-month-view .cal-days .cal-cell-row{border-bottom-color:#e1e1e1}.cal-month-view .cal-day-badge{background-color:#b94a48;color:#fff}.cal-month-view .cal-event{background-color:#1e90ff;border-color:#d1e8ff;color:#fff}.cal-month-view .cal-day-cell.cal-weekend .cal-day-number{color:#8b0000}.cal-month-view .cal-day-cell.cal-today{background-color:#e8fde7}.cal-month-view .cal-day-cell.cal-drag-over{background-color:#e0e0e0!important}.cal-month-view .cal-open-day-events{color:#fff;background-color:#555;box-shadow:inset 0 0 15px #00000080}.cal-week-view *{box-sizing:border-box}.cal-week-view .cal-day-headers{display:flex;padding-left:70px;border:1px solid}[dir=rtl] .cal-week-view .cal-day-headers{padding-left:initial;padding-right:70px}.cal-week-view .cal-day-headers .cal-header{flex:1;text-align:center;padding:5px}.cal-week-view .cal-day-headers .cal-header:not(:last-child){border-right:1px solid}[dir=rtl] .cal-week-view .cal-day-headers .cal-header:not(:last-child){border-right:initial;border-left:1px solid}.cal-week-view .cal-day-headers .cal-header:first-child{border-left:1px solid}[dir=rtl] .cal-week-view .cal-day-headers .cal-header:first-child{border-left:initial;border-right:1px solid}.cal-week-view .cal-day-headers span{font-weight:400;opacity:.5}.cal-week-view .cal-day-column{flex-grow:1;border-left:solid 1px}[dir=rtl] .cal-week-view .cal-day-column{border-left:initial;border-right:solid 1px}.cal-week-view .cal-event{font-size:12px;border:1px solid;direction:ltr}.cal-week-view .cal-time-label-column{width:70px;height:100%}.cal-week-view .cal-current-time-marker{position:absolute;width:100%;height:2px;z-index:2}.cal-week-view .cal-all-day-events{border:solid 1px;border-top:0;border-bottom-width:3px;padding-top:3px;position:relative}.cal-week-view .cal-all-day-events .cal-day-columns{height:100%;width:100%;display:flex;position:absolute;top:0;z-index:0}.cal-week-view .cal-all-day-events .cal-events-row{position:relative;height:31px;margin-left:70px}[dir=rtl] .cal-week-view .cal-all-day-events .cal-events-row{margin-left:initial;margin-right:70px}.cal-week-view .cal-all-day-events .cal-event-container{display:inline-block;position:absolute}.cal-week-view .cal-all-day-events .cal-event-container.resize-active{z-index:1;pointer-events:none}.cal-week-view .cal-all-day-events .cal-event{padding:0 5px;margin-left:2px;margin-right:2px;height:28px;line-height:28px}.cal-week-view .cal-all-day-events .cal-starts-within-week .cal-event{border-top-left-radius:5px;border-bottom-left-radius:5px}[dir=rtl] .cal-week-view .cal-all-day-events .cal-starts-within-week .cal-event{border-top-left-radius:initial;border-bottom-left-radius:initial;border-top-right-radius:5px!important;border-bottom-right-radius:5px!important}.cal-week-view .cal-all-day-events .cal-ends-within-week .cal-event{border-top-right-radius:5px;border-bottom-right-radius:5px}[dir=rtl] .cal-week-view .cal-all-day-events .cal-ends-within-week .cal-event{border-top-right-radius:initial;border-bottom-right-radius:initial;border-top-left-radius:5px;border-bottom-left-radius:5px}.cal-week-view .cal-all-day-events .cal-time-label-column{display:flex;align-items:center;justify-content:center;font-size:14px}.cal-week-view .cal-all-day-events .cal-resize-handle{width:6px;height:100%;cursor:col-resize;position:absolute;top:0}.cal-week-view .cal-all-day-events .cal-resize-handle.cal-resize-handle-after-end{right:0}[dir=rtl] .cal-week-view .cal-all-day-events .cal-resize-handle.cal-resize-handle-after-end{right:initial;left:0}.cal-week-view .cal-event,.cal-week-view .cal-header{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.cal-week-view .cal-drag-active{pointer-events:none;z-index:1}.cal-week-view .cal-drag-active *{pointer-events:none}.cal-week-view .cal-time-events{position:relative;border:solid 1px;border-top:0;display:flex}.cal-week-view .cal-time-events .cal-day-columns{display:flex;flex-grow:1}.cal-week-view .cal-time-events .cal-day-column,.cal-week-view .cal-time-events .cal-events-container{position:relative}.cal-week-view .cal-time-events .cal-event-container{position:absolute;z-index:1}.cal-week-view .cal-time-events .cal-event{width:calc(100% - 2px);height:calc(100% - 2px);margin:1px;padding:0 5px;line-height:25px}.cal-week-view .cal-time-events .cal-resize-handle{width:100%;height:4px;cursor:row-resize;position:absolute}.cal-week-view .cal-time-events .cal-resize-handle.cal-resize-handle-after-end{bottom:0}.cal-week-view .cal-hour-segment{position:relative}.cal-week-view .cal-hour-segment:after{content:\\\"\\\\a0\\\"}.cal-week-view .cal-event-container:not(.cal-draggable){cursor:pointer}.cal-week-view .cal-draggable{cursor:move}.cal-week-view mwl-calendar-week-view-hour-segment,.cal-week-view .cal-hour-segment{display:block}.cal-week-view .cal-hour:not(:last-child) .cal-hour-segment,.cal-week-view .cal-hour:last-child :not(:last-child) .cal-hour-segment{border-bottom:thin dashed}.cal-week-view .cal-time{font-weight:700;padding-top:5px;width:70px;text-align:center}.cal-week-view .cal-hour-segment.cal-after-hour-start .cal-time{display:none}.cal-week-view .cal-starts-within-day .cal-event{border-top-left-radius:5px;border-top-right-radius:5px}.cal-week-view .cal-ends-within-day .cal-event{border-bottom-left-radius:5px;border-bottom-right-radius:5px}.cal-week-view{background-color:#fff;border-top:solid 1px #e1e1e1}.cal-week-view .cal-day-headers{border-color:#e1e1e1;border-top:0}.cal-week-view .cal-day-headers .cal-header:not(:last-child){border-right-color:#e1e1e1}[dir=rtl] .cal-week-view .cal-day-headers .cal-header:not(:last-child){border-right-color:initial;border-left:solid 1px #e1e1e1!important}.cal-week-view .cal-day-headers .cal-header:first-child{border-left-color:#e1e1e1}[dir=rtl] .cal-week-view .cal-day-headers .cal-header:first-child{border-left-color:initial;border-right-color:#e1e1e1}.cal-week-view .cal-day-headers .cal-header:hover,.cal-week-view .cal-day-headers .cal-drag-over{background-color:#ededed}.cal-week-view .cal-day-column{border-left-color:#e1e1e1}[dir=rtl] .cal-week-view .cal-day-column{border-left-color:initial;border-right-color:#e1e1e1}.cal-week-view .cal-event{background-color:#d1e8ff;border-color:#1e90ff;color:#1e90ff}.cal-week-view .cal-all-day-events{border-color:#e1e1e1}.cal-week-view .cal-header.cal-today{background-color:#e8fde7}.cal-week-view .cal-header.cal-weekend span{color:#8b0000}.cal-week-view .cal-time-events{border-color:#e1e1e1}.cal-week-view .cal-time-events .cal-day-columns:not(.cal-resize-active) .cal-hour-segment:hover{background-color:#ededed}.cal-week-view .cal-hour-odd{background-color:#fafafa}.cal-week-view .cal-drag-over .cal-hour-segment{background-color:#ededed}.cal-week-view .cal-hour:not(:last-child) .cal-hour-segment,.cal-week-view .cal-hour:last-child :not(:last-child) .cal-hour-segment{border-bottom-color:#e1e1e1}.cal-week-view .cal-current-time-marker{background-color:#ea4334}.cal-day-view mwl-calendar-week-view-header{display:none}.cal-day-view .cal-events-container{margin-left:70px}[dir=rtl] .cal-day-view .cal-events-container{margin-left:initial;margin-right:70px}.cal-day-view .cal-day-column{border-left:0}.cal-day-view .cal-current-time-marker{margin-left:70px;width:calc(100% - 70px)}[dir=rtl] .cal-day-view .cal-current-time-marker{margin-left:initial;margin-right:70px}.cal-tooltip{position:absolute;z-index:1070;display:block;font-style:normal;font-weight:400;letter-spacing:normal;line-break:auto;line-height:1.5;text-align:start;text-decoration:none;text-shadow:none;text-transform:none;white-space:normal;word-break:normal;word-spacing:normal;font-size:11px;word-wrap:break-word;opacity:.9}.cal-tooltip.cal-tooltip-top{padding:5px 0;margin-top:-3px}.cal-tooltip.cal-tooltip-top .cal-tooltip-arrow{bottom:0;left:50%;margin-left:-5px;border-width:5px 5px 0}.cal-tooltip.cal-tooltip-right{padding:0 5px;margin-left:3px}.cal-tooltip.cal-tooltip-right .cal-tooltip-arrow{top:50%;left:0;margin-top:-5px;border-width:5px 5px 5px 0}.cal-tooltip.cal-tooltip-bottom{padding:5px 0;margin-top:3px}.cal-tooltip.cal-tooltip-bottom .cal-tooltip-arrow{top:0;left:50%;margin-left:-5px;border-width:0 5px 5px}.cal-tooltip.cal-tooltip-left{padding:0 5px;margin-left:-3px}.cal-tooltip.cal-tooltip-left .cal-tooltip-arrow{top:50%;right:0;margin-top:-5px;border-width:5px 0 5px 5px}.cal-tooltip-inner{max-width:200px;padding:3px 8px;text-align:center;border-radius:.25rem}.cal-tooltip-arrow{position:absolute;width:0;height:0;border-color:transparent;border-style:solid}.cal-tooltip.cal-tooltip-top .cal-tooltip-arrow{border-top-color:#000}.cal-tooltip.cal-tooltip-right .cal-tooltip-arrow{border-right-color:#000}.cal-tooltip.cal-tooltip-bottom .cal-tooltip-arrow{border-bottom-color:#000}.cal-tooltip.cal-tooltip-left .cal-tooltip-arrow{border-left-color:#000}.cal-tooltip-inner{color:#fff;background-color:#000}\\n\"] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarComponent, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'calendar-name', template: \"\", styles: [\"@charset \\\"UTF-8\\\";.cal-month-view .cal-header{text-align:center;font-weight:bolder}.cal-month-view .cal-header .cal-cell{padding:5px 0;overflow:hidden;text-overflow:ellipsis;display:block;white-space:nowrap}.cal-month-view .cal-days{border:1px solid;border-bottom:0}.cal-month-view .cal-cell-top{min-height:78px;flex:1}.cal-month-view .cal-cell-row{display:flex}.cal-month-view .cal-cell{float:left;flex:1;display:flex;flex-direction:column;align-items:stretch}.cal-month-view .cal-cell .cal-event{pointer-events:all!important}.cal-month-view .cal-day-cell{min-height:100px}.cal-month-view .cal-day-cell:not(:last-child){border-right:1px solid}[dir=rtl] .cal-month-view .cal-day-cell:not(:last-child){border-right:initial;border-left:1px solid}.cal-month-view .cal-days .cal-cell-row{border-bottom:1px solid}.cal-month-view .cal-day-badge{margin-top:18px;margin-left:10px;display:inline-block;min-width:10px;padding:3px 7px;font-size:12px;font-weight:700;line-height:1;text-align:center;white-space:nowrap;vertical-align:middle;border-radius:10px;float:left}.cal-month-view .cal-day-number{font-size:1.2em;font-weight:400;opacity:.5;margin-top:15px;margin-right:15px;float:right;margin-bottom:10px}.cal-month-view .cal-events{flex:1;align-items:flex-end;margin:3px;line-height:10px;display:flex;flex-wrap:wrap}.cal-month-view .cal-event{width:10px;height:10px;border-radius:50%;display:inline-block;margin:2px}.cal-month-view .cal-day-cell.cal-in-month.cal-has-events{cursor:pointer}.cal-month-view .cal-day-cell.cal-out-month .cal-day-number{opacity:.1;cursor:default}.cal-month-view .cal-day-cell.cal-today .cal-day-number{font-size:1.9em}.cal-month-view .cal-open-day-events{padding:15px}.cal-month-view .cal-open-day-events .cal-event{position:relative;top:2px}.cal-month-view .cal-out-month .cal-day-badge,.cal-month-view .cal-out-month .cal-event{opacity:.3}.cal-month-view .cal-draggable{cursor:move}.cal-month-view .cal-drag-active *{pointer-events:none}.cal-month-view .cal-event-title{cursor:pointer}.cal-month-view .cal-event-title:hover{text-decoration:underline}.cal-month-view{background-color:#fff}.cal-month-view .cal-cell-row:hover{background-color:#fafafa}.cal-month-view .cal-cell-row .cal-cell:hover,.cal-month-view .cal-cell.cal-has-events.cal-open{background-color:#ededed}.cal-month-view .cal-days{border-color:#e1e1e1}.cal-month-view .cal-day-cell:not(:last-child){border-right-color:#e1e1e1}[dir=rtl] .cal-month-view .cal-day-cell:not(:last-child){border-right-color:initial;border-left-color:#e1e1e1}.cal-month-view .cal-days .cal-cell-row{border-bottom-color:#e1e1e1}.cal-month-view .cal-day-badge{background-color:#b94a48;color:#fff}.cal-month-view .cal-event{background-color:#1e90ff;border-color:#d1e8ff;color:#fff}.cal-month-view .cal-day-cell.cal-weekend .cal-day-number{color:#8b0000}.cal-month-view .cal-day-cell.cal-today{background-color:#e8fde7}.cal-month-view .cal-day-cell.cal-drag-over{background-color:#e0e0e0!important}.cal-month-view .cal-open-day-events{color:#fff;background-color:#555;box-shadow:inset 0 0 15px #00000080}.cal-week-view *{box-sizing:border-box}.cal-week-view .cal-day-headers{display:flex;padding-left:70px;border:1px solid}[dir=rtl] .cal-week-view .cal-day-headers{padding-left:initial;padding-right:70px}.cal-week-view .cal-day-headers .cal-header{flex:1;text-align:center;padding:5px}.cal-week-view .cal-day-headers .cal-header:not(:last-child){border-right:1px solid}[dir=rtl] .cal-week-view .cal-day-headers .cal-header:not(:last-child){border-right:initial;border-left:1px solid}.cal-week-view .cal-day-headers .cal-header:first-child{border-left:1px solid}[dir=rtl] .cal-week-view .cal-day-headers .cal-header:first-child{border-left:initial;border-right:1px solid}.cal-week-view .cal-day-headers span{font-weight:400;opacity:.5}.cal-week-view .cal-day-column{flex-grow:1;border-left:solid 1px}[dir=rtl] .cal-week-view .cal-day-column{border-left:initial;border-right:solid 1px}.cal-week-view .cal-event{font-size:12px;border:1px solid;direction:ltr}.cal-week-view .cal-time-label-column{width:70px;height:100%}.cal-week-view .cal-current-time-marker{position:absolute;width:100%;height:2px;z-index:2}.cal-week-view .cal-all-day-events{border:solid 1px;border-top:0;border-bottom-width:3px;padding-top:3px;position:relative}.cal-week-view .cal-all-day-events .cal-day-columns{height:100%;width:100%;display:flex;position:absolute;top:0;z-index:0}.cal-week-view .cal-all-day-events .cal-events-row{position:relative;height:31px;margin-left:70px}[dir=rtl] .cal-week-view .cal-all-day-events .cal-events-row{margin-left:initial;margin-right:70px}.cal-week-view .cal-all-day-events .cal-event-container{display:inline-block;position:absolute}.cal-week-view .cal-all-day-events .cal-event-container.resize-active{z-index:1;pointer-events:none}.cal-week-view .cal-all-day-events .cal-event{padding:0 5px;margin-left:2px;margin-right:2px;height:28px;line-height:28px}.cal-week-view .cal-all-day-events .cal-starts-within-week .cal-event{border-top-left-radius:5px;border-bottom-left-radius:5px}[dir=rtl] .cal-week-view .cal-all-day-events .cal-starts-within-week .cal-event{border-top-left-radius:initial;border-bottom-left-radius:initial;border-top-right-radius:5px!important;border-bottom-right-radius:5px!important}.cal-week-view .cal-all-day-events .cal-ends-within-week .cal-event{border-top-right-radius:5px;border-bottom-right-radius:5px}[dir=rtl] .cal-week-view .cal-all-day-events .cal-ends-within-week .cal-event{border-top-right-radius:initial;border-bottom-right-radius:initial;border-top-left-radius:5px;border-bottom-left-radius:5px}.cal-week-view .cal-all-day-events .cal-time-label-column{display:flex;align-items:center;justify-content:center;font-size:14px}.cal-week-view .cal-all-day-events .cal-resize-handle{width:6px;height:100%;cursor:col-resize;position:absolute;top:0}.cal-week-view .cal-all-day-events .cal-resize-handle.cal-resize-handle-after-end{right:0}[dir=rtl] .cal-week-view .cal-all-day-events .cal-resize-handle.cal-resize-handle-after-end{right:initial;left:0}.cal-week-view .cal-event,.cal-week-view .cal-header{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.cal-week-view .cal-drag-active{pointer-events:none;z-index:1}.cal-week-view .cal-drag-active *{pointer-events:none}.cal-week-view .cal-time-events{position:relative;border:solid 1px;border-top:0;display:flex}.cal-week-view .cal-time-events .cal-day-columns{display:flex;flex-grow:1}.cal-week-view .cal-time-events .cal-day-column,.cal-week-view .cal-time-events .cal-events-container{position:relative}.cal-week-view .cal-time-events .cal-event-container{position:absolute;z-index:1}.cal-week-view .cal-time-events .cal-event{width:calc(100% - 2px);height:calc(100% - 2px);margin:1px;padding:0 5px;line-height:25px}.cal-week-view .cal-time-events .cal-resize-handle{width:100%;height:4px;cursor:row-resize;position:absolute}.cal-week-view .cal-time-events .cal-resize-handle.cal-resize-handle-after-end{bottom:0}.cal-week-view .cal-hour-segment{position:relative}.cal-week-view .cal-hour-segment:after{content:\\\"\\\\a0\\\"}.cal-week-view .cal-event-container:not(.cal-draggable){cursor:pointer}.cal-week-view .cal-draggable{cursor:move}.cal-week-view mwl-calendar-week-view-hour-segment,.cal-week-view .cal-hour-segment{display:block}.cal-week-view .cal-hour:not(:last-child) .cal-hour-segment,.cal-week-view .cal-hour:last-child :not(:last-child) .cal-hour-segment{border-bottom:thin dashed}.cal-week-view .cal-time{font-weight:700;padding-top:5px;width:70px;text-align:center}.cal-week-view .cal-hour-segment.cal-after-hour-start .cal-time{display:none}.cal-week-view .cal-starts-within-day .cal-event{border-top-left-radius:5px;border-top-right-radius:5px}.cal-week-view .cal-ends-within-day .cal-event{border-bottom-left-radius:5px;border-bottom-right-radius:5px}.cal-week-view{background-color:#fff;border-top:solid 1px #e1e1e1}.cal-week-view .cal-day-headers{border-color:#e1e1e1;border-top:0}.cal-week-view .cal-day-headers .cal-header:not(:last-child){border-right-color:#e1e1e1}[dir=rtl] .cal-week-view .cal-day-headers .cal-header:not(:last-child){border-right-color:initial;border-left:solid 1px #e1e1e1!important}.cal-week-view .cal-day-headers .cal-header:first-child{border-left-color:#e1e1e1}[dir=rtl] .cal-week-view .cal-day-headers .cal-header:first-child{border-left-color:initial;border-right-color:#e1e1e1}.cal-week-view .cal-day-headers .cal-header:hover,.cal-week-view .cal-day-headers .cal-drag-over{background-color:#ededed}.cal-week-view .cal-day-column{border-left-color:#e1e1e1}[dir=rtl] .cal-week-view .cal-day-column{border-left-color:initial;border-right-color:#e1e1e1}.cal-week-view .cal-event{background-color:#d1e8ff;border-color:#1e90ff;color:#1e90ff}.cal-week-view .cal-all-day-events{border-color:#e1e1e1}.cal-week-view .cal-header.cal-today{background-color:#e8fde7}.cal-week-view .cal-header.cal-weekend span{color:#8b0000}.cal-week-view .cal-time-events{border-color:#e1e1e1}.cal-week-view .cal-time-events .cal-day-columns:not(.cal-resize-active) .cal-hour-segment:hover{background-color:#ededed}.cal-week-view .cal-hour-odd{background-color:#fafafa}.cal-week-view .cal-drag-over .cal-hour-segment{background-color:#ededed}.cal-week-view .cal-hour:not(:last-child) .cal-hour-segment,.cal-week-view .cal-hour:last-child :not(:last-child) .cal-hour-segment{border-bottom-color:#e1e1e1}.cal-week-view .cal-current-time-marker{background-color:#ea4334}.cal-day-view mwl-calendar-week-view-header{display:none}.cal-day-view .cal-events-container{margin-left:70px}[dir=rtl] .cal-day-view .cal-events-container{margin-left:initial;margin-right:70px}.cal-day-view .cal-day-column{border-left:0}.cal-day-view .cal-current-time-marker{margin-left:70px;width:calc(100% - 70px)}[dir=rtl] .cal-day-view .cal-current-time-marker{margin-left:initial;margin-right:70px}.cal-tooltip{position:absolute;z-index:1070;display:block;font-style:normal;font-weight:400;letter-spacing:normal;line-break:auto;line-height:1.5;text-align:start;text-decoration:none;text-shadow:none;text-transform:none;white-space:normal;word-break:normal;word-spacing:normal;font-size:11px;word-wrap:break-word;opacity:.9}.cal-tooltip.cal-tooltip-top{padding:5px 0;margin-top:-3px}.cal-tooltip.cal-tooltip-top .cal-tooltip-arrow{bottom:0;left:50%;margin-left:-5px;border-width:5px 5px 0}.cal-tooltip.cal-tooltip-right{padding:0 5px;margin-left:3px}.cal-tooltip.cal-tooltip-right .cal-tooltip-arrow{top:50%;left:0;margin-top:-5px;border-width:5px 5px 5px 0}.cal-tooltip.cal-tooltip-bottom{padding:5px 0;margin-top:3px}.cal-tooltip.cal-tooltip-bottom .cal-tooltip-arrow{top:0;left:50%;margin-left:-5px;border-width:0 5px 5px}.cal-tooltip.cal-tooltip-left{padding:0 5px;margin-left:-3px}.cal-tooltip.cal-tooltip-left .cal-tooltip-arrow{top:50%;right:0;margin-top:-5px;border-width:5px 0 5px 5px}.cal-tooltip-inner{max-width:200px;padding:3px 8px;text-align:center;border-radius:.25rem}.cal-tooltip-arrow{position:absolute;width:0;height:0;border-color:transparent;border-style:solid}.cal-tooltip.cal-tooltip-top .cal-tooltip-arrow{border-top-color:#000}.cal-tooltip.cal-tooltip-right .cal-tooltip-arrow{border-right-color:#000}.cal-tooltip.cal-tooltip-bottom .cal-tooltip-arrow{border-bottom-color:#000}.cal-tooltip.cal-tooltip-left .cal-tooltip-arrow{border-left-color:#000}.cal-tooltip-inner{color:#fff;background-color:#000}\\n\"] }]\r\n        }], ctorParameters: function () { return []; } });\n\nclass CalendarModule {\r\n    static forRoot(dateAdapter, config = {}) {\r\n        return {\r\n            ngModule: CalendarModule,\r\n            providers: [\r\n                dateAdapter,\r\n                config.eventTitleFormatter || CalendarEventTitleFormatter,\r\n                config.dateFormatter || CalendarDateFormatter,\r\n                config.utils || CalendarUtils,\r\n                config.a11y || CalendarA11y,\r\n            ],\r\n        };\r\n    }\r\n}\r\nCalendarModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\r\nCalendarModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarModule, declarations: [CalendarComponent], imports: [CalendarMonthModule,\r\n        CalendarWeekModule,\r\n        CalendarDayModule,\r\n        CalendarCommonModule], exports: [CalendarComponent,\r\n        CalendarMonthModule,\r\n        CalendarWeekModule,\r\n        CalendarDayModule,\r\n        CalendarCommonModule] });\r\nCalendarModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarModule, imports: [CalendarMonthModule,\r\n        CalendarWeekModule,\r\n        CalendarDayModule,\r\n        CalendarCommonModule, CalendarMonthModule,\r\n        CalendarWeekModule,\r\n        CalendarDayModule,\r\n        CalendarCommonModule] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.4\", ngImport: i0, type: CalendarModule, decorators: [{\r\n            type: NgModule,\r\n            args: [{\r\n                    declarations: [\r\n                        CalendarComponent\r\n                    ],\r\n                    imports: [\r\n                        CalendarMonthModule,\r\n                        CalendarWeekModule,\r\n                        CalendarDayModule,\r\n                        CalendarCommonModule\r\n                    ],\r\n                    exports: [\r\n                        CalendarComponent,\r\n                        CalendarMonthModule,\r\n                        CalendarWeekModule,\r\n                        CalendarDayModule,\r\n                        CalendarCommonModule\r\n                    ]\r\n                }]\r\n        }] });\n\n/*\r\n * Public API Surface of ng-calendar-schedule\r\n */\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { CalendarA11y, CalendarAngularDateFormatter, CalendarCommonModule, CalendarComponent, CalendarDateFormatter, CalendarDayModule, CalendarDayViewComponent, CalendarEventTimesChangedEventType, CalendarEventTitleFormatter, CalendarModule, CalendarMomentDateFormatter, CalendarMonthModule, CalendarMonthViewComponent, CalendarNativeDateFormatter, CalendarUtils, CalendarView, CalendarWeekModule, CalendarWeekViewComponent, DateAdapter, MOMENT, adapterFactory, collapseAnimation, getWeekViewPeriod, CalendarA11yPipe as ɵCalendarA11yPipe, CalendarDatePipe as ɵCalendarDatePipe, CalendarEventActionsComponent as ɵCalendarEventActionsComponent, CalendarEventTitleComponent as ɵCalendarEventTitleComponent, CalendarEventTitlePipe as ɵCalendarEventTitlePipe, CalendarMonthCellComponent as ɵCalendarMonthCellComponent, CalendarMonthViewHeaderComponent as ɵCalendarMonthViewHeaderComponent, CalendarNextViewDirective as ɵCalendarNextViewDirective, CalendarOpenDayEventsComponent as ɵCalendarOpenDayEventsComponent, CalendarPreviousViewDirective as ɵCalendarPreviousViewDirective, CalendarTodayDirective as ɵCalendarTodayDirective, CalendarTooltipDirective as ɵCalendarTooltipDirective, CalendarTooltipWindowComponent as ɵCalendarTooltipWindowComponent, CalendarWeekViewCurrentTimeMarkerComponent as ɵCalendarWeekViewCurrentTimeMarkerComponent, CalendarWeekViewEventComponent as ɵCalendarWeekViewEventComponent, CalendarWeekViewHeaderComponent as ɵCalendarWeekViewHeaderComponent, CalendarWeekViewHourSegmentComponent as ɵCalendarWeekViewHourSegmentComponent, ClickDirective as ɵClickDirective, KeydownEnterDirective as ɵKeydownEnterDirective };\n//# sourceMappingURL=ng-calendar-schedule.mjs.map\n","map":null},{"fileName":"ng-calendar-schedule.mjs.map","needsCodeReference":false,"source":"{\"version\":3,\"file\":\"ng-calendar-schedule.mjs\",\"sources\":[\"../../../projects/ng-calendar-schedule/src/lib/date-adapters/date-adapter.ts\",\"../../../projects/ng-calendar-schedule/src/lib/date-adapters/date-fns/index.ts\",\"../../../projects/ng-calendar-schedule/src/lib/common/click/click.directive.ts\",\"../../../projects/ng-calendar-schedule/src/lib/common/keydown-enter/keydown-enter.directive.ts\",\"../../../projects/ng-calendar-schedule/src/lib/common/calendar-a11y/calendar-a11y.provider.ts\",\"../../../projects/ng-calendar-schedule/src/lib/common/calendar-a11y/calendar-a11y.pipe.ts\",\"../../../projects/ng-calendar-schedule/src/lib/common/calendar-event-actions/calendar-event-actions.component.ts\",\"../../../projects/ng-calendar-schedule/src/lib/common/calendar-event-title-formatter/calendar-event-title-formatter.provider.ts\",\"../../../projects/ng-calendar-schedule/src/lib/common/calendar-event-title/calendar-event-title.pipe.ts\",\"../../../projects/ng-calendar-schedule/src/lib/common/calendar-event-title/calendar-event-title.component.ts\",\"../../../projects/ng-calendar-schedule/src/lib/common/calendar-tooltip/calendar-tooltip.directive.ts\",\"../../../projects/ng-calendar-schedule/src/lib/common/calendar-view/calendar-view.enum.ts\",\"../../../projects/ng-calendar-schedule/src/lib/common/util/util.ts\",\"../../../projects/ng-calendar-schedule/src/lib/common/calendar-previous-view/calendar-previous-view.directive.ts\",\"../../../projects/ng-calendar-schedule/src/lib/common/calendar-next-view/calendar-next-view.directive.ts\",\"../../../projects/ng-calendar-schedule/src/lib/common/calendar-today/calendar-today.directive.ts\",\"../../../projects/ng-calendar-schedule/src/lib/common/calendar-angular-date-formatter/calendar-angular-date-formatter.provider.ts\",\"../../../projects/ng-calendar-schedule/src/lib/common/calendar-date-formatter/calendar-date-formatter.provider.ts\",\"../../../projects/ng-calendar-schedule/src/lib/common/calendar-date/calendar-date.pipe.ts\",\"../../../projects/ng-calendar-schedule/src/lib/common/calendar-utils/calendar-utils.provider.ts\",\"../../../projects/ng-calendar-schedule/src/lib/common/calendar-moment-date-formatter/calendar-moment-date-formatter.provider.ts\",\"../../../projects/ng-calendar-schedule/src/lib/common/calendar-native-date-formatter/calendar-native-date-formatter.provider.ts\",\"../../../projects/ng-calendar-schedule/src/lib/common/calendar-event-times-changed-event/calendar-event-times-changed-event.interface.ts\",\"../../../projects/ng-calendar-schedule/src/lib/common/calendar-common.module.ts\",\"../../../projects/ng-calendar-schedule/src/lib/common/calendar-drag-helper/calendar-drag-helper.provider.ts\",\"../../../projects/ng-calendar-schedule/src/lib/common/calendar-resize-helper/calendar-resize-helper.provider.ts\",\"../../../projects/ng-calendar-schedule/src/lib/week/calendar-week-view/calendar-week-view-header/calendar-week-view-header.component.ts\",\"../../../projects/ng-calendar-schedule/src/lib/week/calendar-week-view/calendar-week-view-event/calendar-week-view-event.component.ts\",\"../../../projects/ng-calendar-schedule/src/lib/week/calendar-week-view/calendar-week-view-hour-segment/calendar-week-view-hour-segment.component.ts\",\"../../../projects/ng-calendar-schedule/src/lib/week/calendar-week-view/calendar-week-view-current-time-marker/calendar-week-view-current-time-marker.component.ts\",\"../../../projects/ng-calendar-schedule/src/lib/week/calendar-week-view/calendar-week-view.component.ts\",\"../../../projects/ng-calendar-schedule/src/lib/day/calendar-day-view/calendar-day-view.component.ts\",\"../../../projects/ng-calendar-schedule/src/lib/week/calendar-week.module.ts\",\"../../../projects/ng-calendar-schedule/src/lib/day/calendar-day.module.ts\",\"../../../projects/ng-calendar-schedule/src/lib/month/calendar-month-view/calendar-month-cell/calendar-month-cell.component.ts\",\"../../../projects/ng-calendar-schedule/src/lib/month/calendar-month-view/calendar-open-day-events/calendar-open-day-events.component.ts\",\"../../../projects/ng-calendar-schedule/src/lib/month/calendar-month-view/calendar-month-view-header/calendar-month-view-header.component.ts\",\"../../../projects/ng-calendar-schedule/src/lib/month/calendar-month-view/calendar-month-view.component.ts\",\"../../../projects/ng-calendar-schedule/src/lib/month/calendar-month.module.ts\",\"../../../projects/ng-calendar-schedule/src/lib/calendar.component.ts\",\"../../../projects/ng-calendar-schedule/src/lib/calendar.component.html\",\"../../../projects/ng-calendar-schedule/src/lib/calendar.module.ts\",\"../../../projects/ng-calendar-schedule/src/public-api.ts\",\"../../../projects/ng-calendar-schedule/src/ng-calendar-schedule.ts\"],\"sourcesContent\":[\"import { DateAdapter as BaseDateAdapter } from 'calendar-utils/date-adapters/date-adapter';\\r\\n\\r\\nexport abstract class DateAdapter implements BaseDateAdapter {\\r\\n  abstract addWeeks(date: Date | number, amount: number): Date;\\r\\n\\r\\n  abstract addMonths(date: Date | number, amount: number): Date;\\r\\n\\r\\n  abstract subDays(date: Date | number, amount: number): Date;\\r\\n\\r\\n  abstract subWeeks(date: Date | number, amount: number): Date;\\r\\n\\r\\n  abstract subMonths(date: Date | number, amount: number): Date;\\r\\n\\r\\n  abstract getISOWeek(date: Date | number): number;\\r\\n\\r\\n  abstract setDate(date: Date | number, dayOfMonth: number): Date;\\r\\n\\r\\n  abstract setMonth(date: Date | number, month: number): Date;\\r\\n\\r\\n  abstract setYear(date: Date | number, year: number): Date;\\r\\n\\r\\n  abstract getDate(date: Date | number): number;\\r\\n\\r\\n  abstract getMonth(date: Date | number): number;\\r\\n\\r\\n  abstract getYear(date: Date | number): number;\\r\\n\\r\\n  abstract addDays(date: Date | number, amount: number): Date;\\r\\n\\r\\n  abstract addHours(date: Date | number, amount: number): Date;\\r\\n\\r\\n  abstract addMinutes(date: Date | number, amount: number): Date;\\r\\n\\r\\n  abstract addSeconds(date: Date | number, amount: number): Date;\\r\\n\\r\\n  abstract differenceInDays(\\r\\n    dateLeft: Date | number,\\r\\n    dateRight: Date | number\\r\\n  ): number;\\r\\n\\r\\n  abstract differenceInMinutes(\\r\\n    dateLeft: Date | number,\\r\\n    dateRight: Date | number\\r\\n  ): number;\\r\\n\\r\\n  abstract differenceInSeconds(\\r\\n    dateLeft: Date | number,\\r\\n    dateRight: Date | number\\r\\n  ): number;\\r\\n\\r\\n  abstract endOfDay(date: Date | number): Date;\\r\\n\\r\\n  abstract endOfMonth(date: Date | number): Date;\\r\\n\\r\\n  abstract endOfWeek(\\r\\n    date: Date | number,\\r\\n    options?: { weekStartsOn?: number }\\r\\n  ): Date;\\r\\n\\r\\n  abstract getDay(date: Date | number): number;\\r\\n\\r\\n  abstract isSameDay(\\r\\n    dateLeft: Date | number,\\r\\n    dateRight: Date | number\\r\\n  ): boolean;\\r\\n\\r\\n  abstract isSameMonth(\\r\\n    dateLeft: Date | number,\\r\\n    dateRight: Date | number\\r\\n  ): boolean;\\r\\n\\r\\n  abstract isSameSecond(\\r\\n    dateLeft: Date | number,\\r\\n    dateRight: Date | number\\r\\n  ): boolean;\\r\\n\\r\\n  abstract max(dates: (Date | number)[]): Date;\\r\\n\\r\\n  abstract setHours(date: Date | number, hours: number): Date;\\r\\n\\r\\n  abstract setMinutes(date: Date | number, minutes: number): Date;\\r\\n\\r\\n  abstract startOfDay(date: Date | number): Date;\\r\\n\\r\\n  abstract startOfMinute(date: Date | number): Date;\\r\\n\\r\\n  abstract startOfMonth(date: Date | number): Date;\\r\\n\\r\\n  abstract startOfWeek(\\r\\n    date: Date | number,\\r\\n    options?: { weekStartsOn?: number }\\r\\n  ): Date;\\r\\n\\r\\n  abstract getHours(date: Date | number): number;\\r\\n\\r\\n  abstract getMinutes(date: Date | number): number;\\r\\n\\r\\n  abstract getTimezoneOffset(date: Date | number): number;\\r\\n}\\r\\n\",\"import { adapterFactory as baseAdapterFactory } from 'calendar-utils/date-adapters/date-fns';\\r\\nimport {\\r\\n  addWeeks,\\r\\n  addMonths,\\r\\n  subDays,\\r\\n  subWeeks,\\r\\n  subMonths,\\r\\n  getISOWeek,\\r\\n  setDate,\\r\\n  setMonth,\\r\\n  setYear,\\r\\n  getDate,\\r\\n  getYear,\\r\\n} from 'date-fns';\\r\\nimport { DateAdapter } from '../date-adapter';\\r\\n\\r\\nexport function adapterFactory(): DateAdapter {\\r\\n  return {\\r\\n    ...baseAdapterFactory(),\\r\\n    addWeeks,\\r\\n    addMonths,\\r\\n    subDays,\\r\\n    subWeeks,\\r\\n    subMonths,\\r\\n    getISOWeek,\\r\\n    setDate,\\r\\n    setMonth,\\r\\n    setYear,\\r\\n    getDate,\\r\\n    getYear,\\r\\n  };\\r\\n}\\r\\n\",\"import {\\r\\n  Directive,\\r\\n  Renderer2,\\r\\n  ElementRef,\\r\\n  OnInit,\\r\\n  OnDestroy,\\r\\n  Output,\\r\\n  EventEmitter,\\r\\n  Inject,\\r\\n  Input,\\r\\n  NgZone,\\r\\n} from '@angular/core';\\r\\nimport { DOCUMENT } from '@angular/common';\\r\\nimport { Observable, Subject } from 'rxjs';\\r\\nimport { takeUntil } from 'rxjs/operators';\\r\\n\\r\\n@Directive({\\r\\n  selector: '[mwlClick]',\\r\\n})\\r\\nexport class ClickDirective implements OnInit, OnDestroy {\\r\\n  @Input() clickListenerDisabled = false;\\r\\n\\r\\n  @Output('mwlClick') click = new EventEmitter<MouseEvent>(); // eslint-disable-line\\r\\n\\r\\n  private destroy$ = new Subject<void>();\\r\\n\\r\\n  constructor(\\r\\n    private renderer: Renderer2,\\r\\n    private elm: ElementRef<HTMLElement>,\\r\\n    @Inject(DOCUMENT) private document\\r\\n  ) {}\\r\\n\\r\\n  ngOnInit(): void {\\r\\n    if (!this.clickListenerDisabled) {\\r\\n      this.listen()\\r\\n        .pipe(takeUntil(this.destroy$))\\r\\n        .subscribe((event) => {\\r\\n          event.stopPropagation();\\r\\n          this.click.emit(event);\\r\\n        });\\r\\n    }\\r\\n  }\\r\\n\\r\\n  ngOnDestroy(): void {\\r\\n    this.destroy$.next();\\r\\n  }\\r\\n\\r\\n  private listen() {\\r\\n    return new Observable<MouseEvent>((observer) => {\\r\\n      return this.renderer.listen(this.elm.nativeElement, 'click', (event) => {\\r\\n        observer.next(event);\\r\\n      });\\r\\n    });\\r\\n  }\\r\\n}\\r\\n\",\"import {\\r\\n  Directive,\\r\\n  Output,\\r\\n  EventEmitter,\\r\\n  ElementRef,\\r\\n  NgZone,\\r\\n  Renderer2,\\r\\n  OnInit,\\r\\n  OnDestroy,\\r\\n} from '@angular/core';\\r\\n\\r\\n@Directive({\\r\\n  selector: '[mwlKeydownEnter]',\\r\\n})\\r\\nexport class KeydownEnterDirective implements OnInit, OnDestroy {\\r\\n  @Output('mwlKeydownEnter') keydown = new EventEmitter<KeyboardEvent>(); // eslint-disable-line\\r\\n\\r\\n  private keydownListener: VoidFunction | null = null;\\r\\n\\r\\n  constructor(\\r\\n    private host: ElementRef<HTMLElement>,\\r\\n    private ngZone: NgZone,\\r\\n    private renderer: Renderer2\\r\\n  ) {}\\r\\n\\r\\n  ngOnInit(): void {\\r\\n    this.ngZone.runOutsideAngular(() => {\\r\\n      this.keydownListener = this.renderer.listen(\\r\\n        this.host.nativeElement,\\r\\n        'keydown',\\r\\n        (event: KeyboardEvent) => {\\r\\n          if (\\r\\n            event.keyCode === 13 ||\\r\\n            event.which === 13 ||\\r\\n            event.key === 'Enter'\\r\\n          ) {\\r\\n            event.preventDefault();\\r\\n            event.stopPropagation();\\r\\n\\r\\n            this.ngZone.run(() => {\\r\\n              this.keydown.emit(event);\\r\\n            });\\r\\n          }\\r\\n        }\\r\\n      );\\r\\n    });\\r\\n  }\\r\\n\\r\\n  ngOnDestroy(): void {\\r\\n    if (this.keydownListener !== null) {\\r\\n      this.keydownListener();\\r\\n      this.keydownListener = null;\\r\\n    }\\r\\n  }\\r\\n}\\r\\n\",\"import { Injectable } from '@angular/core';\\r\\nimport { formatDate, I18nPluralPipe } from '@angular/common';\\r\\nimport { A11yParams } from './calendar-a11y.interface';\\r\\n\\r\\n/**\\r\\n * This class is responsible for adding accessibility to the calendar.\\r\\n * You may override any of its methods via angulars DI to suit your requirements.\\r\\n * For example:\\r\\n *\\r\\n * ```typescript\\r\\n * import { A11yParams, CalendarA11y } from 'angular-calendar';\\r\\n * import { formatDate, I18nPluralPipe } from '@angular/common';\\r\\n * import { Injectable } from '@angular/core';\\r\\n *\\r\\n * // adding your own a11y params\\r\\n * export interface CustomA11yParams extends A11yParams {\\r\\n *   isDrSuess?: boolean;\\r\\n * }\\r\\n *\\r\\n * @Injectable()\\r\\n * export class CustomCalendarA11y extends CalendarA11y {\\r\\n *   constructor(protected i18nPlural: I18nPluralPipe) {\\r\\n *     super(i18nPlural);\\r\\n *   }\\r\\n *\\r\\n *   // overriding a function\\r\\n *   public openDayEventsLandmark({ date, locale, isDrSuess }: CustomA11yParams): string {\\r\\n *     if (isDrSuess) {\\r\\n *       return `\\r\\n *         ${formatDate(date, 'EEEE MMMM d', locale)}\\r\\n *          Today you are you! That is truer than true! There is no one alive\\r\\n *          who is you-er than you!\\r\\n *       `;\\r\\n *     }\\r\\n *   }\\r\\n * }\\r\\n *\\r\\n * // in your component that uses the calendar\\r\\n * providers: [{\\r\\n *  provide: CalendarA11y,\\r\\n *  useClass: CustomCalendarA11y\\r\\n * }]\\r\\n * ```\\r\\n */\\r\\n@Injectable()\\r\\nexport class CalendarA11y {\\r\\n  constructor(protected i18nPlural: I18nPluralPipe) {}\\r\\n\\r\\n  /**\\r\\n   * Aria label for the badges/date of a cell\\r\\n   * @example: `Saturday October 19 1 event click to expand`\\r\\n   */\\r\\n  public monthCell({ day, locale }: A11yParams): string {\\r\\n    if (day.badgeTotal > 0) {\\r\\n      return `\\r\\n        ${formatDate(day.date, 'EEEE MMMM d', locale)},\\r\\n        ${this.i18nPlural.transform(day.badgeTotal, {\\r\\n          '=0': 'No events',\\r\\n          '=1': 'One event',\\r\\n          other: '# events',\\r\\n        })},\\r\\n         click to expand\\r\\n      `;\\r\\n    } else {\\r\\n      return `${formatDate(day.date, 'EEEE MMMM d', locale)}`;\\r\\n    }\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * Aria label for the open day events start landmark\\r\\n   * @example: `Saturday October 19 expanded view`\\r\\n   */\\r\\n  public openDayEventsLandmark({ date, locale }: A11yParams): string {\\r\\n    return `\\r\\n      Beginning of expanded view for ${formatDate(date, 'EEEE MMMM dd', locale)}\\r\\n    `;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * Aria label for alert that a day in the month view was expanded\\r\\n   * @example: `Saturday October 19 expanded`\\r\\n   */\\r\\n  public openDayEventsAlert({ date, locale }: A11yParams): string {\\r\\n    return `${formatDate(date, 'EEEE MMMM dd', locale)} expanded`;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * Descriptive aria label for an event\\r\\n   * @example: `Saturday October 19th, Scott's Pizza Party, from 11:00am to 5:00pm`\\r\\n   */\\r\\n  public eventDescription({ event, locale }: A11yParams): string {\\r\\n    if (event.allDay === true) {\\r\\n      return this.allDayEventDescription({ event, locale });\\r\\n    }\\r\\n\\r\\n    const aria = `\\r\\n      ${formatDate(event.start, 'EEEE MMMM dd', locale)},\\r\\n      ${event.title}, from ${formatDate(event.start, 'hh:mm a', locale)}\\r\\n    `;\\r\\n    if (event.end) {\\r\\n      return aria + ` to ${formatDate(event.end, 'hh:mm a', locale)}`;\\r\\n    }\\r\\n    return aria;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * Descriptive aria label for an all day event\\r\\n   * @example:\\r\\n   * `Scott's Party, event spans multiple days: start time October 19 5:00pm, no stop time`\\r\\n   */\\r\\n  public allDayEventDescription({ event, locale }: A11yParams): string {\\r\\n    const aria = `\\r\\n      ${event.title}, event spans multiple days:\\r\\n      start time ${formatDate(event.start, 'MMMM dd hh:mm a', locale)}\\r\\n    `;\\r\\n    if (event.end) {\\r\\n      return (\\r\\n        aria + `, stop time ${formatDate(event.end, 'MMMM d hh:mm a', locale)}`\\r\\n      );\\r\\n    }\\r\\n    return aria + `, no stop time`;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * Aria label for the calendar event actions icons\\r\\n   * @returns 'Edit' for fa-pencil icons, and 'Delete' for fa-times icons\\r\\n   */\\r\\n  public actionButtonLabel({ action }: A11yParams): string {\\r\\n    return action.a11yLabel;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @returns {number} Tab index to be given to month cells\\r\\n   */\\r\\n  public monthCellTabIndex(): number {\\r\\n    return 0;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @returns true if the events inside the month cell should be aria-hidden\\r\\n   */\\r\\n  public hideMonthCellEvents(): boolean {\\r\\n    return true;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @returns true if event titles should be aria-hidden (global)\\r\\n   */\\r\\n  public hideEventTitle(): boolean {\\r\\n    return true;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @returns true if hour segments in the week view should be aria-hidden\\r\\n   */\\r\\n  public hideWeekHourSegment(): boolean {\\r\\n    return true;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @returns true if hour segments in the day view should be aria-hidden\\r\\n   */\\r\\n  public hideDayHourSegment(): boolean {\\r\\n    return true;\\r\\n  }\\r\\n}\\r\\n\",\"import { Pipe, PipeTransform, LOCALE_ID, Inject } from '@angular/core';\\r\\nimport { CalendarA11y } from './calendar-a11y.provider';\\r\\nimport { A11yParams } from './calendar-a11y.interface';\\r\\n\\r\\n/**\\r\\n * This pipe is primarily for rendering aria labels. Example usage:\\r\\n * ```typescript\\r\\n * // where `myEvent` is a `CalendarEvent` and myLocale is a locale identifier\\r\\n * {{ { event: myEvent, locale: myLocale } | calendarA11y: 'eventDescription' }}\\r\\n * ```\\r\\n */\\r\\n@Pipe({\\r\\n  name: 'calendarA11y',\\r\\n})\\r\\nexport class CalendarA11yPipe implements PipeTransform {\\r\\n  constructor(\\r\\n    private calendarA11y: CalendarA11y,\\r\\n    @Inject(LOCALE_ID) private locale: string\\r\\n  ) {}\\r\\n\\r\\n  transform(a11yParams: A11yParams, method: string): string {\\r\\n    a11yParams.locale = a11yParams.locale || this.locale;\\r\\n    if (typeof this.calendarA11y[method] === 'undefined') {\\r\\n      const allowedMethods = Object.getOwnPropertyNames(\\r\\n        Object.getPrototypeOf(CalendarA11y.prototype)\\r\\n      ).filter((iMethod) => iMethod !== 'constructor');\\r\\n      throw new Error(\\r\\n        `${method} is not a valid a11y method. Can only be one of ${allowedMethods.join(\\r\\n          ', '\\r\\n        )}`\\r\\n      );\\r\\n    }\\r\\n    return this.calendarA11y[method](a11yParams);\\r\\n  }\\r\\n}\\r\\n\",\"import { Component, Input, TemplateRef } from '@angular/core';\\r\\nimport { CalendarEvent, EventAction } from 'calendar-utils';\\r\\n\\r\\n@Component({\\r\\n  selector: 'mwl-calendar-event-actions',\\r\\n  template: `\\r\\n    <ng-template\\r\\n      #defaultTemplate\\r\\n      let-event=\\\"event\\\"\\r\\n      let-trackByActionId=\\\"trackByActionId\\\"\\r\\n    >\\r\\n      <span *ngIf=\\\"event.actions\\\" class=\\\"cal-event-actions\\\">\\r\\n        <a\\r\\n          class=\\\"cal-event-action\\\"\\r\\n          href=\\\"javascript:;\\\"\\r\\n          *ngFor=\\\"let action of event.actions; trackBy: trackByActionId\\\"\\r\\n          (mwlClick)=\\\"action.onClick({ event: event, sourceEvent: $event })\\\"\\r\\n          (mwlKeydownEnter)=\\\"\\r\\n            action.onClick({ event: event, sourceEvent: $event })\\r\\n          \\\"\\r\\n          [ngClass]=\\\"action.cssClass\\\"\\r\\n          [innerHtml]=\\\"action.label\\\"\\r\\n          tabindex=\\\"0\\\"\\r\\n          role=\\\"button\\\"\\r\\n          [attr.aria-label]=\\\"\\r\\n            { action: action } | calendarA11y : 'actionButtonLabel'\\r\\n          \\\"\\r\\n        >\\r\\n        </a>\\r\\n      </span>\\r\\n    </ng-template>\\r\\n    <ng-template\\r\\n      [ngTemplateOutlet]=\\\"customTemplate || defaultTemplate\\\"\\r\\n      [ngTemplateOutletContext]=\\\"{\\r\\n        event: event,\\r\\n        trackByActionId: trackByActionId\\r\\n      }\\\"\\r\\n    >\\r\\n    </ng-template>\\r\\n  `,\\r\\n})\\r\\nexport class CalendarEventActionsComponent {\\r\\n  @Input() event: CalendarEvent;\\r\\n\\r\\n  @Input() customTemplate: TemplateRef<any>;\\r\\n\\r\\n  trackByActionId = (index: number, action: EventAction) =>\\r\\n    action.id ? action.id : action;\\r\\n}\\r\\n\",\"import { CalendarEvent } from 'calendar-utils';\\r\\n\\r\\n/**\\r\\n * This class is responsible for displaying all event titles within the calendar. You may override any of its methods via angulars DI to suit your requirements. For example:\\r\\n *\\r\\n * ```typescript\\r\\n * import { Injectable } from '@angular/core';\\r\\n * import { CalendarEventTitleFormatter, CalendarEvent } from 'angular-calendar';\\r\\n *\\r\\n * @Injectable()\\r\\n * class CustomEventTitleFormatter extends CalendarEventTitleFormatter {\\r\\n *\\r\\n *   month(event: CalendarEvent): string {\\r\\n *     return `Custom prefix: ${event.title}`;\\r\\n *   }\\r\\n *\\r\\n * }\\r\\n *\\r\\n * // in your component\\r\\n * providers: [{\\r\\n *  provide: CalendarEventTitleFormatter,\\r\\n *  useClass: CustomEventTitleFormatter\\r\\n * }]\\r\\n * ```\\r\\n */\\r\\nexport class CalendarEventTitleFormatter {\\r\\n  /**\\r\\n   * The month view event title.\\r\\n   */\\r\\n  month(event: CalendarEvent, title: string): string {\\r\\n    return event.title;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * The month view event tooltip. Return a falsey value from this to disable the tooltip.\\r\\n   */\\r\\n  monthTooltip(event: CalendarEvent, title: string): string {\\r\\n    return event.title;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * The week view event title.\\r\\n   */\\r\\n  week(event: CalendarEvent, title: string): string {\\r\\n    return event.title;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * The week view event tooltip. Return a falsey value from this to disable the tooltip.\\r\\n   */\\r\\n  weekTooltip(event: CalendarEvent, title: string): string {\\r\\n    return event.title;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * The day view event title.\\r\\n   */\\r\\n  day(event: CalendarEvent, title: string): string {\\r\\n    return event.title;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * The day view event tooltip. Return a falsey value from this to disable the tooltip.\\r\\n   */\\r\\n  dayTooltip(event: CalendarEvent, title: string): string {\\r\\n    return event.title;\\r\\n  }\\r\\n}\\r\\n\",\"import { Pipe, PipeTransform } from '@angular/core';\\r\\nimport { CalendarEvent } from 'calendar-utils';\\r\\nimport { CalendarEventTitleFormatter } from '../calendar-event-title-formatter/calendar-event-title-formatter.provider';\\r\\n\\r\\n@Pipe({\\r\\n  name: 'calendarEventTitle',\\r\\n})\\r\\nexport class CalendarEventTitlePipe implements PipeTransform {\\r\\n  constructor(private calendarEventTitle: CalendarEventTitleFormatter) {}\\r\\n\\r\\n  transform(title: string, titleType: string, event: CalendarEvent): string {\\r\\n    return this.calendarEventTitle[titleType](event, title);\\r\\n  }\\r\\n}\\r\\n\",\"import { Component, Input, TemplateRef } from '@angular/core';\\r\\nimport { CalendarEvent } from 'calendar-utils';\\r\\n\\r\\n@Component({\\r\\n  selector: 'mwl-calendar-event-title',\\r\\n  template: `\\r\\n    <ng-template #defaultTemplate let-event=\\\"event\\\" let-view=\\\"view\\\">\\r\\n      <span\\r\\n        class=\\\"cal-event-title\\\"\\r\\n        [innerHTML]=\\\"event.title | calendarEventTitle : view : event\\\"\\r\\n        [attr.aria-hidden]=\\\"{} | calendarA11y : 'hideEventTitle'\\\"\\r\\n      >\\r\\n      </span>\\r\\n    </ng-template>\\r\\n    <ng-template\\r\\n      [ngTemplateOutlet]=\\\"customTemplate || defaultTemplate\\\"\\r\\n      [ngTemplateOutletContext]=\\\"{\\r\\n        event: event,\\r\\n        view: view\\r\\n      }\\\"\\r\\n    >\\r\\n    </ng-template>\\r\\n  `,\\r\\n})\\r\\nexport class CalendarEventTitleComponent {\\r\\n  @Input() event: CalendarEvent;\\r\\n\\r\\n  @Input() customTemplate: TemplateRef<any>;\\r\\n\\r\\n  @Input() view: string;\\r\\n}\\r\\n\",\"import {\\r\\n  Directive,\\r\\n  Component,\\r\\n  HostListener,\\r\\n  OnDestroy,\\r\\n  Input,\\r\\n  ComponentRef,\\r\\n  Injector,\\r\\n  ComponentFactoryResolver,\\r\\n  ViewContainerRef,\\r\\n  ElementRef,\\r\\n  ComponentFactory,\\r\\n  Inject,\\r\\n  Renderer2,\\r\\n  TemplateRef,\\r\\n  OnChanges,\\r\\n  SimpleChanges,\\r\\n} from '@angular/core';\\r\\nimport { DOCUMENT } from '@angular/common';\\r\\nimport { PlacementArray, positionElements } from 'positioning';\\r\\nimport { CalendarEvent } from 'calendar-utils';\\r\\nimport { Observable, of, Subject, timer } from 'rxjs';\\r\\nimport { takeUntil } from 'rxjs/operators';\\r\\n\\r\\n@Component({\\r\\n  selector: 'mwl-calendar-tooltip-window',\\r\\n  template: `\\r\\n    <ng-template\\r\\n      #defaultTemplate\\r\\n      let-contents=\\\"contents\\\"\\r\\n      let-placement=\\\"placement\\\"\\r\\n      let-event=\\\"event\\\"\\r\\n    >\\r\\n      <div class=\\\"cal-tooltip\\\" [ngClass]=\\\"'cal-tooltip-' + placement\\\">\\r\\n        <div class=\\\"cal-tooltip-arrow\\\"></div>\\r\\n        <div class=\\\"cal-tooltip-inner\\\" [innerHtml]=\\\"contents\\\"></div>\\r\\n      </div>\\r\\n    </ng-template>\\r\\n    <ng-template\\r\\n      [ngTemplateOutlet]=\\\"customTemplate || defaultTemplate\\\"\\r\\n      [ngTemplateOutletContext]=\\\"{\\r\\n        contents: contents,\\r\\n        placement: placement,\\r\\n        event: event\\r\\n      }\\\"\\r\\n    >\\r\\n    </ng-template>\\r\\n  `,\\r\\n})\\r\\nexport class CalendarTooltipWindowComponent {\\r\\n  @Input() contents: string;\\r\\n\\r\\n  @Input() placement: string;\\r\\n\\r\\n  @Input() event: CalendarEvent;\\r\\n\\r\\n  @Input() customTemplate: TemplateRef<any>;\\r\\n}\\r\\n\\r\\n@Directive({\\r\\n  selector: '[mwlCalendarTooltip]',\\r\\n})\\r\\nexport class CalendarTooltipDirective implements OnDestroy, OnChanges {\\r\\n  @Input('mwlCalendarTooltip') contents: string; // eslint-disable-line  @angular-eslint/no-input-rename\\r\\n\\r\\n  @Input('tooltipPlacement') placement: PlacementArray = 'auto'; // eslint-disable-line  @angular-eslint/no-input-rename\\r\\n\\r\\n  @Input('tooltipTemplate') customTemplate: TemplateRef<any>; // eslint-disable-line  @angular-eslint/no-input-rename\\r\\n\\r\\n  @Input('tooltipEvent') event: CalendarEvent; // eslint-disable-line  @angular-eslint/no-input-rename\\r\\n\\r\\n  @Input('tooltipAppendToBody') appendToBody: boolean; // eslint-disable-line  @angular-eslint/no-input-rename\\r\\n\\r\\n  @Input('tooltipDelay') delay: number | null = null; // eslint-disable-line  @angular-eslint/no-input-rename\\r\\n\\r\\n  private tooltipFactory: ComponentFactory<CalendarTooltipWindowComponent>;\\r\\n  private tooltipRef: ComponentRef<CalendarTooltipWindowComponent>;\\r\\n  private cancelTooltipDelay$ = new Subject<void>();\\r\\n\\r\\n  constructor(\\r\\n    private elementRef: ElementRef,\\r\\n    private injector: Injector,\\r\\n    private renderer: Renderer2,\\r\\n    componentFactoryResolver: ComponentFactoryResolver,\\r\\n    private viewContainerRef: ViewContainerRef,\\r\\n    @Inject(DOCUMENT) private document // eslint-disable-line\\r\\n  ) {\\r\\n    this.tooltipFactory = componentFactoryResolver.resolveComponentFactory(\\r\\n      CalendarTooltipWindowComponent\\r\\n    );\\r\\n  }\\r\\n\\r\\n  ngOnChanges(changes: SimpleChanges): void {\\r\\n    if (\\r\\n      this.tooltipRef &&\\r\\n      (changes.contents || changes.customTemplate || changes.event)\\r\\n    ) {\\r\\n      this.tooltipRef.instance.contents = this.contents;\\r\\n      this.tooltipRef.instance.customTemplate = this.customTemplate;\\r\\n      this.tooltipRef.instance.event = this.event;\\r\\n      this.tooltipRef.changeDetectorRef.markForCheck();\\r\\n\\r\\n      if (!this.contents) {\\r\\n        this.hide();\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n\\r\\n  ngOnDestroy(): void {\\r\\n    this.hide();\\r\\n  }\\r\\n\\r\\n  @HostListener('mouseenter')\\r\\n  onMouseOver(): void {\\r\\n    const delay$: Observable<any> =\\r\\n      this.delay === null ? of('now') : timer(this.delay);\\r\\n    delay$.pipe(takeUntil(this.cancelTooltipDelay$)).subscribe(() => {\\r\\n      this.show();\\r\\n    });\\r\\n  }\\r\\n\\r\\n  @HostListener('mouseleave')\\r\\n  onMouseOut(): void {\\r\\n    this.hide();\\r\\n  }\\r\\n\\r\\n  private show(): void {\\r\\n    if (!this.tooltipRef && this.contents) {\\r\\n      this.tooltipRef = this.viewContainerRef.createComponent(\\r\\n        this.tooltipFactory,\\r\\n        0,\\r\\n        this.injector,\\r\\n        []\\r\\n      );\\r\\n      this.tooltipRef.instance.contents = this.contents;\\r\\n      this.tooltipRef.instance.customTemplate = this.customTemplate;\\r\\n      this.tooltipRef.instance.event = this.event;\\r\\n      if (this.appendToBody) {\\r\\n        this.document.body.appendChild(this.tooltipRef.location.nativeElement);\\r\\n      }\\r\\n      requestAnimationFrame(() => {\\r\\n        this.positionTooltip();\\r\\n      });\\r\\n    }\\r\\n  }\\r\\n\\r\\n  private hide(): void {\\r\\n    if (this.tooltipRef) {\\r\\n      this.viewContainerRef.remove(\\r\\n        this.viewContainerRef.indexOf(this.tooltipRef.hostView)\\r\\n      );\\r\\n      this.tooltipRef = null;\\r\\n    }\\r\\n    this.cancelTooltipDelay$.next();\\r\\n  }\\r\\n\\r\\n  private positionTooltip(previousPositions: string[] = []): void {\\r\\n    if (this.tooltipRef) {\\r\\n      this.tooltipRef.changeDetectorRef.detectChanges();\\r\\n      this.tooltipRef.instance.placement = positionElements(\\r\\n        this.elementRef.nativeElement,\\r\\n        this.tooltipRef.location.nativeElement.children[0],\\r\\n        this.placement,\\r\\n        this.appendToBody\\r\\n      );\\r\\n      // keep re-positioning the tooltip until the arrow position doesn't make a difference\\r\\n      if (\\r\\n        previousPositions.indexOf(this.tooltipRef.instance.placement) === -1\\r\\n      ) {\\r\\n        this.positionTooltip([\\r\\n          ...previousPositions,\\r\\n          this.tooltipRef.instance.placement,\\r\\n        ]);\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n}\\r\\n\",\"export enum CalendarView {\\r\\n  Month = 'month',\\r\\n  Week = 'week',\\r\\n  Day = 'day',\\r\\n}\\r\\n\",\"import {\\r\\n  CalendarEvent,\\r\\n  WeekViewTimeEvent,\\r\\n  WeekViewHour,\\r\\n  WeekViewHourSegment,\\r\\n  validateEvents as validateEventsWithoutLog,\\r\\n  ViewPeriod,\\r\\n  WeekDay,\\r\\n  WeekViewAllDayEvent,\\r\\n} from 'calendar-utils';\\r\\nimport { DateAdapter } from '../../date-adapters/date-adapter';\\r\\n\\r\\nexport const validateEvents = (events: CalendarEvent[]) => {\\r\\n  const warn = (...args) => console.warn('angular-calendar', ...args);\\r\\n  return validateEventsWithoutLog(events, warn);\\r\\n};\\r\\n\\r\\nexport function isInsideLeftAndRight(\\r\\n  outer: ClientRect,\\r\\n  inner: ClientRect\\r\\n): boolean {\\r\\n  return (\\r\\n    Math.floor(outer.left) <= Math.ceil(inner.left) &&\\r\\n    Math.floor(inner.left) <= Math.ceil(outer.right) &&\\r\\n    Math.floor(outer.left) <= Math.ceil(inner.right) &&\\r\\n    Math.floor(inner.right) <= Math.ceil(outer.right)\\r\\n  );\\r\\n}\\r\\n\\r\\nfunction isInsideTopAndBottom(outer: ClientRect, inner: ClientRect): boolean {\\r\\n  return (\\r\\n    Math.floor(outer.top) <= Math.ceil(inner.top) &&\\r\\n    Math.floor(inner.top) <= Math.ceil(outer.bottom) &&\\r\\n    Math.floor(outer.top) <= Math.ceil(inner.bottom) &&\\r\\n    Math.floor(inner.bottom) <= Math.ceil(outer.bottom)\\r\\n  );\\r\\n}\\r\\n\\r\\nexport function isInside(outer: ClientRect, inner: ClientRect): boolean {\\r\\n  return (\\r\\n    isInsideLeftAndRight(outer, inner) && isInsideTopAndBottom(outer, inner)\\r\\n  );\\r\\n}\\r\\n\\r\\nexport function roundToNearest(amount: number, precision: number) {\\r\\n  return Math.round(amount / precision) * precision;\\r\\n}\\r\\n\\r\\nexport const trackByEventId = (index: number, event: CalendarEvent) =>\\r\\n  event.id ? event.id : event;\\r\\n\\r\\nexport const trackByWeekDayHeaderDate = (index: number, day: WeekDay) =>\\r\\n  day.date.toISOString();\\r\\n\\r\\nexport const trackByHourSegment = (\\r\\n  index: number,\\r\\n  segment: WeekViewHourSegment\\r\\n) => segment.date.toISOString();\\r\\n\\r\\nexport const trackByHour = (index: number, hour: WeekViewHour) =>\\r\\n  hour.segments[0].date.toISOString();\\r\\n\\r\\nexport const trackByWeekAllDayEvent = (\\r\\n  index: number,\\r\\n  weekEvent: WeekViewAllDayEvent\\r\\n) => (weekEvent.event.id ? weekEvent.event.id : weekEvent.event);\\r\\n\\r\\nexport const trackByWeekTimeEvent = (\\r\\n  index: number,\\r\\n  weekEvent: WeekViewTimeEvent\\r\\n) => (weekEvent.event.id ? weekEvent.event.id : weekEvent.event);\\r\\n\\r\\nconst MINUTES_IN_HOUR = 60;\\r\\n\\r\\nfunction getPixelAmountInMinutes(\\r\\n  hourSegments: number,\\r\\n  hourSegmentHeight: number,\\r\\n  hourDuration?: number\\r\\n) {\\r\\n  return (hourDuration || MINUTES_IN_HOUR) / (hourSegments * hourSegmentHeight);\\r\\n}\\r\\n\\r\\nexport function getMinutesMoved(\\r\\n  movedY: number,\\r\\n  hourSegments: number,\\r\\n  hourSegmentHeight: number,\\r\\n  eventSnapSize: number,\\r\\n  hourDuration?: number\\r\\n): number {\\r\\n  const draggedInPixelsSnapSize = roundToNearest(\\r\\n    movedY,\\r\\n    eventSnapSize || hourSegmentHeight\\r\\n  );\\r\\n  const pixelAmountInMinutes = getPixelAmountInMinutes(\\r\\n    hourSegments,\\r\\n    hourSegmentHeight,\\r\\n    hourDuration\\r\\n  );\\r\\n  return draggedInPixelsSnapSize * pixelAmountInMinutes;\\r\\n}\\r\\n\\r\\nexport function getDefaultEventEnd(\\r\\n  dateAdapter: DateAdapter,\\r\\n  event: CalendarEvent,\\r\\n  minimumMinutes: number\\r\\n): Date {\\r\\n  if (event.end) {\\r\\n    return event.end;\\r\\n  } else {\\r\\n    return dateAdapter.addMinutes(event.start, minimumMinutes);\\r\\n  }\\r\\n}\\r\\n\\r\\nexport function addDaysWithExclusions(\\r\\n  dateAdapter: DateAdapter,\\r\\n  date: Date,\\r\\n  days: number,\\r\\n  excluded: number[]\\r\\n): Date {\\r\\n  let daysCounter = 0;\\r\\n  let daysToAdd = 0;\\r\\n  const changeDays = days < 0 ? dateAdapter.subDays : dateAdapter.addDays;\\r\\n  let result = date;\\r\\n  while (daysToAdd <= Math.abs(days)) {\\r\\n    result = changeDays(date, daysCounter);\\r\\n    const day = dateAdapter.getDay(result);\\r\\n    if (excluded.indexOf(day) === -1) {\\r\\n      daysToAdd++;\\r\\n    }\\r\\n    daysCounter++;\\r\\n  }\\r\\n  return result;\\r\\n}\\r\\n\\r\\nexport function isDraggedWithinPeriod(\\r\\n  newStart: Date,\\r\\n  newEnd: Date,\\r\\n  period: ViewPeriod\\r\\n): boolean {\\r\\n  const end = newEnd || newStart;\\r\\n  return (\\r\\n    (period.start <= newStart && newStart <= period.end) ||\\r\\n    (period.start <= end && end <= period.end)\\r\\n  );\\r\\n}\\r\\n\\r\\nexport function shouldFireDroppedEvent(\\r\\n  dropEvent: { dropData?: { event?: CalendarEvent; calendarId?: symbol } },\\r\\n  date: Date,\\r\\n  allDay: boolean,\\r\\n  calendarId: symbol\\r\\n) {\\r\\n  return (\\r\\n    dropEvent.dropData &&\\r\\n    dropEvent.dropData.event &&\\r\\n    (dropEvent.dropData.calendarId !== calendarId ||\\r\\n      (dropEvent.dropData.event.allDay && !allDay) ||\\r\\n      (!dropEvent.dropData.event.allDay && allDay))\\r\\n  );\\r\\n}\\r\\n\\r\\nexport function getWeekViewPeriod(\\r\\n  dateAdapter: DateAdapter,\\r\\n  viewDate: Date,\\r\\n  weekStartsOn: number,\\r\\n  excluded: number[] = [],\\r\\n  daysInWeek?: number\\r\\n): { viewStart: Date; viewEnd: Date } {\\r\\n  let viewStart = daysInWeek\\r\\n    ? dateAdapter.startOfDay(viewDate)\\r\\n    : dateAdapter.startOfWeek(viewDate, { weekStartsOn });\\r\\n  const endOfWeek = dateAdapter.endOfWeek(viewDate, { weekStartsOn });\\r\\n  while (\\r\\n    excluded.indexOf(dateAdapter.getDay(viewStart)) > -1 &&\\r\\n    viewStart < endOfWeek\\r\\n  ) {\\r\\n    viewStart = dateAdapter.addDays(viewStart, 1);\\r\\n  }\\r\\n  if (daysInWeek) {\\r\\n    const viewEnd = dateAdapter.endOfDay(\\r\\n      addDaysWithExclusions(dateAdapter, viewStart, daysInWeek - 1, excluded)\\r\\n    );\\r\\n    return { viewStart, viewEnd };\\r\\n  } else {\\r\\n    let viewEnd = endOfWeek;\\r\\n    while (\\r\\n      excluded.indexOf(dateAdapter.getDay(viewEnd)) > -1 &&\\r\\n      viewEnd > viewStart\\r\\n    ) {\\r\\n      viewEnd = dateAdapter.subDays(viewEnd, 1);\\r\\n    }\\r\\n    return { viewStart, viewEnd };\\r\\n  }\\r\\n}\\r\\n\\r\\nexport function isWithinThreshold({ x, y }: { x: number; y: number }) {\\r\\n  const DRAG_THRESHOLD = 1;\\r\\n  return Math.abs(x) > DRAG_THRESHOLD || Math.abs(y) > DRAG_THRESHOLD;\\r\\n}\\r\\n\",\"import {\\r\\n  Directive,\\r\\n  HostListener,\\r\\n  Input,\\r\\n  Output,\\r\\n  EventEmitter,\\r\\n} from '@angular/core';\\r\\nimport { DateAdapter } from '../../date-adapters/date-adapter';\\r\\nimport { CalendarView } from '../calendar-view/calendar-view.enum';\\r\\nimport { addDaysWithExclusions } from '../util/util';\\r\\n\\r\\n/**\\r\\n * Change the view date to the previous view. For example:\\r\\n *\\r\\n * ```typescript\\r\\n * <button\\r\\n *  mwlCalendarPreviousView\\r\\n *  [(viewDate)]=\\\"viewDate\\\"\\r\\n *  [view]=\\\"view\\\">\\r\\n *  Previous\\r\\n * </button>\\r\\n * ```\\r\\n */\\r\\n@Directive({\\r\\n  selector: '[mwlCalendarPreviousView]',\\r\\n})\\r\\nexport class CalendarPreviousViewDirective {\\r\\n  /**\\r\\n   * The current view\\r\\n   */\\r\\n  @Input() view: CalendarView | 'month' | 'week' | 'day';\\r\\n\\r\\n  /**\\r\\n   * The current view date\\r\\n   */\\r\\n  @Input() viewDate: Date;\\r\\n\\r\\n  /**\\r\\n   * Days to skip when going back by 1 day\\r\\n   */\\r\\n  @Input() excludeDays: number[] = [];\\r\\n\\r\\n  /**\\r\\n   * The number of days in a week. If set will subtract this amount of days instead of 1 week\\r\\n   */\\r\\n  @Input() daysInWeek: number;\\r\\n\\r\\n  /**\\r\\n   * Called when the view date is changed\\r\\n   */\\r\\n  @Output() viewDateChange: EventEmitter<Date> = new EventEmitter();\\r\\n\\r\\n  constructor(private dateAdapter: DateAdapter) {}\\r\\n\\r\\n  /**\\r\\n   * @hidden\\r\\n   */\\r\\n  @HostListener('click')\\r\\n  onClick(): void {\\r\\n    const subFn: any = {\\r\\n      day: this.dateAdapter.subDays,\\r\\n      week: this.dateAdapter.subWeeks,\\r\\n      month: this.dateAdapter.subMonths,\\r\\n    }[this.view];\\r\\n\\r\\n    if (this.view === CalendarView.Day) {\\r\\n      this.viewDateChange.emit(\\r\\n        addDaysWithExclusions(\\r\\n          this.dateAdapter,\\r\\n          this.viewDate,\\r\\n          -1,\\r\\n          this.excludeDays\\r\\n        )\\r\\n      );\\r\\n    } else if (this.view === CalendarView.Week && this.daysInWeek) {\\r\\n      this.viewDateChange.emit(\\r\\n        addDaysWithExclusions(\\r\\n          this.dateAdapter,\\r\\n          this.viewDate,\\r\\n          -this.daysInWeek,\\r\\n          this.excludeDays\\r\\n        )\\r\\n      );\\r\\n    } else {\\r\\n      this.viewDateChange.emit(subFn(this.viewDate, 1));\\r\\n    }\\r\\n  }\\r\\n}\\r\\n\",\"import {\\r\\n  Directive,\\r\\n  EventEmitter,\\r\\n  HostListener,\\r\\n  Input,\\r\\n  Output,\\r\\n} from '@angular/core';\\r\\nimport { DateAdapter } from '../../date-adapters/date-adapter';\\r\\nimport { CalendarView } from '../calendar-view/calendar-view.enum';\\r\\nimport { addDaysWithExclusions } from '../util/util';\\r\\n\\r\\n/**\\r\\n * Change the view date to the next view. For example:\\r\\n *\\r\\n * ```typescript\\r\\n * <button\\r\\n *  mwlCalendarNextView\\r\\n *  [(viewDate)]=\\\"viewDate\\\"\\r\\n *  [view]=\\\"view\\\">\\r\\n *  Next\\r\\n * </button>\\r\\n * ```\\r\\n */\\r\\n@Directive({\\r\\n  selector: '[mwlCalendarNextView]',\\r\\n})\\r\\nexport class CalendarNextViewDirective {\\r\\n  /**\\r\\n   * The current view\\r\\n   */\\r\\n  @Input() view: CalendarView | 'month' | 'week' | 'day';\\r\\n\\r\\n  /**\\r\\n   * The current view date\\r\\n   */\\r\\n  @Input() viewDate: Date;\\r\\n\\r\\n  /**\\r\\n   * Days to skip when going forward by 1 day\\r\\n   */\\r\\n  @Input() excludeDays: number[] = [];\\r\\n\\r\\n  /**\\r\\n   * The number of days in a week. If set will add this amount of days instead of 1 week\\r\\n   */\\r\\n  @Input() daysInWeek: number;\\r\\n\\r\\n  /**\\r\\n   * Called when the view date is changed\\r\\n   */\\r\\n  @Output() viewDateChange: EventEmitter<Date> = new EventEmitter();\\r\\n\\r\\n  constructor(private dateAdapter: DateAdapter) {}\\r\\n\\r\\n  /**\\r\\n   * @hidden\\r\\n   */\\r\\n  @HostListener('click')\\r\\n  onClick(): void {\\r\\n    const addFn: any = {\\r\\n      day: this.dateAdapter.addDays,\\r\\n      week: this.dateAdapter.addWeeks,\\r\\n      month: this.dateAdapter.addMonths,\\r\\n    }[this.view];\\r\\n\\r\\n    if (this.view === CalendarView.Day) {\\r\\n      this.viewDateChange.emit(\\r\\n        addDaysWithExclusions(\\r\\n          this.dateAdapter,\\r\\n          this.viewDate,\\r\\n          1,\\r\\n          this.excludeDays\\r\\n        )\\r\\n      );\\r\\n    } else if (this.view === CalendarView.Week && this.daysInWeek) {\\r\\n      this.viewDateChange.emit(\\r\\n        addDaysWithExclusions(\\r\\n          this.dateAdapter,\\r\\n          this.viewDate,\\r\\n          this.daysInWeek,\\r\\n          this.excludeDays\\r\\n        )\\r\\n      );\\r\\n    } else {\\r\\n      this.viewDateChange.emit(addFn(this.viewDate, 1));\\r\\n    }\\r\\n  }\\r\\n}\\r\\n\",\"import {\\r\\n  Directive,\\r\\n  HostListener,\\r\\n  Input,\\r\\n  Output,\\r\\n  EventEmitter,\\r\\n} from '@angular/core';\\r\\nimport { DateAdapter } from '../../date-adapters/date-adapter';\\r\\n\\r\\n/**\\r\\n * Change the view date to the current day. For example:\\r\\n *\\r\\n * ```typescript\\r\\n * <button\\r\\n *  mwlCalendarToday\\r\\n *  [(viewDate)]=\\\"viewDate\\\">\\r\\n *  Today\\r\\n * </button>\\r\\n * ```\\r\\n */\\r\\n@Directive({\\r\\n  selector: '[mwlCalendarToday]',\\r\\n})\\r\\nexport class CalendarTodayDirective {\\r\\n  /**\\r\\n   * The current view date\\r\\n   */\\r\\n  @Input() viewDate: Date;\\r\\n\\r\\n  /**\\r\\n   * Called when the view date is changed\\r\\n   */\\r\\n  @Output() viewDateChange: EventEmitter<Date> = new EventEmitter();\\r\\n\\r\\n  constructor(private dateAdapter: DateAdapter) {}\\r\\n\\r\\n  /**\\r\\n   * @hidden\\r\\n   */\\r\\n  @HostListener('click')\\r\\n  onClick(): void {\\r\\n    this.viewDateChange.emit(this.dateAdapter.startOfDay(new Date()));\\r\\n  }\\r\\n}\\r\\n\",\"import {\\r\\n  CalendarDateFormatterInterface,\\r\\n  DateFormatterParams,\\r\\n} from '../calendar-date-formatter/calendar-date-formatter.interface';\\r\\nimport { formatDate } from '@angular/common';\\r\\nimport { Injectable } from '@angular/core';\\r\\nimport { DateAdapter } from '../../date-adapters/date-adapter';\\r\\nimport { getWeekViewPeriod } from '../util/util';\\r\\n\\r\\n/**\\r\\n * This will use the angular date pipe to do all date formatting. It is the default date formatter used by the calendar.\\r\\n */\\r\\n@Injectable()\\r\\nexport class CalendarAngularDateFormatter\\r\\n  implements CalendarDateFormatterInterface\\r\\n{\\r\\n  constructor(protected dateAdapter: DateAdapter) {}\\r\\n\\r\\n  /**\\r\\n   * The month view header week day labels\\r\\n   */\\r\\n  public monthViewColumnHeader({ date, locale }: DateFormatterParams): string {\\r\\n    return formatDate(date, 'EEEE', locale);\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * The month view cell day number\\r\\n   */\\r\\n  public monthViewDayNumber({ date, locale }: DateFormatterParams): string {\\r\\n    return formatDate(date, 'd', locale);\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * The month view title\\r\\n   */\\r\\n  public monthViewTitle({ date, locale }: DateFormatterParams): string {\\r\\n    return formatDate(date, 'LLLL y', locale);\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * The week view header week day labels\\r\\n   */\\r\\n  public weekViewColumnHeader({ date, locale }: DateFormatterParams): string {\\r\\n    return formatDate(date, 'EEEE', locale);\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * The week view sub header day and month labels\\r\\n   */\\r\\n  public weekViewColumnSubHeader({\\r\\n    date,\\r\\n    locale,\\r\\n  }: DateFormatterParams): string {\\r\\n    return formatDate(date, 'MMM d', locale);\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * The week view title\\r\\n   */\\r\\n  public weekViewTitle({\\r\\n    date,\\r\\n    locale,\\r\\n    weekStartsOn,\\r\\n    excludeDays,\\r\\n    daysInWeek,\\r\\n  }: DateFormatterParams): string {\\r\\n    const { viewStart, viewEnd } = getWeekViewPeriod(\\r\\n      this.dateAdapter,\\r\\n      date,\\r\\n      weekStartsOn,\\r\\n      excludeDays,\\r\\n      daysInWeek\\r\\n    );\\r\\n    const format = (dateToFormat: Date, showYear: boolean) =>\\r\\n      formatDate(dateToFormat, 'MMM d' + (showYear ? ', yyyy' : ''), locale);\\r\\n    return `${format(\\r\\n      viewStart,\\r\\n      viewStart.getUTCFullYear() !== viewEnd.getUTCFullYear()\\r\\n    )} - ${format(viewEnd, true)}`;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * The time formatting down the left hand side of the week view\\r\\n   */\\r\\n  public weekViewHour({ date, locale }: DateFormatterParams): string {\\r\\n    return formatDate(date, 'h a', locale);\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * The time formatting down the left hand side of the day view\\r\\n   */\\r\\n  public dayViewHour({ date, locale }: DateFormatterParams): string {\\r\\n    return formatDate(date, 'h a', locale);\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * The day view title\\r\\n   */\\r\\n  public dayViewTitle({ date, locale }: DateFormatterParams): string {\\r\\n    return formatDate(date, 'EEEE, MMMM d, y', locale);\\r\\n  }\\r\\n}\\r\\n\",\"import { CalendarAngularDateFormatter } from '../calendar-angular-date-formatter/calendar-angular-date-formatter.provider';\\r\\nimport { Injectable } from '@angular/core';\\r\\n\\r\\n/**\\r\\n * This class is responsible for all formatting of dates. There are 3 implementations available, the `CalendarAngularDateFormatter` (default) which uses the angular date pipe to format dates, the `CalendarNativeDateFormatter` which will use the <a href=\\\"https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Intl\\\" target=\\\"_blank\\\">Intl</a> API to format dates, or there is the `CalendarMomentDateFormatter` which uses <a href=\\\"http://momentjs.com/\\\" target=\\\"_blank\\\">moment</a>.\\r\\n *\\r\\n * If you wish, you may override any of the defaults via angulars DI. For example:\\r\\n *\\r\\n * ```typescript\\r\\n * import { CalendarDateFormatter, DateFormatterParams } from 'angular-calendar';\\r\\n * import { formatDate } from '@angular/common';\\r\\n * import { Injectable } from '@angular/core';\\r\\n *\\r\\n * @Injectable()\\r\\n * class CustomDateFormatter extends CalendarDateFormatter {\\r\\n *\\r\\n *   public monthViewColumnHeader({date, locale}: DateFormatterParams): string {\\r\\n *     return formatDate(date, 'EEE', locale); // use short week days\\r\\n *   }\\r\\n *\\r\\n * }\\r\\n *\\r\\n * // in your component that uses the calendar\\r\\n * providers: [{\\r\\n *   provide: CalendarDateFormatter,\\r\\n *   useClass: CustomDateFormatter\\r\\n * }]\\r\\n * ```\\r\\n */\\r\\n@Injectable()\\r\\nexport class CalendarDateFormatter extends CalendarAngularDateFormatter {}\\r\\n\",\"import { Pipe, PipeTransform, LOCALE_ID, Inject } from '@angular/core';\\r\\nimport { CalendarDateFormatter } from '../calendar-date-formatter/calendar-date-formatter.provider';\\r\\n\\r\\n/**\\r\\n * This pipe is primarily for rendering the current view title. Example usage:\\r\\n * ```typescript\\r\\n * // where `viewDate` is a `Date` and view is `'month' | 'week' | 'day'`\\r\\n * {{ viewDate | calendarDate:(view + 'ViewTitle'):'en' }}\\r\\n * ```\\r\\n */\\r\\n@Pipe({\\r\\n  name: 'calendarDate',\\r\\n})\\r\\nexport class CalendarDatePipe implements PipeTransform {\\r\\n  constructor(\\r\\n    private dateFormatter: CalendarDateFormatter,\\r\\n    @Inject(LOCALE_ID) private locale: string\\r\\n  ) {}\\r\\n\\r\\n  transform(\\r\\n    date: Date,\\r\\n    method: string,\\r\\n    locale: string = this.locale,\\r\\n    weekStartsOn: number = 0,\\r\\n    excludeDays: number[] = [],\\r\\n    daysInWeek?: number\\r\\n  ): string {\\r\\n    if (typeof this.dateFormatter[method] === 'undefined') {\\r\\n      const allowedMethods = Object.getOwnPropertyNames(\\r\\n        Object.getPrototypeOf(CalendarDateFormatter.prototype)\\r\\n      ).filter((iMethod) => iMethod !== 'constructor');\\r\\n      throw new Error(\\r\\n        `${method} is not a valid date formatter. Can only be one of ${allowedMethods.join(\\r\\n          ', '\\r\\n        )}`\\r\\n      );\\r\\n    }\\r\\n    return this.dateFormatter[method]({\\r\\n      date,\\r\\n      locale,\\r\\n      weekStartsOn,\\r\\n      excludeDays,\\r\\n      daysInWeek,\\r\\n    });\\r\\n  }\\r\\n}\\r\\n\",\"import { Injectable } from '@angular/core';\\r\\nimport {\\r\\n  GetMonthViewArgs,\\r\\n  MonthView,\\r\\n  GetWeekViewHeaderArgs,\\r\\n  WeekDay,\\r\\n  GetWeekViewArgs,\\r\\n  WeekView,\\r\\n  getMonthView,\\r\\n  getWeekViewHeader,\\r\\n  getWeekView,\\r\\n} from 'calendar-utils';\\r\\nimport { DateAdapter } from '../../date-adapters/date-adapter';\\r\\n\\r\\n@Injectable()\\r\\nexport class CalendarUtils {\\r\\n  constructor(protected dateAdapter: DateAdapter) {}\\r\\n\\r\\n  getMonthView(args: GetMonthViewArgs): MonthView {\\r\\n    return getMonthView(this.dateAdapter, args);\\r\\n  }\\r\\n\\r\\n  getWeekViewHeader(args: GetWeekViewHeaderArgs): WeekDay[] {\\r\\n    return getWeekViewHeader(this.dateAdapter, args);\\r\\n  }\\r\\n\\r\\n  getWeekView(args: GetWeekViewArgs): WeekView {\\r\\n    return getWeekView(this.dateAdapter, args);\\r\\n  }\\r\\n}\\r\\n\",\"import { InjectionToken, Inject, Injectable } from '@angular/core';\\r\\nimport {\\r\\n  CalendarDateFormatterInterface,\\r\\n  DateFormatterParams,\\r\\n} from '../calendar-date-formatter/calendar-date-formatter.interface';\\r\\nimport { getWeekViewPeriod } from '../util/util';\\r\\nimport { DateAdapter } from '../../date-adapters/date-adapter';\\r\\n\\r\\nexport const MOMENT: InjectionToken<string> = new InjectionToken('Moment');\\r\\n\\r\\n/**\\r\\n * This will use <a href=\\\"http://momentjs.com/\\\" target=\\\"_blank\\\">moment</a> to do all date formatting. To use this class:\\r\\n *\\r\\n * ```typescript\\r\\n * import { CalendarDateFormatter, CalendarMomentDateFormatter, MOMENT } from 'angular-calendar';\\r\\n * import moment from 'moment';\\r\\n *\\r\\n * // in your component\\r\\n * provide: [{\\r\\n *   provide: MOMENT, useValue: moment\\r\\n * }, {\\r\\n *   provide: CalendarDateFormatter, useClass: CalendarMomentDateFormatter\\r\\n * }]\\r\\n *\\r\\n * ```\\r\\n */\\r\\n@Injectable()\\r\\nexport class CalendarMomentDateFormatter\\r\\n  implements CalendarDateFormatterInterface\\r\\n{\\r\\n  /**\\r\\n   * @hidden\\r\\n   */\\r\\n  constructor(\\r\\n    @Inject(MOMENT) protected moment: any,\\r\\n    protected dateAdapter: DateAdapter\\r\\n  ) {}\\r\\n\\r\\n  /**\\r\\n   * The month view header week day labels\\r\\n   */\\r\\n  public monthViewColumnHeader({ date, locale }: DateFormatterParams): string {\\r\\n    return this.moment(date).locale(locale).format('dddd');\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * The month view cell day number\\r\\n   */\\r\\n  public monthViewDayNumber({ date, locale }: DateFormatterParams): string {\\r\\n    return this.moment(date).locale(locale).format('D');\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * The month view title\\r\\n   */\\r\\n  public monthViewTitle({ date, locale }: DateFormatterParams): string {\\r\\n    return this.moment(date).locale(locale).format('MMMM YYYY');\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * The week view header week day labels\\r\\n   */\\r\\n  public weekViewColumnHeader({ date, locale }: DateFormatterParams): string {\\r\\n    return this.moment(date).locale(locale).format('dddd');\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * The week view sub header day and month labels\\r\\n   */\\r\\n  public weekViewColumnSubHeader({\\r\\n    date,\\r\\n    locale,\\r\\n  }: DateFormatterParams): string {\\r\\n    return this.moment(date).locale(locale).format('MMM D');\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * The week view title\\r\\n   */\\r\\n  public weekViewTitle({\\r\\n    date,\\r\\n    locale,\\r\\n    weekStartsOn,\\r\\n    excludeDays,\\r\\n    daysInWeek,\\r\\n  }: DateFormatterParams): string {\\r\\n    const { viewStart, viewEnd } = getWeekViewPeriod(\\r\\n      this.dateAdapter,\\r\\n      date,\\r\\n      weekStartsOn,\\r\\n      excludeDays,\\r\\n      daysInWeek\\r\\n    );\\r\\n    const format = (dateToFormat: Date, showYear: boolean) =>\\r\\n      this.moment(dateToFormat)\\r\\n        .locale(locale)\\r\\n        .format('MMM D' + (showYear ? ', YYYY' : ''));\\r\\n    return `${format(\\r\\n      viewStart,\\r\\n      viewStart.getUTCFullYear() !== viewEnd.getUTCFullYear()\\r\\n    )} - ${format(viewEnd, true)}`;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * The time formatting down the left hand side of the week view\\r\\n   */\\r\\n  public weekViewHour({ date, locale }: DateFormatterParams): string {\\r\\n    return this.moment(date).locale(locale).format('ha');\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * The time formatting down the left hand side of the day view\\r\\n   */\\r\\n  public dayViewHour({ date, locale }: DateFormatterParams): string {\\r\\n    return this.moment(date).locale(locale).format('ha');\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * The day view title\\r\\n   */\\r\\n  public dayViewTitle({ date, locale }: DateFormatterParams): string {\\r\\n    return this.moment(date).locale(locale).format('dddd, LL'); // dddd = Thursday\\r\\n  } // LL = locale-dependent Month Day, Year\\r\\n}\\r\\n\",\"import {\\r\\n  CalendarDateFormatterInterface,\\r\\n  DateFormatterParams,\\r\\n} from '../calendar-date-formatter/calendar-date-formatter.interface';\\r\\nimport { Injectable } from '@angular/core';\\r\\nimport { DateAdapter } from '../../date-adapters/date-adapter';\\r\\nimport { getWeekViewPeriod } from '../util/util';\\r\\n\\r\\n/**\\r\\n * This will use <a href=\\\"https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Intl\\\" target=\\\"_blank\\\">Intl</a> API to do all date formatting.\\r\\n *\\r\\n * You will need to include a <a href=\\\"https://github.com/andyearnshaw/Intl.js/\\\">polyfill</a> for older browsers.\\r\\n */\\r\\n@Injectable()\\r\\nexport class CalendarNativeDateFormatter\\r\\n  implements CalendarDateFormatterInterface\\r\\n{\\r\\n  constructor(protected dateAdapter: DateAdapter) {}\\r\\n\\r\\n  /**\\r\\n   * The month view header week day labels\\r\\n   */\\r\\n  public monthViewColumnHeader({ date, locale }: DateFormatterParams): string {\\r\\n    return new Intl.DateTimeFormat(locale, { weekday: 'long' }).format(date);\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * The month view cell day number\\r\\n   */\\r\\n  public monthViewDayNumber({ date, locale }: DateFormatterParams): string {\\r\\n    return new Intl.DateTimeFormat(locale, { day: 'numeric' }).format(date);\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * The month view title\\r\\n   */\\r\\n  public monthViewTitle({ date, locale }: DateFormatterParams): string {\\r\\n    return new Intl.DateTimeFormat(locale, {\\r\\n      year: 'numeric',\\r\\n      month: 'long',\\r\\n    }).format(date);\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * The week view header week day labels\\r\\n   */\\r\\n  public weekViewColumnHeader({ date, locale }: DateFormatterParams): string {\\r\\n    return new Intl.DateTimeFormat(locale, { weekday: 'long' }).format(date);\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * The week view sub header day and month labels\\r\\n   */\\r\\n  public weekViewColumnSubHeader({\\r\\n    date,\\r\\n    locale,\\r\\n  }: DateFormatterParams): string {\\r\\n    return new Intl.DateTimeFormat(locale, {\\r\\n      day: 'numeric',\\r\\n      month: 'short',\\r\\n    }).format(date);\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * The week view title\\r\\n   */\\r\\n  public weekViewTitle({\\r\\n    date,\\r\\n    locale,\\r\\n    weekStartsOn,\\r\\n    excludeDays,\\r\\n    daysInWeek,\\r\\n  }: DateFormatterParams): string {\\r\\n    const { viewStart, viewEnd } = getWeekViewPeriod(\\r\\n      this.dateAdapter,\\r\\n      date,\\r\\n      weekStartsOn,\\r\\n      excludeDays,\\r\\n      daysInWeek\\r\\n    );\\r\\n\\r\\n    const format = (dateToFormat: Date, showYear: boolean) =>\\r\\n      new Intl.DateTimeFormat(locale, {\\r\\n        day: 'numeric',\\r\\n        month: 'short',\\r\\n        year: showYear ? 'numeric' : undefined,\\r\\n      }).format(dateToFormat);\\r\\n\\r\\n    return `${format(\\r\\n      viewStart,\\r\\n      viewStart.getUTCFullYear() !== viewEnd.getUTCFullYear()\\r\\n    )} - ${format(viewEnd, true)}`;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * The time formatting down the left hand side of the week view\\r\\n   */\\r\\n  public weekViewHour({ date, locale }: DateFormatterParams): string {\\r\\n    return new Intl.DateTimeFormat(locale, { hour: 'numeric' }).format(date);\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * The time formatting down the left hand side of the day view\\r\\n   */\\r\\n  public dayViewHour({ date, locale }: DateFormatterParams): string {\\r\\n    return new Intl.DateTimeFormat(locale, { hour: 'numeric' }).format(date);\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * The day view title\\r\\n   */\\r\\n  public dayViewTitle({ date, locale }: DateFormatterParams): string {\\r\\n    return new Intl.DateTimeFormat(locale, {\\r\\n      day: 'numeric',\\r\\n      month: 'long',\\r\\n      year: 'numeric',\\r\\n      weekday: 'long',\\r\\n    }).format(date);\\r\\n  }\\r\\n}\\r\\n\",\"import { CalendarEvent } from 'calendar-utils';\\r\\n\\r\\nexport enum CalendarEventTimesChangedEventType {\\r\\n  Drag = 'drag',\\r\\n  Drop = 'drop',\\r\\n  Resize = 'resize',\\r\\n}\\r\\n\\r\\n/**\\r\\n * The output `$event` type when an event is resized or dragged and dropped.\\r\\n */\\r\\nexport interface CalendarEventTimesChangedEvent<MetaType = any> {\\r\\n  type: CalendarEventTimesChangedEventType;\\r\\n  event: CalendarEvent<MetaType>;\\r\\n  newStart: Date;\\r\\n  newEnd?: Date;\\r\\n  allDay?: boolean;\\r\\n}\\r\\n\",\"import { ModuleWithProviders, NgModule, Provider } from '@angular/core';\\r\\nimport { CommonModule, I18nPluralPipe } from '@angular/common';\\r\\nimport { CalendarEventActionsComponent } from './calendar-event-actions/calendar-event-actions.component';\\r\\nimport { CalendarEventTitleComponent } from './calendar-event-title/calendar-event-title.component';\\r\\nimport {\\r\\n  CalendarTooltipDirective,\\r\\n  CalendarTooltipWindowComponent,\\r\\n} from './calendar-tooltip/calendar-tooltip.directive';\\r\\nimport { CalendarPreviousViewDirective } from './calendar-previous-view/calendar-previous-view.directive';\\r\\nimport { CalendarNextViewDirective } from './calendar-next-view/calendar-next-view.directive';\\r\\nimport { CalendarTodayDirective } from './calendar-today/calendar-today.directive';\\r\\nimport { CalendarDatePipe } from './calendar-date/calendar-date.pipe';\\r\\nimport { CalendarEventTitlePipe } from './calendar-event-title/calendar-event-title.pipe';\\r\\nimport { ClickDirective } from './click/click.directive';\\r\\nimport { KeydownEnterDirective } from './keydown-enter/keydown-enter.directive';\\r\\nimport { CalendarEventTitleFormatter } from './calendar-event-title-formatter/calendar-event-title-formatter.provider';\\r\\nimport { CalendarDateFormatter } from './calendar-date-formatter/calendar-date-formatter.provider';\\r\\nimport { CalendarUtils } from './calendar-utils/calendar-utils.provider';\\r\\nimport { CalendarA11y } from './calendar-a11y/calendar-a11y.provider';\\r\\nimport { CalendarA11yPipe } from './calendar-a11y/calendar-a11y.pipe';\\r\\n\\r\\nexport interface CalendarModuleConfig {\\r\\n  eventTitleFormatter?: Provider;\\r\\n  dateFormatter?: Provider;\\r\\n  utils?: Provider;\\r\\n  a11y?: Provider;\\r\\n}\\r\\n\\r\\nexport * from './calendar-event-title-formatter/calendar-event-title-formatter.provider';\\r\\nexport * from './calendar-moment-date-formatter/calendar-moment-date-formatter.provider';\\r\\nexport * from './calendar-native-date-formatter/calendar-native-date-formatter.provider';\\r\\nexport * from './calendar-angular-date-formatter/calendar-angular-date-formatter.provider';\\r\\nexport * from './calendar-date-formatter/calendar-date-formatter.provider';\\r\\nexport * from './calendar-utils/calendar-utils.provider';\\r\\nexport * from './calendar-a11y/calendar-a11y.provider';\\r\\nexport * from './calendar-a11y/calendar-a11y.interface';\\r\\nexport * from './calendar-date-formatter/calendar-date-formatter.interface';\\r\\nexport * from './calendar-event-times-changed-event/calendar-event-times-changed-event.interface';\\r\\nexport * from '../date-adapters/date-adapter';\\r\\nexport * from './calendar-view/calendar-view.enum';\\r\\n\\r\\n// needed for ivy, not part of the public api\\r\\nexport { CalendarEventActionsComponent as ɵCalendarEventActionsComponent } from './calendar-event-actions/calendar-event-actions.component';\\r\\nexport { CalendarEventTitleComponent as ɵCalendarEventTitleComponent } from './calendar-event-title/calendar-event-title.component';\\r\\nexport {\\r\\n  CalendarTooltipDirective as ɵCalendarTooltipDirective,\\r\\n  CalendarTooltipWindowComponent as ɵCalendarTooltipWindowComponent,\\r\\n} from './calendar-tooltip/calendar-tooltip.directive';\\r\\nexport { CalendarPreviousViewDirective as ɵCalendarPreviousViewDirective } from './calendar-previous-view/calendar-previous-view.directive';\\r\\nexport { CalendarNextViewDirective as ɵCalendarNextViewDirective } from './calendar-next-view/calendar-next-view.directive';\\r\\nexport { CalendarTodayDirective as ɵCalendarTodayDirective } from './calendar-today/calendar-today.directive';\\r\\nexport { CalendarDatePipe as ɵCalendarDatePipe } from './calendar-date/calendar-date.pipe';\\r\\nexport { CalendarEventTitlePipe as ɵCalendarEventTitlePipe } from './calendar-event-title/calendar-event-title.pipe';\\r\\nexport { ClickDirective as ɵClickDirective } from './click/click.directive';\\r\\nexport { KeydownEnterDirective as ɵKeydownEnterDirective } from './keydown-enter/keydown-enter.directive';\\r\\nexport { CalendarA11yPipe as ɵCalendarA11yPipe } from './calendar-a11y/calendar-a11y.pipe';\\r\\n\\r\\nexport {\\r\\n  CalendarEvent,\\r\\n  EventAction as CalendarEventAction,\\r\\n  DAYS_OF_WEEK,\\r\\n  ViewPeriod as CalendarViewPeriod,\\r\\n} from 'calendar-utils';\\r\\n\\r\\n/**\\r\\n * Import this module to if you're just using a singular view and want to save on bundle size. Example usage:\\r\\n *\\r\\n * ```typescript\\r\\n * import { CalendarCommonModule, CalendarMonthModule } from 'angular-calendar';\\r\\n *\\r\\n * @NgModule({\\r\\n *   imports: [\\r\\n *     CalendarCommonModule.forRoot(),\\r\\n *     CalendarMonthModule\\r\\n *   ]\\r\\n * })\\r\\n * class MyModule {}\\r\\n * ```\\r\\n *\\r\\n */\\r\\n@NgModule({\\r\\n  declarations: [\\r\\n    CalendarEventActionsComponent,\\r\\n    CalendarEventTitleComponent,\\r\\n    CalendarTooltipWindowComponent,\\r\\n    CalendarTooltipDirective,\\r\\n    CalendarPreviousViewDirective,\\r\\n    CalendarNextViewDirective,\\r\\n    CalendarTodayDirective,\\r\\n    CalendarDatePipe,\\r\\n    CalendarEventTitlePipe,\\r\\n    CalendarA11yPipe,\\r\\n    ClickDirective,\\r\\n    KeydownEnterDirective,\\r\\n  ],\\r\\n  imports: [CommonModule],\\r\\n  exports: [\\r\\n    CalendarEventActionsComponent,\\r\\n    CalendarEventTitleComponent,\\r\\n    CalendarTooltipWindowComponent,\\r\\n    CalendarTooltipDirective,\\r\\n    CalendarPreviousViewDirective,\\r\\n    CalendarNextViewDirective,\\r\\n    CalendarTodayDirective,\\r\\n    CalendarDatePipe,\\r\\n    CalendarEventTitlePipe,\\r\\n    CalendarA11yPipe,\\r\\n    ClickDirective,\\r\\n    KeydownEnterDirective,\\r\\n  ],\\r\\n  providers: [I18nPluralPipe],\\r\\n})\\r\\nexport class CalendarCommonModule {\\r\\n  static forRoot(\\r\\n    dateAdapter: Provider,\\r\\n    config: CalendarModuleConfig = {}\\r\\n  ): ModuleWithProviders<CalendarCommonModule> {\\r\\n    return {\\r\\n      ngModule: CalendarCommonModule,\\r\\n      providers: [\\r\\n        dateAdapter,\\r\\n        config.eventTitleFormatter || CalendarEventTitleFormatter,\\r\\n        config.dateFormatter || CalendarDateFormatter,\\r\\n        config.utils || CalendarUtils,\\r\\n        config.a11y || CalendarA11y,\\r\\n      ],\\r\\n    };\\r\\n  }\\r\\n}\\r\\n\",\"import { isInsideLeftAndRight, isWithinThreshold } from '../util/util';\\r\\nimport { ValidateDragParams } from 'angular-draggable-droppable';\\r\\n\\r\\nexport class CalendarDragHelper {\\r\\n  private readonly startPosition: ClientRect;\\r\\n\\r\\n  constructor(\\r\\n    private dragContainerElement: HTMLElement,\\r\\n    draggableElement: HTMLElement\\r\\n  ) {\\r\\n    this.startPosition = draggableElement.getBoundingClientRect();\\r\\n  }\\r\\n\\r\\n  validateDrag({\\r\\n    x,\\r\\n    y,\\r\\n    snapDraggedEvents,\\r\\n    dragAlreadyMoved,\\r\\n    transform,\\r\\n  }: {\\r\\n    x: number;\\r\\n    y: number;\\r\\n    snapDraggedEvents: boolean;\\r\\n    dragAlreadyMoved: boolean;\\r\\n    transform: ValidateDragParams['transform'];\\r\\n  }): boolean {\\r\\n    const isDraggedWithinThreshold =\\r\\n      isWithinThreshold({ x, y }) || dragAlreadyMoved;\\r\\n\\r\\n    if (snapDraggedEvents) {\\r\\n      const inner: ClientRect = Object.assign({}, this.startPosition, {\\r\\n        left: this.startPosition.left + transform.x,\\r\\n        right: this.startPosition.right + transform.x,\\r\\n        top: this.startPosition.top + transform.y,\\r\\n        bottom: this.startPosition.bottom + transform.y,\\r\\n      });\\r\\n\\r\\n      if (isDraggedWithinThreshold) {\\r\\n        const outer = this.dragContainerElement.getBoundingClientRect();\\r\\n\\r\\n        const isTopInside = outer.top < inner.top && inner.top < outer.bottom;\\r\\n\\r\\n        const isBottomInside =\\r\\n          outer.top < inner.bottom && inner.bottom < outer.bottom;\\r\\n\\r\\n        return (\\r\\n          isInsideLeftAndRight(outer, inner) && (isTopInside || isBottomInside)\\r\\n        );\\r\\n      }\\r\\n\\r\\n      /* istanbul ignore next */\\r\\n      return false;\\r\\n    } else {\\r\\n      return isDraggedWithinThreshold;\\r\\n    }\\r\\n  }\\r\\n}\\r\\n\",\"import { isInside } from '../util/util';\\r\\n\\r\\nexport class CalendarResizeHelper {\\r\\n  constructor(\\r\\n    private resizeContainerElement: HTMLElement,\\r\\n    private minWidth: number,\\r\\n    private rtl: boolean\\r\\n  ) {}\\r\\n\\r\\n  validateResize({ rectangle, edges }): boolean {\\r\\n    if (this.rtl) {\\r\\n      // TODO - find a way of testing this, for some reason the tests always fail but it does actually work\\r\\n      /* istanbul ignore next */\\r\\n      if (typeof edges.left !== 'undefined') {\\r\\n        rectangle.left -= edges.left;\\r\\n        rectangle.right += edges.left;\\r\\n      } else if (typeof edges.right !== 'undefined') {\\r\\n        rectangle.left += edges.right;\\r\\n        rectangle.right -= edges.right;\\r\\n      }\\r\\n      rectangle.width = rectangle.right - rectangle.left;\\r\\n    }\\r\\n\\r\\n    if (\\r\\n      this.minWidth &&\\r\\n      Math.ceil(rectangle.width) < Math.ceil(this.minWidth)\\r\\n    ) {\\r\\n      return false;\\r\\n    }\\r\\n\\r\\n    return isInside(\\r\\n      this.resizeContainerElement.getBoundingClientRect(),\\r\\n      rectangle\\r\\n    );\\r\\n  }\\r\\n}\\r\\n\",\"import {\\r\\n  Component,\\r\\n  Input,\\r\\n  Output,\\r\\n  EventEmitter,\\r\\n  TemplateRef,\\r\\n} from '@angular/core';\\r\\nimport { CalendarEvent, WeekDay } from 'calendar-utils';\\r\\nimport { trackByWeekDayHeaderDate } from '../../../common/util/util';\\r\\n\\r\\n@Component({\\r\\n  selector: 'mwl-calendar-week-view-header',\\r\\n  template: `\\r\\n    <ng-template\\r\\n      #defaultTemplate\\r\\n      let-days=\\\"days\\\"\\r\\n      let-locale=\\\"locale\\\"\\r\\n      let-dayHeaderClicked=\\\"dayHeaderClicked\\\"\\r\\n      let-eventDropped=\\\"eventDropped\\\"\\r\\n      let-trackByWeekDayHeaderDate=\\\"trackByWeekDayHeaderDate\\\"\\r\\n      let-dragEnter=\\\"dragEnter\\\"\\r\\n    >\\r\\n      <div class=\\\"cal-day-headers\\\" role=\\\"row\\\">\\r\\n        <div\\r\\n          class=\\\"cal-header\\\"\\r\\n          *ngFor=\\\"let day of days; trackBy: trackByWeekDayHeaderDate\\\"\\r\\n          [class.cal-past]=\\\"day.isPast\\\"\\r\\n          [class.cal-today]=\\\"day.isToday\\\"\\r\\n          [class.cal-future]=\\\"day.isFuture\\\"\\r\\n          [class.cal-weekend]=\\\"day.isWeekend\\\"\\r\\n          [ngClass]=\\\"day.cssClass\\\"\\r\\n          (mwlClick)=\\\"dayHeaderClicked.emit({ day: day, sourceEvent: $event })\\\"\\r\\n          mwlDroppable\\r\\n          dragOverClass=\\\"cal-drag-over\\\"\\r\\n          (drop)=\\\"\\r\\n            eventDropped.emit({\\r\\n              event: $event.dropData.event,\\r\\n              newStart: day.date\\r\\n            })\\r\\n          \\\"\\r\\n          (dragEnter)=\\\"dragEnter.emit({ date: day.date })\\\"\\r\\n          tabindex=\\\"0\\\"\\r\\n          role=\\\"columnheader\\\"\\r\\n        >\\r\\n          <b>{{ day.date | calendarDate : 'weekViewColumnHeader' : locale }}</b\\r\\n          ><br />\\r\\n          <span>{{\\r\\n            day.date | calendarDate : 'weekViewColumnSubHeader' : locale\\r\\n          }}</span>\\r\\n        </div>\\r\\n      </div>\\r\\n    </ng-template>\\r\\n    <ng-template\\r\\n      [ngTemplateOutlet]=\\\"customTemplate || defaultTemplate\\\"\\r\\n      [ngTemplateOutletContext]=\\\"{\\r\\n        days: days,\\r\\n        locale: locale,\\r\\n        dayHeaderClicked: dayHeaderClicked,\\r\\n        eventDropped: eventDropped,\\r\\n        dragEnter: dragEnter,\\r\\n        trackByWeekDayHeaderDate: trackByWeekDayHeaderDate\\r\\n      }\\\"\\r\\n    >\\r\\n    </ng-template>\\r\\n  `,\\r\\n})\\r\\nexport class CalendarWeekViewHeaderComponent {\\r\\n  @Input() days: WeekDay[];\\r\\n\\r\\n  @Input() locale: string;\\r\\n\\r\\n  @Input() customTemplate: TemplateRef<any>;\\r\\n\\r\\n  @Output() dayHeaderClicked = new EventEmitter<{\\r\\n    day: WeekDay;\\r\\n    sourceEvent: MouseEvent;\\r\\n  }>();\\r\\n\\r\\n  @Output() eventDropped = new EventEmitter<{\\r\\n    event: CalendarEvent;\\r\\n    newStart: Date;\\r\\n  }>();\\r\\n\\r\\n  @Output() dragEnter = new EventEmitter<{ date: Date }>();\\r\\n\\r\\n  trackByWeekDayHeaderDate = trackByWeekDayHeaderDate;\\r\\n}\\r\\n\",\"import {\\r\\n  Component,\\r\\n  Input,\\r\\n  Output,\\r\\n  EventEmitter,\\r\\n  TemplateRef,\\r\\n} from '@angular/core';\\r\\nimport {\\r\\n  WeekViewAllDayEvent,\\r\\n  WeekViewTimeEvent,\\r\\n  WeekViewHourColumn,\\r\\n} from 'calendar-utils';\\r\\nimport { PlacementArray } from 'positioning';\\r\\n\\r\\n@Component({\\r\\n  selector: 'mwl-calendar-week-view-event',\\r\\n  template: `\\r\\n    <ng-template\\r\\n      #defaultTemplate\\r\\n      let-weekEvent=\\\"weekEvent\\\"\\r\\n      let-tooltipPlacement=\\\"tooltipPlacement\\\"\\r\\n      let-eventClicked=\\\"eventClicked\\\"\\r\\n      let-tooltipTemplate=\\\"tooltipTemplate\\\"\\r\\n      let-tooltipAppendToBody=\\\"tooltipAppendToBody\\\"\\r\\n      let-tooltipDisabled=\\\"tooltipDisabled\\\"\\r\\n      let-tooltipDelay=\\\"tooltipDelay\\\"\\r\\n      let-column=\\\"column\\\"\\r\\n      let-daysInWeek=\\\"daysInWeek\\\"\\r\\n    >\\r\\n      <div\\r\\n        class=\\\"cal-event\\\"\\r\\n        [ngStyle]=\\\"{\\r\\n          color: weekEvent.event.color?.secondaryText,\\r\\n          backgroundColor: weekEvent.event.color?.secondary,\\r\\n          borderColor: weekEvent.event.color?.primary\\r\\n        }\\\"\\r\\n        [mwlCalendarTooltip]=\\\"\\r\\n          !tooltipDisabled\\r\\n            ? (weekEvent.event.title\\r\\n              | calendarEventTitle\\r\\n                : (daysInWeek === 1 ? 'dayTooltip' : 'weekTooltip')\\r\\n                : weekEvent.tempEvent || weekEvent.event)\\r\\n            : ''\\r\\n        \\\"\\r\\n        [tooltipPlacement]=\\\"tooltipPlacement\\\"\\r\\n        [tooltipEvent]=\\\"weekEvent.tempEvent || weekEvent.event\\\"\\r\\n        [tooltipTemplate]=\\\"tooltipTemplate\\\"\\r\\n        [tooltipAppendToBody]=\\\"tooltipAppendToBody\\\"\\r\\n        [tooltipDelay]=\\\"tooltipDelay\\\"\\r\\n        (mwlClick)=\\\"eventClicked.emit({ sourceEvent: $event })\\\"\\r\\n        (mwlKeydownEnter)=\\\"eventClicked.emit({ sourceEvent: $event })\\\"\\r\\n        tabindex=\\\"0\\\"\\r\\n        role=\\\"application\\\"\\r\\n        [attr.aria-label]=\\\"\\r\\n          { event: weekEvent.tempEvent || weekEvent.event, locale: locale }\\r\\n            | calendarA11y : 'eventDescription'\\r\\n        \\\"\\r\\n      >\\r\\n        <mwl-calendar-event-actions\\r\\n          [event]=\\\"weekEvent.tempEvent || weekEvent.event\\\"\\r\\n          [customTemplate]=\\\"eventActionsTemplate\\\"\\r\\n        >\\r\\n        </mwl-calendar-event-actions>\\r\\n        &ngsp;\\r\\n        <mwl-calendar-event-title\\r\\n          [event]=\\\"weekEvent.tempEvent || weekEvent.event\\\"\\r\\n          [customTemplate]=\\\"eventTitleTemplate\\\"\\r\\n          [view]=\\\"daysInWeek === 1 ? 'day' : 'week'\\\"\\r\\n        >\\r\\n        </mwl-calendar-event-title>\\r\\n      </div>\\r\\n    </ng-template>\\r\\n    <ng-template\\r\\n      [ngTemplateOutlet]=\\\"customTemplate || defaultTemplate\\\"\\r\\n      [ngTemplateOutletContext]=\\\"{\\r\\n        weekEvent: weekEvent,\\r\\n        tooltipPlacement: tooltipPlacement,\\r\\n        eventClicked: eventClicked,\\r\\n        tooltipTemplate: tooltipTemplate,\\r\\n        tooltipAppendToBody: tooltipAppendToBody,\\r\\n        tooltipDisabled: tooltipDisabled,\\r\\n        tooltipDelay: tooltipDelay,\\r\\n        column: column,\\r\\n        daysInWeek: daysInWeek\\r\\n      }\\\"\\r\\n    >\\r\\n    </ng-template>\\r\\n  `,\\r\\n})\\r\\nexport class CalendarWeekViewEventComponent {\\r\\n  @Input() locale: string;\\r\\n\\r\\n  @Input() weekEvent: WeekViewAllDayEvent | WeekViewTimeEvent;\\r\\n\\r\\n  @Input() tooltipPlacement: PlacementArray;\\r\\n\\r\\n  @Input() tooltipAppendToBody: boolean;\\r\\n\\r\\n  @Input() tooltipDisabled: boolean;\\r\\n\\r\\n  @Input() tooltipDelay: number | null;\\r\\n\\r\\n  @Input() customTemplate: TemplateRef<any>;\\r\\n\\r\\n  @Input() eventTitleTemplate: TemplateRef<any>;\\r\\n\\r\\n  @Input() eventActionsTemplate: TemplateRef<any>;\\r\\n\\r\\n  @Input() tooltipTemplate: TemplateRef<any>;\\r\\n\\r\\n  @Input() column: WeekViewHourColumn;\\r\\n\\r\\n  @Input() daysInWeek: number;\\r\\n\\r\\n  @Output() eventClicked = new EventEmitter<{\\r\\n    sourceEvent: MouseEvent | KeyboardEvent;\\r\\n  }>();\\r\\n}\\r\\n\",\"import { Component, Input, TemplateRef } from '@angular/core';\\r\\nimport { WeekViewHourSegment } from 'calendar-utils';\\r\\n\\r\\n@Component({\\r\\n  selector: 'mwl-calendar-week-view-hour-segment',\\r\\n  template: `\\r\\n    <ng-template\\r\\n      #defaultTemplate\\r\\n      let-segment=\\\"segment\\\"\\r\\n      let-locale=\\\"locale\\\"\\r\\n      let-segmentHeight=\\\"segmentHeight\\\"\\r\\n      let-isTimeLabel=\\\"isTimeLabel\\\"\\r\\n      let-daysInWeek=\\\"daysInWeek\\\"\\r\\n    >\\r\\n      <div\\r\\n        [attr.aria-hidden]=\\\"\\r\\n          {}\\r\\n            | calendarA11y\\r\\n              : (daysInWeek === 1\\r\\n                  ? 'hideDayHourSegment'\\r\\n                  : 'hideWeekHourSegment')\\r\\n        \\\"\\r\\n        class=\\\"cal-hour-segment\\\"\\r\\n        [style.height.px]=\\\"segmentHeight\\\"\\r\\n        [class.cal-hour-start]=\\\"segment.isStart\\\"\\r\\n        [class.cal-after-hour-start]=\\\"!segment.isStart\\\"\\r\\n        [ngClass]=\\\"segment.cssClass\\\"\\r\\n      >\\r\\n        <div class=\\\"cal-time\\\" *ngIf=\\\"isTimeLabel\\\">\\r\\n          {{\\r\\n            segment.displayDate\\r\\n              | calendarDate\\r\\n                : (daysInWeek === 1 ? 'dayViewHour' : 'weekViewHour')\\r\\n                : locale\\r\\n          }}\\r\\n        </div>\\r\\n      </div>\\r\\n    </ng-template>\\r\\n    <ng-template\\r\\n      [ngTemplateOutlet]=\\\"customTemplate || defaultTemplate\\\"\\r\\n      [ngTemplateOutletContext]=\\\"{\\r\\n        segment: segment,\\r\\n        locale: locale,\\r\\n        segmentHeight: segmentHeight,\\r\\n        isTimeLabel: isTimeLabel,\\r\\n        daysInWeek: daysInWeek\\r\\n      }\\\"\\r\\n    >\\r\\n    </ng-template>\\r\\n  `,\\r\\n})\\r\\nexport class CalendarWeekViewHourSegmentComponent {\\r\\n  @Input() segment: WeekViewHourSegment;\\r\\n\\r\\n  @Input() segmentHeight: number;\\r\\n\\r\\n  @Input() locale: string;\\r\\n\\r\\n  @Input() isTimeLabel: boolean;\\r\\n\\r\\n  @Input() daysInWeek: number;\\r\\n\\r\\n  @Input() customTemplate: TemplateRef<any>;\\r\\n}\\r\\n\",\"import {\\r\\n  Component,\\r\\n  Input,\\r\\n  NgZone,\\r\\n  OnChanges,\\r\\n  SimpleChanges,\\r\\n  TemplateRef,\\r\\n} from '@angular/core';\\r\\nimport { BehaviorSubject, interval, Observable } from 'rxjs';\\r\\nimport { switchMapTo, startWith, map, switchMap } from 'rxjs/operators';\\r\\nimport { DateAdapter } from '../../../date-adapters/date-adapter';\\r\\n\\r\\n@Component({\\r\\n  selector: 'mwl-calendar-week-view-current-time-marker',\\r\\n  template: `\\r\\n    <ng-template\\r\\n      #defaultTemplate\\r\\n      let-columnDate=\\\"columnDate\\\"\\r\\n      let-dayStartHour=\\\"dayStartHour\\\"\\r\\n      let-dayStartMinute=\\\"dayStartMinute\\\"\\r\\n      let-dayEndHour=\\\"dayEndHour\\\"\\r\\n      let-dayEndMinute=\\\"dayEndMinute\\\"\\r\\n      let-isVisible=\\\"isVisible\\\"\\r\\n      let-topPx=\\\"topPx\\\"\\r\\n    >\\r\\n      <div\\r\\n        class=\\\"cal-current-time-marker\\\"\\r\\n        *ngIf=\\\"isVisible\\\"\\r\\n        [style.top.px]=\\\"topPx\\\"\\r\\n      ></div>\\r\\n    </ng-template>\\r\\n    <ng-template\\r\\n      [ngTemplateOutlet]=\\\"customTemplate || defaultTemplate\\\"\\r\\n      [ngTemplateOutletContext]=\\\"{\\r\\n        columnDate: columnDate,\\r\\n        dayStartHour: dayStartHour,\\r\\n        dayStartMinute: dayStartMinute,\\r\\n        dayEndHour: dayEndHour,\\r\\n        dayEndMinute: dayEndMinute,\\r\\n        isVisible: (marker$ | async)?.isVisible,\\r\\n        topPx: (marker$ | async)?.top\\r\\n      }\\\"\\r\\n    >\\r\\n    </ng-template>\\r\\n  `,\\r\\n})\\r\\nexport class CalendarWeekViewCurrentTimeMarkerComponent implements OnChanges {\\r\\n  @Input() columnDate: Date;\\r\\n\\r\\n  @Input() dayStartHour: number;\\r\\n\\r\\n  @Input() dayStartMinute: number;\\r\\n\\r\\n  @Input() dayEndHour: number;\\r\\n\\r\\n  @Input() dayEndMinute: number;\\r\\n\\r\\n  @Input() hourSegments: number;\\r\\n\\r\\n  @Input() hourDuration: number;\\r\\n\\r\\n  @Input() hourSegmentHeight: number;\\r\\n\\r\\n  @Input() customTemplate: TemplateRef<any>;\\r\\n\\r\\n  columnDate$ = new BehaviorSubject<Date>(undefined);\\r\\n\\r\\n  marker$: Observable<{\\r\\n    isVisible: boolean;\\r\\n    top: number;\\r\\n  }> = this.zone.onStable.pipe(\\r\\n    switchMap(() => interval(60 * 1000)),\\r\\n    startWith(0),\\r\\n    switchMapTo(this.columnDate$),\\r\\n    map((columnDate) => {\\r\\n      const startOfDay = this.dateAdapter.setMinutes(\\r\\n        this.dateAdapter.setHours(columnDate, this.dayStartHour),\\r\\n        this.dayStartMinute\\r\\n      );\\r\\n      const endOfDay = this.dateAdapter.setMinutes(\\r\\n        this.dateAdapter.setHours(columnDate, this.dayEndHour),\\r\\n        this.dayEndMinute\\r\\n      );\\r\\n      const hourHeightModifier =\\r\\n        (this.hourSegments * this.hourSegmentHeight) /\\r\\n        (this.hourDuration || 60);\\r\\n      const now = new Date();\\r\\n      return {\\r\\n        isVisible:\\r\\n          this.dateAdapter.isSameDay(columnDate, now) &&\\r\\n          now >= startOfDay &&\\r\\n          now <= endOfDay,\\r\\n        top:\\r\\n          this.dateAdapter.differenceInMinutes(now, startOfDay) *\\r\\n          hourHeightModifier,\\r\\n      };\\r\\n    })\\r\\n  );\\r\\n\\r\\n  constructor(private dateAdapter: DateAdapter, private zone: NgZone) {}\\r\\n\\r\\n  ngOnChanges(changes: SimpleChanges) {\\r\\n    if (changes.columnDate) {\\r\\n      this.columnDate$.next(changes.columnDate.currentValue);\\r\\n    }\\r\\n  }\\r\\n}\\r\\n\",\"import {\\r\\n  Component,\\r\\n  Input,\\r\\n  Output,\\r\\n  EventEmitter,\\r\\n  ChangeDetectorRef,\\r\\n  OnChanges,\\r\\n  OnInit,\\r\\n  OnDestroy,\\r\\n  LOCALE_ID,\\r\\n  Inject,\\r\\n  TemplateRef,\\r\\n  ElementRef,\\r\\n  AfterViewInit,\\r\\n} from '@angular/core';\\r\\nimport { Subject, Subscription } from 'rxjs';\\r\\nimport {\\r\\n  WeekDay,\\r\\n  CalendarEvent,\\r\\n  WeekViewAllDayEvent,\\r\\n  WeekView,\\r\\n  ViewPeriod,\\r\\n  WeekViewHourColumn,\\r\\n  WeekViewTimeEvent,\\r\\n  WeekViewHourSegment,\\r\\n  WeekViewHour,\\r\\n  WeekViewAllDayEventRow,\\r\\n} from 'calendar-utils';\\r\\nimport { ResizeEvent } from 'angular-resizable-element';\\r\\nimport { ResizeCursors } from 'angular-resizable-element';\\r\\nimport { CalendarDragHelper } from '../../common/calendar-drag-helper/calendar-drag-helper.provider';\\r\\nimport { CalendarResizeHelper } from '../../common/calendar-resize-helper/calendar-resize-helper.provider';\\r\\nimport {\\r\\n  CalendarEventTimesChangedEvent,\\r\\n  CalendarEventTimesChangedEventType,\\r\\n} from '../../common/calendar-event-times-changed-event/calendar-event-times-changed-event.interface';\\r\\nimport { CalendarUtils } from '../../common/calendar-utils/calendar-utils.provider';\\r\\nimport {\\r\\n  validateEvents,\\r\\n  roundToNearest,\\r\\n  trackByWeekDayHeaderDate,\\r\\n  trackByHourSegment,\\r\\n  trackByHour,\\r\\n  getMinutesMoved,\\r\\n  getDefaultEventEnd,\\r\\n  addDaysWithExclusions,\\r\\n  isDraggedWithinPeriod,\\r\\n  shouldFireDroppedEvent,\\r\\n  getWeekViewPeriod,\\r\\n  trackByWeekAllDayEvent,\\r\\n  trackByWeekTimeEvent,\\r\\n} from '../../common/util/util';\\r\\nimport { DateAdapter } from '../../date-adapters/date-adapter';\\r\\nimport {\\r\\n  DragEndEvent,\\r\\n  DropEvent,\\r\\n  DragMoveEvent,\\r\\n  ValidateDrag,\\r\\n} from 'angular-draggable-droppable';\\r\\nimport { PlacementArray } from 'positioning';\\r\\n\\r\\nexport interface WeekViewAllDayEventResize {\\r\\n  originalOffset: number;\\r\\n  originalSpan: number;\\r\\n  edge: string;\\r\\n}\\r\\n\\r\\nexport interface CalendarWeekViewBeforeRenderEvent extends WeekView {\\r\\n  header: WeekDay[];\\r\\n}\\r\\n\\r\\n/**\\r\\n * Shows all events on a given week. Example usage:\\r\\n *\\r\\n * ```typescript\\r\\n * <mwl-calendar-week-view\\r\\n *  [viewDate]=\\\"viewDate\\\"\\r\\n *  [events]=\\\"events\\\">\\r\\n * </mwl-calendar-week-view>\\r\\n * ```\\r\\n */\\r\\n@Component({\\r\\n  selector: 'mwl-calendar-week-view',\\r\\n  template: `\\r\\n    <div class=\\\"cal-week-view\\\" role=\\\"grid\\\">\\r\\n      <mwl-calendar-week-view-header\\r\\n        [days]=\\\"days\\\"\\r\\n        [locale]=\\\"locale\\\"\\r\\n        [customTemplate]=\\\"headerTemplate\\\"\\r\\n        (dayHeaderClicked)=\\\"dayHeaderClicked.emit($event)\\\"\\r\\n        (eventDropped)=\\\"\\r\\n          eventDropped({ dropData: $event }, $event.newStart, true)\\r\\n        \\\"\\r\\n        (dragEnter)=\\\"dateDragEnter($event.date)\\\"\\r\\n      >\\r\\n      </mwl-calendar-week-view-header>\\r\\n      <div\\r\\n        class=\\\"cal-all-day-events\\\"\\r\\n        #allDayEventsContainer\\r\\n        *ngIf=\\\"view.allDayEventRows.length > 0\\\"\\r\\n        mwlDroppable\\r\\n        (dragEnter)=\\\"dragEnter('allDay')\\\"\\r\\n        (dragLeave)=\\\"dragLeave('allDay')\\\"\\r\\n      >\\r\\n        <div class=\\\"cal-day-columns\\\">\\r\\n          <div\\r\\n            class=\\\"cal-time-label-column\\\"\\r\\n            [ngTemplateOutlet]=\\\"allDayEventsLabelTemplate\\\"\\r\\n          ></div>\\r\\n          <div\\r\\n            class=\\\"cal-day-column\\\"\\r\\n            *ngFor=\\\"let day of days; trackBy: trackByWeekDayHeaderDate\\\"\\r\\n            mwlDroppable\\r\\n            dragOverClass=\\\"cal-drag-over\\\"\\r\\n            (drop)=\\\"eventDropped($event, day.date, true)\\\"\\r\\n            (dragEnter)=\\\"dateDragEnter(day.date)\\\"\\r\\n          ></div>\\r\\n        </div>\\r\\n        <div\\r\\n          *ngFor=\\\"let eventRow of view.allDayEventRows; trackBy: trackById\\\"\\r\\n          #eventRowContainer\\r\\n          class=\\\"cal-events-row\\\"\\r\\n        >\\r\\n          <div\\r\\n            *ngFor=\\\"\\r\\n              let allDayEvent of eventRow.row;\\r\\n              trackBy: trackByWeekAllDayEvent\\r\\n            \\\"\\r\\n            #event\\r\\n            class=\\\"cal-event-container\\\"\\r\\n            [class.cal-draggable]=\\\"\\r\\n              allDayEvent.event.draggable && allDayEventResizes.size === 0\\r\\n            \\\"\\r\\n            [class.cal-starts-within-week]=\\\"!allDayEvent.startsBeforeWeek\\\"\\r\\n            [class.cal-ends-within-week]=\\\"!allDayEvent.endsAfterWeek\\\"\\r\\n            [ngClass]=\\\"allDayEvent.event?.cssClass\\\"\\r\\n            [style.width.%]=\\\"(100 / days.length) * allDayEvent.span\\\"\\r\\n            [style.marginLeft.%]=\\\"\\r\\n              rtl ? null : (100 / days.length) * allDayEvent.offset\\r\\n            \\\"\\r\\n            [style.marginRight.%]=\\\"\\r\\n              rtl ? (100 / days.length) * allDayEvent.offset : null\\r\\n            \\\"\\r\\n            mwlResizable\\r\\n            [resizeCursors]=\\\"resizeCursors\\\"\\r\\n            [resizeSnapGrid]=\\\"{ left: dayColumnWidth, right: dayColumnWidth }\\\"\\r\\n            [validateResize]=\\\"validateResize\\\"\\r\\n            (resizeStart)=\\\"\\r\\n              allDayEventResizeStarted(eventRowContainer, allDayEvent, $event)\\r\\n            \\\"\\r\\n            (resizing)=\\\"\\r\\n              allDayEventResizing(allDayEvent, $event, dayColumnWidth)\\r\\n            \\\"\\r\\n            (resizeEnd)=\\\"allDayEventResizeEnded(allDayEvent)\\\"\\r\\n            mwlDraggable\\r\\n            dragActiveClass=\\\"cal-drag-active\\\"\\r\\n            [dropData]=\\\"{ event: allDayEvent.event, calendarId: calendarId }\\\"\\r\\n            [dragAxis]=\\\"{\\r\\n              x: allDayEvent.event.draggable && allDayEventResizes.size === 0,\\r\\n              y:\\r\\n                !snapDraggedEvents &&\\r\\n                allDayEvent.event.draggable &&\\r\\n                allDayEventResizes.size === 0\\r\\n            }\\\"\\r\\n            [dragSnapGrid]=\\\"snapDraggedEvents ? { x: dayColumnWidth } : {}\\\"\\r\\n            [validateDrag]=\\\"validateDrag\\\"\\r\\n            [touchStartLongPress]=\\\"{ delay: 300, delta: 30 }\\\"\\r\\n            (dragStart)=\\\"\\r\\n              dragStarted(eventRowContainer, event, allDayEvent, false)\\r\\n            \\\"\\r\\n            (dragging)=\\\"allDayEventDragMove()\\\"\\r\\n            (dragEnd)=\\\"dragEnded(allDayEvent, $event, dayColumnWidth)\\\"\\r\\n          >\\r\\n            <div\\r\\n              class=\\\"cal-resize-handle cal-resize-handle-before-start\\\"\\r\\n              *ngIf=\\\"\\r\\n                allDayEvent.event?.resizable?.beforeStart &&\\r\\n                !allDayEvent.startsBeforeWeek\\r\\n              \\\"\\r\\n              mwlResizeHandle\\r\\n              [resizeEdges]=\\\"{ left: true }\\\"\\r\\n            ></div>\\r\\n            <mwl-calendar-week-view-event\\r\\n              [locale]=\\\"locale\\\"\\r\\n              [weekEvent]=\\\"allDayEvent\\\"\\r\\n              [tooltipPlacement]=\\\"tooltipPlacement\\\"\\r\\n              [tooltipTemplate]=\\\"tooltipTemplate\\\"\\r\\n              [tooltipAppendToBody]=\\\"tooltipAppendToBody\\\"\\r\\n              [tooltipDelay]=\\\"tooltipDelay\\\"\\r\\n              [customTemplate]=\\\"eventTemplate\\\"\\r\\n              [eventTitleTemplate]=\\\"eventTitleTemplate\\\"\\r\\n              [eventActionsTemplate]=\\\"eventActionsTemplate\\\"\\r\\n              [daysInWeek]=\\\"daysInWeek\\\"\\r\\n              (eventClicked)=\\\"\\r\\n                eventClicked.emit({\\r\\n                  event: allDayEvent.event,\\r\\n                  sourceEvent: $event.sourceEvent\\r\\n                })\\r\\n              \\\"\\r\\n            >\\r\\n            </mwl-calendar-week-view-event>\\r\\n            <div\\r\\n              class=\\\"cal-resize-handle cal-resize-handle-after-end\\\"\\r\\n              *ngIf=\\\"\\r\\n                allDayEvent.event?.resizable?.afterEnd &&\\r\\n                !allDayEvent.endsAfterWeek\\r\\n              \\\"\\r\\n              mwlResizeHandle\\r\\n              [resizeEdges]=\\\"{ right: true }\\\"\\r\\n            ></div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div\\r\\n        class=\\\"cal-time-events\\\"\\r\\n        mwlDroppable\\r\\n        (dragEnter)=\\\"dragEnter('time')\\\"\\r\\n        (dragLeave)=\\\"dragLeave('time')\\\"\\r\\n      >\\r\\n        <div\\r\\n          class=\\\"cal-time-label-column\\\"\\r\\n          *ngIf=\\\"view.hourColumns.length > 0 && daysInWeek !== 1\\\"\\r\\n        >\\r\\n          <div\\r\\n            *ngFor=\\\"\\r\\n              let hour of view.hourColumns[0].hours;\\r\\n              trackBy: trackByHour;\\r\\n              let odd = odd\\r\\n            \\\"\\r\\n            class=\\\"cal-hour\\\"\\r\\n            [class.cal-hour-odd]=\\\"odd\\\"\\r\\n          >\\r\\n            <mwl-calendar-week-view-hour-segment\\r\\n              *ngFor=\\\"let segment of hour.segments; trackBy: trackByHourSegment\\\"\\r\\n              [style.height.px]=\\\"hourSegmentHeight\\\"\\r\\n              [segment]=\\\"segment\\\"\\r\\n              [segmentHeight]=\\\"hourSegmentHeight\\\"\\r\\n              [locale]=\\\"locale\\\"\\r\\n              [customTemplate]=\\\"hourSegmentTemplate\\\"\\r\\n              [isTimeLabel]=\\\"true\\\"\\r\\n              [daysInWeek]=\\\"daysInWeek\\\"\\r\\n            >\\r\\n            </mwl-calendar-week-view-hour-segment>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div\\r\\n          class=\\\"cal-day-columns\\\"\\r\\n          [class.cal-resize-active]=\\\"timeEventResizes.size > 0\\\"\\r\\n          #dayColumns\\r\\n        >\\r\\n          <div\\r\\n            class=\\\"cal-day-column\\\"\\r\\n            *ngFor=\\\"let column of view.hourColumns; trackBy: trackByHourColumn\\\"\\r\\n          >\\r\\n            <mwl-calendar-week-view-current-time-marker\\r\\n              [columnDate]=\\\"column.date\\\"\\r\\n              [dayStartHour]=\\\"dayStartHour\\\"\\r\\n              [dayStartMinute]=\\\"dayStartMinute\\\"\\r\\n              [dayEndHour]=\\\"dayEndHour\\\"\\r\\n              [dayEndMinute]=\\\"dayEndMinute\\\"\\r\\n              [hourSegments]=\\\"hourSegments\\\"\\r\\n              [hourDuration]=\\\"hourDuration\\\"\\r\\n              [hourSegmentHeight]=\\\"hourSegmentHeight\\\"\\r\\n              [customTemplate]=\\\"currentTimeMarkerTemplate\\\"\\r\\n            ></mwl-calendar-week-view-current-time-marker>\\r\\n            <div class=\\\"cal-events-container\\\">\\r\\n              <div\\r\\n                *ngFor=\\\"\\r\\n                  let timeEvent of column.events;\\r\\n                  trackBy: trackByWeekTimeEvent\\r\\n                \\\"\\r\\n                #event\\r\\n                class=\\\"cal-event-container\\\"\\r\\n                [class.cal-draggable]=\\\"\\r\\n                  timeEvent.event.draggable && timeEventResizes.size === 0\\r\\n                \\\"\\r\\n                [class.cal-starts-within-day]=\\\"!timeEvent.startsBeforeDay\\\"\\r\\n                [class.cal-ends-within-day]=\\\"!timeEvent.endsAfterDay\\\"\\r\\n                [ngClass]=\\\"timeEvent.event.cssClass\\\"\\r\\n                [hidden]=\\\"timeEvent.height === 0 && timeEvent.width === 0\\\"\\r\\n                [style.top.px]=\\\"timeEvent.top\\\"\\r\\n                [style.height.px]=\\\"timeEvent.height\\\"\\r\\n                [style.left.%]=\\\"timeEvent.left\\\"\\r\\n                [style.width.%]=\\\"timeEvent.width\\\"\\r\\n                mwlResizable\\r\\n                [resizeCursors]=\\\"resizeCursors\\\"\\r\\n                [resizeSnapGrid]=\\\"{\\r\\n                  left: dayColumnWidth,\\r\\n                  right: dayColumnWidth,\\r\\n                  top: eventSnapSize || hourSegmentHeight,\\r\\n                  bottom: eventSnapSize || hourSegmentHeight\\r\\n                }\\\"\\r\\n                [validateResize]=\\\"validateResize\\\"\\r\\n                [allowNegativeResizes]=\\\"true\\\"\\r\\n                (resizeStart)=\\\"\\r\\n                  timeEventResizeStarted(dayColumns, timeEvent, $event)\\r\\n                \\\"\\r\\n                (resizing)=\\\"timeEventResizing(timeEvent, $event)\\\"\\r\\n                (resizeEnd)=\\\"timeEventResizeEnded(timeEvent)\\\"\\r\\n                mwlDraggable\\r\\n                dragActiveClass=\\\"cal-drag-active\\\"\\r\\n                [dropData]=\\\"{ event: timeEvent.event, calendarId: calendarId }\\\"\\r\\n                [dragAxis]=\\\"{\\r\\n                  x: timeEvent.event.draggable && timeEventResizes.size === 0,\\r\\n                  y: timeEvent.event.draggable && timeEventResizes.size === 0\\r\\n                }\\\"\\r\\n                [dragSnapGrid]=\\\"\\r\\n                  snapDraggedEvents\\r\\n                    ? {\\r\\n                        x: dayColumnWidth,\\r\\n                        y: eventSnapSize || hourSegmentHeight\\r\\n                      }\\r\\n                    : {}\\r\\n                \\\"\\r\\n                [touchStartLongPress]=\\\"{ delay: 300, delta: 30 }\\\"\\r\\n                [ghostDragEnabled]=\\\"!snapDraggedEvents\\\"\\r\\n                [ghostElementTemplate]=\\\"weekEventTemplate\\\"\\r\\n                [validateDrag]=\\\"validateDrag\\\"\\r\\n                (dragStart)=\\\"dragStarted(dayColumns, event, timeEvent, true)\\\"\\r\\n                (dragging)=\\\"dragMove(timeEvent, $event)\\\"\\r\\n                (dragEnd)=\\\"dragEnded(timeEvent, $event, dayColumnWidth, true)\\\"\\r\\n              >\\r\\n                <div\\r\\n                  class=\\\"cal-resize-handle cal-resize-handle-before-start\\\"\\r\\n                  *ngIf=\\\"\\r\\n                    timeEvent.event?.resizable?.beforeStart &&\\r\\n                    !timeEvent.startsBeforeDay\\r\\n                  \\\"\\r\\n                  mwlResizeHandle\\r\\n                  [resizeEdges]=\\\"{\\r\\n                    left: true,\\r\\n                    top: true\\r\\n                  }\\\"\\r\\n                ></div>\\r\\n                <ng-template\\r\\n                  [ngTemplateOutlet]=\\\"weekEventTemplate\\\"\\r\\n                ></ng-template>\\r\\n                <ng-template #weekEventTemplate>\\r\\n                  <mwl-calendar-week-view-event\\r\\n                    [locale]=\\\"locale\\\"\\r\\n                    [weekEvent]=\\\"timeEvent\\\"\\r\\n                    [tooltipPlacement]=\\\"tooltipPlacement\\\"\\r\\n                    [tooltipTemplate]=\\\"tooltipTemplate\\\"\\r\\n                    [tooltipAppendToBody]=\\\"tooltipAppendToBody\\\"\\r\\n                    [tooltipDisabled]=\\\"dragActive || timeEventResizes.size > 0\\\"\\r\\n                    [tooltipDelay]=\\\"tooltipDelay\\\"\\r\\n                    [customTemplate]=\\\"eventTemplate\\\"\\r\\n                    [eventTitleTemplate]=\\\"eventTitleTemplate\\\"\\r\\n                    [eventActionsTemplate]=\\\"eventActionsTemplate\\\"\\r\\n                    [column]=\\\"column\\\"\\r\\n                    [daysInWeek]=\\\"daysInWeek\\\"\\r\\n                    (eventClicked)=\\\"\\r\\n                      eventClicked.emit({\\r\\n                        event: timeEvent.event,\\r\\n                        sourceEvent: $event.sourceEvent\\r\\n                      })\\r\\n                    \\\"\\r\\n                  >\\r\\n                  </mwl-calendar-week-view-event>\\r\\n                </ng-template>\\r\\n                <div\\r\\n                  class=\\\"cal-resize-handle cal-resize-handle-after-end\\\"\\r\\n                  *ngIf=\\\"\\r\\n                    timeEvent.event?.resizable?.afterEnd &&\\r\\n                    !timeEvent.endsAfterDay\\r\\n                  \\\"\\r\\n                  mwlResizeHandle\\r\\n                  [resizeEdges]=\\\"{\\r\\n                    right: true,\\r\\n                    bottom: true\\r\\n                  }\\\"\\r\\n                ></div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div\\r\\n              *ngFor=\\\"\\r\\n                let hour of column.hours;\\r\\n                trackBy: trackByHour;\\r\\n                let odd = odd\\r\\n              \\\"\\r\\n              class=\\\"cal-hour\\\"\\r\\n              [class.cal-hour-odd]=\\\"odd\\\"\\r\\n            >\\r\\n              <mwl-calendar-week-view-hour-segment\\r\\n                *ngFor=\\\"\\r\\n                  let segment of hour.segments;\\r\\n                  trackBy: trackByHourSegment\\r\\n                \\\"\\r\\n                [style.height.px]=\\\"hourSegmentHeight\\\"\\r\\n                [segment]=\\\"segment\\\"\\r\\n                [segmentHeight]=\\\"hourSegmentHeight\\\"\\r\\n                [locale]=\\\"locale\\\"\\r\\n                [customTemplate]=\\\"hourSegmentTemplate\\\"\\r\\n                [daysInWeek]=\\\"daysInWeek\\\"\\r\\n                (mwlClick)=\\\"\\r\\n                  hourSegmentClicked.emit({\\r\\n                    date: segment.date,\\r\\n                    sourceEvent: $event\\r\\n                  })\\r\\n                \\\"\\r\\n                [clickListenerDisabled]=\\\"\\r\\n                  hourSegmentClicked.observers.length === 0\\r\\n                \\\"\\r\\n                mwlDroppable\\r\\n                [dragOverClass]=\\\"\\r\\n                  !dragActive || !snapDraggedEvents ? 'cal-drag-over' : null\\r\\n                \\\"\\r\\n                dragActiveClass=\\\"cal-drag-active\\\"\\r\\n                (drop)=\\\"eventDropped($event, segment.date, false)\\\"\\r\\n                (dragEnter)=\\\"dateDragEnter(segment.date)\\\"\\r\\n                [isTimeLabel]=\\\"daysInWeek === 1\\\"\\r\\n              >\\r\\n              </mwl-calendar-week-view-hour-segment>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  `,\\r\\n})\\r\\nexport class CalendarWeekViewComponent\\r\\n  implements OnChanges, OnInit, OnDestroy, AfterViewInit\\r\\n{\\r\\n  /**\\r\\n   * The current view date\\r\\n   */\\r\\n  @Input() viewDate: Date;\\r\\n\\r\\n  /**\\r\\n   * An array of events to display on view\\r\\n   * The schema is available here: https://github.com/mattlewis92/calendar-utils/blob/c51689985f59a271940e30bc4e2c4e1fee3fcb5c/src/calendarUtils.ts#L49-L63\\r\\n   */\\r\\n  @Input() events: CalendarEvent[] = [];\\r\\n\\r\\n  /**\\r\\n   * An array of day indexes (0 = sunday, 1 = monday etc) that will be hidden on the view\\r\\n   */\\r\\n  @Input() excludeDays: number[] = [];\\r\\n\\r\\n  /**\\r\\n   * An observable that when emitted on will re-render the current view\\r\\n   */\\r\\n  @Input() refresh: Subject<any>;\\r\\n\\r\\n  /**\\r\\n   * The locale used to format dates\\r\\n   */\\r\\n  @Input() locale: string;\\r\\n\\r\\n  /**\\r\\n   * The placement of the event tooltip\\r\\n   */\\r\\n  @Input() tooltipPlacement: PlacementArray = 'auto';\\r\\n\\r\\n  /**\\r\\n   * A custom template to use for the event tooltips\\r\\n   */\\r\\n  @Input() tooltipTemplate: TemplateRef<any>;\\r\\n\\r\\n  /**\\r\\n   * Whether to append tooltips to the body or next to the trigger element\\r\\n   */\\r\\n  @Input() tooltipAppendToBody: boolean = true;\\r\\n\\r\\n  /**\\r\\n   * The delay in milliseconds before the tooltip should be displayed. If not provided the tooltip\\r\\n   * will be displayed immediately.\\r\\n   */\\r\\n  @Input() tooltipDelay: number | null = null;\\r\\n\\r\\n  /**\\r\\n   * The start number of the week.\\r\\n   * This is ignored when the `daysInWeek` input is also set as the `viewDate` will be used as the start of the week instead.\\r\\n   * Note, you should also pass this to the calendar title pipe so it shows the same days: {{ viewDate | calendarDate:(view + 'ViewTitle'):locale:weekStartsOn }}\\r\\n   * If using the moment date adapter this option won't do anything and you'll need to set it globally like so:\\r\\n   * ```\\r\\n   * moment.updateLocale('en', {\\r\\n   *   week: {\\r\\n   *     dow: 1, // set start of week to monday instead\\r\\n   *     doy: 0,\\r\\n   *   },\\r\\n   * });\\r\\n   * ```\\r\\n   */\\r\\n  @Input() weekStartsOn: number;\\r\\n\\r\\n  /**\\r\\n   * A custom template to use to replace the header\\r\\n   */\\r\\n  @Input() headerTemplate: TemplateRef<any>;\\r\\n\\r\\n  /**\\r\\n   * A custom template to use for week view events\\r\\n   */\\r\\n  @Input() eventTemplate: TemplateRef<any>;\\r\\n\\r\\n  /**\\r\\n   * A custom template to use for event titles\\r\\n   */\\r\\n  @Input() eventTitleTemplate: TemplateRef<any>;\\r\\n\\r\\n  /**\\r\\n   * A custom template to use for event actions\\r\\n   */\\r\\n  @Input() eventActionsTemplate: TemplateRef<any>;\\r\\n\\r\\n  /**\\r\\n   * The precision to display events.\\r\\n   * `days` will round event start and end dates to the nearest day and `minutes` will not do this rounding\\r\\n   */\\r\\n  @Input() precision: 'days' | 'minutes' = 'days';\\r\\n\\r\\n  /**\\r\\n   * An array of day indexes (0 = sunday, 1 = monday etc) that indicate which days are weekends\\r\\n   */\\r\\n  @Input() weekendDays: number[];\\r\\n\\r\\n  /**\\r\\n   * Whether to snap events to a grid when dragging\\r\\n   */\\r\\n  @Input() snapDraggedEvents: boolean = true;\\r\\n\\r\\n  /**\\r\\n   * The number of segments in an hour. Must divide equally into 60.\\r\\n   */\\r\\n  @Input() hourSegments: number = 2;\\r\\n\\r\\n  /**\\r\\n   * The duration of each segment group in minutes\\r\\n   */\\r\\n  @Input() hourDuration: number;\\r\\n\\r\\n  /**\\r\\n   * The height in pixels of each hour segment\\r\\n   */\\r\\n  @Input() hourSegmentHeight: number = 30;\\r\\n\\r\\n  /**\\r\\n   * The minimum height in pixels of each event\\r\\n   */\\r\\n  @Input() minimumEventHeight: number = 30;\\r\\n\\r\\n  /**\\r\\n   * The day start hours in 24 hour time. Must be 0-23\\r\\n   */\\r\\n  @Input() dayStartHour: number = 0;\\r\\n\\r\\n  /**\\r\\n   * The day start minutes. Must be 0-59\\r\\n   */\\r\\n  @Input() dayStartMinute: number = 0;\\r\\n\\r\\n  /**\\r\\n   * The day end hours in 24 hour time. Must be 0-23\\r\\n   */\\r\\n  @Input() dayEndHour: number = 23;\\r\\n\\r\\n  /**\\r\\n   * The day end minutes. Must be 0-59\\r\\n   */\\r\\n  @Input() dayEndMinute: number = 59;\\r\\n\\r\\n  /**\\r\\n   * A custom template to use to replace the hour segment\\r\\n   */\\r\\n  @Input() hourSegmentTemplate: TemplateRef<any>;\\r\\n\\r\\n  /**\\r\\n   * The grid size to snap resizing and dragging of hourly events to\\r\\n   */\\r\\n  @Input() eventSnapSize: number;\\r\\n\\r\\n  /**\\r\\n   * A custom template to use for the all day events label text\\r\\n   */\\r\\n  @Input() allDayEventsLabelTemplate: TemplateRef<any>;\\r\\n\\r\\n  /**\\r\\n   * The number of days in a week. Can be used to create a shorter or longer week view.\\r\\n   * The first day of the week will always be the `viewDate` and `weekStartsOn` if set will be ignored\\r\\n   */\\r\\n  @Input() daysInWeek: number;\\r\\n\\r\\n  /**\\r\\n   * A custom template to use for the current time marker\\r\\n   */\\r\\n  @Input() currentTimeMarkerTemplate: TemplateRef<any>;\\r\\n\\r\\n  /**\\r\\n   * Allow you to customise where events can be dragged and resized to.\\r\\n   * Return true to allow dragging and resizing to the new location, or false to prevent it\\r\\n   */\\r\\n  @Input() validateEventTimesChanged: (\\r\\n    event: CalendarEventTimesChangedEvent\\r\\n  ) => boolean;\\r\\n\\r\\n  /**\\r\\n   * Customise the document cursor when dragging to resize an event\\r\\n   */\\r\\n  @Input() resizeCursors: Partial<\\r\\n    Pick<any, 'leftOrRight' | 'topOrBottom'>\\r\\n  >;\\r\\n\\r\\n  /**\\r\\n   * Called when a header week day is clicked. Adding a `cssClass` property on `$event.day` will add that class to the header element\\r\\n   */\\r\\n  @Output() dayHeaderClicked = new EventEmitter<{\\r\\n    day: WeekDay;\\r\\n    sourceEvent: MouseEvent;\\r\\n  }>();\\r\\n\\r\\n  /**\\r\\n   * Called when an event title is clicked\\r\\n   */\\r\\n  @Output() eventClicked = new EventEmitter<{\\r\\n    event: CalendarEvent;\\r\\n    sourceEvent: MouseEvent | KeyboardEvent;\\r\\n  }>();\\r\\n\\r\\n  /**\\r\\n   * Called when an event is resized or dragged and dropped\\r\\n   */\\r\\n  @Output() eventTimesChanged =\\r\\n    new EventEmitter<CalendarEventTimesChangedEvent>();\\r\\n\\r\\n  /**\\r\\n   * An output that will be called before the view is rendered for the current week.\\r\\n   * If you add the `cssClass` property to a day in the header it will add that class to the cell element in the template\\r\\n   */\\r\\n  @Output() beforeViewRender =\\r\\n    new EventEmitter<CalendarWeekViewBeforeRenderEvent>();\\r\\n\\r\\n  /**\\r\\n   * Called when an hour segment is clicked\\r\\n   */\\r\\n  @Output() hourSegmentClicked = new EventEmitter<{\\r\\n    date: Date;\\r\\n    sourceEvent: MouseEvent;\\r\\n  }>();\\r\\n\\r\\n  /**\\r\\n   * @hidden\\r\\n   */\\r\\n  days: WeekDay[];\\r\\n\\r\\n  /**\\r\\n   * @hidden\\r\\n   */\\r\\n  view: WeekView;\\r\\n\\r\\n  /**\\r\\n   * @hidden\\r\\n   */\\r\\n  refreshSubscription: Subscription;\\r\\n\\r\\n  /**\\r\\n   * @hidden\\r\\n   */\\r\\n  allDayEventResizes: Map<WeekViewAllDayEvent, WeekViewAllDayEventResize> =\\r\\n    new Map();\\r\\n\\r\\n  /**\\r\\n   * @hidden\\r\\n   */\\r\\n  timeEventResizes: Map<CalendarEvent, ResizeEvent> = new Map();\\r\\n\\r\\n  /**\\r\\n   * @hidden\\r\\n   */\\r\\n  eventDragEnterByType = {\\r\\n    allDay: 0,\\r\\n    time: 0,\\r\\n  };\\r\\n\\r\\n  /**\\r\\n   * @hidden\\r\\n   */\\r\\n  dragActive = false;\\r\\n\\r\\n  /**\\r\\n   * @hidden\\r\\n   */\\r\\n  dragAlreadyMoved = false;\\r\\n\\r\\n  /**\\r\\n   * @hidden\\r\\n   */\\r\\n  validateDrag: ValidateDrag;\\r\\n\\r\\n  /**\\r\\n   * @hidden\\r\\n   */\\r\\n  validateResize: (args: any) => boolean;\\r\\n\\r\\n  /**\\r\\n   * @hidden\\r\\n   */\\r\\n  dayColumnWidth: number;\\r\\n\\r\\n  /**\\r\\n   * @hidden\\r\\n   */\\r\\n  calendarId = Symbol('angular calendar week view id');\\r\\n\\r\\n  /**\\r\\n   * @hidden\\r\\n   */\\r\\n  lastDraggedEvent: CalendarEvent;\\r\\n\\r\\n  /**\\r\\n   * @hidden\\r\\n   */\\r\\n  rtl = false;\\r\\n\\r\\n  /**\\r\\n   * @hidden\\r\\n   */\\r\\n  trackByWeekDayHeaderDate = trackByWeekDayHeaderDate;\\r\\n\\r\\n  /**\\r\\n   * @hidden\\r\\n   */\\r\\n  trackByHourSegment = trackByHourSegment;\\r\\n\\r\\n  /**\\r\\n   * @hidden\\r\\n   */\\r\\n  trackByHour = trackByHour;\\r\\n\\r\\n  /**\\r\\n   * @hidden\\r\\n   */\\r\\n  trackByWeekAllDayEvent = trackByWeekAllDayEvent;\\r\\n\\r\\n  /**\\r\\n   * @hidden\\r\\n   */\\r\\n  trackByWeekTimeEvent = trackByWeekTimeEvent;\\r\\n\\r\\n  /**\\r\\n   * @hidden\\r\\n   */\\r\\n  private lastDragEnterDate: Date;\\r\\n\\r\\n  /**\\r\\n   * @hidden\\r\\n   */\\r\\n  constructor(\\r\\n    protected cdr: ChangeDetectorRef,\\r\\n    protected utils: CalendarUtils,\\r\\n    @Inject(LOCALE_ID) locale: string,\\r\\n    protected dateAdapter: DateAdapter,\\r\\n    protected element: ElementRef<HTMLElement>\\r\\n  ) {\\r\\n    this.locale = locale;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @hidden\\r\\n   */\\r\\n  trackByHourColumn = (index: number, column: WeekViewHourColumn) =>\\r\\n    column.hours[0] ? column.hours[0].segments[0].date.toISOString() : column;\\r\\n\\r\\n  /**\\r\\n   * @hidden\\r\\n   */\\r\\n  trackById = (index: number, row: WeekViewAllDayEventRow) => row.id;\\r\\n\\r\\n  /**\\r\\n   * @hidden\\r\\n   */\\r\\n  ngOnInit(): void {\\r\\n    if (this.refresh) {\\r\\n      this.refreshSubscription = this.refresh.subscribe(() => {\\r\\n        this.refreshAll();\\r\\n        this.cdr.markForCheck();\\r\\n      });\\r\\n    }\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @hidden\\r\\n   */\\r\\n  ngOnChanges(changes: any): void {\\r\\n    const refreshHeader =\\r\\n      changes.viewDate ||\\r\\n      changes.excludeDays ||\\r\\n      changes.weekendDays ||\\r\\n      changes.daysInWeek ||\\r\\n      changes.weekStartsOn;\\r\\n\\r\\n    const refreshBody =\\r\\n      changes.viewDate ||\\r\\n      changes.dayStartHour ||\\r\\n      changes.dayStartMinute ||\\r\\n      changes.dayEndHour ||\\r\\n      changes.dayEndMinute ||\\r\\n      changes.hourSegments ||\\r\\n      changes.hourDuration ||\\r\\n      changes.weekStartsOn ||\\r\\n      changes.weekendDays ||\\r\\n      changes.excludeDays ||\\r\\n      changes.hourSegmentHeight ||\\r\\n      changes.events ||\\r\\n      changes.daysInWeek ||\\r\\n      changes.minimumEventHeight;\\r\\n\\r\\n    if (refreshHeader) {\\r\\n      this.refreshHeader();\\r\\n    }\\r\\n\\r\\n    if (changes.events) {\\r\\n      validateEvents(this.events);\\r\\n    }\\r\\n\\r\\n    if (refreshBody) {\\r\\n      this.refreshBody();\\r\\n    }\\r\\n\\r\\n    if (refreshHeader || refreshBody) {\\r\\n      this.emitBeforeViewRender();\\r\\n    }\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @hidden\\r\\n   */\\r\\n  ngOnDestroy(): void {\\r\\n    if (this.refreshSubscription) {\\r\\n      this.refreshSubscription.unsubscribe();\\r\\n    }\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @hidden\\r\\n   */\\r\\n  ngAfterViewInit() {\\r\\n    this.rtl =\\r\\n      typeof window !== 'undefined' &&\\r\\n      getComputedStyle(this.element.nativeElement).direction === 'rtl';\\r\\n    this.cdr.detectChanges();\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @hidden\\r\\n   */\\r\\n  timeEventResizeStarted(\\r\\n    eventsContainer: HTMLElement,\\r\\n    timeEvent: WeekViewTimeEvent,\\r\\n    resizeEvent: ResizeEvent\\r\\n  ): void {\\r\\n    this.timeEventResizes.set(timeEvent.event, resizeEvent);\\r\\n    this.resizeStarted(eventsContainer, timeEvent);\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @hidden\\r\\n   */\\r\\n  timeEventResizing(timeEvent: WeekViewTimeEvent, resizeEvent: ResizeEvent) {\\r\\n    this.timeEventResizes.set(timeEvent.event, resizeEvent);\\r\\n    const adjustedEvents = new Map<CalendarEvent, CalendarEvent>();\\r\\n\\r\\n    const tempEvents = [...this.events];\\r\\n\\r\\n    this.timeEventResizes.forEach((lastResizeEvent, event) => {\\r\\n      const newEventDates = this.getTimeEventResizedDates(\\r\\n        event,\\r\\n        lastResizeEvent\\r\\n      );\\r\\n      const adjustedEvent = { ...event, ...newEventDates };\\r\\n      adjustedEvents.set(adjustedEvent, event);\\r\\n      const eventIndex = tempEvents.indexOf(event);\\r\\n      tempEvents[eventIndex] = adjustedEvent;\\r\\n    });\\r\\n\\r\\n    this.restoreOriginalEvents(tempEvents, adjustedEvents, true);\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @hidden\\r\\n   */\\r\\n  timeEventResizeEnded(timeEvent: WeekViewTimeEvent) {\\r\\n    this.view = this.getWeekView(this.events);\\r\\n    const lastResizeEvent = this.timeEventResizes.get(timeEvent.event);\\r\\n    if (lastResizeEvent) {\\r\\n      this.timeEventResizes.delete(timeEvent.event);\\r\\n      const newEventDates = this.getTimeEventResizedDates(\\r\\n        timeEvent.event,\\r\\n        lastResizeEvent\\r\\n      );\\r\\n      this.eventTimesChanged.emit({\\r\\n        newStart: newEventDates.start,\\r\\n        newEnd: newEventDates.end,\\r\\n        event: timeEvent.event,\\r\\n        type: CalendarEventTimesChangedEventType.Resize,\\r\\n      });\\r\\n    }\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @hidden\\r\\n   */\\r\\n  allDayEventResizeStarted(\\r\\n    allDayEventsContainer: HTMLElement,\\r\\n    allDayEvent: WeekViewAllDayEvent,\\r\\n    resizeEvent: ResizeEvent\\r\\n  ): void {\\r\\n    this.allDayEventResizes.set(allDayEvent, {\\r\\n      originalOffset: allDayEvent.offset,\\r\\n      originalSpan: allDayEvent.span,\\r\\n      edge: typeof resizeEvent.edges.left !== 'undefined' ? 'left' : 'right',\\r\\n    });\\r\\n    this.resizeStarted(\\r\\n      allDayEventsContainer,\\r\\n      allDayEvent,\\r\\n      this.getDayColumnWidth(allDayEventsContainer)\\r\\n    );\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @hidden\\r\\n   */\\r\\n  allDayEventResizing(\\r\\n    allDayEvent: WeekViewAllDayEvent,\\r\\n    resizeEvent: ResizeEvent,\\r\\n    dayWidth: number\\r\\n  ): void {\\r\\n    const currentResize: WeekViewAllDayEventResize =\\r\\n      this.allDayEventResizes.get(allDayEvent);\\r\\n\\r\\n    const modifier = this.rtl ? -1 : 1;\\r\\n    if (typeof resizeEvent.edges.left !== 'undefined') {\\r\\n      const diff: number =\\r\\n        Math.round(+resizeEvent.edges.left / dayWidth) * modifier;\\r\\n      allDayEvent.offset = currentResize.originalOffset + diff;\\r\\n      allDayEvent.span = currentResize.originalSpan - diff;\\r\\n    } else if (typeof resizeEvent.edges.right !== 'undefined') {\\r\\n      const diff: number =\\r\\n        Math.round(+resizeEvent.edges.right / dayWidth) * modifier;\\r\\n      allDayEvent.span = currentResize.originalSpan + diff;\\r\\n    }\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @hidden\\r\\n   */\\r\\n  allDayEventResizeEnded(allDayEvent: WeekViewAllDayEvent): void {\\r\\n    const currentResize: WeekViewAllDayEventResize =\\r\\n      this.allDayEventResizes.get(allDayEvent);\\r\\n\\r\\n    if (currentResize) {\\r\\n      const allDayEventResizingBeforeStart = currentResize.edge === 'left';\\r\\n      let daysDiff: number;\\r\\n      if (allDayEventResizingBeforeStart) {\\r\\n        daysDiff = allDayEvent.offset - currentResize.originalOffset;\\r\\n      } else {\\r\\n        daysDiff = allDayEvent.span - currentResize.originalSpan;\\r\\n      }\\r\\n\\r\\n      allDayEvent.offset = currentResize.originalOffset;\\r\\n      allDayEvent.span = currentResize.originalSpan;\\r\\n\\r\\n      const newDates = this.getAllDayEventResizedDates(\\r\\n        allDayEvent.event,\\r\\n        daysDiff,\\r\\n        allDayEventResizingBeforeStart\\r\\n      );\\r\\n\\r\\n      this.eventTimesChanged.emit({\\r\\n        newStart: newDates.start,\\r\\n        newEnd: newDates.end,\\r\\n        event: allDayEvent.event,\\r\\n        type: CalendarEventTimesChangedEventType.Resize,\\r\\n      });\\r\\n      this.allDayEventResizes.delete(allDayEvent);\\r\\n    }\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @hidden\\r\\n   */\\r\\n  getDayColumnWidth(eventRowContainer: HTMLElement): number {\\r\\n    return Math.floor(eventRowContainer.offsetWidth / this.days.length);\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @hidden\\r\\n   */\\r\\n  dateDragEnter(date: Date) {\\r\\n    this.lastDragEnterDate = date;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @hidden\\r\\n   */\\r\\n  eventDropped(\\r\\n    dropEvent: Pick<\\r\\n      DropEvent<{ event?: CalendarEvent; calendarId?: symbol }>,\\r\\n      'dropData'\\r\\n    >,\\r\\n    date: Date,\\r\\n    allDay: boolean\\r\\n  ): void {\\r\\n    if (\\r\\n      shouldFireDroppedEvent(dropEvent, date, allDay, this.calendarId) &&\\r\\n      this.lastDragEnterDate.getTime() === date.getTime() &&\\r\\n      (!this.snapDraggedEvents ||\\r\\n        dropEvent.dropData.event !== this.lastDraggedEvent)\\r\\n    ) {\\r\\n      this.eventTimesChanged.emit({\\r\\n        type: CalendarEventTimesChangedEventType.Drop,\\r\\n        event: dropEvent.dropData.event,\\r\\n        newStart: date,\\r\\n        allDay,\\r\\n      });\\r\\n    }\\r\\n    this.lastDraggedEvent = null;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @hidden\\r\\n   */\\r\\n  dragEnter(type: 'allDay' | 'time') {\\r\\n    this.eventDragEnterByType[type]++;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @hidden\\r\\n   */\\r\\n  dragLeave(type: 'allDay' | 'time') {\\r\\n    this.eventDragEnterByType[type]--;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @hidden\\r\\n   */\\r\\n  dragStarted(\\r\\n    eventsContainerElement: HTMLElement,\\r\\n    eventElement: HTMLElement,\\r\\n    event: WeekViewTimeEvent | WeekViewAllDayEvent,\\r\\n    useY: boolean\\r\\n  ): void {\\r\\n    this.dayColumnWidth = this.getDayColumnWidth(eventsContainerElement);\\r\\n    const dragHelper: CalendarDragHelper = new CalendarDragHelper(\\r\\n      eventsContainerElement,\\r\\n      eventElement\\r\\n    );\\r\\n    this.validateDrag = ({ x, y, transform }) => {\\r\\n      const isAllowed =\\r\\n        this.allDayEventResizes.size === 0 &&\\r\\n        this.timeEventResizes.size === 0 &&\\r\\n        dragHelper.validateDrag({\\r\\n          x,\\r\\n          y,\\r\\n          snapDraggedEvents: this.snapDraggedEvents,\\r\\n          dragAlreadyMoved: this.dragAlreadyMoved,\\r\\n          transform,\\r\\n        });\\r\\n      if (isAllowed && this.validateEventTimesChanged) {\\r\\n        const newEventTimes = this.getDragMovedEventTimes(\\r\\n          event,\\r\\n          { x, y },\\r\\n          this.dayColumnWidth,\\r\\n          useY\\r\\n        );\\r\\n        return this.validateEventTimesChanged({\\r\\n          type: CalendarEventTimesChangedEventType.Drag,\\r\\n          event: event.event,\\r\\n          newStart: newEventTimes.start,\\r\\n          newEnd: newEventTimes.end,\\r\\n        });\\r\\n      }\\r\\n\\r\\n      return isAllowed;\\r\\n    };\\r\\n    this.dragActive = true;\\r\\n    this.dragAlreadyMoved = false;\\r\\n    this.lastDraggedEvent = null;\\r\\n    this.eventDragEnterByType = {\\r\\n      allDay: 0,\\r\\n      time: 0,\\r\\n    };\\r\\n    if (!this.snapDraggedEvents && useY) {\\r\\n      this.view.hourColumns.forEach((column) => {\\r\\n        const linkedEvent = column.events.find(\\r\\n          (columnEvent) =>\\r\\n            columnEvent.event === event.event && columnEvent !== event\\r\\n        );\\r\\n        // hide any linked events while dragging\\r\\n        if (linkedEvent) {\\r\\n          linkedEvent.width = 0;\\r\\n          linkedEvent.height = 0;\\r\\n        }\\r\\n      });\\r\\n    }\\r\\n    this.cdr.markForCheck();\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @hidden\\r\\n   */\\r\\n  dragMove(dayEvent: WeekViewTimeEvent, dragEvent: DragMoveEvent) {\\r\\n    const newEventTimes = this.getDragMovedEventTimes(\\r\\n      dayEvent,\\r\\n      dragEvent,\\r\\n      this.dayColumnWidth,\\r\\n      true\\r\\n    );\\r\\n    const originalEvent = dayEvent.event;\\r\\n    const adjustedEvent = { ...originalEvent, ...newEventTimes };\\r\\n    const tempEvents = this.events.map((event) => {\\r\\n      if (event === originalEvent) {\\r\\n        return adjustedEvent;\\r\\n      }\\r\\n      return event;\\r\\n    });\\r\\n    this.restoreOriginalEvents(\\r\\n      tempEvents,\\r\\n      new Map([[adjustedEvent, originalEvent]]),\\r\\n      this.snapDraggedEvents\\r\\n    );\\r\\n    this.dragAlreadyMoved = true;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @hidden\\r\\n   */\\r\\n  allDayEventDragMove() {\\r\\n    this.dragAlreadyMoved = true;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @hidden\\r\\n   */\\r\\n  dragEnded(\\r\\n    weekEvent: WeekViewAllDayEvent | WeekViewTimeEvent,\\r\\n    dragEndEvent: DragEndEvent,\\r\\n    dayWidth: number,\\r\\n    useY = false\\r\\n  ): void {\\r\\n    this.view = this.getWeekView(this.events);\\r\\n    this.dragActive = false;\\r\\n    this.validateDrag = null;\\r\\n    const { start, end } = this.getDragMovedEventTimes(\\r\\n      weekEvent,\\r\\n      dragEndEvent,\\r\\n      dayWidth,\\r\\n      useY\\r\\n    );\\r\\n    if (\\r\\n      (this.snapDraggedEvents ||\\r\\n        this.eventDragEnterByType[useY ? 'time' : 'allDay'] > 0) &&\\r\\n      isDraggedWithinPeriod(start, end, this.view.period)\\r\\n    ) {\\r\\n      this.lastDraggedEvent = weekEvent.event;\\r\\n      this.eventTimesChanged.emit({\\r\\n        newStart: start,\\r\\n        newEnd: end,\\r\\n        event: weekEvent.event,\\r\\n        type: CalendarEventTimesChangedEventType.Drag,\\r\\n        allDay: !useY,\\r\\n      });\\r\\n    }\\r\\n  }\\r\\n\\r\\n  protected refreshHeader(): void {\\r\\n    this.days = this.utils.getWeekViewHeader({\\r\\n      viewDate: this.viewDate,\\r\\n      weekStartsOn: this.weekStartsOn,\\r\\n      excluded: this.excludeDays,\\r\\n      weekendDays: this.weekendDays,\\r\\n      ...getWeekViewPeriod(\\r\\n        this.dateAdapter,\\r\\n        this.viewDate,\\r\\n        this.weekStartsOn,\\r\\n        this.excludeDays,\\r\\n        this.daysInWeek\\r\\n      ),\\r\\n    });\\r\\n  }\\r\\n\\r\\n  protected refreshBody(): void {\\r\\n    this.view = this.getWeekView(this.events);\\r\\n  }\\r\\n\\r\\n  protected refreshAll(): void {\\r\\n    this.refreshHeader();\\r\\n    this.refreshBody();\\r\\n    this.emitBeforeViewRender();\\r\\n  }\\r\\n\\r\\n  protected emitBeforeViewRender(): void {\\r\\n    if (this.days && this.view) {\\r\\n      this.beforeViewRender.emit({\\r\\n        header: this.days,\\r\\n        ...this.view,\\r\\n      });\\r\\n    }\\r\\n  }\\r\\n\\r\\n  protected getWeekView(events: CalendarEvent[]) {\\r\\n    return this.utils.getWeekView({\\r\\n      events,\\r\\n      viewDate: this.viewDate,\\r\\n      weekStartsOn: this.weekStartsOn,\\r\\n      excluded: this.excludeDays,\\r\\n      precision: this.precision,\\r\\n      absolutePositionedEvents: true,\\r\\n      hourSegments: this.hourSegments,\\r\\n      hourDuration: this.hourDuration,\\r\\n      dayStart: {\\r\\n        hour: this.dayStartHour,\\r\\n        minute: this.dayStartMinute,\\r\\n      },\\r\\n      dayEnd: {\\r\\n        hour: this.dayEndHour,\\r\\n        minute: this.dayEndMinute,\\r\\n      },\\r\\n      segmentHeight: this.hourSegmentHeight,\\r\\n      weekendDays: this.weekendDays,\\r\\n      minimumEventHeight: this.minimumEventHeight,\\r\\n      ...getWeekViewPeriod(\\r\\n        this.dateAdapter,\\r\\n        this.viewDate,\\r\\n        this.weekStartsOn,\\r\\n        this.excludeDays,\\r\\n        this.daysInWeek\\r\\n      ),\\r\\n    });\\r\\n  }\\r\\n\\r\\n  protected getDragMovedEventTimes(\\r\\n    weekEvent: WeekViewAllDayEvent | WeekViewTimeEvent,\\r\\n    dragEndEvent: DragEndEvent | DragMoveEvent,\\r\\n    dayWidth: number,\\r\\n    useY: boolean\\r\\n  ) {\\r\\n    const daysDragged =\\r\\n      (roundToNearest(dragEndEvent.x, dayWidth) / dayWidth) *\\r\\n      (this.rtl ? -1 : 1);\\r\\n    const minutesMoved = useY\\r\\n      ? getMinutesMoved(\\r\\n          dragEndEvent.y,\\r\\n          this.hourSegments,\\r\\n          this.hourSegmentHeight,\\r\\n          this.eventSnapSize,\\r\\n          this.hourDuration\\r\\n        )\\r\\n      : 0;\\r\\n\\r\\n    const start = this.dateAdapter.addMinutes(\\r\\n      addDaysWithExclusions(\\r\\n        this.dateAdapter,\\r\\n        weekEvent.event.start,\\r\\n        daysDragged,\\r\\n        this.excludeDays\\r\\n      ),\\r\\n      minutesMoved\\r\\n    );\\r\\n    let end: Date;\\r\\n    if (weekEvent.event.end) {\\r\\n      end = this.dateAdapter.addMinutes(\\r\\n        addDaysWithExclusions(\\r\\n          this.dateAdapter,\\r\\n          weekEvent.event.end,\\r\\n          daysDragged,\\r\\n          this.excludeDays\\r\\n        ),\\r\\n        minutesMoved\\r\\n      );\\r\\n    }\\r\\n\\r\\n    return { start, end };\\r\\n  }\\r\\n\\r\\n  protected restoreOriginalEvents(\\r\\n    tempEvents: CalendarEvent[],\\r\\n    adjustedEvents: Map<CalendarEvent, CalendarEvent>,\\r\\n    snapDraggedEvents = true\\r\\n  ) {\\r\\n    const previousView = this.view;\\r\\n    if (snapDraggedEvents) {\\r\\n      this.view = this.getWeekView(tempEvents);\\r\\n    }\\r\\n\\r\\n    const adjustedEventsArray = tempEvents.filter((event) =>\\r\\n      adjustedEvents.has(event)\\r\\n    );\\r\\n    this.view.hourColumns.forEach((column, columnIndex) => {\\r\\n      previousView.hourColumns[columnIndex].hours.forEach((hour, hourIndex) => {\\r\\n        hour.segments.forEach((segment, segmentIndex) => {\\r\\n          column.hours[hourIndex].segments[segmentIndex].cssClass =\\r\\n            segment.cssClass;\\r\\n        });\\r\\n      });\\r\\n\\r\\n      adjustedEventsArray.forEach((adjustedEvent) => {\\r\\n        const originalEvent = adjustedEvents.get(adjustedEvent);\\r\\n        const existingColumnEvent = column.events.find(\\r\\n          (columnEvent) =>\\r\\n            columnEvent.event ===\\r\\n            (snapDraggedEvents ? adjustedEvent : originalEvent)\\r\\n        );\\r\\n        if (existingColumnEvent) {\\r\\n          // restore the original event so trackBy kicks in and the dom isn't changed\\r\\n          existingColumnEvent.event = originalEvent;\\r\\n          existingColumnEvent['tempEvent'] = adjustedEvent;\\r\\n          if (!snapDraggedEvents) {\\r\\n            existingColumnEvent.height = 0;\\r\\n            existingColumnEvent.width = 0;\\r\\n          }\\r\\n        } else {\\r\\n          // add a dummy event to the drop so if the event was removed from the original column the drag doesn't end early\\r\\n          const event = {\\r\\n            event: originalEvent,\\r\\n            left: 0,\\r\\n            top: 0,\\r\\n            height: 0,\\r\\n            width: 0,\\r\\n            startsBeforeDay: false,\\r\\n            endsAfterDay: false,\\r\\n            tempEvent: adjustedEvent,\\r\\n          };\\r\\n          column.events.push(event);\\r\\n        }\\r\\n      });\\r\\n    });\\r\\n    adjustedEvents.clear();\\r\\n  }\\r\\n\\r\\n  protected getTimeEventResizedDates(\\r\\n    calendarEvent: CalendarEvent,\\r\\n    resizeEvent: ResizeEvent\\r\\n  ) {\\r\\n    const newEventDates = {\\r\\n      start: calendarEvent.start,\\r\\n      end: getDefaultEventEnd(\\r\\n        this.dateAdapter,\\r\\n        calendarEvent,\\r\\n        this.minimumEventHeight\\r\\n      ),\\r\\n    };\\r\\n    const { end, ...eventWithoutEnd } = calendarEvent;\\r\\n    const smallestResizes = {\\r\\n      start: this.dateAdapter.addMinutes(\\r\\n        newEventDates.end,\\r\\n        this.minimumEventHeight * -1\\r\\n      ),\\r\\n      end: getDefaultEventEnd(\\r\\n        this.dateAdapter,\\r\\n        eventWithoutEnd,\\r\\n        this.minimumEventHeight\\r\\n      ),\\r\\n    };\\r\\n\\r\\n    const modifier = this.rtl ? -1 : 1;\\r\\n\\r\\n    if (typeof resizeEvent.edges.left !== 'undefined') {\\r\\n      const daysDiff =\\r\\n        Math.round(+resizeEvent.edges.left / this.dayColumnWidth) * modifier;\\r\\n      const newStart = addDaysWithExclusions(\\r\\n        this.dateAdapter,\\r\\n        newEventDates.start,\\r\\n        daysDiff,\\r\\n        this.excludeDays\\r\\n      );\\r\\n      if (newStart < smallestResizes.start) {\\r\\n        newEventDates.start = newStart;\\r\\n      } else {\\r\\n        newEventDates.start = smallestResizes.start;\\r\\n      }\\r\\n    } else if (typeof resizeEvent.edges.right !== 'undefined') {\\r\\n      const daysDiff =\\r\\n        Math.round(+resizeEvent.edges.right / this.dayColumnWidth) * modifier;\\r\\n      const newEnd = addDaysWithExclusions(\\r\\n        this.dateAdapter,\\r\\n        newEventDates.end,\\r\\n        daysDiff,\\r\\n        this.excludeDays\\r\\n      );\\r\\n      if (newEnd > smallestResizes.end) {\\r\\n        newEventDates.end = newEnd;\\r\\n      } else {\\r\\n        newEventDates.end = smallestResizes.end;\\r\\n      }\\r\\n    }\\r\\n\\r\\n    if (typeof resizeEvent.edges.top !== 'undefined') {\\r\\n      const minutesMoved = getMinutesMoved(\\r\\n        resizeEvent.edges.top as number,\\r\\n        this.hourSegments,\\r\\n        this.hourSegmentHeight,\\r\\n        this.eventSnapSize,\\r\\n        this.hourDuration\\r\\n      );\\r\\n      const newStart = this.dateAdapter.addMinutes(\\r\\n        newEventDates.start,\\r\\n        minutesMoved\\r\\n      );\\r\\n      if (newStart < smallestResizes.start) {\\r\\n        newEventDates.start = newStart;\\r\\n      } else {\\r\\n        newEventDates.start = smallestResizes.start;\\r\\n      }\\r\\n    } else if (typeof resizeEvent.edges.bottom !== 'undefined') {\\r\\n      const minutesMoved = getMinutesMoved(\\r\\n        resizeEvent.edges.bottom as number,\\r\\n        this.hourSegments,\\r\\n        this.hourSegmentHeight,\\r\\n        this.eventSnapSize,\\r\\n        this.hourDuration\\r\\n      );\\r\\n      const newEnd = this.dateAdapter.addMinutes(\\r\\n        newEventDates.end,\\r\\n        minutesMoved\\r\\n      );\\r\\n      if (newEnd > smallestResizes.end) {\\r\\n        newEventDates.end = newEnd;\\r\\n      } else {\\r\\n        newEventDates.end = smallestResizes.end;\\r\\n      }\\r\\n    }\\r\\n\\r\\n    return newEventDates;\\r\\n  }\\r\\n\\r\\n  protected resizeStarted(\\r\\n    eventsContainer: HTMLElement,\\r\\n    event: WeekViewTimeEvent | WeekViewAllDayEvent,\\r\\n    dayWidth?: number\\r\\n  ) {\\r\\n    this.dayColumnWidth = this.getDayColumnWidth(eventsContainer);\\r\\n    const resizeHelper = new CalendarResizeHelper(\\r\\n      eventsContainer,\\r\\n      dayWidth,\\r\\n      this.rtl\\r\\n    );\\r\\n    this.validateResize = ({ rectangle, edges }) => {\\r\\n      const isWithinBoundary = resizeHelper.validateResize({\\r\\n        rectangle: { ...rectangle },\\r\\n        edges,\\r\\n      });\\r\\n\\r\\n      if (isWithinBoundary && this.validateEventTimesChanged) {\\r\\n        let newEventDates;\\r\\n        if (!dayWidth) {\\r\\n          newEventDates = this.getTimeEventResizedDates(event.event, {\\r\\n            rectangle,\\r\\n            edges,\\r\\n          });\\r\\n        } else {\\r\\n          const modifier = this.rtl ? -1 : 1;\\r\\n          if (typeof edges.left !== 'undefined') {\\r\\n            const diff = Math.round(+edges.left / dayWidth) * modifier;\\r\\n            newEventDates = this.getAllDayEventResizedDates(\\r\\n              event.event,\\r\\n              diff,\\r\\n              !this.rtl\\r\\n            );\\r\\n          } else {\\r\\n            const diff = Math.round(+edges.right / dayWidth) * modifier;\\r\\n            newEventDates = this.getAllDayEventResizedDates(\\r\\n              event.event,\\r\\n              diff,\\r\\n              this.rtl\\r\\n            );\\r\\n          }\\r\\n        }\\r\\n        return this.validateEventTimesChanged({\\r\\n          type: CalendarEventTimesChangedEventType.Resize,\\r\\n          event: event.event,\\r\\n          newStart: newEventDates.start,\\r\\n          newEnd: newEventDates.end,\\r\\n        });\\r\\n      }\\r\\n\\r\\n      return isWithinBoundary;\\r\\n    };\\r\\n    this.cdr.markForCheck();\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @hidden\\r\\n   */\\r\\n  protected getAllDayEventResizedDates(\\r\\n    event: CalendarEvent,\\r\\n    daysDiff: number,\\r\\n    beforeStart: boolean\\r\\n  ) {\\r\\n    let start: Date = event.start;\\r\\n    let end: Date = event.end || event.start;\\r\\n    if (beforeStart) {\\r\\n      start = addDaysWithExclusions(\\r\\n        this.dateAdapter,\\r\\n        start,\\r\\n        daysDiff,\\r\\n        this.excludeDays\\r\\n      );\\r\\n    } else {\\r\\n      end = addDaysWithExclusions(\\r\\n        this.dateAdapter,\\r\\n        end,\\r\\n        daysDiff,\\r\\n        this.excludeDays\\r\\n      );\\r\\n    }\\r\\n\\r\\n    return { start, end };\\r\\n  }\\r\\n}\\r\\n\",\"import {\\r\\n  Component,\\r\\n  Input,\\r\\n  Output,\\r\\n  EventEmitter,\\r\\n  TemplateRef,\\r\\n} from '@angular/core';\\r\\nimport { CalendarEvent } from 'calendar-utils';\\r\\nimport { Subject } from 'rxjs';\\r\\nimport { CalendarEventTimesChangedEvent } from '../../common/calendar-event-times-changed-event/calendar-event-times-changed-event.interface';\\r\\nimport { PlacementArray } from 'positioning';\\r\\nimport { CalendarWeekViewBeforeRenderEvent } from '../../week/calendar-week.module';\\r\\nimport { ResizeCursors } from 'angular-resizable-element';\\r\\n\\r\\nexport type CalendarDayViewBeforeRenderEvent =\\r\\n  CalendarWeekViewBeforeRenderEvent;\\r\\n\\r\\n/**\\r\\n * Shows all events on a given day. Example usage:\\r\\n *\\r\\n * ```typescript\\r\\n * <mwl-calendar-day-view\\r\\n *  [viewDate]=\\\"viewDate\\\"\\r\\n *  [events]=\\\"events\\\">\\r\\n * </mwl-calendar-day-view>\\r\\n * ```\\r\\n */\\r\\n@Component({\\r\\n  selector: 'mwl-calendar-day-view',\\r\\n  template: `\\r\\n    <mwl-calendar-week-view\\r\\n      class=\\\"cal-day-view\\\"\\r\\n      [daysInWeek]=\\\"1\\\"\\r\\n      [viewDate]=\\\"viewDate\\\"\\r\\n      [events]=\\\"events\\\"\\r\\n      [hourSegments]=\\\"hourSegments\\\"\\r\\n      [hourDuration]=\\\"hourDuration\\\"\\r\\n      [hourSegmentHeight]=\\\"hourSegmentHeight\\\"\\r\\n      [minimumEventHeight]=\\\"minimumEventHeight\\\"\\r\\n      [dayStartHour]=\\\"dayStartHour\\\"\\r\\n      [dayStartMinute]=\\\"dayStartMinute\\\"\\r\\n      [dayEndHour]=\\\"dayEndHour\\\"\\r\\n      [dayEndMinute]=\\\"dayEndMinute\\\"\\r\\n      [refresh]=\\\"refresh\\\"\\r\\n      [locale]=\\\"locale\\\"\\r\\n      [eventSnapSize]=\\\"eventSnapSize\\\"\\r\\n      [tooltipPlacement]=\\\"tooltipPlacement\\\"\\r\\n      [tooltipTemplate]=\\\"tooltipTemplate\\\"\\r\\n      [tooltipAppendToBody]=\\\"tooltipAppendToBody\\\"\\r\\n      [tooltipDelay]=\\\"tooltipDelay\\\"\\r\\n      [resizeCursors]=\\\"resizeCursors\\\"\\r\\n      [hourSegmentTemplate]=\\\"hourSegmentTemplate\\\"\\r\\n      [eventTemplate]=\\\"eventTemplate\\\"\\r\\n      [eventTitleTemplate]=\\\"eventTitleTemplate\\\"\\r\\n      [eventActionsTemplate]=\\\"eventActionsTemplate\\\"\\r\\n      [snapDraggedEvents]=\\\"snapDraggedEvents\\\"\\r\\n      [allDayEventsLabelTemplate]=\\\"allDayEventsLabelTemplate\\\"\\r\\n      [currentTimeMarkerTemplate]=\\\"currentTimeMarkerTemplate\\\"\\r\\n      [validateEventTimesChanged]=\\\"validateEventTimesChanged\\\"\\r\\n      (eventClicked)=\\\"eventClicked.emit($event)\\\"\\r\\n      (hourSegmentClicked)=\\\"hourSegmentClicked.emit($event)\\\"\\r\\n      (eventTimesChanged)=\\\"eventTimesChanged.emit($event)\\\"\\r\\n      (beforeViewRender)=\\\"beforeViewRender.emit($event)\\\"\\r\\n    ></mwl-calendar-week-view>\\r\\n  `,\\r\\n})\\r\\nexport class CalendarDayViewComponent {\\r\\n  /**\\r\\n   * The current view date\\r\\n   */\\r\\n  @Input() viewDate: Date;\\r\\n\\r\\n  /**\\r\\n   * An array of events to display on view\\r\\n   * The schema is available here: https://github.com/mattlewis92/calendar-utils/blob/c51689985f59a271940e30bc4e2c4e1fee3fcb5c/src/calendarUtils.ts#L49-L63\\r\\n   */\\r\\n  @Input() events: CalendarEvent[] = [];\\r\\n\\r\\n  /**\\r\\n   * The number of segments in an hour. Must divide equally into 60.\\r\\n   */\\r\\n  @Input() hourSegments: number = 2;\\r\\n\\r\\n  /**\\r\\n   * The height in pixels of each hour segment\\r\\n   */\\r\\n  @Input() hourSegmentHeight: number = 30;\\r\\n\\r\\n  /**\\r\\n   * The duration of each segment group in minutes\\r\\n   */\\r\\n  @Input() hourDuration: number;\\r\\n\\r\\n  /**\\r\\n   * The minimum height in pixels of each event\\r\\n   */\\r\\n  @Input() minimumEventHeight: number = 30;\\r\\n\\r\\n  /**\\r\\n   * The day start hours in 24 hour time. Must be 0-23\\r\\n   */\\r\\n  @Input() dayStartHour: number = 0;\\r\\n\\r\\n  /**\\r\\n   * The day start minutes. Must be 0-59\\r\\n   */\\r\\n  @Input() dayStartMinute: number = 0;\\r\\n\\r\\n  /**\\r\\n   * The day end hours in 24 hour time. Must be 0-23\\r\\n   */\\r\\n  @Input() dayEndHour: number = 23;\\r\\n\\r\\n  /**\\r\\n   * The day end minutes. Must be 0-59\\r\\n   */\\r\\n  @Input() dayEndMinute: number = 59;\\r\\n\\r\\n  /**\\r\\n   * An observable that when emitted on will re-render the current view\\r\\n   */\\r\\n  @Input() refresh: Subject<any>;\\r\\n\\r\\n  /**\\r\\n   * The locale used to format dates\\r\\n   */\\r\\n  @Input() locale: string;\\r\\n\\r\\n  /**\\r\\n   * The grid size to snap resizing and dragging of events to\\r\\n   */\\r\\n  @Input() eventSnapSize: number;\\r\\n\\r\\n  /**\\r\\n   * The placement of the event tooltip\\r\\n   */\\r\\n  @Input() tooltipPlacement: PlacementArray = 'auto';\\r\\n\\r\\n  /**\\r\\n   * A custom template to use for the event tooltips\\r\\n   */\\r\\n  @Input() tooltipTemplate: TemplateRef<any>;\\r\\n\\r\\n  /**\\r\\n   * Whether to append tooltips to the body or next to the trigger element\\r\\n   */\\r\\n  @Input() tooltipAppendToBody: boolean = true;\\r\\n\\r\\n  /**\\r\\n   * The delay in milliseconds before the tooltip should be displayed. If not provided the tooltip\\r\\n   * will be displayed immediately.\\r\\n   */\\r\\n  @Input() tooltipDelay: number | null = null;\\r\\n\\r\\n  /**\\r\\n   * A custom template to use to replace the hour segment\\r\\n   */\\r\\n  @Input() hourSegmentTemplate: TemplateRef<any>;\\r\\n\\r\\n  /**\\r\\n   * A custom template to use for day view events\\r\\n   */\\r\\n  @Input() eventTemplate: TemplateRef<any>;\\r\\n\\r\\n  /**\\r\\n   * A custom template to use for event titles\\r\\n   */\\r\\n  @Input() eventTitleTemplate: TemplateRef<any>;\\r\\n\\r\\n  /**\\r\\n   * A custom template to use for event actions\\r\\n   */\\r\\n  @Input() eventActionsTemplate: TemplateRef<any>;\\r\\n\\r\\n  /**\\r\\n   * Whether to snap events to a grid when dragging\\r\\n   */\\r\\n  @Input() snapDraggedEvents: boolean = true;\\r\\n\\r\\n  /**\\r\\n   * A custom template to use for the all day events label text\\r\\n   */\\r\\n  @Input() allDayEventsLabelTemplate: TemplateRef<any>;\\r\\n\\r\\n  /**\\r\\n   * A custom template to use for the current time marker\\r\\n   */\\r\\n  @Input() currentTimeMarkerTemplate: TemplateRef<any>;\\r\\n\\r\\n  /**\\r\\n   * Allow you to customise where events can be dragged and resized to.\\r\\n   * Return true to allow dragging and resizing to the new location, or false to prevent it\\r\\n   */\\r\\n  @Input() validateEventTimesChanged: (\\r\\n    event: CalendarEventTimesChangedEvent\\r\\n  ) => boolean;\\r\\n\\r\\n  /**\\r\\n   * Customise the document cursor when dragging to resize an event\\r\\n   */\\r\\n  @Input() resizeCursors: Partial<\\r\\n    Pick<ResizeCursors, 'leftOrRight' | 'topOrBottom'>\\r\\n  >;\\r\\n\\r\\n  /**\\r\\n   * Called when an event title is clicked\\r\\n   */\\r\\n  @Output() eventClicked = new EventEmitter<{\\r\\n    event: CalendarEvent;\\r\\n    sourceEvent: MouseEvent | KeyboardEvent;\\r\\n  }>();\\r\\n\\r\\n  /**\\r\\n   * Called when an hour segment is clicked\\r\\n   */\\r\\n  @Output() hourSegmentClicked = new EventEmitter<{\\r\\n    date: Date;\\r\\n    sourceEvent: MouseEvent;\\r\\n  }>();\\r\\n\\r\\n  /**\\r\\n   * Called when an event is resized or dragged and dropped\\r\\n   */\\r\\n  @Output() eventTimesChanged =\\r\\n    new EventEmitter<CalendarEventTimesChangedEvent>();\\r\\n\\r\\n  /**\\r\\n   * An output that will be called before the view is rendered for the current day.\\r\\n   * If you add the `cssClass` property to an hour grid segment it will add that class to the hour segment in the template\\r\\n   */\\r\\n  @Output() beforeViewRender =\\r\\n    new EventEmitter<CalendarDayViewBeforeRenderEvent>();\\r\\n}\\r\\n\",\"import { NgModule } from '@angular/core';\\r\\nimport { CommonModule } from '@angular/common';\\r\\nimport { ResizableModule } from 'angular-resizable-element';\\r\\nimport { DragAndDropModule } from 'angular-draggable-droppable';\\r\\nimport { CalendarWeekViewComponent } from './calendar-week-view/calendar-week-view.component';\\r\\nimport { CalendarWeekViewHeaderComponent } from './calendar-week-view/calendar-week-view-header/calendar-week-view-header.component';\\r\\nimport { CalendarWeekViewEventComponent } from './calendar-week-view/calendar-week-view-event/calendar-week-view-event.component';\\r\\nimport { CalendarCommonModule } from '../common/calendar-common.module';\\r\\nimport { CalendarWeekViewHourSegmentComponent } from './calendar-week-view/calendar-week-view-hour-segment/calendar-week-view-hour-segment.component';\\r\\nimport { CalendarWeekViewCurrentTimeMarkerComponent } from './calendar-week-view/calendar-week-view-current-time-marker/calendar-week-view-current-time-marker.component';\\r\\n\\r\\nexport {\\r\\n  CalendarWeekViewComponent,\\r\\n  CalendarWeekViewBeforeRenderEvent,\\r\\n} from './calendar-week-view/calendar-week-view.component';\\r\\nexport {\\r\\n  WeekViewAllDayEvent as CalendarWeekViewAllDayEvent,\\r\\n  WeekViewAllDayEventRow as CalendarWeekViewAllDayEventRow,\\r\\n  GetWeekViewArgs as CalendarGetWeekViewArgs,\\r\\n} from 'calendar-utils';\\r\\nexport { getWeekViewPeriod } from '../common/util/util';\\r\\n\\r\\n// needed for ivy, not part of the public api\\r\\nexport { CalendarWeekViewHeaderComponent as ɵCalendarWeekViewHeaderComponent } from './calendar-week-view/calendar-week-view-header/calendar-week-view-header.component';\\r\\nexport { CalendarWeekViewEventComponent as ɵCalendarWeekViewEventComponent } from './calendar-week-view/calendar-week-view-event/calendar-week-view-event.component';\\r\\nexport { CalendarWeekViewHourSegmentComponent as ɵCalendarWeekViewHourSegmentComponent } from './calendar-week-view/calendar-week-view-hour-segment/calendar-week-view-hour-segment.component';\\r\\nexport { CalendarWeekViewCurrentTimeMarkerComponent as ɵCalendarWeekViewCurrentTimeMarkerComponent } from './calendar-week-view/calendar-week-view-current-time-marker/calendar-week-view-current-time-marker.component';\\r\\n\\r\\n@NgModule({\\r\\n  imports: [\\r\\n    CommonModule,\\r\\n    ResizableModule,\\r\\n    DragAndDropModule,\\r\\n    CalendarCommonModule,\\r\\n  ],\\r\\n  declarations: [\\r\\n    CalendarWeekViewComponent,\\r\\n    CalendarWeekViewHeaderComponent,\\r\\n    CalendarWeekViewEventComponent,\\r\\n    CalendarWeekViewHourSegmentComponent,\\r\\n    CalendarWeekViewCurrentTimeMarkerComponent,\\r\\n  ],\\r\\n  exports: [\\r\\n    ResizableModule,\\r\\n    DragAndDropModule,\\r\\n    CalendarWeekViewComponent,\\r\\n    CalendarWeekViewHeaderComponent,\\r\\n    CalendarWeekViewEventComponent,\\r\\n    CalendarWeekViewHourSegmentComponent,\\r\\n    CalendarWeekViewCurrentTimeMarkerComponent,\\r\\n  ],\\r\\n})\\r\\nexport class CalendarWeekModule {}\\r\\n\",\"import { NgModule } from '@angular/core';\\r\\nimport { CommonModule } from '@angular/common';\\r\\nimport { CalendarDayViewComponent } from './calendar-day-view/calendar-day-view.component';\\r\\nimport { CalendarCommonModule } from '../common/calendar-common.module';\\r\\nimport { CalendarWeekModule } from '../week/calendar-week.module';\\r\\n\\r\\nexport {\\r\\n  CalendarDayViewComponent,\\r\\n  CalendarDayViewBeforeRenderEvent,\\r\\n} from './calendar-day-view/calendar-day-view.component';\\r\\n\\r\\n@NgModule({\\r\\n  imports: [CommonModule, CalendarCommonModule, CalendarWeekModule],\\r\\n  declarations: [CalendarDayViewComponent],\\r\\n  exports: [CalendarDayViewComponent],\\r\\n})\\r\\nexport class CalendarDayModule {}\\r\\n\",\"import {\\r\\n  Component,\\r\\n  Input,\\r\\n  Output,\\r\\n  EventEmitter,\\r\\n  TemplateRef,\\r\\n} from '@angular/core';\\r\\nimport { MonthViewDay, CalendarEvent } from 'calendar-utils';\\r\\nimport { isWithinThreshold, trackByEventId } from '../../../common/util/util';\\r\\nimport { PlacementArray } from 'positioning';\\r\\n\\r\\n@Component({\\r\\n  selector: 'mwl-calendar-month-cell',\\r\\n  template: `\\r\\n    <ng-template\\r\\n      #defaultTemplate\\r\\n      let-day=\\\"day\\\"\\r\\n      let-openDay=\\\"openDay\\\"\\r\\n      let-locale=\\\"locale\\\"\\r\\n      let-tooltipPlacement=\\\"tooltipPlacement\\\"\\r\\n      let-highlightDay=\\\"highlightDay\\\"\\r\\n      let-unhighlightDay=\\\"unhighlightDay\\\"\\r\\n      let-eventClicked=\\\"eventClicked\\\"\\r\\n      let-tooltipTemplate=\\\"tooltipTemplate\\\"\\r\\n      let-tooltipAppendToBody=\\\"tooltipAppendToBody\\\"\\r\\n      let-tooltipDelay=\\\"tooltipDelay\\\"\\r\\n      let-trackByEventId=\\\"trackByEventId\\\"\\r\\n      let-validateDrag=\\\"validateDrag\\\"\\r\\n    >\\r\\n      <div\\r\\n        class=\\\"cal-cell-top\\\"\\r\\n        [attr.aria-label]=\\\"\\r\\n          { day: day, locale: locale } | calendarA11y : 'monthCell'\\r\\n        \\\"\\r\\n      >\\r\\n        <span aria-hidden=\\\"true\\\">\\r\\n          <span class=\\\"cal-day-badge\\\" *ngIf=\\\"day.badgeTotal > 0\\\">{{\\r\\n            day.badgeTotal\\r\\n          }}</span>\\r\\n          <span class=\\\"cal-day-number\\\">{{\\r\\n            day.date | calendarDate : 'monthViewDayNumber' : locale\\r\\n          }}</span>\\r\\n        </span>\\r\\n      </div>\\r\\n      <div class=\\\"cal-events\\\" *ngIf=\\\"day.events.length > 0\\\">\\r\\n        <div\\r\\n          class=\\\"cal-event\\\"\\r\\n          *ngFor=\\\"let event of day.events; trackBy: trackByEventId\\\"\\r\\n          [ngStyle]=\\\"{ backgroundColor: event.color?.primary }\\\"\\r\\n          [ngClass]=\\\"event?.cssClass\\\"\\r\\n          (mouseenter)=\\\"highlightDay.emit({ event: event })\\\"\\r\\n          (mouseleave)=\\\"unhighlightDay.emit({ event: event })\\\"\\r\\n          [mwlCalendarTooltip]=\\\"\\r\\n            event.title | calendarEventTitle : 'monthTooltip' : event\\r\\n          \\\"\\r\\n          [tooltipPlacement]=\\\"tooltipPlacement\\\"\\r\\n          [tooltipEvent]=\\\"event\\\"\\r\\n          [tooltipTemplate]=\\\"tooltipTemplate\\\"\\r\\n          [tooltipAppendToBody]=\\\"tooltipAppendToBody\\\"\\r\\n          [tooltipDelay]=\\\"tooltipDelay\\\"\\r\\n          mwlDraggable\\r\\n          [class.cal-draggable]=\\\"event.draggable\\\"\\r\\n          dragActiveClass=\\\"cal-drag-active\\\"\\r\\n          [dropData]=\\\"{ event: event, draggedFrom: day }\\\"\\r\\n          [dragAxis]=\\\"{ x: event.draggable, y: event.draggable }\\\"\\r\\n          [validateDrag]=\\\"validateDrag\\\"\\r\\n          [touchStartLongPress]=\\\"{ delay: 300, delta: 30 }\\\"\\r\\n          (mwlClick)=\\\"eventClicked.emit({ event: event, sourceEvent: $event })\\\"\\r\\n          [attr.aria-hidden]=\\\"{} | calendarA11y : 'hideMonthCellEvents'\\\"\\r\\n        ></div>\\r\\n      </div>\\r\\n    </ng-template>\\r\\n    <ng-template\\r\\n      [ngTemplateOutlet]=\\\"customTemplate || defaultTemplate\\\"\\r\\n      [ngTemplateOutletContext]=\\\"{\\r\\n        day: day,\\r\\n        openDay: openDay,\\r\\n        locale: locale,\\r\\n        tooltipPlacement: tooltipPlacement,\\r\\n        highlightDay: highlightDay,\\r\\n        unhighlightDay: unhighlightDay,\\r\\n        eventClicked: eventClicked,\\r\\n        tooltipTemplate: tooltipTemplate,\\r\\n        tooltipAppendToBody: tooltipAppendToBody,\\r\\n        tooltipDelay: tooltipDelay,\\r\\n        trackByEventId: trackByEventId,\\r\\n        validateDrag: validateDrag\\r\\n      }\\\"\\r\\n    >\\r\\n    </ng-template>\\r\\n  `,\\r\\n  // eslint-disable-next-line @angular-eslint/no-host-metadata-property\\r\\n  host: {\\r\\n    class: 'cal-cell cal-day-cell',\\r\\n    '[class.cal-past]': 'day.isPast',\\r\\n    '[class.cal-today]': 'day.isToday',\\r\\n    '[class.cal-future]': 'day.isFuture',\\r\\n    '[class.cal-weekend]': 'day.isWeekend',\\r\\n    '[class.cal-in-month]': 'day.inMonth',\\r\\n    '[class.cal-out-month]': '!day.inMonth',\\r\\n    '[class.cal-has-events]': 'day.events.length > 0',\\r\\n    '[class.cal-open]': 'day === openDay',\\r\\n    '[class.cal-event-highlight]': '!!day.backgroundColor',\\r\\n  },\\r\\n})\\r\\nexport class CalendarMonthCellComponent {\\r\\n  @Input() day: MonthViewDay;\\r\\n\\r\\n  @Input() openDay: MonthViewDay;\\r\\n\\r\\n  @Input() locale: string;\\r\\n\\r\\n  @Input() tooltipPlacement: PlacementArray;\\r\\n\\r\\n  @Input() tooltipAppendToBody: boolean;\\r\\n\\r\\n  @Input() customTemplate: TemplateRef<any>;\\r\\n\\r\\n  @Input() tooltipTemplate: TemplateRef<any>;\\r\\n\\r\\n  @Input() tooltipDelay: number | null;\\r\\n\\r\\n  @Output() highlightDay: EventEmitter<any> = new EventEmitter();\\r\\n\\r\\n  @Output() unhighlightDay: EventEmitter<any> = new EventEmitter();\\r\\n\\r\\n  @Output() eventClicked = new EventEmitter<{\\r\\n    event: CalendarEvent;\\r\\n    sourceEvent: MouseEvent;\\r\\n  }>();\\r\\n\\r\\n  trackByEventId = trackByEventId;\\r\\n\\r\\n  validateDrag = isWithinThreshold;\\r\\n}\\r\\n\",\"import {\\r\\n  Component,\\r\\n  Input,\\r\\n  Output,\\r\\n  EventEmitter,\\r\\n  TemplateRef,\\r\\n} from '@angular/core';\\r\\nimport {\\r\\n  trigger,\\r\\n  style,\\r\\n  state,\\r\\n  transition,\\r\\n  animate,\\r\\n  AnimationTriggerMetadata,\\r\\n} from '@angular/animations';\\r\\nimport { CalendarEvent } from 'calendar-utils';\\r\\nimport { isWithinThreshold, trackByEventId } from '../../../common/util/util';\\r\\n\\r\\nexport const collapseAnimation: AnimationTriggerMetadata = trigger('collapse', [\\r\\n  state(\\r\\n    'void',\\r\\n    style({\\r\\n      height: 0,\\r\\n      overflow: 'hidden',\\r\\n      'padding-top': 0,\\r\\n      'padding-bottom': 0,\\r\\n    })\\r\\n  ),\\r\\n  state(\\r\\n    '*',\\r\\n    style({\\r\\n      height: '*',\\r\\n      overflow: 'hidden',\\r\\n      'padding-top': '*',\\r\\n      'padding-bottom': '*',\\r\\n    })\\r\\n  ),\\r\\n  transition('* => void', animate('150ms ease-out')),\\r\\n  transition('void => *', animate('150ms ease-in')),\\r\\n]);\\r\\n\\r\\n@Component({\\r\\n  selector: 'mwl-calendar-open-day-events',\\r\\n  template: `\\r\\n    <ng-template\\r\\n      #defaultTemplate\\r\\n      let-events=\\\"events\\\"\\r\\n      let-eventClicked=\\\"eventClicked\\\"\\r\\n      let-isOpen=\\\"isOpen\\\"\\r\\n      let-trackByEventId=\\\"trackByEventId\\\"\\r\\n      let-validateDrag=\\\"validateDrag\\\"\\r\\n    >\\r\\n      <div\\r\\n        class=\\\"cal-open-day-events\\\"\\r\\n        [@collapse]\\r\\n        *ngIf=\\\"isOpen\\\"\\r\\n        role=\\\"application\\\"\\r\\n      >\\r\\n        <span\\r\\n          tabindex=\\\"-1\\\"\\r\\n          role=\\\"alert\\\"\\r\\n          [attr.aria-label]=\\\"\\r\\n            { date: date, locale: locale } | calendarA11y : 'openDayEventsAlert'\\r\\n          \\\"\\r\\n        ></span>\\r\\n        <span\\r\\n          tabindex=\\\"0\\\"\\r\\n          role=\\\"landmark\\\"\\r\\n          [attr.aria-label]=\\\"\\r\\n            { date: date, locale: locale }\\r\\n              | calendarA11y : 'openDayEventsLandmark'\\r\\n          \\\"\\r\\n        ></span>\\r\\n        <div\\r\\n          *ngFor=\\\"let event of events; trackBy: trackByEventId\\\"\\r\\n          [ngClass]=\\\"event?.cssClass\\\"\\r\\n          mwlDraggable\\r\\n          [class.cal-draggable]=\\\"event.draggable\\\"\\r\\n          dragActiveClass=\\\"cal-drag-active\\\"\\r\\n          [dropData]=\\\"{ event: event }\\\"\\r\\n          [dragAxis]=\\\"{ x: event.draggable, y: event.draggable }\\\"\\r\\n          [validateDrag]=\\\"validateDrag\\\"\\r\\n          [touchStartLongPress]=\\\"{ delay: 300, delta: 30 }\\\"\\r\\n        >\\r\\n          <span\\r\\n            class=\\\"cal-event\\\"\\r\\n            [ngStyle]=\\\"{ backgroundColor: event.color?.primary }\\\"\\r\\n          >\\r\\n          </span>\\r\\n          &ngsp;\\r\\n          <mwl-calendar-event-title\\r\\n            [event]=\\\"event\\\"\\r\\n            [customTemplate]=\\\"eventTitleTemplate\\\"\\r\\n            view=\\\"month\\\"\\r\\n            (mwlClick)=\\\"\\r\\n              eventClicked.emit({ event: event, sourceEvent: $event })\\r\\n            \\\"\\r\\n            (mwlKeydownEnter)=\\\"\\r\\n              eventClicked.emit({ event: event, sourceEvent: $event })\\r\\n            \\\"\\r\\n            tabindex=\\\"0\\\"\\r\\n            [attr.aria-label]=\\\"\\r\\n              { event: event, locale: locale }\\r\\n                | calendarA11y : 'eventDescription'\\r\\n            \\\"\\r\\n          >\\r\\n          </mwl-calendar-event-title>\\r\\n          &ngsp;\\r\\n          <mwl-calendar-event-actions\\r\\n            [event]=\\\"event\\\"\\r\\n            [customTemplate]=\\\"eventActionsTemplate\\\"\\r\\n          >\\r\\n          </mwl-calendar-event-actions>\\r\\n        </div>\\r\\n      </div>\\r\\n    </ng-template>\\r\\n    <ng-template\\r\\n      [ngTemplateOutlet]=\\\"customTemplate || defaultTemplate\\\"\\r\\n      [ngTemplateOutletContext]=\\\"{\\r\\n        events: events,\\r\\n        eventClicked: eventClicked,\\r\\n        isOpen: isOpen,\\r\\n        trackByEventId: trackByEventId,\\r\\n        validateDrag: validateDrag\\r\\n      }\\\"\\r\\n    >\\r\\n    </ng-template>\\r\\n  `,\\r\\n  animations: [collapseAnimation],\\r\\n})\\r\\nexport class CalendarOpenDayEventsComponent {\\r\\n  @Input()\\r\\n  locale!: string;\\r\\n\\r\\n  @Input() isOpen: boolean = false;\\r\\n\\r\\n  @Input()\\r\\n  events!: CalendarEvent[];\\r\\n\\r\\n  @Input()\\r\\n  customTemplate!: TemplateRef<any>;\\r\\n\\r\\n  @Input()\\r\\n  eventTitleTemplate!: TemplateRef<any>;\\r\\n\\r\\n  @Input()\\r\\n  eventActionsTemplate!: TemplateRef<any>;\\r\\n\\r\\n  @Input()\\r\\n  date!: Date;\\r\\n\\r\\n  @Output() eventClicked = new EventEmitter<{\\r\\n    event: CalendarEvent;\\r\\n    sourceEvent: MouseEvent | KeyboardEvent;\\r\\n  }>();\\r\\n\\r\\n  trackByEventId = trackByEventId;\\r\\n\\r\\n  validateDrag = isWithinThreshold;\\r\\n}\\r\\n\",\"import {\\r\\n  Component,\\r\\n  Input,\\r\\n  TemplateRef,\\r\\n  EventEmitter,\\r\\n  Output,\\r\\n} from '@angular/core';\\r\\nimport { WeekDay } from 'calendar-utils';\\r\\nimport { trackByWeekDayHeaderDate } from '../../../common/util/util';\\r\\n\\r\\n@Component({\\r\\n  selector: 'mwl-calendar-month-view-header',\\r\\n  template: `\\r\\n    <ng-template\\r\\n      #defaultTemplate\\r\\n      let-days=\\\"days\\\"\\r\\n      let-locale=\\\"locale\\\"\\r\\n      let-trackByWeekDayHeaderDate=\\\"trackByWeekDayHeaderDate\\\"\\r\\n    >\\r\\n      <div class=\\\"cal-cell-row cal-header\\\" role=\\\"row\\\">\\r\\n        <div\\r\\n          class=\\\"cal-cell\\\"\\r\\n          *ngFor=\\\"let day of days; trackBy: trackByWeekDayHeaderDate\\\"\\r\\n          [class.cal-past]=\\\"day.isPast\\\"\\r\\n          [class.cal-today]=\\\"day.isToday\\\"\\r\\n          [class.cal-future]=\\\"day.isFuture\\\"\\r\\n          [class.cal-weekend]=\\\"day.isWeekend\\\"\\r\\n          (click)=\\\"\\r\\n            columnHeaderClicked.emit({\\r\\n              isoDayNumber: day.day,\\r\\n              sourceEvent: $event\\r\\n            })\\r\\n          \\\"\\r\\n          [ngClass]=\\\"day.cssClass\\\"\\r\\n          tabindex=\\\"0\\\"\\r\\n          role=\\\"columnheader\\\"\\r\\n        >\\r\\n          {{ day.date | calendarDate : 'monthViewColumnHeader' : locale }}\\r\\n        </div>\\r\\n      </div>\\r\\n    </ng-template>\\r\\n    <ng-template\\r\\n      [ngTemplateOutlet]=\\\"customTemplate || defaultTemplate\\\"\\r\\n      [ngTemplateOutletContext]=\\\"{\\r\\n        days: days,\\r\\n        locale: locale,\\r\\n        trackByWeekDayHeaderDate: trackByWeekDayHeaderDate\\r\\n      }\\\"\\r\\n    >\\r\\n    </ng-template>\\r\\n  `,\\r\\n})\\r\\nexport class CalendarMonthViewHeaderComponent {\\r\\n  @Input() days: WeekDay[];\\r\\n\\r\\n  @Input() locale: string;\\r\\n\\r\\n  @Input() customTemplate: TemplateRef<any>;\\r\\n\\r\\n  @Output() columnHeaderClicked = new EventEmitter<{\\r\\n    isoDayNumber: number;\\r\\n    sourceEvent: MouseEvent;\\r\\n  }>();\\r\\n\\r\\n  trackByWeekDayHeaderDate = trackByWeekDayHeaderDate;\\r\\n}\\r\\n\",\"import {\\r\\n  Component,\\r\\n  OnChanges,\\r\\n  Input,\\r\\n  Output,\\r\\n  EventEmitter,\\r\\n  ChangeDetectorRef,\\r\\n  OnInit,\\r\\n  OnDestroy,\\r\\n  LOCALE_ID,\\r\\n  Inject,\\r\\n  TemplateRef,\\r\\n} from '@angular/core';\\r\\nimport {\\r\\n  CalendarEvent,\\r\\n  WeekDay,\\r\\n  MonthView,\\r\\n  MonthViewDay,\\r\\n  ViewPeriod,\\r\\n} from 'calendar-utils';\\r\\nimport { Subject, Subscription } from 'rxjs';\\r\\nimport {\\r\\n  CalendarEventTimesChangedEvent,\\r\\n  CalendarEventTimesChangedEventType,\\r\\n} from '../../common/calendar-event-times-changed-event/calendar-event-times-changed-event.interface';\\r\\nimport { CalendarUtils } from '../../common/calendar-utils/calendar-utils.provider';\\r\\nimport { validateEvents } from '../../common/util/util';\\r\\nimport { DateAdapter } from '../../date-adapters/date-adapter';\\r\\nimport { PlacementArray } from 'positioning';\\r\\n\\r\\nexport interface CalendarMonthViewBeforeRenderEvent {\\r\\n  header: WeekDay[];\\r\\n  body: MonthViewDay[];\\r\\n  period: ViewPeriod;\\r\\n}\\r\\n\\r\\nexport interface CalendarMonthViewEventTimesChangedEvent<\\r\\n  EventMetaType = any,\\r\\n  DayMetaType = any\\r\\n> extends CalendarEventTimesChangedEvent<EventMetaType> {\\r\\n  day: MonthViewDay<DayMetaType>;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Shows all events on a given month. Example usage:\\r\\n *\\r\\n * ```typescript\\r\\n * <mwl-calendar-month-view\\r\\n *  [viewDate]=\\\"viewDate\\\"\\r\\n *  [events]=\\\"events\\\">\\r\\n * </mwl-calendar-month-view>\\r\\n * ```\\r\\n */\\r\\n@Component({\\r\\n  selector: 'mwl-calendar-month-view',\\r\\n  template: `\\r\\n    <div class=\\\"cal-month-view\\\" role=\\\"grid\\\">\\r\\n      <mwl-calendar-month-view-header\\r\\n        [days]=\\\"columnHeaders\\\"\\r\\n        [locale]=\\\"locale\\\"\\r\\n        (columnHeaderClicked)=\\\"columnHeaderClicked.emit($event)\\\"\\r\\n        [customTemplate]=\\\"headerTemplate\\\"\\r\\n      >\\r\\n      </mwl-calendar-month-view-header>\\r\\n      <div class=\\\"cal-days\\\">\\r\\n        <div\\r\\n          *ngFor=\\\"let rowIndex of view.rowOffsets; trackBy: trackByRowOffset\\\"\\r\\n        >\\r\\n          <div role=\\\"row\\\" class=\\\"cal-cell-row\\\">\\r\\n            <mwl-calendar-month-cell\\r\\n              role=\\\"gridcell\\\"\\r\\n              *ngFor=\\\"\\r\\n                let day of view.days\\r\\n                  | slice : rowIndex : rowIndex + view.totalDaysVisibleInWeek;\\r\\n                trackBy: trackByDate\\r\\n              \\\"\\r\\n              [ngClass]=\\\"day?.cssClass\\\"\\r\\n              [day]=\\\"day\\\"\\r\\n              [openDay]=\\\"openDay\\\"\\r\\n              [locale]=\\\"locale\\\"\\r\\n              [tooltipPlacement]=\\\"tooltipPlacement\\\"\\r\\n              [tooltipAppendToBody]=\\\"tooltipAppendToBody\\\"\\r\\n              [tooltipTemplate]=\\\"tooltipTemplate\\\"\\r\\n              [tooltipDelay]=\\\"tooltipDelay\\\"\\r\\n              [customTemplate]=\\\"cellTemplate\\\"\\r\\n              [ngStyle]=\\\"{ backgroundColor: day.backgroundColor }\\\"\\r\\n              (mwlClick)=\\\"dayClicked.emit({ day: day, sourceEvent: $event })\\\"\\r\\n              [clickListenerDisabled]=\\\"dayClicked.observers.length === 0\\\"\\r\\n              (mwlKeydownEnter)=\\\"\\r\\n                dayClicked.emit({ day: day, sourceEvent: $event })\\r\\n              \\\"\\r\\n              (highlightDay)=\\\"toggleDayHighlight($event.event, true)\\\"\\r\\n              (unhighlightDay)=\\\"toggleDayHighlight($event.event, false)\\\"\\r\\n              mwlDroppable\\r\\n              dragOverClass=\\\"cal-drag-over\\\"\\r\\n              (drop)=\\\"\\r\\n                eventDropped(\\r\\n                  day,\\r\\n                  $event.dropData.event,\\r\\n                  $event.dropData.draggedFrom\\r\\n                )\\r\\n              \\\"\\r\\n              (eventClicked)=\\\"\\r\\n                eventClicked.emit({\\r\\n                  event: $event.event,\\r\\n                  sourceEvent: $event.sourceEvent\\r\\n                })\\r\\n              \\\"\\r\\n              [attr.tabindex]=\\\"{} | calendarA11y : 'monthCellTabIndex'\\\"\\r\\n            >\\r\\n            </mwl-calendar-month-cell>\\r\\n          </div>\\r\\n          <mwl-calendar-open-day-events\\r\\n            [locale]=\\\"locale\\\"\\r\\n            [isOpen]=\\\"openRowIndex === rowIndex\\\"\\r\\n            [events]=\\\"openDay?.events\\\"\\r\\n            [date]=\\\"openDay?.date\\\"\\r\\n            [customTemplate]=\\\"openDayEventsTemplate\\\"\\r\\n            [eventTitleTemplate]=\\\"eventTitleTemplate\\\"\\r\\n            [eventActionsTemplate]=\\\"eventActionsTemplate\\\"\\r\\n            (eventClicked)=\\\"\\r\\n              eventClicked.emit({\\r\\n                event: $event.event,\\r\\n                sourceEvent: $event.sourceEvent\\r\\n              })\\r\\n            \\\"\\r\\n            mwlDroppable\\r\\n            dragOverClass=\\\"cal-drag-over\\\"\\r\\n            (drop)=\\\"\\r\\n              eventDropped(\\r\\n                openDay,\\r\\n                $event.dropData.event,\\r\\n                $event.dropData.draggedFrom\\r\\n              )\\r\\n            \\\"\\r\\n          >\\r\\n          </mwl-calendar-open-day-events>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  `,\\r\\n})\\r\\nexport class CalendarMonthViewComponent\\r\\n  implements OnChanges, OnInit, OnDestroy\\r\\n{\\r\\n  /**\\r\\n   * The current view date\\r\\n   */\\r\\n  @Input() viewDate: Date;\\r\\n\\r\\n  /**\\r\\n   * An array of events to display on view.\\r\\n   * The schema is available here: https://github.com/mattlewis92/calendar-utils/blob/c51689985f59a271940e30bc4e2c4e1fee3fcb5c/src/calendarUtils.ts#L49-L63\\r\\n   */\\r\\n  @Input() events: CalendarEvent[] = [];\\r\\n\\r\\n  /**\\r\\n   * An array of day indexes (0 = sunday, 1 = monday etc) that will be hidden on the view\\r\\n   */\\r\\n  @Input() excludeDays: number[] = [];\\r\\n\\r\\n  /**\\r\\n   * Whether the events list for the day of the `viewDate` option is visible or not\\r\\n   */\\r\\n  @Input() activeDayIsOpen: boolean = false;\\r\\n\\r\\n  /**\\r\\n   * If set will be used to determine the day that should be open. If not set, the `viewDate` is used\\r\\n   */\\r\\n  @Input() activeDay: Date;\\r\\n\\r\\n  /**\\r\\n   * An observable that when emitted on will re-render the current view\\r\\n   */\\r\\n  @Input() refresh: Subject<any>;\\r\\n\\r\\n  /**\\r\\n   * The locale used to format dates\\r\\n   */\\r\\n  @Input() locale: string;\\r\\n\\r\\n  /**\\r\\n   * The placement of the event tooltip\\r\\n   */\\r\\n  @Input() tooltipPlacement: PlacementArray = 'auto';\\r\\n\\r\\n  /**\\r\\n   * A custom template to use for the event tooltips\\r\\n   */\\r\\n  @Input() tooltipTemplate: TemplateRef<any>;\\r\\n\\r\\n  /**\\r\\n   * Whether to append tooltips to the body or next to the trigger element\\r\\n   */\\r\\n  @Input() tooltipAppendToBody: boolean = true;\\r\\n\\r\\n  /**\\r\\n   * The delay in milliseconds before the tooltip should be displayed. If not provided the tooltip\\r\\n   * will be displayed immediately.\\r\\n   */\\r\\n  @Input() tooltipDelay: number | null = null;\\r\\n\\r\\n  /**\\r\\n   * The start number of the week.\\r\\n   * If using the moment date adapter this option won't do anything and you'll need to set it globally like so:\\r\\n   * ```\\r\\n   * moment.updateLocale('en', {\\r\\n   *   week: {\\r\\n   *     dow: 1, // set start of week to monday instead\\r\\n   *     doy: 0,\\r\\n   *   },\\r\\n   * });\\r\\n   * ```\\r\\n   */\\r\\n  @Input() weekStartsOn: number;\\r\\n\\r\\n  /**\\r\\n   * A custom template to use to replace the header\\r\\n   */\\r\\n  @Input() headerTemplate: TemplateRef<any>;\\r\\n\\r\\n  /**\\r\\n   * A custom template to use to replace the day cell\\r\\n   */\\r\\n  @Input() cellTemplate: TemplateRef<any>;\\r\\n\\r\\n  /**\\r\\n   * A custom template to use for the slide down box of events for the active day\\r\\n   */\\r\\n  @Input() openDayEventsTemplate: TemplateRef<any>;\\r\\n\\r\\n  /**\\r\\n   * A custom template to use for event titles\\r\\n   */\\r\\n  @Input() eventTitleTemplate: TemplateRef<any>;\\r\\n\\r\\n  /**\\r\\n   * A custom template to use for event actions\\r\\n   */\\r\\n  @Input() eventActionsTemplate: TemplateRef<any>;\\r\\n\\r\\n  /**\\r\\n   * An array of day indexes (0 = sunday, 1 = monday etc) that indicate which days are weekends\\r\\n   */\\r\\n  @Input() weekendDays: number[];\\r\\n\\r\\n  /**\\r\\n   * An output that will be called before the view is rendered for the current month.\\r\\n   * If you add the `cssClass` property to a day in the body it will add that class to the cell element in the template\\r\\n   */\\r\\n  @Output() beforeViewRender =\\r\\n    new EventEmitter<CalendarMonthViewBeforeRenderEvent>();\\r\\n\\r\\n  /**\\r\\n   * Called when the day cell is clicked\\r\\n   */\\r\\n  @Output() dayClicked = new EventEmitter<{\\r\\n    day: MonthViewDay;\\r\\n    sourceEvent: MouseEvent | KeyboardEvent;\\r\\n  }>();\\r\\n\\r\\n  /**\\r\\n   * Called when the event title is clicked\\r\\n   */\\r\\n  @Output() eventClicked = new EventEmitter<{\\r\\n    event: CalendarEvent;\\r\\n    sourceEvent: MouseEvent | KeyboardEvent;\\r\\n  }>();\\r\\n\\r\\n  /**\\r\\n   * Called when a header week day is clicked. Returns ISO day number.\\r\\n   */\\r\\n  @Output() columnHeaderClicked = new EventEmitter<{\\r\\n    isoDayNumber: number;\\r\\n    sourceEvent: MouseEvent | KeyboardEvent;\\r\\n  }>();\\r\\n\\r\\n  /**\\r\\n   * Called when an event is dragged and dropped\\r\\n   */\\r\\n  @Output()\\r\\n  eventTimesChanged =\\r\\n    new EventEmitter<CalendarMonthViewEventTimesChangedEvent>();\\r\\n\\r\\n  /**\\r\\n   * @hidden\\r\\n   */\\r\\n  columnHeaders: WeekDay[];\\r\\n\\r\\n  /**\\r\\n   * @hidden\\r\\n   */\\r\\n  view: MonthView;\\r\\n\\r\\n  /**\\r\\n   * @hidden\\r\\n   */\\r\\n  openRowIndex: number;\\r\\n\\r\\n  /**\\r\\n   * @hidden\\r\\n   */\\r\\n  openDay: MonthViewDay;\\r\\n\\r\\n  /**\\r\\n   * @hidden\\r\\n   */\\r\\n  refreshSubscription: Subscription;\\r\\n\\r\\n  /**\\r\\n   * @hidden\\r\\n   */\\r\\n  constructor(\\r\\n    protected cdr: ChangeDetectorRef,\\r\\n    protected utils: CalendarUtils,\\r\\n    @Inject(LOCALE_ID) locale: string,\\r\\n    protected dateAdapter: DateAdapter\\r\\n  ) {\\r\\n    this.locale = locale;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @hidden\\r\\n   */\\r\\n  trackByRowOffset = (index: number, offset: number) =>\\r\\n    this.view.days\\r\\n      .slice(offset, this.view.totalDaysVisibleInWeek)\\r\\n      .map((day) => day.date.toISOString())\\r\\n      .join('-');\\r\\n\\r\\n  /**\\r\\n   * @hidden\\r\\n   */\\r\\n  trackByDate = (index: number, day: MonthViewDay) => day.date.toISOString();\\r\\n\\r\\n  /**\\r\\n   * @hidden\\r\\n   */\\r\\n  ngOnInit(): void {\\r\\n    if (this.refresh) {\\r\\n      this.refreshSubscription = this.refresh.subscribe(() => {\\r\\n        this.refreshAll();\\r\\n        this.cdr.markForCheck();\\r\\n      });\\r\\n    }\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @hidden\\r\\n   */\\r\\n  ngOnChanges(changes: any): void {\\r\\n    const refreshHeader =\\r\\n      changes.viewDate || changes.excludeDays || changes.weekendDays;\\r\\n    const refreshBody =\\r\\n      changes.viewDate ||\\r\\n      changes.events ||\\r\\n      changes.excludeDays ||\\r\\n      changes.weekendDays;\\r\\n\\r\\n    if (refreshHeader) {\\r\\n      this.refreshHeader();\\r\\n    }\\r\\n\\r\\n    if (changes.events) {\\r\\n      validateEvents(this.events);\\r\\n    }\\r\\n\\r\\n    if (refreshBody) {\\r\\n      this.refreshBody();\\r\\n    }\\r\\n\\r\\n    if (refreshHeader || refreshBody) {\\r\\n      this.emitBeforeViewRender();\\r\\n    }\\r\\n\\r\\n    if (\\r\\n      changes.activeDayIsOpen ||\\r\\n      changes.viewDate ||\\r\\n      changes.events ||\\r\\n      changes.excludeDays ||\\r\\n      changes.activeDay\\r\\n    ) {\\r\\n      this.checkActiveDayIsOpen();\\r\\n    }\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @hidden\\r\\n   */\\r\\n  ngOnDestroy(): void {\\r\\n    if (this.refreshSubscription) {\\r\\n      this.refreshSubscription.unsubscribe();\\r\\n    }\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @hidden\\r\\n   */\\r\\n  toggleDayHighlight(event: CalendarEvent, isHighlighted: boolean): void {\\r\\n    this.view.days.forEach((day) => {\\r\\n      if (isHighlighted && day.events.indexOf(event) > -1) {\\r\\n        day.backgroundColor =\\r\\n          (event.color && event.color.secondary) || '#D1E8FF';\\r\\n      } else {\\r\\n        delete day.backgroundColor;\\r\\n      }\\r\\n    });\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * @hidden\\r\\n   */\\r\\n  eventDropped(\\r\\n    droppedOn: MonthViewDay,\\r\\n    event: CalendarEvent,\\r\\n    draggedFrom?: MonthViewDay\\r\\n  ): void {\\r\\n    if (droppedOn !== draggedFrom) {\\r\\n      const year: number = this.dateAdapter.getYear(droppedOn.date);\\r\\n      const month: number = this.dateAdapter.getMonth(droppedOn.date);\\r\\n      const date: number = this.dateAdapter.getDate(droppedOn.date);\\r\\n      const newStart: Date = this.dateAdapter.setDate(\\r\\n        this.dateAdapter.setMonth(\\r\\n          this.dateAdapter.setYear(event.start, year),\\r\\n          month\\r\\n        ),\\r\\n        date\\r\\n      );\\r\\n      let newEnd: Date;\\r\\n      if (event.end) {\\r\\n        const secondsDiff: number = this.dateAdapter.differenceInSeconds(\\r\\n          newStart,\\r\\n          event.start\\r\\n        );\\r\\n        newEnd = this.dateAdapter.addSeconds(event.end, secondsDiff);\\r\\n      }\\r\\n      this.eventTimesChanged.emit({\\r\\n        event,\\r\\n        newStart,\\r\\n        newEnd,\\r\\n        day: droppedOn,\\r\\n        type: CalendarEventTimesChangedEventType.Drop,\\r\\n      });\\r\\n    }\\r\\n  }\\r\\n\\r\\n  protected refreshHeader(): void {\\r\\n    this.columnHeaders = this.utils.getWeekViewHeader({\\r\\n      viewDate: this.viewDate,\\r\\n      weekStartsOn: this.weekStartsOn,\\r\\n      excluded: this.excludeDays,\\r\\n      weekendDays: this.weekendDays,\\r\\n    });\\r\\n  }\\r\\n\\r\\n  protected refreshBody(): void {\\r\\n    this.view = this.utils.getMonthView({\\r\\n      events: this.events,\\r\\n      viewDate: this.viewDate,\\r\\n      weekStartsOn: this.weekStartsOn,\\r\\n      excluded: this.excludeDays,\\r\\n      weekendDays: this.weekendDays,\\r\\n    });\\r\\n  }\\r\\n\\r\\n  protected checkActiveDayIsOpen(): void {\\r\\n    if (this.activeDayIsOpen === true) {\\r\\n      const activeDay = this.activeDay || this.viewDate;\\r\\n      this.openDay = this.view.days.find((day) =>\\r\\n        this.dateAdapter.isSameDay(day.date, activeDay)\\r\\n      );\\r\\n      const index: number = this.view.days.indexOf(this.openDay);\\r\\n      this.openRowIndex =\\r\\n        Math.floor(index / this.view.totalDaysVisibleInWeek) *\\r\\n        this.view.totalDaysVisibleInWeek;\\r\\n    } else {\\r\\n      this.openRowIndex = null;\\r\\n      this.openDay = null;\\r\\n    }\\r\\n  }\\r\\n\\r\\n  protected refreshAll(): void {\\r\\n    this.refreshHeader();\\r\\n    this.refreshBody();\\r\\n    this.emitBeforeViewRender();\\r\\n    this.checkActiveDayIsOpen();\\r\\n  }\\r\\n\\r\\n  protected emitBeforeViewRender(): void {\\r\\n    if (this.columnHeaders && this.view) {\\r\\n      this.beforeViewRender.emit({\\r\\n        header: this.columnHeaders,\\r\\n        body: this.view.days,\\r\\n        period: this.view.period,\\r\\n      });\\r\\n    }\\r\\n  }\\r\\n}\\r\\n\",\"import { NgModule } from '@angular/core';\\r\\nimport { CommonModule } from '@angular/common';\\r\\nimport { DragAndDropModule } from 'angular-draggable-droppable';\\r\\nimport { CalendarMonthViewComponent } from './calendar-month-view/calendar-month-view.component';\\r\\nimport { CalendarMonthViewHeaderComponent } from './calendar-month-view/calendar-month-view-header/calendar-month-view-header.component';\\r\\nimport { CalendarMonthCellComponent } from './calendar-month-view/calendar-month-cell/calendar-month-cell.component';\\r\\nimport { CalendarOpenDayEventsComponent } from './calendar-month-view/calendar-open-day-events/calendar-open-day-events.component';\\r\\nimport { CalendarCommonModule } from '../common/calendar-common.module';\\r\\n\\r\\nexport {\\r\\n  CalendarMonthViewComponent,\\r\\n  CalendarMonthViewBeforeRenderEvent,\\r\\n  CalendarMonthViewEventTimesChangedEvent,\\r\\n} from './calendar-month-view/calendar-month-view.component';\\r\\nexport { MonthViewDay as CalendarMonthViewDay } from 'calendar-utils';\\r\\nexport { collapseAnimation } from './calendar-month-view/calendar-open-day-events/calendar-open-day-events.component';\\r\\n\\r\\n// needed for ivy, not part of the public api\\r\\nexport { CalendarMonthCellComponent as ɵCalendarMonthCellComponent } from './calendar-month-view/calendar-month-cell/calendar-month-cell.component';\\r\\nexport { CalendarMonthViewHeaderComponent as ɵCalendarMonthViewHeaderComponent } from './calendar-month-view/calendar-month-view-header/calendar-month-view-header.component';\\r\\nexport { CalendarOpenDayEventsComponent as ɵCalendarOpenDayEventsComponent } from './calendar-month-view/calendar-open-day-events/calendar-open-day-events.component';\\r\\n\\r\\n@NgModule({\\r\\n  imports: [CommonModule, DragAndDropModule, CalendarCommonModule],\\r\\n  declarations: [\\r\\n    CalendarMonthViewComponent,\\r\\n    CalendarMonthCellComponent,\\r\\n    CalendarOpenDayEventsComponent,\\r\\n    CalendarMonthViewHeaderComponent,\\r\\n  ],\\r\\n  exports: [\\r\\n    DragAndDropModule,\\r\\n    CalendarMonthViewComponent,\\r\\n    CalendarMonthCellComponent,\\r\\n    CalendarOpenDayEventsComponent,\\r\\n    CalendarMonthViewHeaderComponent,\\r\\n  ],\\r\\n})\\r\\nexport class CalendarMonthModule {}\\r\\n\",\"import { Component, OnInit } from '@angular/core';\\r\\n\\r\\n@Component({\\r\\n    selector: 'calendar-name',\\r\\n    templateUrl: './calendar.component.html',\\r\\n    styleUrls: ['./calendar.scss']\\r\\n})\\r\\nexport class CalendarComponent implements OnInit {\\r\\n    constructor() { }\\r\\n\\r\\n    ngOnInit(): void { }\\r\\n}\\r\\n\",\"\",\"import { NgModule, ModuleWithProviders, Provider } from '@angular/core';\\nimport { CalendarMonthModule } from './month/calendar-month.module';\\nimport { CalendarWeekModule } from './week/calendar-week.module';\\nimport { CalendarDayModule } from './day/calendar-day.module';\\nimport { \\n  CalendarCommonModule,\\n  CalendarModuleConfig,\\n  CalendarEventTitleFormatter,\\n  CalendarDateFormatter,\\n  CalendarA11y,\\n } from './common/calendar-common.module';\\nimport { CalendarUtils } from './common/calendar-utils/calendar-utils.provider';\\nimport { CalendarComponent } from './calendar.component';\\n\\n\\n@NgModule({\\n  declarations: [\\n    CalendarComponent\\n  ],\\n  imports: [\\n    CalendarMonthModule,\\n    CalendarWeekModule,\\n    CalendarDayModule,\\n    CalendarCommonModule\\n  ],\\n  exports: [\\n    CalendarComponent,\\n    CalendarMonthModule,\\n    CalendarWeekModule,\\n    CalendarDayModule,\\n    CalendarCommonModule\\n  ]\\n})\\nexport class CalendarModule {\\n  static forRoot(\\n    dateAdapter: Provider,\\n    config: CalendarModuleConfig = {}\\n  ): ModuleWithProviders<CalendarModule> {\\n    return {\\n      ngModule: CalendarModule,\\n      providers: [\\n        dateAdapter,\\n        config.eventTitleFormatter || CalendarEventTitleFormatter,\\n        config.dateFormatter || CalendarDateFormatter,\\n        config.utils || CalendarUtils,\\n        config.a11y || CalendarA11y,\\n      ],\\n    };\\n  }\\n}\\n\",\"/*\\n * Public API Surface of ng-calendar-schedule\\n */\\nexport * from './lib/date-adapters/date-adapter';\\nexport * from './lib/date-adapters/date-fns';\\nexport * from './lib/common/calendar-common.module';\\nexport * from './lib/day/calendar-day.module';\\nexport * from './lib/month/calendar-month.module';\\nexport * from './lib/week/calendar-week.module';\\nexport * from './lib/calendar.module';\\nexport * from './lib/calendar.component'\\n\",\"/**\\n * Generated bundle index. Do not edit.\\n */\\n\\nexport * from './public-api';\\n\"],\"names\":[\"baseAdapterFactory\",\"i2.ClickDirective\",\"i3.KeydownEnterDirective\",\"i4.CalendarA11yPipe\",\"i1.CalendarEventTitleFormatter\",\"i2.CalendarEventTitlePipe\",\"i3.CalendarA11yPipe\",\"validateEventsWithoutLog\",\"i1.DateAdapter\",\"i3.ClickDirective\",\"i4.CalendarDatePipe\",\"i2.CalendarEventActionsComponent\",\"i3.CalendarEventTitleComponent\",\"i4.CalendarTooltipDirective\",\"i5.ClickDirective\",\"i6.KeydownEnterDirective\",\"i7.CalendarEventTitlePipe\",\"i8.CalendarA11yPipe\",\"i2.CalendarDatePipe\",\"i2\",\"i2.DateAdapter\",\"i3\",\"i5\",\"i6.ClickDirective\",\"i7.CalendarWeekViewHeaderComponent\",\"i8.CalendarWeekViewEventComponent\",\"i9.CalendarWeekViewHourSegmentComponent\",\"i10.CalendarWeekViewCurrentTimeMarkerComponent\",\"i1.CalendarWeekViewComponent\",\"i3.CalendarTooltipDirective\",\"i4.ClickDirective\",\"i5.CalendarDatePipe\",\"i6.CalendarEventTitlePipe\",\"i7.CalendarA11yPipe\",\"i3.CalendarEventActionsComponent\",\"i4.CalendarEventTitleComponent\",\"i4\",\"i7.CalendarMonthCellComponent\",\"i8.CalendarOpenDayEventsComponent\",\"i9.CalendarMonthViewHeaderComponent\",\"i10.CalendarA11yPipe\"],\"mappings\":\"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\"}","type":"asset"}]}